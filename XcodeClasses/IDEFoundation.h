//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun 13 2017 20:28:01).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#pragma mark Blocks

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct IDESourceKitUIDKeys {
    struct _sourcekit_uid_s *TestFailedRequest;
    struct _sourcekit_uid_s *Crash;
    struct _sourcekit_uid_s *Results;
    struct _sourcekit_uid_s *Request;
    struct _sourcekit_uid_s *Kind;
    struct _sourcekit_uid_s *Identifier;
    struct _sourcekit_uid_s *Name;
    struct _sourcekit_uid_s *Names;
    struct _sourcekit_uid_s *CompilerArgs;
    struct _sourcekit_uid_s *Offset;
    struct _sourcekit_uid_s *Length;
    struct _sourcekit_uid_s *USR;
    struct _sourcekit_uid_s *Line;
    struct _sourcekit_uid_s *Column;
    struct _sourcekit_uid_s *EndLine;
    struct _sourcekit_uid_s *EndColumn;
    struct _sourcekit_uid_s *NameOffset;
    struct _sourcekit_uid_s *NameLength;
    struct _sourcekit_uid_s *SourceFile;
    struct _sourcekit_uid_s *SourceText;
    struct _sourcekit_uid_s *Notification;
    struct _sourcekit_uid_s *Callback;
    struct _sourcekit_uid_s *Keyword;
    struct _sourcekit_uid_s *EnableSyntaxMap;
    struct _sourcekit_uid_s *EnableDiagnostics;
    struct _sourcekit_uid_s *SyntacticOnly;
    struct _sourcekit_uid_s *ReceiverUSR;
    struct _sourcekit_uid_s *IsDynamic;
    struct _sourcekit_uid_s *IsTestCandidate;
    struct _sourcekit_uid_s *Description;
    struct _sourcekit_uid_s *TypeName;
    struct _sourcekit_uid_s *ModuleName;
    struct _sourcekit_uid_s *RuntimeName;
    struct _sourcekit_uid_s *SelectorName;
    struct _sourcekit_uid_s *AnnotatedDecl;
    struct _sourcekit_uid_s *DocBrief;
    struct _sourcekit_uid_s *Context;
    struct _sourcekit_uid_s *ModuleImportDepth;
    struct _sourcekit_uid_s *NumBytesToErase;
    struct _sourcekit_uid_s *NotRecommended;
    struct _sourcekit_uid_s *Overrides;
    struct _sourcekit_uid_s *AssociatedUSRs;
    struct _sourcekit_uid_s *DocFullAsXML;
    struct _sourcekit_uid_s *GenericParams;
    struct _sourcekit_uid_s *GenericRequirements;
    struct _sourcekit_uid_s *RelatedDecls;
    struct _sourcekit_uid_s *FilePath;
    struct _sourcekit_uid_s *FilePaths;
    struct _sourcekit_uid_s *PrevFilePath;
    struct _sourcekit_uid_s *FileURLs;
    struct _sourcekit_uid_s *ModuleInterfaceName;
    struct _sourcekit_uid_s *Hash;
    struct _sourcekit_uid_s *Related;
    struct _sourcekit_uid_s *Inherits;
    struct _sourcekit_uid_s *Conforms;
    struct _sourcekit_uid_s *Extends;
    struct _sourcekit_uid_s *Dependencies;
    struct _sourcekit_uid_s *Entities;
    struct _sourcekit_uid_s *Diagnostics;
    struct _sourcekit_uid_s *CategoryName;
    struct _sourcekit_uid_s *Severity;
    struct _sourcekit_uid_s *Ranges;
    struct _sourcekit_uid_s *Range;
    struct _sourcekit_uid_s *Fixits;
    struct _sourcekit_uid_s *Annotations;
    struct _sourcekit_uid_s *DiagnosticStage;
    struct _sourcekit_uid_s *SyntaxMap;
    struct _sourcekit_uid_s *IsSystem;
    struct _sourcekit_uid_s *EnableStructure;
    struct _sourcekit_uid_s *SubStructure;
    struct _sourcekit_uid_s *Elements;
    struct _sourcekit_uid_s *BodyOffset;
    struct _sourcekit_uid_s *BodyLength;
    struct _sourcekit_uid_s *Accessibility;
    struct _sourcekit_uid_s *SetterAccessibility;
    struct _sourcekit_uid_s *ThrowOffset;
    struct _sourcekit_uid_s *ThrowLength;
    struct _sourcekit_uid_s *IsLocal;
    struct _sourcekit_uid_s *Attributes;
    struct _sourcekit_uid_s *Attribute;
    struct _sourcekit_uid_s *InheritedTypes;
    struct _sourcekit_uid_s *FormatOptions;
    struct _sourcekit_uid_s *CodeCompleteOptions;
    struct _sourcekit_uid_s *NextRequestStart;
    struct _sourcekit_uid_s *Popular;
    struct _sourcekit_uid_s *Unpopular;
    struct _sourcekit_uid_s *Parent;
    struct _sourcekit_uid_s *IncludedFiles;
    struct _sourcekit_uid_s *RenameFile;
    struct _sourcekit_uid_s *Category;
    struct _sourcekit_uid_s *ArgIndex;
    struct _sourcekit_uid_s *Priority;
    struct _sourcekit_uid_s *IsDeprecated;
    struct _sourcekit_uid_s *IsUnavailable;
    struct _sourcekit_uid_s *Platform;
    struct _sourcekit_uid_s *Message;
    struct _sourcekit_uid_s *Introduced;
    struct _sourcekit_uid_s *Deprecated;
    struct _sourcekit_uid_s *Obsoleted;
    struct _sourcekit_uid_s *RemoveCache;
    struct _sourcekit_uid_s *TypeInterface;
    struct _sourcekit_uid_s *EnableLogNotification;
    struct _sourcekit_uid_s *LogLevel;
    struct _sourcekit_uid_s *Toolchains;
    struct _sourcekit_uid_s *IsDefault;
    struct _sourcekit_uid_s *ModuleGroups;
    struct _sourcekit_uid_s *GroupName;
    struct _sourcekit_uid_s *Edits;
    struct _sourcekit_uid_s *NewName;
    struct _sourcekit_uid_s *OldName;
    struct _sourcekit_uid_s *PercentCompleted;
    struct _sourcekit_uid_s *IsFinished;
    struct _sourcekit_uid_s *FindFilesToken;
    struct _sourcekit_uid_s *SearchString;
    struct _sourcekit_uid_s *IsSupported;
    struct _sourcekit_uid_s *URLs;
    struct _sourcekit_uid_s *Symbols;
    struct _sourcekit_uid_s *Symbol;
    struct _sourcekit_uid_s *SymbolOccurrence;
    struct _sourcekit_uid_s *ContainingSymbol;
    struct _sourcekit_uid_s *Members;
    struct _sourcekit_uid_s *WorkspaceName;
    struct _sourcekit_uid_s *WorkspaceFile;
    struct _sourcekit_uid_s *IndexFolder;
    struct _sourcekit_uid_s *DatastoreFolder;
    struct _sourcekit_uid_s *DatabaseFolder;
    struct _sourcekit_uid_s *PchHeaderFolder;
    struct _sourcekit_uid_s *BuildConfig;
    struct _sourcekit_uid_s *DestinationTargetIdentifier;
    struct _sourcekit_uid_s *UseBolt;
    struct _sourcekit_uid_s *EnableFullStoreVisibility;
    struct _sourcekit_uid_s *ThrottleFactor;
    struct _sourcekit_uid_s *WillRegisterMoreFilesFlag;
    struct _sourcekit_uid_s *IndexerFilePath;
    struct _sourcekit_uid_s *IndexableInfo;
    struct _sourcekit_uid_s *IndexableList;
    struct _sourcekit_uid_s *IndexerToken;
    struct _sourcekit_uid_s *BuildOperationToken;
    struct _sourcekit_uid_s *RefactoringActionToken;
    struct _sourcekit_uid_s *DatabaseFile;
    struct _sourcekit_uid_s *IndexDataDump;
    struct _sourcekit_uid_s *QueryName;
    struct _sourcekit_uid_s *DocLocation;
    struct _sourcekit_uid_s *FileContent;
    struct _sourcekit_uid_s *IsInComment;
    struct _sourcekit_uid_s *IsInFuncOrMethodBody;
    struct _sourcekit_uid_s *LooksLikeASetter;
    struct _sourcekit_uid_s *OnlyCurrentDeclarator;
    struct _sourcekit_uid_s *IncludeCurrentLoc;
    struct _sourcekit_uid_s *IsPrebuild;
    struct _sourcekit_uid_s *Result;
    struct _sourcekit_uid_s *Url;
    struct _sourcekit_uid_s *StartLine;
    struct _sourcekit_uid_s *StartCol;
    struct _sourcekit_uid_s *DocLocEndLine;
    struct _sourcekit_uid_s *DocLocEndCol;
    struct _sourcekit_uid_s *RangeLoc;
    struct _sourcekit_uid_s *RangeCount;
    struct _sourcekit_uid_s *TimeStamp;
    struct _sourcekit_uid_s *Encoding;
    struct _sourcekit_uid_s *Role;
    struct _sourcekit_uid_s *Location;
    struct _sourcekit_uid_s *LineNumber;
    struct _sourcekit_uid_s *IndexerColumn;
    struct _sourcekit_uid_s *File;
    struct _sourcekit_uid_s *ModuleUrlOpt;
    struct _sourcekit_uid_s *TargetName;
    struct _sourcekit_uid_s *SymbolLocation;
    struct _sourcekit_uid_s *Callers;
    struct _sourcekit_uid_s *TestCallers;
    struct _sourcekit_uid_s *Callees;
    struct _sourcekit_uid_s *SymbolName;
    struct _sourcekit_uid_s *DisplayName;
    struct _sourcekit_uid_s *SymbolKind;
    struct _sourcekit_uid_s *SymbolKinds;
    struct _sourcekit_uid_s *Language;
    struct _sourcekit_uid_s *Resolution;
    struct _sourcekit_uid_s *Resolutions;
    struct _sourcekit_uid_s *SymbolModuleName;
    struct _sourcekit_uid_s *IsInProject;
    struct _sourcekit_uid_s *IsVirtual;
    struct _sourcekit_uid_s *SymbolIsSystem;
    struct _sourcekit_uid_s *IsAnchorStart;
    struct _sourcekit_uid_s *IsAnchorEnd;
    struct _sourcekit_uid_s *IsSubsequence;
    struct _sourcekit_uid_s *IsIgnoreCase;
    struct _sourcekit_uid_s *WorkspaceOnly;
    struct _sourcekit_uid_s *TopLevelOnly;
    struct _sourcekit_uid_s *IndexableIdentifier;
    struct _sourcekit_uid_s *IndexableIsUnitTest;
    struct _sourcekit_uid_s *IndexableSettings;
    struct _sourcekit_uid_s *PreferredTargets;
    struct _sourcekit_uid_s *PriorityTargets;
    struct _sourcekit_uid_s *CallbackKind;
    struct _sourcekit_uid_s *OnWillIndexWorkspaceDeferredReindexing;
    struct _sourcekit_uid_s *OnIsIndexingWorkspaceUserInfo;
    struct _sourcekit_uid_s *NotificationUserInfo;
    struct _sourcekit_uid_s *IndexableRootPaths;
    struct _sourcekit_uid_s *WorkspaceRootPaths;
    struct _sourcekit_uid_s *IndexableIndexHeaderMap;
};

struct IDESourceKitUIDRequests {
    struct _sourcekit_uid_s *TestMe;
    struct _sourcekit_uid_s *TestingInvalidateFilePath;
    struct _sourcekit_uid_s *SetLoggingSettings;
    struct _sourcekit_uid_s *DemangleNames;
    struct _sourcekit_uid_s *MangleSimpleClasses;
    struct _sourcekit_uid_s *IndexOpenOrCreate;
    struct _sourcekit_uid_s *IndexStart;
    struct _sourcekit_uid_s *IndexClose;
    struct _sourcekit_uid_s *IndexRegisterFile;
    struct _sourcekit_uid_s *IndexUnregisterFile;
    struct _sourcekit_uid_s *IndexRegisterObject;
    struct _sourcekit_uid_s *IndexUnregisterObject;
    struct _sourcekit_uid_s *IndexRegisterPreferredTargets;
    struct _sourcekit_uid_s *IndexSetThrottleFactor;
    struct _sourcekit_uid_s *IndexWillRegisterMoreFiles;
    struct _sourcekit_uid_s *IndexIsQuiescent;
    struct _sourcekit_uid_s *IndexDumpIndexData;
    struct _sourcekit_uid_s *CollectModuleGroups;
    struct _sourcekit_uid_s *RegisterToolchains;
    struct _sourcekit_uid_s *UnregisterToolchains;
    struct _sourcekit_uid_s *IndexJumpToExpressionDefinition;
    struct _sourcekit_uid_s *IndexJumpToImportedFile;
    struct _sourcekit_uid_s *IndexJumpToModuleImportHeaders;
    struct _sourcekit_uid_s *IndexCodeCompletionsAtLocation;
    struct _sourcekit_uid_s *IndexSymbolContains;
    struct _sourcekit_uid_s *IndexFileContains;
    struct _sourcekit_uid_s *IndexTestMethods;
    struct _sourcekit_uid_s *MainFilesForFile;
    struct _sourcekit_uid_s *AnyBuildSettingsForFile;
    struct _sourcekit_uid_s *WorkspaceCallersForSymbol;
    struct _sourcekit_uid_s *WorkspaceSymbolDeclarations;
    struct _sourcekit_uid_s *WorkspaceSymbolQualifiedDisplayName;
    struct _sourcekit_uid_s *WorkspaceSymbolDefinitions;
    struct _sourcekit_uid_s *WorkspaceSymbolOccurrences;
    struct _sourcekit_uid_s *WorkspaceSymbolReferences;
    struct _sourcekit_uid_s *WorkspaceSymbolSubclasses;
    struct _sourcekit_uid_s *WorkspaceSymbolSuperclasses;
    struct _sourcekit_uid_s *WorkspaceSymbolCategories;
    struct _sourcekit_uid_s *WorkspaceSymbolInterfaces;
    struct _sourcekit_uid_s *WorkspaceSymbolProtocols;
    struct _sourcekit_uid_s *WorkspaceSymbolAllProtocols;
    struct _sourcekit_uid_s *WorkspaceSymbolAllSuperclasses;
    struct _sourcekit_uid_s *WorkspaceSymbolAllSubclasses;
    struct _sourcekit_uid_s *WorkspaceSymbolImplementingClassesForProtocol;
    struct _sourcekit_uid_s *WorkspaceSymbolAllOccurrencesOfMembers;
    struct _sourcekit_uid_s *WorkspaceSymbolReferencingFiles;
    struct _sourcekit_uid_s *WorkspaceSymbolModelOccurrence;
    struct _sourcekit_uid_s *WorkspaceSymbolContainer;
    struct _sourcekit_uid_s *WorkspaceSymbolContainers;
    struct _sourcekit_uid_s *WorkspaceSymbolOverriddenSymbols;
    struct _sourcekit_uid_s *WorkspaceSymbolProperty;
    struct _sourcekit_uid_s *WorkspaceSymbolRelatedClass;
    struct _sourcekit_uid_s *WorkspaceSymbolIBRelationClass;
    struct _sourcekit_uid_s *WorkspaceSymbolMembersMatchingKind;
    struct _sourcekit_uid_s *WorkspaceAllSymbolsMatchingName;
    struct _sourcekit_uid_s *WorkspaceAllClassesMatchingName;
    struct _sourcekit_uid_s *WorkspaceAllSymbolsMatchingKind;
    struct _sourcekit_uid_s *WorkspaceCountOfSymbolsMatchingKind;
    struct _sourcekit_uid_s *WorkspaceAllParentsOfSymbols;
    struct _sourcekit_uid_s *WorkspaceSymbolsForResolutions;
    struct _sourcekit_uid_s *WorkspaceFilesIncludingFile;
    struct _sourcekit_uid_s *WorkspaceFilesIncludedByFile;
    struct _sourcekit_uid_s *WorkspaceMembersMatchingKinds;
    struct _sourcekit_uid_s *WorkspaceAllSymbolNames;
    struct _sourcekit_uid_s *DocumentSymbolsMatchingName;
    struct _sourcekit_uid_s *DocumentSymbolOccurrences;
    struct _sourcekit_uid_s *DocumentReferencesToSymbol;
    struct _sourcekit_uid_s *DocumentCodeDiagnostics;
    struct _sourcekit_uid_s *DocumentParsedCodeComment;
    struct _sourcekit_uid_s *DocumentTypeSymbolForSymbol;
    struct _sourcekit_uid_s *DocumentImportedFiles;
    struct _sourcekit_uid_s *DocumentGeniusCallersCallees;
    struct _sourcekit_uid_s *WorkspaceGeniusReferencingTestClasses;
    struct _sourcekit_uid_s *RefactoringFindRenameRangesAtLocation;
    struct _sourcekit_uid_s *RefactoringRenameAtLocation;
    struct _sourcekit_uid_s *RefactoringLocalRefactoring;
    struct _sourcekit_uid_s *RefactoringActionCancel;
    struct _sourcekit_uid_s *RefactoringActionClose;
    struct _sourcekit_uid_s *RefactoringActionStart;
    struct _sourcekit_uid_s *RefactoringAvailableRefactorings;
    struct _sourcekit_uid_s *FilesContainingWordUpdate;
    struct _sourcekit_uid_s *TestFilesContainingWord;
    struct _sourcekit_uid_s *IndexPrebuildCompleted;
    struct _sourcekit_uid_s *IndexNotifyIndexableDidAddFile;
    struct _sourcekit_uid_s *IndexNotifyIndexableWillRemoveFile;
    struct _sourcekit_uid_s *IndexNotifyIndexableDidRenameFile;
    struct _sourcekit_uid_s *IndexBuildSettingsChanged;
    struct _sourcekit_uid_s *IndexBuildOperationWillStart;
    struct _sourcekit_uid_s *IndexBuildOperationDidStop;
    struct _sourcekit_uid_s *IndexNotifyActiveRunDestinationDidChange;
    struct _sourcekit_uid_s *IndexEditorWillSaveFile;
    struct _sourcekit_uid_s *IndexEditorDidSaveFile;
};

struct IDESourceKitUIDValues {
    struct _sourcekit_uid_s *NoteLogOutput;
    struct _sourcekit_uid_s *NoteToolchainCompilerCrashed;
    struct _sourcekit_uid_s *IndexCallbackInitiatePrebuildKind;
    struct _sourcekit_uid_s *IndexCallbackOnDidChangeKind;
    struct _sourcekit_uid_s *IndexCallbackOnDidChangeStateKind;
    struct _sourcekit_uid_s *IndexCallbackOnWillIndexWorkspaceKind;
    struct _sourcekit_uid_s *IndexCallbackOnIsIndexingWorkspaceKind;
    struct _sourcekit_uid_s *IndexCallbackOnDidIndexWorkspaceKind;
    struct _sourcekit_uid_s *IndexCallbackOnDidSuspendIndexingWorkspaceKind;
    struct _sourcekit_uid_s *IndexCallbackOnDidResumeIndexingWorkspaceKind;
    struct _sourcekit_uid_s *IndexWillPopulateDatabaseNotificationKind;
    struct _sourcekit_uid_s *IndexIsPopulatingDatabaseNotificationKind;
    struct _sourcekit_uid_s *IndexDidPopulateDatabaseNotificationKind;
    struct _sourcekit_uid_s *IndexWillFastScanNotificationKind;
    struct _sourcekit_uid_s *IndexIsFastScanningNotificationKind;
    struct _sourcekit_uid_s *IndexDidFastScanNotificationKind;
    struct _sourcekit_uid_s *RefactoringStateChangedNotificationKind;
    struct _sourcekit_uid_s *RefactoringProgressUpdatedNotificationKind;
    struct _sourcekit_uid_s *RefactoringRenameRangesFoundNotificationKind;
    struct _sourcekit_uid_s *RefactoringUnhandledURLsNotificationKind;
    struct _sourcekit_uid_s *IndexCallbackCreateWorkspaceArenaFolder;
    struct _sourcekit_uid_s *IndexCallbackWriteHeaderMap;
    struct _sourcekit_uid_s *IndexCallbackGatherProductHeaders;
    struct _sourcekit_uid_s *IndexCallbackSettingsForIndexable;
    struct _sourcekit_uid_s *IndexCallbackFilesContainingWord;
    struct _sourcekit_uid_s *IndexCallback;
    struct _sourcekit_uid_s *IndexCallbackPostNotificationKind;
    struct _sourcekit_uid_s *RefactoringCallback;
    struct _sourcekit_uid_s *CodeCompletionContextObjCClass;
    struct _sourcekit_uid_s *CodeCompletionContextObjCCategory;
    struct _sourcekit_uid_s *CodeCompletionContextObjCProtocol;
    struct _sourcekit_uid_s *CodeCompletionContextObjCInstanceMessage;
    struct _sourcekit_uid_s *CodeCompletionContextObjCClassMessage;
    struct _sourcekit_uid_s *CodeCompletionContextFunction;
    struct _sourcekit_uid_s *CodeCompletionContextEnumConstant;
    struct _sourcekit_uid_s *CodeCompletionContextDotMemberAccess;
    struct _sourcekit_uid_s *CodeCompletionContextArrowMemberAccess;
    struct _sourcekit_uid_s *CodeCompletionContextObjCPropertyAccess;
    struct _sourcekit_uid_s *CodeCompletionContextNamespace;
    struct _sourcekit_uid_s *CodeCompletionContextEnumTag;
    struct _sourcekit_uid_s *CodeCompletionContextUnionTag;
    struct _sourcekit_uid_s *CodeCompletionContextStructTag;
    struct _sourcekit_uid_s *CodeCompletionContextClassTag;
    struct _sourcekit_uid_s *CodeCompletionContextNestedNameSpecifier;
    struct _sourcekit_uid_s *CodeCompletionContextTypedef;
    struct _sourcekit_uid_s *CodeCompletionContextMacro;
    struct _sourcekit_uid_s *CodeCompletionContextNaturalLanguage;
    struct _sourcekit_uid_s *SymbolKindTypedef;
    struct _sourcekit_uid_s *SymbolKindStruct;
    struct _sourcekit_uid_s *SymbolKindUnion;
    struct _sourcekit_uid_s *SymbolKindField;
    struct _sourcekit_uid_s *SymbolKindEnum;
    struct _sourcekit_uid_s *SymbolKindEnumConstant;
    struct _sourcekit_uid_s *SymbolKindGlobalVar;
    struct _sourcekit_uid_s *SymbolKindParameter;
    struct _sourcekit_uid_s *SymbolKindInstanceVar;
    struct _sourcekit_uid_s *SymbolKindProperty;
    struct _sourcekit_uid_s *SymbolKindExtension;
    struct _sourcekit_uid_s *SymbolKindProtocol;
    struct _sourcekit_uid_s *SymbolKindFunction;
    struct _sourcekit_uid_s *SymbolKindInstanceMethod;
    struct _sourcekit_uid_s *SymbolKindClassMethod;
    struct _sourcekit_uid_s *SymbolKindFunctionTemplate;
    struct _sourcekit_uid_s *SymbolKindClass;
    struct _sourcekit_uid_s *SymbolKindClassTemplate;
    struct _sourcekit_uid_s *SymbolKindMacro;
    struct _sourcekit_uid_s *SymbolKindNamespace;
    struct _sourcekit_uid_s *RefactoringActionStateRequested;
    struct _sourcekit_uid_s *RefactoringActionStateRunning;
    struct _sourcekit_uid_s *RefactoringActionStateSucceeded;
    struct _sourcekit_uid_s *RefactoringActionStateCancelled;
    struct _sourcekit_uid_s *RefactoringActionStateFailed;
    struct _sourcekit_uid_s *EditKindSourcecode;
    struct _sourcekit_uid_s *EditKindInactiveSourceCode;
    struct _sourcekit_uid_s *EditKindSelectorExpr;
    struct _sourcekit_uid_s *EditKindComment;
    struct _sourcekit_uid_s *EditKindFilename;
    struct _sourcekit_uid_s *RenameRangeKindBase;
    struct _sourcekit_uid_s *RenameRangeKindKeywordBase;
    struct _sourcekit_uid_s *RenameRangeKindParam;
    struct _sourcekit_uid_s *RenameRangeKindParamAndWhitespace;
    struct _sourcekit_uid_s *RenameRangeKindDeclArgLabel;
    struct _sourcekit_uid_s *RenameRangeKindCallArgLabel;
    struct _sourcekit_uid_s *RenameRangeKindCallArgColon;
    struct _sourcekit_uid_s *RenameRangeKindCallArgCombined;
    struct _sourcekit_uid_s *RenameRangeKindSelectorArgLabel;
    struct _sourcekit_uid_s *RenameRangeKindObjCSetter;
    struct _sourcekit_uid_s *RenameRangeKindObjCSelectorPiece;
    struct _sourcekit_uid_s *RenameRangeKindObjCUnderscoredIVar;
    struct _sourcekit_uid_s *AvailableRefactoringRename;
    struct _sourcekit_uid_s *AvailableRefactoringLocalRename;
    struct _sourcekit_uid_s *AvailableRefactoringLocal;
};

struct NSDictionary {
    Class _field1;
};

struct UIDContainer {
    struct IDESourceKitUIDKeys keys;
    struct IDESourceKitUIDRequests requests;
    struct IDESourceKitUIDValues values;
};

struct _IDEDataMatrixColumnDescriptor {
    char *_field1;
};

struct _IDEDataMatrixDescriptor {
    char *_field1;
    unsigned char _field2;
    unsigned char _field3;
    struct _IDEDataMatrixColumnDescriptor _field4[0];
};

struct _IDEDataMatrixRowOp {
    int _field1;
    struct _NSRange _field2;
};

struct _NSRange {
    unsigned long long location;
    unsigned long long length;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<__NStatSource *, SourceInfo>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<__NStatSource *, SourceInfo>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<_sourcekit_uid_s *, DVTSourceCodeSymbolKind *>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<_sourcekit_uid_s *, DVTSourceCodeSymbolKind *>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, ProcessInfo>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, ProcessInfo>, void *>*> *__next_;
};

struct _sourcekit_uid_s;

struct os_unfair_lock_s {
    unsigned int _os_unfair_lock_opaque;
};

struct stat {
    int _field1;
    unsigned short _field2;
    unsigned short _field3;
    unsigned long long _field4;
    unsigned int _field5;
    unsigned int _field6;
    int _field7;
    struct timespec _field8;
    struct timespec _field9;
    struct timespec _field10;
    struct timespec _field11;
    long long _field12;
    long long _field13;
    int _field14;
    unsigned int _field15;
    unsigned int _field16;
    int _field17;
    long long _field18[2];
};

struct timespec {
    long long _field1;
    long long _field2;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<__NStatSource *, SourceInfo>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<__NStatSource *, SourceInfo>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<__NStatSource *, SourceInfo>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<__NStatSource *, SourceInfo>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<__NStatSource *, SourceInfo>, void *>*> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<__NStatSource *, SourceInfo>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<__NStatSource *, SourceInfo>, void *>*>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<_sourcekit_uid_s *, DVTSourceCodeSymbolKind *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<_sourcekit_uid_s *, DVTSourceCodeSymbolKind *>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<_sourcekit_uid_s *, DVTSourceCodeSymbolKind *>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<_sourcekit_uid_s *, DVTSourceCodeSymbolKind *>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<_sourcekit_uid_s *, DVTSourceCodeSymbolKind *>, void *>*> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<_sourcekit_uid_s *, DVTSourceCodeSymbolKind *>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<_sourcekit_uid_s *, DVTSourceCodeSymbolKind *>, void *>*>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, ProcessInfo>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, ProcessInfo>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, ProcessInfo>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, ProcessInfo>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, ProcessInfo>, void *>*> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, ProcessInfo>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, ProcessInfo>, void *>*>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unordered_map<__NStatSource *, SourceInfo, std::__1::hash<__NStatSource *>, std::__1::equal_to<__NStatSource *>, std::__1::allocator<std::__1::pair<__NStatSource *const, SourceInfo>>> {
    struct __hash_table<std::__1::__hash_value_type<__NStatSource *, SourceInfo>, std::__1::__unordered_map_hasher<__NStatSource *, std::__1::__hash_value_type<__NStatSource *, SourceInfo>, std::__1::hash<__NStatSource *>, true>, std::__1::__unordered_map_equal<__NStatSource *, std::__1::__hash_value_type<__NStatSource *, SourceInfo>, std::__1::equal_to<__NStatSource *>, true>, std::__1::allocator<std::__1::__hash_value_type<__NStatSource *, SourceInfo>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<__NStatSource *, SourceInfo>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<__NStatSource *, SourceInfo>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<__NStatSource *, SourceInfo>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<__NStatSource *, SourceInfo>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<__NStatSource *, SourceInfo>, void *>*> __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<__NStatSource *, std::__1::__hash_value_type<__NStatSource *, SourceInfo>, std::__1::hash<__NStatSource *>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<__NStatSource *, std::__1::__hash_value_type<__NStatSource *, SourceInfo>, std::__1::equal_to<__NStatSource *>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<_sourcekit_uid_s *, DVTSourceCodeSymbolKind *, std::__1::hash<_sourcekit_uid_s *>, std::__1::equal_to<_sourcekit_uid_s *>, std::__1::allocator<std::__1::pair<_sourcekit_uid_s *const, DVTSourceCodeSymbolKind *>>> {
    struct __hash_table<std::__1::__hash_value_type<_sourcekit_uid_s *, DVTSourceCodeSymbolKind *>, std::__1::__unordered_map_hasher<_sourcekit_uid_s *, std::__1::__hash_value_type<_sourcekit_uid_s *, DVTSourceCodeSymbolKind *>, std::__1::hash<_sourcekit_uid_s *>, true>, std::__1::__unordered_map_equal<_sourcekit_uid_s *, std::__1::__hash_value_type<_sourcekit_uid_s *, DVTSourceCodeSymbolKind *>, std::__1::equal_to<_sourcekit_uid_s *>, true>, std::__1::allocator<std::__1::__hash_value_type<_sourcekit_uid_s *, DVTSourceCodeSymbolKind *>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<_sourcekit_uid_s *, DVTSourceCodeSymbolKind *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<_sourcekit_uid_s *, DVTSourceCodeSymbolKind *>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<_sourcekit_uid_s *, DVTSourceCodeSymbolKind *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<_sourcekit_uid_s *, DVTSourceCodeSymbolKind *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<_sourcekit_uid_s *, DVTSourceCodeSymbolKind *>, void *>*> __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<_sourcekit_uid_s *, std::__1::__hash_value_type<_sourcekit_uid_s *, DVTSourceCodeSymbolKind *>, std::__1::hash<_sourcekit_uid_s *>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<_sourcekit_uid_s *, std::__1::__hash_value_type<_sourcekit_uid_s *, DVTSourceCodeSymbolKind *>, std::__1::equal_to<_sourcekit_uid_s *>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<int, ProcessInfo, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, ProcessInfo>>> {
    struct __hash_table<std::__1::__hash_value_type<int, ProcessInfo>, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, ProcessInfo>, std::__1::hash<int>, true>, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, ProcessInfo>, std::__1::equal_to<int>, true>, std::__1::allocator<std::__1::__hash_value_type<int, ProcessInfo>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, ProcessInfo>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, ProcessInfo>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, ProcessInfo>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, ProcessInfo>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, ProcessInfo>, void *>*> __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, ProcessInfo>, std::__1::hash<int>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, ProcessInfo>, std::__1::equal_to<int>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct vector<long long, std::__1::allocator<long long>> {
    long long *_field1;
    long long *_field2;
    struct __compressed_pair<long long *, std::__1::allocator<long long>> {
        long long *_field1;
    } _field3;
};

#pragma mark Typedef'd Structures

typedef struct {
    unsigned long long _field1;
    id *_field2;
    unsigned long long *_field3;
    unsigned long long _field4[5];
} CDStruct_70511ce9;

typedef struct {
    unsigned long long _field1[3];
} CDStruct_3c4b7cd8;

typedef struct {
    unsigned long long data[4];
} CDStruct_4c46f3f5;

typedef struct {
    CDUnknownFunctionPointerType _field1;
    CDUnknownFunctionPointerType _field2;
    CDUnknownFunctionPointerType _field3;
    CDUnknownFunctionPointerType _field4;
    CDUnknownFunctionPointerType _field5;
    CDUnknownFunctionPointerType _field6;
    CDUnknownFunctionPointerType _field7;
    CDUnknownFunctionPointerType _field8;
} CDStruct_9b0a347d;

typedef struct {
    int _field1;
    void *_field2[2];
} CDStruct_9b248d9b;

typedef struct {
    int _field1;
    int _field2;
    void *_field3[3];
} CDStruct_a94d320b;

#pragma mark -

//
// File: /Applications/Xcode.app/Contents/Frameworks/IDEFoundation.framework/Versions/A/IDEFoundation
// UUID: DF6724E3-57E9-38DF-AE3B-828B27244193
//
//                           Arch: x86_64
//                Current version: 13158.24.0
//          Compatibility version: 1.0.0
//                 Source version: 13158.24.0.0.0
//       Minimum Mac OS X version: 10.12.1
//                    SDK version: 10.13.0
//
// Objective-C Garbage Collection: Unsupported
//
//                       Run path: @loader_path/../../../../Frameworks
//                               = /Applications/Xcode.app/Contents/Frameworks
//                       Run path: @loader_path/../../../../Developer/Platforms/MacOSX.platform/Developer/Library/Frameworks/
//                               = /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/Library/Frameworks
//                       Run path: @loader_path/../../../../SharedFrameworks
//                               = /Applications/Xcode.app/Contents/SharedFrameworks
//

@protocol DVTBasicDevice <DVTCodesignableDevice>
@property(readonly) _Bool deviceIsBusy;
@property(readonly) NSError *unavailabilityError;
@property(readonly, getter=isAvailable) BOOL available;
@property(readonly) BOOL isProxiedDevice;
@property(readonly, copy) NSString *nativeArchitecture;
@property(readonly) DVTPlatform *platform;
@property(readonly, copy, nonatomic) NSString *operatingSystemVersionWithBuildNumber;
@property(readonly, copy) NSString *operatingSystemBuild;
@property(readonly, copy) NSString *operatingSystemVersion;
@property(readonly, copy) NSString *processorDescription;
@property(readonly, copy, nonatomic) NSString *modelUTI;
@property(readonly, copy, nonatomic) NSString *modelCode;
@property(readonly, copy, nonatomic) NSString *modelName;

@optional
- (DTXConnection *)primaryInstrumentsServer;
@end

@protocol DVTCancellable <NSObject>
@property(readonly, getter=isCancelled) BOOL cancelled;
- (void)cancel;
@end

@protocol DVTCodesignableDevice <NSObject>
@property(readonly, copy) NSSet *proxiedDevices;
@property(readonly) BOOL supportsProvisioning;
@property(readonly) DVTPlatform *platform;
@property(readonly, copy) NSString *platformIdentifier;
@property(readonly, copy, nonatomic) NSString *identifier;
@property(readonly, copy) NSString *nameForDeveloperPortal;
@property(readonly, copy, nonatomic) NSString *name;
@end

@protocol DVTCustomDataStoring <NSObject>
@property(readonly) NSString *displayName;
- (BOOL)supportsCustomDataForOwnership:(DVTCustomDataOwnership *)arg1;
- (void)moveCustomDataWithSpecifier:(DVTCustomDataSpecifier *)arg1 toSpecifier:(DVTCustomDataSpecifier *)arg2 completionQueue:(NSOperationQueue *)arg3 completionBlock:(void (^)(BOOL, NSError *))arg4;
- (void)removeCustomDataWithSpecifier:(DVTCustomDataSpecifier *)arg1 completionQueue:(NSOperationQueue *)arg2 completionBlock:(void (^)(BOOL, NSError *))arg3;
- (void)writeCustomData:(NSData *)arg1 withSpecifier:(DVTCustomDataSpecifier *)arg2 forceOverwrite:(BOOL)arg3 completionQueue:(NSOperationQueue *)arg4 completionBlock:(void (^)(BOOL, NSError *))arg5;
- (NSData *)readCustomDataWithSpecifier:(DVTCustomDataSpecifier *)arg1 error:(id *)arg2;
- (NSArray *)customDataOwnershipsForGrouping:(NSString *)arg1;
- (NSArray *)customDataSpecifiersForGrouping:(NSString *)arg1 ownership:(DVTCustomDataOwnership *)arg2;
@end

@protocol DVTDefaultPolicyCacheDeleteExtensionItem <NSObject>
@property(readonly) unsigned long long size;
@property(readonly) BOOL isOrphaned;
@property(readonly) NSDate *lastAccessedDate;
@property(readonly) DVTFilePath *volume;
- (BOOL)deleteWithError:(id *)arg1;
@end

@protocol DVTDirectoryBasedCustomDataStoreDelegate <NSObject>

@optional
- (void)customDataStore:(DVTDirectoryBasedCustomDataStore *)arg1 removeItemAtFilePath:(DVTFilePath *)arg2 completionQueue:(NSOperationQueue *)arg3 completionBlock:(void (^)(BOOL, NSError *))arg4;
- (void)customDataStore:(DVTDirectoryBasedCustomDataStore *)arg1 moveItemAtFilePath:(DVTFilePath *)arg2 toFilePath:(DVTFilePath *)arg3 completionQueue:(NSOperationQueue *)arg4 completionBlock:(void (^)(BOOL, NSError *))arg5;
- (void)customDataStore:(DVTDirectoryBasedCustomDataStore *)arg1 writeData:(NSData *)arg2 toFilePath:(DVTFilePath *)arg3 completionQueue:(NSOperationQueue *)arg4 completionBlock:(void (^)(BOOL, NSError *))arg5;
- (void)customDataStore:(DVTDirectoryBasedCustomDataStore *)arg1 makeFilePathsWritable:(NSSet *)arg2 completionQueue:(NSOperationQueue *)arg3 completionBlock:(void (^)(BOOL, NSError *))arg4;
@end

@protocol DVTInvalidation <NSObject>
- (void)primitiveInvalidate;

@optional
+ (BOOL)supportsInvalidationPrevention;
+ (unsigned long long)assertionBehaviorForKeyValueObservationsAtEndOfEvent;
+ (unsigned long long)assertionBehaviorAfterEndOfEventForSelector:(SEL)arg1;
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly, nonatomic, getter=isValid) BOOL valid;
- (void)invalidate;
@end

@protocol DVTPortalDevice <NSObject>
@property(readonly, copy, nonatomic) NSString *identifier;
@property(readonly, nonatomic) DVTPlatform *platform;
@property(readonly, copy, nonatomic) NSString *name;
@end

@protocol DVTProgressReporting <NSObject>
@property(readonly) long long progress;
@end

@protocol DVTProvisioningProfile <NSObject, DVTQualifiableProfile>
@property(readonly) NSArray *identityCertificates;
@property(readonly) NSArray *certificates;
@property(readonly) BOOL isPushEnabled;
@property(readonly) BOOL isOMCEnabled;
@property(readonly) BOOL isWACEnabled;
@property(readonly) BOOL isHomeKitEnabled;
@property(readonly) BOOL isHealthKitEnabled;
@property(readonly) NSString *dataProtectionLevel;
@property(readonly) BOOL isAssociatedDomainsEnabled;
@property(readonly) BOOL isVPNLiteEnabled;
@property(readonly) BOOL isApplicationGroupsEnabled;
@property(readonly) BOOL isKeychainAccessGroupsEnabled;
@property(readonly) BOOL isGameCenterEnabled;
@property(readonly) BOOL isMapsEnabled;
@property(readonly) BOOL isInterAppAudioEnabled;
@property(readonly) BOOL isNetworkExtensionsEnabled;
@property(readonly) BOOL isMultipathEnabled;
@property(readonly) BOOL isHotspotConfigurationEnabled;
@property(readonly) BOOL isSiriEnabled;
@property(readonly) BOOL isDataProtectionEnabled;
@property(readonly) BOOL isPassbookEnabled;
@property(readonly) BOOL isICloudEnabled;
@property(readonly) BOOL usesExplicitAppIdentifier;
@property(readonly) NSData *dataRepresentation;
@property(readonly) NSSet *supportedUDIDs;
@property(readonly) DVTPlatform *dvt_platform;
@property(readonly) NSString *platform;
@property(readonly) NSString *preferredFilenameExtension;
@property(readonly) BOOL isMacProfile;
@property(readonly) BOOL isUniversal;
@property(readonly) BOOL expiredOrWillExpireSoon;
@property(readonly) BOOL willExpireSoon;
@property(readonly) NSArray *signingCertificates;
@property(readonly, copy) DVTFilePath *filePath;
@property(readonly) NSDate *creationDate;
@property(readonly) NSArray *teamIdentifierPrefixes;
@property(readonly) NSString *appIdentifierName;
@property(readonly) NSArray *appIdentifierPrefixes;
@property(readonly) NSString *appIdentifierEntitlementWithoutPrefix;
@property(readonly) NSString *appIdentifierEntitlement;
@property(readonly) DVTAppIDFeatures *features;
@property(readonly) NSDictionary *entitlements;
@property(readonly) int version;
@property(readonly) NSString *teamID;
@property(readonly) NSString *UUID;
- (BOOL)containsCertificate:(struct OpaqueSecCertificateRef *)arg1;
- (NSString *)longDescription;
- (BOOL)writeToURL:(NSURL *)arg1 options:(unsigned long long)arg2 error:(id *)arg3;
- (BOOL)writeToFile:(NSString *)arg1 options:(unsigned long long)arg2 error:(id *)arg3;
- (long long)dateCompareDecending:(id <DVTProvisioningProfile>)arg1;
- (long long)dateCompare:(id <DVTProvisioningProfile>)arg1;
- (long long)localizedCompare:(id <DVTProvisioningProfile>)arg1;
- (long long)compare:(id <DVTProvisioningProfile>)arg1;
- (BOOL)canBeInstalledOnDeviceWithIdentifier:(NSString *)arg1;
- (BOOL)canBeInstalledOnDevice:(DVTDevice *)arg1;
- (BOOL)containsSigningCertificate:(DVTSigningCertificate *)arg1;
- (BOOL)hasCertificateMatchingIdentity:(NSString *)arg1 includeExpired:(BOOL)arg2;
- (BOOL)allowsFeatures:(DVTAppIDFeatures *)arg1 missingFeatures:(id *)arg2;
@end

@protocol DVTQualifiableProfile
@property(readonly) BOOL isActive;
@property(readonly) BOOL expired;
@property(readonly) NSDate *expirationDate;
@property(readonly) NSString *appIdentifierUserDescription;
@property(readonly) NSString *provisioningProfilePlatformIdentifier;
@property(readonly) NSString *teamName;
@property(readonly) NSString *teamID;
@property(readonly) NSString *name;
- (BOOL)isXcodeManaged;
- (BOOL)matchesBundleIdentifier:(NSString *)arg1;

@optional
- (BOOL)isAppleInternal;
@end

@protocol DVTRadarSupport <NSObject>
+ (id)sharedClient;
@property id <DVTRadar_AttachmentDownloadDelegate> attachmentDownloadDelegate;
- (void)reportSelfDiagnosisIssueWithSignature:(NSString *)arg1 title:(NSString *)arg2 componentName:(NSString *)arg3 componentVersion:(NSString *)arg4 description:(NSString *)arg5 keywords:(NSArray *)arg6 classification:(unsigned long long)arg7 ownerProblemID:(NSNumber *)arg8 canFileNewProblem:(BOOL)arg9 completionBlock:(void (^)(BOOL, unsigned long long, BOOL))arg10;
- (void)reportSelfDiagnosisIssueWithSignature:(NSString *)arg1 title:(NSString *)arg2 componentName:(NSString *)arg3 componentVersion:(NSString *)arg4 description:(NSString *)arg5 keywords:(NSArray *)arg6 classification:(unsigned long long)arg7 ownerProblemID:(NSNumber *)arg8 completionBlock:(void (^)(BOOL, unsigned long long, BOOL))arg9;
- (void)reportSelfDiagnosisIssueWithSignature:(NSString *)arg1 title:(NSString *)arg2 componentName:(NSString *)arg3 componentVersion:(NSString *)arg4 description:(NSString *)arg5 keywords:(NSArray *)arg6 ownerProblemID:(NSNumber *)arg7 canFileNewProblem:(BOOL)arg8 completionBlock:(void (^)(BOOL, unsigned long long, BOOL))arg9;
- (void)reportSelfDiagnosisIssueWithSignature:(NSString *)arg1 title:(NSString *)arg2 componentName:(NSString *)arg3 componentVersion:(NSString *)arg4 description:(NSString *)arg5 keywords:(NSArray *)arg6 ownerProblemID:(NSNumber *)arg7 completionBlock:(void (^)(BOOL, unsigned long long, BOOL))arg8;
- (void)asyncPrepareToReportSelfDiagnosisIssueWithBlock:(void (^)(void))arg1;
- (BOOL)selfDiagnosisEnabled;
- (void)validateRadarComponentName:(NSString *)arg1 version:(NSString *)arg2 completionBlock:(void (^)(BOOL, NSError *))arg3;
- (id <DVTRadar_ComponentForIdentifier>)bestComponentForBundleName:(NSString *)arg1;
- (id <DVTRadar_ComponentForIdentifier>)bestComponentForClassName:(NSString *)arg1;
- (id <DVTRadar_ComponentForIdentifier>)bestComponentForFrame:(DVTStackBacktraceFrame *)arg1;
- (id <DVTRadar_ComponentForIdentifier>)bestComponentForPath:(NSString *)arg1;
- (id <DVTRadar_ComponentForIdentifier>)defaultComponent;
- (NSArray *)hltComponentForBundleNames;
- (NSArray *)hltComponentForClassNames;
- (NSArray *)hltComponentForPaths;
- (id)attachmentFromData:(NSData *)arg1 withFilename:(NSString *)arg2 isPicture:(BOOL)arg3;
- (id)attachmentFromFile:(NSString *)arg1;
- (void)associateProblem:(id <DVTRadar_Problem>)arg1 withAssociate:(id <DVTRadar_Associate>)arg2;
- (void)problemsForKeyword:(NSString *)arg1 completionBlock:(void (^)(NSError *, NSArray *))arg2;
- (void)problemsForProblemIDs:(NSArray *)arg1 completionBlock:(void (^)(NSError *, NSArray *))arg2;
- (void)showRadarNumberPromptForIssues:(NSArray *)arg1 attachedToWindow:(NSWindow *)arg2 completionBlock:(void (^)(NSError *, unsigned long long))arg3;
- (void)showRadarNumberPromptForIssue:(id <DVTRadarSupport_Issue>)arg1 attachedToWindow:(NSWindow *)arg2 completionBlock:(void (^)(NSError *, unsigned long long))arg3;
- (void)showRadarUIForIssues:(NSArray *)arg1 bugTitle:(NSString *)arg2 componentName:(NSString *)arg3 componentVersion:(NSString *)arg4 keywords:(NSArray *)arg5 attachmentDownloadDelegate:(id <DVTRadar_AttachmentDownloadDelegate>)arg6 attachedToWindow:(NSWindow *)arg7 completionBlock:(void (^)(NSError *, unsigned long long))arg8;
- (void)showRadarUIForIssue:(id <DVTRadarSupport_Issue>)arg1 componentName:(NSString *)arg2 componentVersion:(NSString *)arg3 keywords:(NSArray *)arg4 attachmentDownloadDelegate:(id <DVTRadar_AttachmentDownloadDelegate>)arg5 attachedToWindow:(NSWindow *)arg6 completionBlock:(void (^)(NSError *, unsigned long long))arg7;
@end

@protocol DVTReferenceResolverClient
- (void)resolverStrategiesDidChange:(DVTReferenceResolver *)arg1;
@end

@protocol DVTSimpleSerialization
- (void)dvt_writeToSerializer:(DVTSimpleSerializer *)arg1;
- (id)dvt_initFromDeserializer:(DVTSimpleDeserializer *)arg1;
@end

@protocol DVTSourceControlAccount <NSObject>
- (id)initWithDictionary:(NSDictionary *)arg1;
- (void)setAuthenticationStrategy:(DVTSourceControlAuthenticationStrategy *)arg1 forURL:(NSURL *)arg2;
- (DVTSourceControlAuthenticationStrategy *)authenticationStrategyForURL:(NSURL *)arg1;
- (NSDictionary *)dictionaryRepresentation;
@property(nonatomic) BOOL savingDisabled;
@property(nonatomic, readonly) NSURL *hostURL;
@property(nonatomic, copy) NSString *accountName;
@end

@protocol DVTSourceControlAccountManager <NSObject>
- (DVTSourceControlAuthenticationStrategy *)authenticationStrategyForURL:(NSURL *)arg1 usingAccount:(id <DVTSourceControlAccount>)arg2;
- (void)removeAccount:(DVTSourceControlAccount *)arg1;
- (void)addAccount:(DVTSourceControlAccount *)arg1;
- (void)accountChanged:(id <DVTSourceControlAccount>)arg1 previousUsername:(NSString *)arg2;
- (id <DVTSourceControlAccount>)existingAccountForRepository:(DVTSourceControlRemoteRepository *)arg1 authenticationStrategy:(DVTSourceControlAuthenticationStrategy *)arg2 createIfNeeded:(BOOL)arg3;
- (id <DVTSourceControlAccount>)existingAccountLikeAccount:(id <DVTSourceControlAccount>)arg1 addingIfNew:(BOOL)arg2;
- (DVTSourceControlRemoteRepository *)knownRepositoryForURL:(NSURL *)arg1 sourceControlSystem:(DVTSourceControlSystem *)arg2;
@property(nonatomic, readonly) NSArray *knownRepositories;
@end

@protocol DVTSourceControlFingerprintManager <NSObject>
- (NSString *)existingFingerprintForRepository:(DVTSourceControlRemoteRepository *)arg1;
- (void)addKnownHost:(NSString *)arg1 fingerprint:(NSString *)arg2;
- (void)loadKnownHostsFromDictionary:(NSDictionary *)arg1;
- (NSString *)existingFingerprintForHost:(NSString *)arg1;
@end

@protocol DVTSysmonBridgeDelegate
- (void)bridgeHasNewProcessInformation:(DVTSysmonBridge *)arg1;
@end

@protocol DVTXMLUnarchiverDelegate <NSObject>

@optional
- (void)XMLUnarchiver:(DVTXMLUnarchiver *)arg1 didReadToPosition:(long long)arg2 ofTotal:(long long)arg3;
@end

@protocol DVTXMLUnarchiving <NSObject>
- (id)initFromXMLUnarchiver:(DVTXMLUnarchiver *)arg1 archiveVersion:(float)arg2;
@end

@protocol IDEActivityLogSectionCustomData <NSCopying>
@end

@protocol IDEAppIDContainerFlightCheckDelegate
- (void)flightCheckIsValidating:(id <IDEFlightChecking>)arg1;
- (NSOrderedSet *)containerIdentifiersForFlightCheck:(id <IDEFlightChecking>)arg1 error:(id *)arg2;
@end

@protocol IDEAutoImportable <NSObject>
@property(readonly, nonatomic) IDEIndexCollection *definitions;
@property(readonly, nonatomic, getter=isAutoImportable) BOOL autoImportable;
@property(readonly, nonatomic) DVTFilePath *filePathToHeaderToImport;
@property(readonly, nonatomic) DVTSourceCodeSymbolKind *symbolKind;
@property(readonly, nonatomic, getter=isInProject) BOOL inProject;
@property(readonly, nonatomic) NSString *completionString;
@property(readonly, nonatomic) NSString *name;
@end

@protocol IDEBatchFindQueryDelegate <NSObject>
- (void)findNavigatorQuery:(IDEBatchFindAbstractQuery *)arg1 didFinishGeneratingLazyChildrenOfResult:(IDEBatchFindAbstractResult *)arg2;
- (void)findNavigatorQuery:(IDEBatchFindAbstractQuery *)arg1 didGenerateResults:(NSArray *)arg2;
- (void)findNavigatorQueryDidComplete:(IDEBatchFindAbstractQuery *)arg1;
- (void)findNavigatorQuery:(IDEBatchFindAbstractQuery *)arg1 isStalledOnFilePaths:(NSSet *)arg2;
- (void)findNavigatorQuery:(IDEBatchFindAbstractQuery *)arg1 progressUpdate:(long long)arg2;
@end

@protocol IDEBlueprint <NSObject, IDEIssueLogDataSource>
@property(readonly) NSArray *buildableProducts;
@property(readonly) NSArray *buildables;
@property(readonly) id <IDEBuildable> primaryBuildable;
@property(readonly, copy) NSString *blueprintIdentifier;
@property(readonly, copy) NSString *localizedDescription;
@property(readonly, copy) NSString *name;
- (DVTFilePath *)entitlementsFilePathForBuildConfiguration:(NSString *)arg1;
- (void)addFileReference:(IDEFileReference *)arg1 toBuildablesContainingFileReference:(IDEFileReference *)arg2;
- (BOOL)containsFilePath:(DVTFilePath *)arg1;
- (BOOL)containsFileReference:(IDEFileReference *)arg1;
- (id <IDEBuildable>)buildableForIdentifier:(NSString *)arg1;
- (IDEContainer<IDECustomDataStoring> *)customDataStore;
- (IDEContainer<IDEBlueprintProvider> *)blueprintProvider;

@optional
@property(readonly) BOOL participatesInSchemeAutocreation;
@property(readonly) IDETypeIdentifier *activityLogDomainType;
@property(readonly, copy) IDEPIFGUID *PIFGUID;
@property(readonly) id <IDEProvisionable> provisionable;
@property(readonly) NSSet *knownAssetTags;
@property(readonly) DVTToolsVersion *createdOnToolsVersion;
@property(readonly, copy) DVTFilePath *bundleBaselineRecordFilePath;
@property(readonly, getter=isUnitTest) BOOL unitTest;
@property(retain) IDETestBlueprintHostSettings *testBlueprintUITestingTargetAppSettings;
@property(retain) IDETestBlueprintHostSettings *testBlueprintHostSettings;
@property(readonly) BOOL containsSwift;
@property(readonly, copy) NSString *compilerSpecificationIdentifier;
@property(readonly, copy) NSString *defaultConfigurationName;
@property(readonly, copy) NSArray *availableConfigurationNames;
- (IDESourceFileBuildInfo *)sourceFileBuildInfoForFileAtPath:(DVTFilePath *)arg1;
- (void)removeTagsFromKnownAssetTags:(NSSet *)arg1;
- (void)addTagsToKnownAssetTags:(NSSet *)arg1;
- (NSDictionary *)infoDictionaryForConfiguration:(NSString *)arg1;
- (NSString *)pathToLargestAssetCatalogAppIconPassingTest:(BOOL (^)(NSDictionary *))arg1;
- (NSArray<DVTMacroExpansion> *)additionalOverridingCompilerArgumentsForSourceCodeBuildFileReference:(IDEFileReference *)arg1;
- (void)setOverridingAdditionalCompilerArguments:(NSArray<DVTMacroExpansion> *)arg1 forSourceCodeBuildFileReference:(IDEFileReference *)arg2;
- (NSArray<DVTMacroExpansion> *)additionalCompilerArgumentsForSourceCodeBuildFileReference:(IDEFileReference *)arg1;
- (void)setAdditionalCompilerArguments:(NSArray<DVTMacroExpansion> *)arg1 forSourceCodeBuildFileReference:(IDEFileReference *)arg2;
- (NSSet *)linkedBinaries;
- (NSSet *)allProjectHeaderFiles;
- (NSSet *)allPrivateHeaderFiles;
- (NSSet *)allPublicHeaderFiles;
- (NSArray *)allBuildFileReferences;
- (NSArray *)sourceCodeBuildFileReferences;
- (DVTSourceCodeLanguage *)predominantSourceCodeLanguage;
- (BOOL)configureToBuildMixedTargetWithDestinationGroup:(IDEGroup *)arg1 configureBridgingHeader:(BOOL)arg2 returningErrorString:(id *)arg3;
- (BOOL)isConfiguredToBuildMixedTarget;
- (BOOL)wouldBecomeMixedTargetAfterAddingTypes:(NSArray *)arg1;
- (BOOL)wouldBecomeMixedTargetAfterAddingFiles:(NSArray *)arg1;
- (BOOL)canUseBridgingHeader;
- (BOOL)isMixedTarget;
- (BOOL)configureToBuildWithOptimizationProfileReturningErrorString:(id *)arg1;
- (BOOL)isConfiguredToBuildWithOptimizationProfile;
- (void)setEnableSwift3ObjCInference:(BOOL)arg1;
- (void)updateSwiftCompilerTo:(NSString *)arg1;
- (void)updateLastSwiftMigrationToCurrent;
- (BOOL)lastSwiftMigrationIsCurrent;
- (void)convertToUseModernObjCSyntax;
- (void)convertToUseARC;
- (BOOL)canConvertToUseARC;
- (void)convertToBuild64bitOnly;
- (void)convertToUseClang;
- (NSString *)deviceSDKFor:(NSString *)arg1 SDKs:(NSSet *)arg2;
- (NSString *)simulatorSDKFor:(NSString *)arg1 SDKs:(NSSet *)arg2;
- (DVTSDK *)specifiedBaseSDKForBuildConfigurationName:(NSString *)arg1;
- (DVTSDK *)baseSDKForBuildConfigurationName:(NSString *)arg1;
- (NSSet *)supportedPlatformsForConfiguration:(NSString *)arg1 workspaceArenaSnapshot:(IDEWorkspaceArenaSnapshot *)arg2;
- (NSSet *)supportedPlatformsForBuildParameters:(IDEBuildParameters *)arg1;
- (NSArray *)availableArchitecturesForConfiguration:(NSString *)arg1 workspaceArenaSnapshot:(IDEWorkspaceArenaSnapshot *)arg2;
- (NSArray *)availableArchitecturesForBuildParameters:(IDEBuildParameters *)arg1;
@end

@protocol IDEBlueprintProvider <DVTInvalidation, NSObject>
@property(readonly) id <IDETestableProvider> testableProvider;
@property(readonly, copy) NSString *classPrefix;
@property(readonly, copy) NSString *organizationName;
@property(readonly, copy) NSString *name;
@property(readonly, copy) NSArray *blueprints;
- (id <IDEBlueprint>)blueprintForName:(NSString *)arg1;
- (id <IDEBlueprint>)blueprintForIdentifier:(NSString *)arg1;

@optional
@property(readonly) NSArray *sourcePackageReferences;
@property(readonly) IDEActivityLogMessage *swiftDeprecationLogMessage;
@end

@protocol IDEBreakpointDelegate

@optional
- (void)breakpointLocationsAdded:(NSArray *)arg1 removed:(NSArray *)arg2;
- (BOOL)breakpointShouldBeActivated:(IDEBreakpoint *)arg1;
- (void)breakpointEnablementChanged:(IDEBreakpoint *)arg1;
@end

@protocol IDEBuildStatisticsData
@property(readonly) long long numberOfVMPageouts;
@property(readonly) long long numberOfVMPageins;
@property(readonly) double elapsedSystemTime;
@property(readonly) double elapsedUserTime;
@property(readonly) double elapsedWallClockTime;
@property(readonly) double endWallClockTime;
@property(readonly) double startWallClockTime;
@property(readonly) unsigned long long ordinal;
@property(readonly, copy) NSString *title;
- (void)emitContentsForAspect:(DVTLogAspect *)arg1 logLevel:(int)arg2 indentLevel:(unsigned long long)arg3 withBlock:(void (^)(id <IDEBuildStatisticsData>, DVTLogAspect *, int, unsigned long long, char *, char *))arg4;
- (NSString *)defaultEmissionStringWithIndentLevel:(unsigned long long)arg1;
@end

@protocol IDEBuildSystemServiceProvider <NSObject>
@property(readonly, nonatomic) Class buildOperationClass;
@property(readonly, nonatomic) BOOL isModern;
- (void)noteBuildFolderCleanedInWorkspace:(IDEWorkspace *)arg1;
- (void)noteBlueprintProviderDidChange:(id <IDEBlueprintProvider>)arg1 inWorkspace:(IDEWorkspace *)arg2;
- (void)generateIndexingInfoForWorkspace:(IDEWorkspace *)arg1 blueprint:(id <IDEBlueprint>)arg2 completionBlock:(void (^)(NSDictionary *, NSError *))arg3;
@end

@protocol IDEBuildTaskCallbacks <NSObject>
- (void)buildTask:(IDEBuildTask *)arg1 addsPostprocessingBlocks:(NSArray *)arg2;
- (void)buildTaskDidUpdateStatus:(IDEBuildTask *)arg1;
- (void)buildTask:(IDEBuildTask *)arg1 didSetExitCode:(int)arg2;
- (void)buildTask:(IDEBuildTask *)arg1 activityLogSectionDidChange:(IDEActivityLogSection *)arg2;
- (void)buildTaskDidStartExecuting:(IDEBuildTask *)arg1;
@end

@protocol IDEBuildable <DVTInvalidation, NSObject>
@property(readonly, copy) NSString *legacyIdentifier;
@property(readonly) NSString *productModuleName;
@property(readonly) NSSet *namesOfLinkedBinaries;
@property(readonly) NSString *toolTip;
@property(readonly) NSString *displayName;
@property(readonly) id <IDEBlueprint> blueprint;
@property(readonly, copy) IDEEntityIdentifier *entityIdentifier;
@property(readonly, copy) NSString *buildableIdentifier;
@property(readonly, copy) NSString *productTypeIdentifier;
- (IDEBuilder *)createBuilderForBuildCommand:(long long)arg1 withBuildTaskQueueSet:(IDEBuildOperationQueueSet *)arg2 parameters:(IDEBuildParameters *)arg3 buildOnlyTheseFiles:(NSArray *)arg4 restorePersistedBuildResults:(BOOL)arg5 withManager:(id <IDEBuildableOperationManager>)arg6;
- (NSArray *)implicitDependenciesForBuildParameters:(IDEBuildParameters *)arg1 executionEnvironment:(IDEExecutionEnvironment *)arg2 returningMessages:(id *)arg3;
- (NSArray *)directDependencies;
- (NSArray *)orderedRecursiveDependenciesIncludingSelf:(BOOL)arg1;
- (DVTSearchPath *)toolSearchPathWithBuildParameters:(IDEBuildParameters *)arg1;
- (NSString *)absolutePathByEvaluatingBuildSettingExpressionString:(NSString *)arg1 withBuildParameters:(IDEBuildParameters *)arg2;
- (NSString *)stringByEvaluatingBuildSettingExpressionString:(NSString *)arg1 withBuildParameters:(IDEBuildParameters *)arg2;
- (NSArray *)evaluatedStringListValueForBuildSetting:(NSString *)arg1 withBuildParameters:(IDEBuildParameters *)arg2;
- (NSString *)evaluatedStringValueForBuildSetting:(NSString *)arg1 withBuildParameters:(IDEBuildParameters *)arg2;
- (NSArray *)allBuildSettingNamesWithBuildParameters:(IDEBuildParameters *)arg1;
- (IDEProductType *)productTypeWithBuildParameters:(IDEBuildParameters *)arg1;

@optional
- (Class)buildOperationManagerClass;
@end

@protocol IDEBuildableProduct <IDEBuildable>
@property(readonly) BOOL productIsExecutable;
@property(readonly) NSDictionary *productSettings;
@property(readonly) NSString *iconPath;
@property(readonly, copy) DVTFileDataType *fileDataType;
@property(readonly) DVTFilePath *filePath;
- (DVTFilePath *)filePathForBuildParameters:(IDEBuildParameters *)arg1;
@end

@protocol IDEBuildableTargetDevice <DVTBasicDevice>
- (DVTOperation *)analysisOperationWithAnalysisToolService:(id <IDEAnalysisToolService>)arg1 location:(id)arg2 workingDirectory:(DVTFilePath *)arg3 workspaceFilePath:(DVTFilePath *)arg4 projectFilePath:(DVTFilePath *)arg5 outError:(id *)arg6;
- (BOOL)performInstallWithName:(NSString *)arg1 path:(DVTFilePath *)arg2 buildables:(NSArray *)arg3 buildParameters:(IDEBuildParameters *)arg4 includeDebugSupportFiles:(BOOL)arg5 killProcesses:(NSArray *)arg6 workspace:(IDEWorkspace *)arg7 outError:(id *)arg8;
- (BOOL)canInstallBuildablesError:(id *)arg1;
- (NSDictionary *)scriptingEnvironment;
- (NSString *)closestRelativeOfTargetArchitecture:(NSString *)arg1 forBuildArchitectures:(NSArray *)arg2;
- (BOOL)supportsRunningExecutableAtPath:(DVTFilePath *)arg1 usingArchitecture:(NSString *)arg2 error:(id *)arg3;
- (BOOL)supportsExecutionForArchitecture:(NSString *)arg1 launchSession:(IDELaunchSession *)arg2 error:(id *)arg3;
- (IDEOverridingBuildProperties *)deviceSpecificOverridingPropertiesForBuildable:(id <IDEBuildable>)arg1 withBaselineParameters:(IDEBuildParameters *)arg2;
- (void)didBecomeActiveDeviceForRunContext:(IDEScheme *)arg1;
- (NSArray *)supportedSDKsForBuildable:(id <IDEBuildable>)arg1 buildParameters:(IDEBuildParameters *)arg2 error:(id *)arg3;
- (NSArray *)supportedArchitecturesForBuildable:(id <IDEBuildable>)arg1 buildParameters:(IDEBuildParameters *)arg2 error:(id *)arg3;
- (BOOL)shouldPresentDeviceForBuildable:(id <IDEBuildable>)arg1 buildParameters:(IDEBuildParameters *)arg2 error:(id *)arg3;
- (BOOL)shouldPresentDeviceForPathRunnableWithArchitecture:(NSString *)arg1;
- (BOOL)canBeDefaultDeviceForBuildable:(id <IDEBuildable>)arg1 buildParameters:(IDEBuildParameters *)arg2;
- (BOOL)deviceSupportsBuildable:(id <IDEBuildable>)arg1 buildParameters:(IDEBuildParameters *)arg2 error:(id *)arg3;
@end

@protocol IDEBuilderCallbacks <NSObject>
- (void)builder:(IDEBuilder *)arg1 didUpdateBuildStatusWithStateDescription:(NSString *)arg2 fileProgressString:(NSString *)arg3 builderProgress:(double)arg4;
- (void)builderDidFinishExecuting:(IDEBuilder *)arg1;
- (void)builderDidStartExecuting:(IDEBuilder *)arg1;
- (void)builder:(IDEBuilder *)arg1 resultDidChange:(long long)arg2;
- (void)builder:(IDEBuilder *)arg1 activityLogSectionDidChange:(IDEActivityLogSection *)arg2;
@end

@protocol IDEClientTracking <NSObject>
@property(readonly) BOOL isCancelling;
- (void)cancelTrackedClients;
- (NSArray *)clientsNotSupportingCancellation;
- (NSArray *)clientsRequiringCancellationPrompt;
- (id <IDEClientTrackingToken>)registerUncancellableClientWithName:(NSString *)arg1;
- (id <IDEClientTrackingToken>)registerClientWithName:(NSString *)arg1 promptForCancellation:(BOOL)arg2 cancellationBlock:(void (^)(void))arg3;
@end

@protocol IDEClientTrackingToken <NSObject>
@property(readonly) NSString *clientName;
- (void)unregisterClient;
@end

@protocol IDEConsoleAdaptorDelegateProtocol

@optional
- (NSString *)parseConsoleOutputFromOriginalOutput:(NSString *)arg1;
- (NSString *)parseConsoleInputFromOriginalInput:(NSString *)arg1;
@end

@protocol IDEContainerCore <NSObject, DVTInvalidation>
+ (NSArray *)containerDataFilePathsForFilePath:(DVTFilePath *)arg1;
+ (BOOL)supportsFilePersistence;
+ (DVTFileDataType *)containerFileType;
- (int)currentActivity;
- (DVTExtension *)containerExtension;
- (DVTFilePath *)filePath;
- (id <IDEContainerGroupCore>)rootGroup;
- (void)releaseContainerCore;
- (void)retainContainerCore;
- (id)initWithFilePath:(DVTFilePath *)arg1 extension:(DVTExtension *)arg2 error:(id *)arg3;
@end

@protocol IDEContainerDelegate <NSObject>

@optional
- (void)_container:(IDEContainer *)arg1 didChangeFromFilePath:(DVTFilePath *)arg2 toFilePath:(DVTFilePath *)arg3;
@end

@protocol IDEContainerErrorPresenter
- (BOOL)presentError:(NSError *)arg1;
- (int)handleSaveError:(NSError *)arg1 forContainer:(IDEContainer *)arg2 withAction:(int)arg3;
@end

@protocol IDEContainerItemCore <NSObject>
@property(readonly) id <IDEContainerCore> parentContainer;
@property(copy) NSString *path;
@property(retain) id <IDEGroupCore> parentGroup;
@end

@protocol IDEContainerReloadingDelegate
- (int)responseToExternalChangesToBackingFileForContainer:(IDEContainer *)arg1 fileWasRemoved:(BOOL)arg2;
@end

@protocol IDEContainerUnlockingDelegate
- (void)container:(IDEContainer *)arg1 attemptToUnlockItems:(NSSet *)arg2 workspace:(IDEWorkspace *)arg3 completionQueue:(NSOperationQueue *)arg4 completionBlock:(void (^)(BOOL, NSError *))arg5;
@end

@protocol IDECustomDataStoring <DVTCustomDataStoring>
- (void)addSpecifier:(DVTCustomDataSpecifier *)arg1 inWorkspace:(IDEWorkspace *)arg2 toSCMWithCompletionBlock:(void (^)(BOOL, NSError *))arg3;
- (void)scmStatusForSpecifier:(DVTCustomDataSpecifier *)arg1 completionBlock:(void (^)(unsigned long long, NSError *))arg2;
@end

@protocol IDEDebugNavigableModel <NSObject>
@property(readonly) IDELaunchSession *launchSession;
@property(readonly, copy) NSString *associatedProcessUUID;
@end

@protocol IDEDebugTopNavigableModel <IDEDebugNavigableModel, DVTInvalidation>
@property(copy, nonatomic) NSString *name;
- (NSString *)contentDelegateUIExtensionIdentifier;

@optional
@property(readonly, nonatomic) IDEDebugSession *parentDebugSession;
@end

@protocol IDEDebuggingAddition <NSObject, DVTInvalidation>
@property(readonly) NSString *identifier;
@property(readonly, nonatomic) IDELaunchSession *launchSession;
- (id)initInLaunchSession:(IDELaunchSession *)arg1 withAppDisplayName:(NSString *)arg2 runDestination:(IDERunDestination *)arg3 fromExtension:(DVTExtension *)arg4;

@optional
+ (BOOL)shouldInstantiateInLaunchSession:(IDELaunchSession *)arg1;
- (void)processFinalLaunchParameters:(IDELaunchParametersSnapshot *)arg1;
- (IDELaunchParametersSnapshot *)adjustedLaunchParametersForLaunchParameters:(IDELaunchParametersSnapshot *)arg1;
@end

@protocol IDEDeferredInitialization
+ (BOOL)ide_deferredInitializeWithOptions:(int)arg1 error:(id *)arg2;
@end

@protocol IDEDiagnosticItemDelegate <NSObject>

@optional
- (void)diagnosticItemWasFixed:(IDEDiagnosticActivityLogMessage *)arg1;
@end

@protocol IDEDistributionAppleProvidedContent
@property(readonly) NSString *mainAppStubCopySubpath;
@property(readonly) NSString *packagePath;
@property(readonly) NSString *archivePath;
@property(readonly) NSString *archiveOperationDestinationBuildSettingName;
- (NSNumber *)isAppleProvidedContent:(IDEDistributionItem *)arg1 archive:(IDEArchive *)arg2 error:(id *)arg3;
- (BOOL)shouldCopySidecarContentFromArchive:(IDEArchive *)arg1;
- (BOOL)shouldRemoveForAppStoreDistributionDistributionItem:(IDEDistributionItem *)arg1 shouldRemoveParentDirectory:(char *)arg2;
- (BOOL)shouldCodeSignDistributionItem:(IDEDistributionItem *)arg1;
@end

@protocol IDEDistributionEntitlementsFilter <NSObject>
- (NSSet *)entitlementsWhitelistForDistributionItem:(IDEDistributionItem *)arg1;
@end

@protocol IDEExecutingOperationTrackable <NSObject>
- (void)registerTracker:(IDEExecutionOperationTracker *)arg1;
@end

@protocol IDEExecutionTrackerReporting <NSObject>
- (NSString *)notFinishedReasonWithDepth:(unsigned long long)arg1;
@end

@protocol IDEFileReferenceCore <IDEContainerItemCore>
@property(copy) DVTFileDataType *assignedDataType;
@end

@protocol IDEFlightChecking <DVTInvalidation>
@property(readonly, nonatomic, getter=isAutomaticallyResolvable) BOOL automaticallyResolvable;
@property(readonly, nonatomic) BOOL failed;
@property(readonly, nonatomic) NSError *resolutionError;
@property(readonly, nonatomic) int status;
@property(readonly, nonatomic, getter=isLongRunning) BOOL longRunning;
@property(readonly, nonatomic) BOOL requiresAccountAndTeamSelection;
@property(readonly, copy, nonatomic) NSString *pastTitle;
@property(readonly, copy, nonatomic) NSString *resolvingTitle;
@property(readonly, copy, nonatomic) NSString *title;
- (void)revert;
- (void)validate;
- (void)unresolveWithContext:(id <IDEFlightCheckingContext>)arg1;
- (void)resolveWithContext:(id <IDEFlightCheckingContext>)arg1;
@end

@protocol IDEFolderCore <IDEContainerCore>
@end

@protocol IDEFrameworkCore <IDEContainerCore>
@end

@protocol IDEGroupCore <IDEContainerItemCore>
@property(copy) NSArray *subitems;
@property(copy) NSString *name;
@property(retain) id <IDEContainerCore> parentContainer;
@end

@protocol IDEIndexDatabaseDelegate

@optional
- (void)database:(IDEIndexDatabase *)arg1 reportAutoQueryProgress:(double)arg2;
- (void)clearPCHFailuresForDatabase:(IDEIndexDatabase *)arg1;
- (void)database:(IDEIndexDatabase *)arg1 didForgetFiles:(NSArray *)arg2;
- (NSDictionary *)databaseProvidersAndVersions:(IDEIndexDatabase *)arg1;
- (void)databaseDidReportError:(IDEIndexDatabase *)arg1;
- (void)database:(IDEIndexDatabase *)arg1 didEndImportSession:(IDEIndexImportSession *)arg2;
- (void)databaseDidSave:(IDEIndexDatabase *)arg1;
- (void)databaseDidIndexHotFile:(IDEIndexDatabase *)arg1;
- (void)databaseDidLoad:(IDEIndexDatabase *)arg1;
- (void)databaseDidOpen:(IDEIndexDatabase *)arg1;
@end

@protocol IDEIndexNewFileBase
- (IDEIndexNewSymbol *)newSymbolWithName:(NSString *)arg1 kind:(DVTSourceCodeSymbolKind *)arg2 role:(int)arg3 language:(DVTSourceCodeLanguage *)arg4 resolution:(NSString *)arg5 lineNumber:(long long)arg6 column:(long long)arg7 locator:(NSString *)arg8 receiver:(NSString *)arg9 completionString:(void *)arg10 container:(IDEIndexNewSymbol *)arg11;
- (void)addSymbolWithName:(NSString *)arg1 kind:(DVTSourceCodeSymbolKind *)arg2 role:(int)arg3 language:(DVTSourceCodeLanguage *)arg4 resolution:(NSString *)arg5 lineNumber:(long long)arg6 column:(long long)arg7 locator:(NSString *)arg8 receiver:(NSString *)arg9 completionString:(void *)arg10 container:(IDEIndexNewSymbol *)arg11;
@end

@protocol IDEIndexQueryProvider <NSObject>
+ (BOOL)supportsSymbolColoring;
+ (DVTDocumentLocation *)locationForURL:(NSURL *)arg1 locator:(NSString *)arg2;
@property(readonly, nonatomic) NSDictionary *settings;
@property(readonly, nonatomic) IDEIndexDatabase *database;
- (IDEIndexCollection *)definitionsForSymbolWithResolutionOffset:(long long)arg1;
- (IDEIndexCollection *)allAutoImportCompletionItemsMatchingKind:(DVTSourceCodeSymbolKind *)arg1 symbolLanguage:(DVTSourceCodeLanguage *)arg2 forIndex:(IDEIndex *)arg3;
- (IDEIndexCollection *)allAutoImportCompletionItemsMatchingKind:(DVTSourceCodeSymbolKind *)arg1 forIndex:(IDEIndex *)arg2;
- (NSString *)completionStringForSymbol:(IDEIndexSymbol *)arg1;
- (BOOL)isProjectSymbol:(IDEIndexSymbol *)arg1;
- (IDEIndexCollection *)calleesForSymbolOccurrence:(IDEIndexSymbolOccurrence *)arg1;
- (DVTDocumentLocation *)locationForSymbolOccurrence:(IDEIndexSymbolOccurrence *)arg1;
- (IDEIndexSymbol *)containingSymbolForOccurrence:(IDEIndexSymbolOccurrence *)arg1;
- (IDEIndexSymbol *)correspondingSymbolForOccurrence:(IDEIndexSymbolOccurrence *)arg1;
- (IDEIndexClassSymbol *)relatedClassForCategory:(IDEIndexCategorySymbol *)arg1;
- (IDEIndexCollection *)propertiesForCategory:(IDEIndexCategorySymbol *)arg1;
- (IDEIndexCollection *)instanceVariablesForCategory:(IDEIndexCategorySymbol *)arg1;
- (IDEIndexCollection *)instanceMethodsForCategory:(IDEIndexCategorySymbol *)arg1;
- (IDEIndexCollection *)classMethodsForCategory:(IDEIndexCategorySymbol *)arg1;
- (IDEIndexCollection *)allImplementingClassesForProtocol:(IDEIndexProtocolSymbol *)arg1;
- (IDEIndexCollection *)implementingClassesForProtocol:(IDEIndexProtocolSymbol *)arg1;
- (IDEIndexCollection *)subProtocolsForProtocol:(IDEIndexProtocolSymbol *)arg1;
- (IDEIndexCollection *)allSuperProtocolsForProtocol:(IDEIndexProtocolSymbol *)arg1;
- (IDEIndexCollection *)superProtocolsForProtocol:(IDEIndexProtocolSymbol *)arg1;
- (IDEIndexCollection *)propertiesForProtocol:(IDEIndexProtocolSymbol *)arg1;
- (IDEIndexCollection *)instanceMethodsForProtocol:(IDEIndexProtocolSymbol *)arg1;
- (IDEIndexCollection *)classMethodsForProtocol:(IDEIndexProtocolSymbol *)arg1;
- (IDEIndexCollection *)allInterfacesForClass:(IDEIndexClassSymbol *)arg1;
- (IDEIndexCollection *)interfacesForClass:(IDEIndexClassSymbol *)arg1;
- (IDEIndexCollection *)allProtocolsForClass:(IDEIndexClassSymbol *)arg1;
- (IDEIndexCollection *)protocolsForClass:(IDEIndexClassSymbol *)arg1;
- (IDEIndexCollection *)allOccurrencesOfMembers:(NSObject<NSFastEnumeration> *)arg1 forClass:(IDEIndexClassSymbol *)arg2;
- (IDEIndexCollection *)allSubClassesForClass:(IDEIndexClassSymbol *)arg1;
- (IDEIndexCollection *)subClassesForClass:(IDEIndexClassSymbol *)arg1;
- (IDEIndexCollection *)allSuperClassesForClass:(IDEIndexClassSymbol *)arg1;
- (IDEIndexCollection *)superClassesForClass:(IDEIndexClassSymbol *)arg1;
- (IDEIndexCollection *)categoriesForClass:(IDEIndexClassSymbol *)arg1;
- (IDEIndexCollection *)gkInspectablePropertiesForClass:(IDEIndexClassSymbol *)arg1;
- (IDEIndexCollection *)ibOutletCollectionPropertiesForClass:(IDEIndexClassSymbol *)arg1;
- (IDEIndexCollection *)ibOutletCollectionVariablesForClass:(IDEIndexClassSymbol *)arg1;
- (IDEIndexCollection *)ibOutletCollectionsForClass:(IDEIndexClassSymbol *)arg1;
- (IDEIndexCollection *)ibOutletPropertiesForClass:(IDEIndexClassSymbol *)arg1;
- (IDEIndexCollection *)ibOutletVariablesForClass:(IDEIndexClassSymbol *)arg1;
- (IDEIndexCollection *)ibOutletsForClass:(IDEIndexClassSymbol *)arg1;
- (IDEIndexCollection *)ibActionMethodsForClass:(IDEIndexClassSymbol *)arg1;
- (IDEIndexCollection *)propertiesForClass:(IDEIndexClassSymbol *)arg1;
- (IDEIndexCollection *)instanceVariablesForClass:(IDEIndexClassSymbol *)arg1;
- (IDEIndexCollection *)classVariablesForClass:(IDEIndexClassSymbol *)arg1;
- (IDEIndexCollection *)instanceMethodsForClass:(IDEIndexClassSymbol *)arg1;
- (IDEIndexCollection *)classMethodsForClass:(IDEIndexClassSymbol *)arg1;
- (IDEIndexCollection *)childrenForContainer:(IDEIndexContainerSymbol *)arg1;
- (IDEIndexCallableSymbol *)getterForProperty:(IDEIndexPropertySymbol *)arg1;
- (IDEIndexCallableSymbol *)setterForProperty:(IDEIndexPropertySymbol *)arg1;
- (IDEIndexCollection *)callsForCallable:(IDEIndexCallableSymbol *)arg1 cancelWhen:(BOOL (^)(void))arg2;
- (IDEIndexSymbol *)typeOfArgument:(unsigned long long)arg1 forCallable:(IDEIndexCallableSymbol *)arg2;
- (unsigned long long)numArgumentsForCallable:(IDEIndexCallableSymbol *)arg1;
- (IDEIndexSymbol *)returnTypeForCallable:(IDEIndexCallableSymbol *)arg1;
- (IDEIndexPropertySymbol *)propertyForCallable:(IDEIndexCallableSymbol *)arg1;
- (IDEIndexCollection *)overridingSymbolsForCallable:(IDEIndexCallableSymbol *)arg1;
- (IDEIndexCollection *)overriddenSymbolsForCallable:(IDEIndexCallableSymbol *)arg1;
- (IDEIndexCollection *)referencesForSymbol:(IDEIndexSymbol *)arg1;
- (IDEIndexCollection *)referencingFilesForSymbol:(IDEIndexSymbol *)arg1;
- (IDEIndexContainerSymbol *)containerSymbolForSymbol:(IDEIndexSymbol *)arg1;
- (IDEIndexCollection *)containerSymbolsForSymbol:(IDEIndexSymbol *)arg1;
- (IDEIndexCollection *)definitionsForSymbol:(IDEIndexSymbol *)arg1;
- (IDEIndexCollection *)declarationsForSymbol:(IDEIndexSymbol *)arg1;
- (IDEIndexCollection *)occurrencesForSymbol:(IDEIndexSymbol *)arg1;
- (IDEIndexSymbolOccurrence *)modelOccurrenceForSymbol:(IDEIndexSymbol *)arg1;
- (IDEIndexCollection *)filesWithSymbolOccurrencesMatchingName:(NSString *)arg1 kind:(DVTSourceCodeSymbolKind *)arg2 forIndex:(IDEIndex *)arg3;
- (IDEIndexCollection *)classesWithReferencesToSymbols:(NSObject<NSFastEnumeration> *)arg1 forIndex:(IDEIndex *)arg2;
- (IDEIndexCollection *)allClassesWithMembers:(NSObject<NSFastEnumeration> *)arg1 forIndex:(IDEIndex *)arg2;
- (IDEIndexCollection *)classesWithMembers:(NSObject<NSFastEnumeration> *)arg1 forIndex:(IDEIndex *)arg2;
- (IDEIndexCollection *)allMethodsMatchingMethod:(IDEIndexCallableSymbol *)arg1 forReceiver:(IDEIndexSymbol *)arg2 forIndex:(IDEIndex *)arg3;
- (IDEIndexCollection *)membersMatchingName:(NSString *)arg1 kinds:(NSObject<NSFastEnumeration> *)arg2 forInterfaces:(NSObject<NSFastEnumeration> *)arg3 forIndex:(IDEIndex *)arg4;
- (IDEIndexCollection *)membersMatchingKinds:(NSObject<NSFastEnumeration> *)arg1 forInterfaces:(NSObject<NSFastEnumeration> *)arg2 forIndex:(IDEIndex *)arg3;
- (IDEIndexCollection *)symbolsForResolutions:(NSObject<NSFastEnumeration> *)arg1 forIndex:(IDEIndex *)arg2;
- (unsigned long long)countOfSymbolsMatchingKind:(DVTSourceCodeSymbolKind *)arg1 workspaceOnly:(BOOL)arg2 forIndex:(IDEIndex *)arg3;
- (IDEIndexCollection *)allSymbolsMatchingKind:(DVTSourceCodeSymbolKind *)arg1 workspaceOnly:(BOOL)arg2 cancelWhen:(BOOL (^)(void))arg3 forIndex:(IDEIndex *)arg4;
- (IDEIndexCollection *)testMethodsForClasses:(NSObject<NSFastEnumeration> *)arg1 forIndex:(IDEIndex *)arg2;
- (IDEIndexCollection *)allSubClassesForClasses:(NSObject<NSFastEnumeration> *)arg1 forIndex:(IDEIndex *)arg2;
- (IDEIndexCollection *)allSymbolsMatchingNames:(NSObject<NSFastEnumeration> *)arg1 kind:(DVTSourceCodeSymbolKind *)arg2 forIndex:(IDEIndex *)arg3;
- (IDEIndexCollection *)allSymbolsMatchingName:(NSString *)arg1 kind:(DVTSourceCodeSymbolKind *)arg2 forIndex:(IDEIndex *)arg3;
- (IDEIndexCollection *)allProtocolsMatchingName:(NSString *)arg1 forIndex:(IDEIndex *)arg2;
- (IDEIndexCollection *)allClassesMatchingName:(NSString *)arg1 forIndex:(IDEIndex *)arg2;
- (IDEIndexCollection *)symbolsContaining:(NSString *)arg1 anchorStart:(BOOL)arg2 anchorEnd:(BOOL)arg3 subsequence:(BOOL)arg4 ignoreCase:(BOOL)arg5 cancelWhen:(BOOL (^)(void))arg6 forIndex:(IDEIndex *)arg7;
- (IDEIndexCollection *)topLevelProtocolsWorkspaceOnly:(BOOL)arg1 cancelWhen:(BOOL (^)(void))arg2 forIndex:(IDEIndex *)arg3;
- (IDEIndexCollection *)topLevelClassesWorkspaceOnly:(BOOL)arg1 cancelWhen:(BOOL (^)(void))arg2 forIndex:(IDEIndex *)arg3;
- (IDEIndexCollection *)filesContaining:(NSString *)arg1 anchorStart:(BOOL)arg2 anchorEnd:(BOOL)arg3 subsequence:(BOOL)arg4 ignoreCase:(BOOL)arg5 cancelWhen:(BOOL (^)(void))arg6 forIndex:(IDEIndex *)arg7;
- (IDEIndexCollection *)filesIncludedByFile:(DVTFilePath *)arg1 forIndex:(IDEIndex *)arg2;
- (IDEIndexCollection *)filesIncludingFile:(DVTFilePath *)arg1 forIndex:(IDEIndex *)arg2;
- (NSString *)parsedCodeCommentAtLocation:(DVTDocumentLocation *)arg1 withCurrentFileContentDictionary:(NSDictionary *)arg2 forIndex:(IDEIndex *)arg3 symbolKindOut:(id *)arg4;
- (NSString *)parsedCodeCommentAtLocation:(DVTDocumentLocation *)arg1 withCurrentFileContentDictionary:(NSDictionary *)arg2 forIndex:(IDEIndex *)arg3 cursorKindOut:(long long *)arg4;
- (NSString *)parsedCodeCommentAtLocation:(DVTDocumentLocation *)arg1 withCurrentFileContentDictionary:(NSDictionary *)arg2 forIndex:(IDEIndex *)arg3;
- (NSArray *)impliedHeadersForModuleImportLocation:(DVTDocumentLocation *)arg1 withCurrentFileContentDictionary:(NSDictionary *)arg2 forIndex:(IDEIndex *)arg3;
- (DVTFilePath *)importedFileAtDocumentLocation:(DVTDocumentLocation *)arg1 withCurrentFileContentDictionary:(NSDictionary *)arg2 forIndex:(IDEIndex *)arg3;
- (NSArray *)importedFilesAtDocument:(NSURL *)arg1 withCurrentFileContentDictionary:(NSDictionary *)arg2 forIndex:(IDEIndex *)arg3;
- (IDEIndexSymbol *)collectionElementTypeSymbolForSymbol:(IDEIndexSymbol *)arg1 withCurrentFileContentDictionary:(NSDictionary *)arg2 forIndex:(IDEIndex *)arg3;
- (IDEIndexSymbol *)typeSymbolForSymbol:(IDEIndexSymbol *)arg1 withCurrentFileContentDictionary:(NSDictionary *)arg2 forIndex:(IDEIndex *)arg3;
- (IDEIndexSymbol *)messageReceiverInContext:(DVTDocumentLocation *)arg1 withCurrentFileContentDictionary:(NSDictionary *)arg2 forIndex:(IDEIndex *)arg3;
- (IDEIndexCollection *)referencesToSymbolMatchingName:(NSString *)arg1 inContext:(DVTDocumentLocation *)arg2 withCurrentFileContentDictionary:(NSDictionary *)arg3 forIndex:(IDEIndex *)arg4;
- (IDEIndexCollection *)referencesToSymbol:(IDEIndexSymbol *)arg1 inContext:(DVTDocumentLocation *)arg2 withCurrentFileContentDictionary:(NSDictionary *)arg3 forIndex:(IDEIndex *)arg4;
- (IDEIndexCollection *)symbolsUsedInContext:(DVTDocumentLocation *)arg1 withCurrentFileContentDictionary:(NSDictionary *)arg2 forIndex:(IDEIndex *)arg3;
- (IDEIndexCollection *)symbolsOccurrencesInContext:(DVTDocumentLocation *)arg1 withCurrentFileContentDictionary:(NSDictionary *)arg2 forIndex:(IDEIndex *)arg3;
- (IDEIndexCollection *)codeDiagnosticsAtLocation:(DVTDocumentLocation *)arg1 withCurrentFileContentDictionary:(NSDictionary *)arg2 forIndex:(IDEIndex *)arg3;
- (IDEIndexCollection *)codeCompletionsAtLocation:(DVTDocumentLocation *)arg1 withCurrentFileContentDictionary:(NSDictionary *)arg2 completionContext:(id *)arg3 forIndex:(IDEIndex *)arg4;
- (IDEIndexCollection *)allParentsOfSymbols:(NSObject<NSFastEnumeration> *)arg1 cancelWhen:(BOOL (^)(void))arg2 forIndex:(IDEIndex *)arg3;
- (IDEIndexCollection *)symbolsMatchingName:(NSString *)arg1 inContext:(DVTDocumentLocation *)arg2 withCurrentFileContentDictionary:(NSDictionary *)arg3 forIndex:(IDEIndex *)arg4;
- (IDEIndexCollection *)symbolsMatchingName:(NSString *)arg1 inContext:(DVTDocumentLocation *)arg2 forIndex:(IDEIndex *)arg3;
- (IDEIndexCollection *)topLevelSymbolsInFile:(NSString *)arg1 forIndex:(IDEIndex *)arg2;
- (void)purgeCaches;
- (id)initWithSettings:(NSDictionary *)arg1 database:(IDEIndexDatabase *)arg2;
@end

@protocol IDEIndexSymbolFormatter <NSObject>
- (NSString *)qualifiedDisplayNameForSymbol:(IDEIndexSymbol *)arg1;
- (NSString *)displayNameForSymbol:(IDEIndexSymbol *)arg1;
@end

@protocol IDEIndexable <NSObject, NSCopying>
@property(readonly, copy) NSString *localizedIndexableDescription;
@property(readonly) BOOL requiresMainThread;
@property(readonly, copy) NSArray *indexableFiles;
@property(readonly, copy) NSString *indexName;
@property(readonly, copy) NSString *identifier;
- (IDERefactoringBuildSettings *)buildSettingsForMainFile:(DVTFilePath *)arg1 workspace:(IDEWorkspace *)arg2;
- (void)languageOfMainFile:(DVTFilePath *)arg1 workspace:(IDEWorkspace *)arg2 completionBlock:(void (^)(DVTSourceCodeLanguage *))arg3;
- (BOOL)writeProductHeaders:(NSDictionary *)arg1 toFile:(DVTFilePath *)arg2 error:(id *)arg3;
- (void)productHeadersInWorkspace:(IDEWorkspace *)arg1 withCompletionBlock:(void (^)(NSDictionary *))arg2;
- (IDEContainer *)containerForIndexables:(NSMutableSet *)arg1 rootPaths:(NSMutableSet *)arg2;

@optional
@property(readonly, getter=isUnitTest) BOOL unitTest;
@property(readonly, copy) NSString *productType;
@property(nonatomic) __weak id <IDEIndexable> proxy;
- (NSString *)productNameWithBuildSetting:(NSString *)arg1 workspace:(IDEWorkspace *)arg2;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)clearCachedBuildSettings;
- (NSDictionary *)settingsForFile:(DVTFilePath *)arg1;
- (void)settingsForFilesInWorkspace:(IDEWorkspace *)arg1 shouldWriteAuxiliaryFiles:(BOOL)arg2 withCompletionBlock:(void (^)(NSDictionary *))arg3;
@end

@protocol IDEIndexableProvider <DVTInvalidation, NSObject>
@property(readonly, copy) NSArray *indexables;
@end

@protocol IDEInitialization
+ (BOOL)ide_initializeWithOptions:(int)arg1 error:(id *)arg2;
@end

@protocol IDEIssueLogDataSource <DVTInvalidation>
@property(readonly) IDEActivityLogSection *issueLog;
- (void)analyzeModelForIssues;
@end

@protocol IDEIssueRuntimeGroupingObject <NSObject>
@property(readonly) IDEDebugSession *debugSession;
@property(copy) NSString *name;

@optional
@property(copy) NSArray *subgroupTypeIdentifiers;
@property(copy) id issueTypeIdentifier;
@end

@protocol IDELaunchSessionEventSourceEvents
- (void)launchSessionExpired;
- (void)launchSessionGotPID:(int)arg1;
- (void)launchSessionExitedWithCode:(int)arg1 hasCrashed:(BOOL)arg2;
- (void)launchSessionEncounteredAlertError:(NSError *)arg1;
- (void)launchSessionAddedConsoleAdaptor:(IDEConsoleAdaptor *)arg1;
- (void)launchSessionCompletedInitialIntensiveFileIO;
- (void)launchSessionStarted;
@end

@protocol IDELocalizationWorkProgress <NSObject>
@property(readonly, copy) NSString *workTitle;
@property(readonly, copy) NSString *phase;
@property(readonly) long long progress;
@property(readonly) BOOL complete;
@end

@protocol IDELocalizationWorkProvider <IDEStreamWorkProvider>
@end

@protocol IDELocalizedGroup <NSObject>
- (void)addNewReferenceForLocale:(DVTLocale *)arg1 filePath:(DVTFilePath *)arg2 completionBlock:(void (^)(BOOL, NSError *))arg3;
- (DVTFilePath *)proposedFilePathForLocalization:(DVTLocale *)arg1 fileType:(DVTFileDataType *)arg2;
- (IDEFileReference *)subitemForLocale:(DVTLocale *)arg1;
- (IDEContainer<IDELocalizedContainer> *)localizedContainer;
- (NSArray *)subitems;
@end

@protocol IDEMutableProvisionable <IDEProvisionable>
- (void)setSigningCertificateIdentifier:(NSString *)arg1 forConfigurationNamed:(NSString *)arg2;
- (void)setProvisioningProfile:(id <IDEProvisioningBasicProfile>)arg1 forConfigurationNamed:(NSString *)arg2;
- (void)setTeam:(id <IDEProvisioningBasicTeam>)arg1 forConfigurationNamed:(NSString *)arg2;
- (void)setProvisioningStyle:(long long)arg1 forConfigurationNamed:(NSString *)arg2;
@end

@protocol IDEOnDiskTestAssetPrunerFileSystem <NSObject>
- (NSArray *)readTestSummariesAtPath:(DVTFilePath *)arg1 error:(id *)arg2;
- (BOOL)fileExists:(DVTFilePath *)arg1;
- (BOOL)deleteFile:(DVTFilePath *)arg1 error:(id *)arg2;
- (NSArray *)exploreDirectory:(DVTFilePath *)arg1 error:(id *)arg2;
@end

@protocol IDEPerformanceSignpostSerializable <NSObject>
@property(readonly, copy) NSDictionary *serializedRepresentation;
- (id)initFromSerialized:(NSDictionary *)arg1;
@end

@protocol IDEPlaygroundLoggerLogEntry <NSObject>
@property(readonly, copy) NSString *summary;
@property(readonly, copy) NSString *name;
@end

@protocol IDEPlaygroundSimulatorDeviceChooserProtocol <NSObject>
+ (DVTDevice *)bestPlaygroundSimulatorDeviceForPlatform:(DVTPlatform *)arg1 error:(id *)arg2;
+ (BOOL)isPlaygroundSimulatorAvailable;
@end

@protocol IDEPortalInfoDelegate <NSObject>
@property(readonly, nonatomic) DVTPlatform *platform;
@property(retain, nonatomic) id <IDEProvisioningBasicTeam> selectedProvisioningTeam;
@end

@protocol IDEPrimitiveSchemeCommand <NSObject>
@end

@protocol IDEProductTypeProvider <NSObject>
+ (IDEProductType *)productTypeForIdentifier:(NSString *)arg1 platform:(DVTPlatform *)arg2;
@end

@protocol IDEProfileQualifier
@property(readonly, copy, nonatomic) NSString *debugDescription;
@property(readonly, nonatomic) NSString *userFacingName;
@property(readonly, nonatomic) BOOL onlyDisplayOnError;
@property(readonly, nonatomic) IDEProfileQualifierResult *result;
- (BOOL)qualify;
@end

@protocol IDEProjectItem <NSObject>
@property(readonly, nonatomic) DVTPortalContainerType *containerType;
@property(readonly, nonatomic) DVTPortalProfileFeature *feature;
@property(readonly, nonatomic) NSString *containerEntitlement;
@property(readonly, nonatomic) NSSet *entitlements;
@property(readonly, nonatomic) NSString *identifier;
@property(readonly, nonatomic) NSString *capabilityDescription;
@property(readonly, nonatomic) NSString *imageName;
@property(readonly, nonatomic) NSString *name;
@end

@protocol IDEProvisionable <NSObject>
@property(readonly, nonatomic) NSOrderedSet *configurations;
@property(readonly, nonatomic) NSString *name;
- (DVTPortalProfilePurpose *)provisioningPurposeForConfigurationNamed:(NSString *)arg1;
- (BOOL)signingRequiresTeamForConfigurationNamed:(NSString *)arg1;
- (BOOL)allowSigningWithoutTeamSelectionForConfigurationNamed:(NSString *)arg1;
- (void)noteProvisioningInputsChanged;
- (IDEProvisioningEntitlementsExpansion *)entitlementsExpansionForConfigurationNamed:(NSString *)arg1;
- (NSDictionary *)baseEntitlementsForConfigurationNamed:(NSString *)arg1;
- (DVTAppIDFeatures *)appIDFeaturesForConfigurationNamed:(NSString *)arg1;
- (DVTFilePath *)entitlementsFilePathForConfigurationNamed:(NSString *)arg1;
- (NSString *)signingCertificateIdentifierForConfigurationNamed:(NSString *)arg1;
- (NSString *)provisioningProfileSpecifierForConfigurationNamed:(NSString *)arg1;
- (NSString *)bundleIdentifierForConfigurationNamed:(NSString *)arg1;
- (long long)profileSupportForConfigurationNamed:(NSString *)arg1;
- (DVTPlatform *)platformForConfigurationNamed:(NSString *)arg1;
- (id <IDEProvisioningBasicTeam>)teamForConfigurationNamed:(NSString *)arg1;
- (long long)provisioningStyleForConfigurationNamed:(NSString *)arg1;
@end

@protocol IDEProvisionableProvider <NSObject>
@property(readonly, nonatomic) NSSet *provisionableDevices;
@property(readonly, nonatomic) NSSet *provisionables;
@property(readonly, nonatomic) BOOL finishedLoading;
@end

@protocol IDEProvisioningAssetSelectionDataSource <IDEProvisioningSigningCertificateSelectionDataSource, IDEProvisioningProfileSelectionDataSource, IDEProvisioningTeamSelectionDataSource, IDEProvisioningIssuesDataSource>
@property(readonly) NSString *configurationName;
@property(readonly) NSString *repairBusyReason;
@property(readonly, nonatomic) long long provisioningStyle;
@property(readonly) long long signingStyle;
@property(readonly) BOOL wantsTeamSelectionRegardlessOfSigningStyle;
@end

@protocol IDEProvisioningBasicProfile
@property(readonly) IDEProfileSpecifier *specifier;
@property(readonly) id <IDEProvisioningBasicTeam> team;
@property(readonly) BOOL existsOnDisk;
@property(readonly) NSString *name;
@property(readonly) NSString *UUID;
@end

@protocol IDEProvisioningBasicSigningIdentity
@property(readonly) NSString *userDescription;
@property(readonly) NSString *identifier;
@end

@protocol IDEProvisioningBasicTeam <NSObject>
@property(readonly, nonatomic, getter=isFreeProvisioningTeam) BOOL freeProvisioningTeam;
@property(readonly, nonatomic) NSString *teamName;
@property(readonly, nonatomic) NSString *teamID;
@end

@protocol IDEProvisioningContainer <NSObject>
@property(readonly) NSString *portalID;
@property(readonly) NSString *name;
@property(readonly) NSString *identifier;
@end

@protocol IDEProvisioningDevice <NSObject>
@property(readonly) NSString *deviceClass;
@property(readonly) NSString *UDID;
@property(readonly) NSString *name;
@end

@protocol IDEProvisioningIssuesDataSource
@property(readonly) NSArray *errors;
@end

@protocol IDEProvisioningLedgerDelegate <NSObject>

@optional
- (void)provisioningLedger:(IDEProvisioningLedger *)arg1 didAddDetails:(NSString *)arg2 toLedgerEntry:(IDEProvisioningLedgerEntry *)arg3;
- (void)provisioningLedger:(IDEProvisioningLedger *)arg1 didCloseLedgerEntry:(IDEProvisioningLedgerEntry *)arg2 withError:(NSError *)arg3;
- (void)provisioningLedger:(IDEProvisioningLedger *)arg1 didOpenLedgerEntry:(IDEProvisioningLedgerEntry *)arg2;
@end

@protocol IDEProvisioningManagerRepairObserver <DVTInvalidation>
@property(readonly) BOOL requiresImmediateUserActionResolution;
@end

@protocol IDEProvisioningMechanicContextProvider <NSObject>
@property(readonly, nonatomic) IDEProvisioningLedger *ledger;
@property(readonly, nonatomic) DVTProvisioningProfileManager *profileManager;
@property(readonly, nonatomic) DVTSigningCertificateManager *certificateManager;
@end

@protocol IDEProvisioningMechanicDelegate <DVTInvalidation>
- (void)repairForRepairable:(id <IDERepairable>)arg1 userAction:(IDEProvisioningUserAction *)arg2 didFailWithError:(NSError *)arg3;
- (void)repairUserAction:(IDEProvisioningUserAction *)arg1 didFinishForRepairable:(id <IDERepairable>)arg2;
- (void)repairUserActionDidBeginForRepairable:(id <IDERepairable>)arg1;
- (void)repairForRepairable:(id <IDERepairable>)arg1 requiresUserAction:(IDEProvisioningUserAction *)arg2;
- (void)repairForRepairable:(id <IDERepairable>)arg1 didFailWithError:(NSError *)arg2;
- (void)repairDidFinishForRepairable:(id <IDERepairable>)arg1;
- (void)repairForRepairable:(id <IDERepairable>)arg1 isExecutingStep:(NSString *)arg2;
- (void)repairDidBeginForRepairable:(id <IDERepairable>)arg1;
- (void)repairPendingForRepairable:(id <IDERepairable>)arg1;
@end

@protocol IDEProvisioningProfileSelectionDataSource <IDEProvisioningRepairDataSource>
@property(readonly, nonatomic) BOOL showEmptyProfileSelectionPlaceholder;
@property(readonly, nonatomic) IDEProfileQualification *profileQualification;
@property(retain, nonatomic) id <IDEProvisioningBasicProfile> provisioningProfile;
@property(readonly) long long profileSupport;
@property(readonly, getter=isProfileChangeable) BOOL profileChangeable;
- (IDEProvisioningProfileDownloaderContext *)provisioningProfileDownloaderContextWithError:(id *)arg1;
- (void)locateEligibleProfiles:(id *)arg1 ineligibleProfiles:(id *)arg2;
@end

@protocol IDEProvisioningRepairDataSource
@property(readonly, getter=isRepairBusy) BOOL repairBusy;
@end

@protocol IDEProvisioningRepairDelegate
- (void)repair:(IDEProvisioningRepair *)arg1 didFinishUserAction:(IDEProvisioningUserAction *)arg2;
- (void)repairUserActionDidBegin:(IDEProvisioningRepair *)arg1;
- (void)repair:(IDEProvisioningRepair *)arg1 userAction:(IDEProvisioningUserAction *)arg2 didFailWithError:(NSError *)arg3;
- (void)repair:(IDEProvisioningRepair *)arg1 userActionWasAuthorized:(IDEProvisioningUserAction *)arg2;
- (void)repair:(IDEProvisioningRepair *)arg1 requiresUserAction:(IDEProvisioningUserAction *)arg2;
- (void)repair:(IDEProvisioningRepair *)arg1 didFailWithError:(NSError *)arg2;
- (void)repairDidFinish:(IDEProvisioningRepair *)arg1;
- (void)repair:(IDEProvisioningRepair *)arg1 isExecutingStep:(NSString *)arg2;
- (void)repairDidBegin:(IDEProvisioningRepair *)arg1;
@end

@protocol IDEProvisioningSigningCertificateSelectionDataSource <IDEProvisioningTeamSelectionDataSource, IDEProvisioningRepairDataSource>
@property(retain, nonatomic) id <IDEProvisioningBasicSigningIdentity> signingIdentity;
@property(readonly, nonatomic) NSOrderedSet *signingIdentities;
@property(readonly) BOOL isSigningIdentityChangeable;
@end

@protocol IDEProvisioningStyleDataSource <IDEProvisioningTeamsDataSource>
@property(readonly) NSArray *provisioningSelectionDataSources;
@property(readonly, getter=isFinishedLoading) BOOL finishedLoading;
@property(readonly, nonatomic, getter=isProvisioningStyleSelectable) BOOL provisioningStyleSelectable;
- (void)setProvisioningStyle:(long long)arg1;
@end

@protocol IDEProvisioningStyleDataSourceProvider
@property(readonly, getter=isFinishedLoading) BOOL finishedLoading;
- (IDEProvisionableManager *)managerForProvisionable:(id <IDEProvisionable>)arg1;
@end

@protocol IDEProvisioningTeamAccountPairProvider <NSObject>
- (IDEProvisioningTeamAccountPair *)pairForTeam:(id <IDEProvisioningBasicTeam>)arg1 error:(id *)arg2;
@end

@protocol IDEProvisioningTeamSelectionDataSource
@property(retain, nonatomic) id <IDEProvisioningBasicTeam> team;
@property(readonly, nonatomic) BOOL isTeamSelectionRequired;
@end

@protocol IDEProvisioningTeamsDataSource
@property(readonly) NSOrderedSet *teams;
@end

@protocol IDEProvisioningUserActionDelegate
- (void)userAction:(IDEProvisioningUserAction *)arg1 didFailWithError:(NSError *)arg2;
- (void)userActionDidFinish:(IDEProvisioningUserAction *)arg1;
- (void)userActionDidBegin:(IDEProvisioningUserAction *)arg1;
- (void)userActionWasAuthorized:(IDEProvisioningUserAction *)arg1;
@end

@protocol IDEReadOnlyItem <NSObject>
@property(readonly) NSURL *readOnlyItemURL;
@property(readonly) int readOnlyStatus;
- (BOOL)makeWritableWithError:(id *)arg1;
@end

@protocol IDERepairable <NSObject>
@property(readonly, nonatomic) NSArray *instigatingErrors;
@property(readonly, nonatomic) BOOL wantsRepairStatusSuppressed;
@property(readonly, nonatomic) id <IDEProvisioningBasicProfile> profile;
@property(readonly, nonatomic) NSArray *devices;
@property(readonly, nonatomic) NSString *machineID;
@property(readonly, nonatomic) NSString *machineName;
@property(readonly, nonatomic) DVTPlatform *platform;
@property(readonly, nonatomic) NSArray *certificateTypes;
@property(readonly, nonatomic) long long provisioningStyle;
@property(readonly, nonatomic) id <IDEProvisioningBasicTeam> team;
@property(readonly, nonatomic) NSString *repairableName;
- (BOOL)profileCharacteristicsWithContext:(IDEProvisioningRepairExecutionContext *)arg1 profileCharacteristics:(id *)arg2 error:(id *)arg3;
- (IDEProfileQualification *)profileQualificationWithProfile:(id <DVTProvisioningProfile>)arg1;
@end

@protocol IDERunDestinationFallbackSelectorDeviceInfo <NSObject>
@property(readonly, nonatomic) NSString *ide_fallbackSelectorDeviceGroupingFamily;
@end

@protocol IDERunDestinationRepresentedObject <NSObject>
@property(readonly) BOOL isWatchDestination;
@property(readonly) IDERunDestination *runDestination;
@end

@protocol IDESchemeActionTestSummaryContainer <NSObject>
@property(readonly) NSMutableArray *mutableContainedTestSummaries;
@property(readonly) NSArray *containedTestSummaries;
@end

@protocol IDESchemeActionsInvocationRecordUpdateDelegate
- (BOOL)shouldActionsInvocationRecord:(IDESchemeActionsInvocationRecord *)arg1 refetchRemoteCodeCoverageForSchemeActionResult:(IDESchemeActionResult *)arg2 withOriginalRemoteCodeCoverageIdentifier:(id)arg3 newRemoteCodeCoverageIdentifier:(id)arg4;
- (BOOL)shouldActionsInvocationRecord:(IDESchemeActionsInvocationRecord *)arg1 refetchRemoteCodeCoverageWithOriginalRemoteCodeCoverageIdentifier:(id)arg2 newRemoteCodeCoverageIdentifier:(id)arg3;
- (BOOL)shouldActionsInvocationRecord:(IDESchemeActionsInvocationRecord *)arg1 refetchRemoteTestSummaryForSchemeActionResult:(IDESchemeActionResult *)arg2 withOriginalRemoteTestSummaryIdentifier:(id)arg3 newRemoteTestSummaryIdentifier:(id)arg4;
- (BOOL)shouldActionsInvocationRecord:(IDESchemeActionsInvocationRecord *)arg1 refetchRemoteTestSummaryWithOriginalRemoteTestSummaryIdentifier:(id)arg2 newRemoteTestSummaryIdentifier:(id)arg3;
- (BOOL)shouldActionsInvocationRecord:(IDESchemeActionsInvocationRecord *)arg1 refetchRemoteLogForSchemeActionResult:(IDESchemeActionResult *)arg2 withOriginalRemoteLogIdentifier:(id)arg3 newRemoteLogIdentifier:(id)arg4;
- (void)fetchCodeCoverageAndUpdateRecord:(IDESchemeActionsInvocationRecord *)arg1 withCompletionBlock:(void (^)(BOOL, BOOL, NSError *))arg2;
- (void)fetchTestSummariesAndUpdateRecord:(IDESchemeActionsInvocationRecord *)arg1 withCompletionBlock:(void (^)(BOOL, BOOL, NSError *))arg2;
- (void)fetchLogsAndUpdateRecord:(IDESchemeActionsInvocationRecord *)arg1 withCompletionBlock:(void (^)(BOOL, BOOL, NSError *))arg2;
- (void)updateRecord:(IDESchemeActionsInvocationRecord *)arg1 withCompletionBlock:(void (^)(BOOL, BOOL, NSError *))arg2;
@end

@protocol IDESetReponsibleProcessForUITestingProtocol
- (void)setResponsiblePID:(int)arg1 forPID:(int)arg2 reply:(void (^)(BOOL))arg3;
@end

@protocol IDESourceKitAvailableRefactoring
@property(readonly) NSString *name;
@property(readonly) long long ident;
@property(readonly) long long kind;
@end

@protocol IDESourceKitConnectionDelegate <NSObject>
- (void)onToolchainCompilerCrashed;
- (void)onLogOutput:(IDESourceKitNotificationOnLogOutput *)arg1;
@end

@protocol IDESourceKitRefactoringActionDelegate <NSObject>
- (void)refactoringUnhandledURLs:(IDESourceKitNotificationRefactoringUnhandledURLs *)arg1;
- (void)refactoringRenameRangesFound:(IDESourceKitNotificationRefactoringRenameRangesFound *)arg1;
- (void)refactoringProgressUpdated:(IDESourceKitNotificationRefactoringProgressUpdated *)arg1;
- (void)refactoringStateChanged:(IDESourceKitNotificationRefactoringStateChanged *)arg1;
- (long long)refactoringActionToken;
- (long long)indexerToken;
@end

@protocol IDESourceKitRefactoringEdit
@property(readonly) NSString *sourceText;
@property(readonly) long long endColumn;
@property(readonly) long long endLine;
@property(readonly) long long column;
@property(readonly) long long line;
@end

@protocol IDESourceKitRefactoringFileEdits
@property(readonly) NSArray *edits;
@property(readonly) NSString *newName;
@property(readonly) NSString *filePath;
@end

@protocol IDESourceKitRefactoringFileRenameRanges
@property(readonly) NSArray *categorizedRanges;
@property(readonly) BOOL shouldRenameFile;
@property(readonly) NSString *filePath;
@end

@protocol IDESourceKitRenameRange
@property(readonly) long long endColumn;
@property(readonly) long long endLine;
@property(readonly) long long column;
@property(readonly) long long line;
@property(readonly) NSNumber *argIndex;
@property(readonly) unsigned long long kind;
@end

@protocol IDESourceKitRenameRangeGroup
@property(readonly) NSArray *ranges;
@property(readonly) unsigned long long category;
@end

@protocol IDESourceKitRequestDictionaryWrapper
- (IDESourceKitRequestDictionary *)internalDictionary;
@end

@protocol IDESourceKitWorkspaceDelegate <NSObject>
- (void)filesContainingWordWithInfo:(IDESourceKitCallbackFilesContainingWord *)arg1 completionBlock:(void (^)(NSNumber *))arg2;
- (void)onSettingsForIndexableWithInfo:(IDESourceKitCallbackOnSettingsForIndexable *)arg1 completionBlock:(void (^)(NSDictionary *))arg2;
- (void)onGatherProductHeadersWithInfo:(IDESourceKitCallbackOnGatherProductHeaders *)arg1 completionBlock:(void (^)(NSDictionary *))arg2;
- (void)onWriteHeaderMapWithInfo:(IDESourceKitCallbackOnWriteHeaderMap *)arg1 completionBlock:(void (^)(IDESourceKitRequestStringArray *))arg2;
- (void)onCreateWorkspaceArenaFolderWithCompletionBlock:(void (^)(void))arg1;
- (void)onIndexDidFastScan;
- (void)onIndexIsFastScanning:(IDESourceKitNotificationOnIndexIsFastScanning *)arg1;
- (void)onIndexWillFastScan;
- (void)onIndexDidPopulateDatabase;
- (void)onIndexIsPopulatingDatabase:(IDESourceKitNotificationOnIndexIsPopulatingDatabase *)arg1;
- (void)onIndexWillPopulateDatabase;
- (void)onDidResumeIndexingWorkspace;
- (void)onDidSuspendIndexingWorkspace;
- (void)onDidIndexWorkspace;
- (void)onIsIndexingWorkspace:(IDESourceKitNotificationOnIsIndexingWorkspace *)arg1;
- (void)onWillIndexWorkspace:(IDESourceKitNotificationOnWillIndexWorkspace *)arg1;
- (void)onDidChangeState;
- (void)onDidChange;
- (void)onInitiatePrebuild;
- (long long)indexerToken;
@end

@protocol IDESourcePackage
@property(readonly) NSArray *packageProducts;
@property(readonly) BOOL isRemotePackage;
@property(readonly) NSString *packageName;
@property(readonly) DVTFilePath *packagePath;
@property(readonly) NSURL *packageURL;
@end

@protocol IDESourceTreeProvider <NSObject>
+ (NSString *)stringByExpandingSourceTreeReferencesInString:(NSString *)arg1;
@end

@protocol IDEStreamConsumer <NSObject>
- (void)onCancelled;
- (void)onCompleted;
- (void)onError:(NSError *)arg1;
- (void)onNext:(id)arg1;
@end

@protocol IDEStreamPublisher <DVTCancellable>
- (void)subscribeConsumer:(id <IDEStreamConsumer>)arg1;
@end

@protocol IDEStreamWorkProvider <NSObject>
- (IDEStream *)work;
@end

@protocol IDEStructureEditing
- (BOOL)allowRemovingContainerGroup;
- (BOOL)structureEditSetName:(NSString *)arg1 inContext:(id <IDEStructureEditingContext>)arg2;
- (BOOL)canStructureEditName;
- (BOOL)structureEditRemoveSubitemsAtIndexes:(NSIndexSet *)arg1 error:(id *)arg2;
- (BOOL)canStructureEditRemoveSubitemsAtIndexes:(NSIndexSet *)arg1;
- (BOOL)structureEditSortSubitemsAtIndexes:(NSIndexSet *)arg1 byNameOrByType:(BOOL)arg2;
- (BOOL)canStructureEditSortSubitemsAtIndexes:(NSIndexSet *)arg1 byNameOrByType:(BOOL)arg2;
- (NSArray *)structureEditInsertFileURLs:(NSArray *)arg1 atIndex:(unsigned long long)arg2 createGroupsForFolders:(BOOL)arg3;
- (BOOL)canStructureEditInsertFileURLs:(NSArray *)arg1 atIndex:(unsigned long long)arg2;
- (NSArray *)structureEditInsertSubitems:(NSArray *)arg1 atIndex:(unsigned long long)arg2;
- (BOOL)canStructureEditInsertSubitems:(NSArray *)arg1 atIndex:(unsigned long long)arg2;
- (BOOL)allowUserModificationOfSubitems;

@optional
- (NSSet *)allowedFileTypesOfChildItems;
@end

@protocol IDESwiftMigrator
- (void)migrateWithMigrationDir:(NSString *)arg1 buildQueueSet:(IDEBuildOperationQueueSet *)arg2 completionBlock:(void (^)(DVTOperation *, NSError *))arg3;
@end

@protocol IDETemplateOptionParent <NSObject>
- (void)valueDidChangeForOption:(IDETemplateOption *)arg1;
- (IDEWorkspace *)workspace;
- (NSString *)identifier;
@end

@protocol IDETestContainer <NSObject>
@property(readonly, copy) NSArray *arrangedSubtests;
@property(readonly, copy) NSSet *subtests;
@property(readonly) BOOL canHaveSubtests;
@end

@protocol IDETestObserver <NSObject, IDETestablesObserver>
- (void)testsChanged:(NSSet *)arg1;
@end

@protocol IDETestOperationCoordinatorEvents
- (void)willFinishWithError:(NSError *)arg1 didCancel:(BOOL)arg2 sessionState:(IDETestOperationCoordinator *)arg3;
- (void)testSuiteDidFinish:(unsigned long long)arg1 withFailures:(unsigned long long)arg2 unexpected:(unsigned long long)arg3 testDuration:(double)arg4 totalDuration:(double)arg5 rawOutput:(NSString *)arg6 sessionState:(IDETestOperationCoordinator *)arg7;
- (void)testSuiteWithIdentifier:(IDETestIdentifier *)arg1 willFinishAt:(NSString *)arg2 rawOutput:(NSString *)arg3 sessionState:(IDETestOperationCoordinator *)arg4;
- (void)testCaseWithIdentifier:(IDETestIdentifier *)arg1 didFinishWithStatus:(NSString *)arg2 duration:(double)arg3 rawOutput:(NSString *)arg4 sessionState:(IDETestOperationCoordinator *)arg5;
- (void)testCaseWithIdentifier:(IDETestIdentifier *)arg1 didMeasurePerformanceMetric:(DVTTestPerformanceMetricOutput *)arg2 rawOutput:(NSString *)arg3 sessionState:(IDETestOperationCoordinator *)arg4;
- (void)testCaseWithIdentifier:(IDETestIdentifier *)arg1 didFinishActivity:(XCActivityRecord *)arg2 sessionState:(IDETestOperationCoordinator *)arg3;
- (void)testCaseWithIdentifier:(IDETestIdentifier *)arg1 willStartActivity:(XCActivityRecord *)arg2 sessionState:(IDETestOperationCoordinator *)arg3;
- (void)testCaseWithIdentifier:(IDETestIdentifier *)arg1 didFailWithMessage:(NSString *)arg2 file:(NSString *)arg3 line:(long long)arg4 rawOutput:(NSString *)arg5 sessionState:(IDETestOperationCoordinator *)arg6;
- (void)testCaseWithIdentifier:(IDETestIdentifier *)arg1 didStartWithRawOutput:(NSString *)arg2 sessionState:(IDETestOperationCoordinator *)arg3;
- (void)testSuiteWithIdentifier:(IDETestIdentifier *)arg1 didStartAt:(NSString *)arg2 rawOutput:(NSString *)arg3 sessionState:(IDETestOperationCoordinator *)arg4;
- (void)testDidOutput:(NSString *)arg1 sessionState:(IDETestOperationCoordinator *)arg2;
- (void)launchSessionStarted:(IDETestOperationCoordinator *)arg1 diagnosticLogPath:(NSString *)arg2;
@end

@protocol IDETestOperationEventSourceEvents
- (void)testOperationEncounteredError:(NSError *)arg1;
- (void)testOperationCancelledWithError:(NSError *)arg1;
@end

@protocol IDETestOperationStateMachineDelegate
- (void)waitForTestProcessToConnect;
- (void)launchSessionDidFinalizeWithDescription:(NSString *)arg1 userInfo:(NSDictionary *)arg2;
@end

@protocol IDETestRunSessionEvents <NSObject>
- (void)didFinishTest:(IDETest *)arg1 withTestResult:(IDETestResult *)arg2 rawOutput:(NSString *)arg3;
- (void)didFailTest:(IDETest *)arg1 withTestResultMessage:(IDETestResultMessage *)arg2 rawOutput:(NSString *)arg3;
- (void)test:(IDETest *)arg1 didFinishActivity:(XCActivityRecord *)arg2;
- (void)test:(IDETest *)arg1 willStartActivity:(XCActivityRecord *)arg2;
- (void)test:(IDETest *)arg1 didMeasurePerformanceMetric:(DVTTestPerformanceMetricOutput *)arg2 rawOutput:(NSString *)arg3;
- (void)testDidOutput:(NSString *)arg1;
- (void)didStartTest:(IDETest *)arg1 withRawOutput:(NSString *)arg2;
- (void)testSuiteDidFinish:(unsigned long long)arg1 withFailures:(unsigned long long)arg2 unexpected:(unsigned long long)arg3 testDuration:(double)arg4 totalDuration:(double)arg5 rawOutput:(NSString *)arg6;
- (void)testSuite:(NSString *)arg1 willFinishAt:(NSString *)arg2 rawOutput:(NSString *)arg3;
- (void)testSuite:(NSString *)arg1 didStartAt:(NSString *)arg2 rawOutput:(NSString *)arg3;
- (void)testOperationGroupDidFinish;
- (void)testRunner:(IDETestRunner *)arg1 willFinishPrematurelyWithError:(NSError *)arg2;
- (void)testOperationWillFinishWithSuccess:(BOOL)arg1 withError:(NSError *)arg2;
- (void)testRunner:(IDETestRunner *)arg1 didLaunchTestSessionForScheme:(IDEEntityIdentifier *)arg2 withDisplayName:(NSString *)arg3 diagnosticLogPath:(NSString *)arg4;
@end

@protocol IDETestRunnerEvents <NSObject>
- (void)testRunner:(IDETestRunner *)arg1 didFinishTestWithIdentifier:(IDETestIdentifier *)arg2 withTestResult:(IDETestResult *)arg3 rawOutput:(NSString *)arg4;
- (void)testRunner:(IDETestRunner *)arg1 didFailTestWithIdentifier:(IDETestIdentifier *)arg2 withTestResultMessage:(IDETestResultMessage *)arg3 rawOutput:(NSString *)arg4;
- (void)testRunner:(IDETestRunner *)arg1 testWithIdentifier:(IDETestIdentifier *)arg2 didMeasurePerformanceMetric:(DVTTestPerformanceMetricOutput *)arg3 rawOutput:(NSString *)arg4;
- (void)testRunner:(IDETestRunner *)arg1 didOutput:(NSString *)arg2;
- (void)testRunner:(IDETestRunner *)arg1 testWithIdentifier:(IDETestIdentifier *)arg2 didFinishActivity:(XCActivityRecord *)arg3;
- (void)testRunner:(IDETestRunner *)arg1 testWithIdentifier:(IDETestIdentifier *)arg2 willStartActivity:(XCActivityRecord *)arg3;
- (void)testRunner:(IDETestRunner *)arg1 didStartTestWithIdentifier:(IDETestIdentifier *)arg2 rawOutput:(NSString *)arg3;
- (void)testSuiteDidFinish:(unsigned long long)arg1 withFailures:(unsigned long long)arg2 unexpected:(unsigned long long)arg3 testDuration:(double)arg4 totalDuration:(double)arg5 rawOutput:(NSString *)arg6;
- (void)testSuite:(IDETestIdentifier *)arg1 willFinishAt:(NSString *)arg2 rawOutput:(NSString *)arg3;
- (void)testSuite:(IDETestIdentifier *)arg1 didStartAt:(NSString *)arg2 rawOutput:(NSString *)arg3;
- (void)testRunner:(IDETestRunner *)arg1 willFinishWithError:(NSError *)arg2 didCancel:(BOOL)arg3;
- (void)testRunner:(IDETestRunner *)arg1 didLaunchTestSessionForScheme:(IDEEntityIdentifier *)arg2 withDisplayName:(NSString *)arg3 diagnosticLogPath:(NSString *)arg4;
- (void)testRunnerDidStartRunningTests:(IDETestRunner *)arg1;
@end

@protocol IDETestable <IDETestContainer, DVTInvalidation, NSObject>
@property(readonly) id <IDEBuildable> primaryBuildable;
@property(readonly) BOOL isSearchingForTests;
@property(readonly) BOOL isUITest;
@property(readonly) NSSet *testFiles;
@property(readonly) NSString *name;
@property(readonly) id <IDETestableProvider> testableProvider;
- (void)removeSubtest:(IDETest *)arg1;
- (BOOL)canHaveSubtestsForTestWithIdentifier:(NSString *)arg1;
- (IDETest *)supertestForTestWithIdentifier:(NSString *)arg1;
- (NSString *)nameForTestWithIdentifier:(NSString *)arg1;
- (NSSet *)testsInFile:(NSURL *)arg1;
- (IDETest *)testForIdentifier:(NSString *)arg1 location:(DVTDocumentLocation *)arg2 createIfNeeded:(BOOL)arg3;
- (IDETest *)testForIdentifier:(NSString *)arg1 createIfNeeded:(BOOL)arg2;
- (IDETest *)testForIdentifier:(NSString *)arg1;
- (id <IDEBuildable>)parentBuildableInWorkspace:(IDEWorkspace *)arg1;
- (id <IDEBuildableProduct>)targetApplicationBuildableForWorkspace:(IDEWorkspace *)arg1 withBuildParameters:(IDEBuildParameters *)arg2;
- (id <IDEBuildableProduct>)testHostBuildableInWorkspace:(IDEWorkspace *)arg1;
- (void)searchForTestsInWorkspace:(IDEWorkspace *)arg1;
- (IDETestRunSpecification *)testRunSpecificationWithTestingSpecifier:(id <IDETestingSpecifier>)arg1 buildParameters:(IDEBuildParameters *)arg2 buildables:(NSArray *)arg3 error:(id *)arg4;
@end

@protocol IDETestableDataSource <NSObject>
@property BOOL providesLiveUpdates;
@end

@protocol IDETestableProvider <DVTInvalidation, NSObject>
@property(readonly, copy) NSString *name;
@property(readonly, copy) NSArray *testables;
- (id <IDETestable>)testableForBlueprint:(id <IDEBlueprint>)arg1;
@end

@protocol IDETestablesObserver <NSObject>
- (void)allTestablesChanged;
@end

@protocol IDETestingDiagnosticLogWriter <NSObject>
- (void)writeLogStatus:(NSString *)arg1;
- (void)writeLogData:(NSData *)arg1;
@end

@protocol IDETestingSpecifier <NSObject>
@property(readonly, copy) NSSet *adHocTests;
@property(readonly, copy) NSArray *skippedTests;
@property BOOL skipped;
@property(retain) IDELocationScenarioReference *locationScenarioReference;
@property(retain) IDEDeviceAppDataReference *deviceAppDataReference;
@property(readonly) IDEScheme *scheme;
- (void)disableTest:(IDETest *)arg1;
- (void)enableTest:(IDETest *)arg1;
- (id <IDETestable>)testable;
@end

@protocol IDETestsActivityLogBuilderDelegate <NSObject>
- (NSURL *)fileURLForTestIdentifier:(NSString *)arg1;
@end

@protocol IDETestsInTestableObserver <IDETestObserver>
- (void)testablesChanged:(NSSet *)arg1;
@end

@protocol IDETextFragmentIndexPrescanner <NSObject>
- (void)startWithCompletionObserver:(void (^)(void))arg1;
- (id)initWithWorkspace:(IDEWorkspace *)arg1;
@end

@protocol IDEUpgradeableItem
- (void)enumerateUpgradeTasksWithBlock:(void (^)(IDECustomUpgradeTask *))arg1;
@end

@protocol IDEWorkspaceDelegate <IDEContainerDelegate>
- (void)_workspace:(IDEWorkspace *)arg1 failedToResolveContainerForProjectFile:(IDEFileReference *)arg2;

@optional
- (void)_workspace:(IDEWorkspace *)arg1 didChangeSimpleFilesFocusedTo:(BOOL)arg2;
- (void)_workspace:(IDEWorkspace *)arg1 didChangeFinishedLoadingTo:(BOOL)arg2;
@end

@protocol IDEWorkspaceWrappingContainer
- (void)becomeWorkspaceWrappingContainer;
@end

@protocol IDEXBSXcodebuildSupportProvider <NSObject>
- (IDEXBSBuildOptionOverrides *)optionOverridesForParameters:(IDEXBSBuildParameters *)arg1 performingAction:(NSString *)arg2;
- (IDEXBSBuildParameters *)xbsParametersForBuildOptions:(NSDictionary *)arg1;
- (NSArray *)additionalOptionDefinitions;
@end

@protocol IDEXMLPackageContainerCore <IDEContainerCore>
- (BOOL)writeToFile:(DVTFilePath *)arg1 error:(id *)arg2;
- (id)initWithContentsOfFile:(DVTFilePath *)arg1 error:(id *)arg2;
@end

@protocol ITunesSoftwareServiceConfigurationResponse <ITunesSoftwareServiceResponse>
- (NSString *)alertMessage;
- (NSDictionary *)configuration;
@end

@protocol ITunesSoftwareServiceResponse <NSObject>
- (NSArray *)infoMessages;
- (NSArray *)warnings;
- (NSArray *)errors;
- (BOOL)isCancelled;
- (BOOL)isSuccessful;
@end

@protocol NSCoding
- (id)initWithCoder:(NSCoder *)arg1;
- (void)encodeWithCoder:(NSCoder *)arg1;
@end

@protocol NSCopying
- (id)copyWithZone:(struct _NSZone *)arg1;
@end

@protocol NSFastEnumeration
- (unsigned long long)countByEnumeratingWithState:(CDStruct_70511ce9 *)arg1 objects:(id *)arg2 count:(unsigned long long)arg3;
@end

@protocol NSObject
@property(nonatomic, readonly) NSString *description;
- (void *)zone;
- (long long)retainCount;
- (id)autorelease;
- (void)release;
- (id)retain;
- (BOOL)respondsToSelector:(SEL)arg1;
- (BOOL)conformsToProtocol:(Protocol *)arg1;
- (BOOL)isMemberOfClass:(Class)arg1;
- (BOOL)isKindOfClass:(Class)arg1;
- (BOOL)isProxy;
- (id *)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (id *)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id *)performSelector:(SEL)arg1;
- (id)self;
- (Class)class;
@property(nonatomic, readonly) Class superclass;
@property(nonatomic, readonly) long long hash;
- (BOOL)isEqual:(id)arg1;

@optional
@property(nonatomic, readonly) NSString *debugDescription;
@end

@protocol NSSecureCoding <NSCoding>
+ (BOOL)supportsSecureCoding;
@end

@protocol NSURLConnectionDelegate <NSObject>

@optional
- (void)connection:(NSURLConnection *)arg1 didCancelAuthenticationChallenge:(NSURLAuthenticationChallenge *)arg2;
- (void)connection:(NSURLConnection *)arg1 didReceiveAuthenticationChallenge:(NSURLAuthenticationChallenge *)arg2;
- (BOOL)connection:(NSURLConnection *)arg1 canAuthenticateAgainstProtectionSpace:(NSURLProtectionSpace *)arg2;
- (void)connection:(NSURLConnection *)arg1 willSendRequestForAuthenticationChallenge:(NSURLAuthenticationChallenge *)arg2;
- (BOOL)connectionShouldUseCredentialStorage:(NSURLConnection *)arg1;
- (void)connection:(NSURLConnection *)arg1 didFailWithError:(NSError *)arg2;
@end

@protocol OSActivityStreamDelegate <NSObject>
- (BOOL)activityStream:(OSActivityStream *)arg1 results:(NSArray *)arg2;

@optional
- (BOOL)activityStream:(OSActivityStream *)arg1 results:(NSArray *)arg2 error:(NSError *)arg3;
- (void)streamDidStop:(OSActivityStream *)arg1;
- (void)streamDidFail:(OSActivityStream *)arg1 error:(NSError *)arg2;
- (void)streamDidStart:(OSActivityStream *)arg1;
@end

@protocol SourceControlHostedAccount <DVTSourceControlAccount>
@property(nonatomic, readonly) BOOL onDefaultHost;
@property(nonatomic, readonly) NSString *sshUsername;
@property(nonatomic, readonly) NSString *username;
@property(nonatomic, readonly) NSString *otpKeychainIdentifier;
@property(nonatomic, retain) DVTSourceControlSSHKeysAuthenticationStrategy *sshKeysAuthenticationStrategy;
@property(nonatomic, retain) DVTSourceControlBasicAuthenticationStrategy *basicAuthenticationStrategy;
@end

@protocol XCTDaemonControlSessionDelegate <XCTDaemonSessionDelegate>
- (void)daemonControlSession:(XCTDaemonControlSession *)arg1 didReceiveDebugLogMessage:(NSString *)arg2;
- (void)daemonControlSession:(XCTDaemonControlSession *)arg1 didReceiveCrashReportData:(NSData *)arg2 fileName:(NSString *)arg3;
@end

@protocol XCTDaemonSessionDelegate <NSObject>

@optional
- (void)daemonSessionDidDisconnect:(XCTDaemonSession *)arg1;
@end

@protocol XCTDebugLogDelegate <NSObject>
- (void)logDebugMessage:(NSString *)arg1;
@end

@protocol XCTTestRunnerSessionDelegate <XCTDaemonSessionDelegate>
- (void)testRunnerSession:(XCTTestRunnerSession *)arg1 didReceiveDebugLogMessage:(NSString *)arg2;
- (void)testRunnerSession:(XCTTestRunnerSession *)arg1 didReceiveLogMessage:(NSString *)arg2;
- (NSNumber *)testRunnerSession:(XCTTestRunnerSession *)arg1 progressForLaunchWithToken:(id <NSSecureCoding><NSCopying><NSObject>)arg2 error:(id *)arg3;
- (BOOL)testRunnerSession:(XCTTestRunnerSession *)arg1 terminateProcessWithToken:(id <NSSecureCoding><NSCopying><NSObject>)arg2 error:(id *)arg3;
- (void)testRunnerSession:(XCTTestRunnerSession *)arg1 launchProcessWithParameters:(XCTProcessLaunchParameters *)arg2 completion:(void (^)(id <NSSecureCoding><NSCopying><NSObject>, NSError *))arg3;
- (void)testRunnerSession:(XCTTestRunnerSession *)arg1 testCase:(NSString *)arg2 method:(NSString *)arg3 didMeasureMetric:(NSDictionary *)arg4 sourceLocation:(XCTSourceLocation *)arg5;
- (void)testRunnerSession:(XCTTestRunnerSession *)arg1 testCase:(NSString *)arg2 method:(NSString *)arg3 didFinishActivity:(XCActivityRecord *)arg4;
- (void)testRunnerSession:(XCTTestRunnerSession *)arg1 testCase:(NSString *)arg2 method:(NSString *)arg3 willStartActivity:(XCActivityRecord *)arg4;
- (void)testRunnerSession:(XCTTestRunnerSession *)arg1 testCase:(NSString *)arg2 method:(NSString *)arg3 didStallOnMainThreadAtSourceLocation:(XCTSourceLocation *)arg4;
- (void)testRunnerSession:(XCTTestRunnerSession *)arg1 testCaseDidFinishForTestClass:(NSString *)arg2 method:(NSString *)arg3 status:(NSString *)arg4 duration:(double)arg5;
- (void)testRunnerSession:(XCTTestRunnerSession *)arg1 testCaseDidFailForTestClass:(NSString *)arg2 method:(NSString *)arg3 failureMessage:(NSString *)arg4 sourceLocation:(XCTSourceLocation *)arg5;
- (void)testRunnerSession:(XCTTestRunnerSession *)arg1 testCaseDidStartForTestClass:(NSString *)arg2 method:(NSString *)arg3;
- (void)testRunnerSession:(XCTTestRunnerSession *)arg1 testSuite:(NSString *)arg2 didFinishAt:(NSString *)arg3 runCount:(unsigned long long)arg4 failureCount:(unsigned long long)arg5 unexpectedFailureCount:(unsigned long long)arg6 testDuration:(double)arg7 totalDuration:(double)arg8;
- (void)testRunnerSession:(XCTTestRunnerSession *)arg1 testSuite:(NSString *)arg2 didStartAt:(NSString *)arg3;
- (void)testRunnerSession:(XCTTestRunnerSession *)arg1 initializationForUITestingDidFailWithError:(NSError *)arg2;
- (void)testRunnerSessionDidStartInitializingForUITesting:(XCTTestRunnerSession *)arg1;
- (void)testRunnerSessionDidFinishExecutingTests:(XCTTestRunnerSession *)arg1;
- (void)testRunnerSessionDidStartExecutingTests:(XCTTestRunnerSession *)arg1;
- (void)testRunnerSessionDidDisconnect:(XCTTestRunnerSession *)arg1;
- (void)testRunnerSession:(XCTTestRunnerSession *)arg1 didFailInitializationWithError:(NSError *)arg2;
- (void)testRunnerSessionDidBecomeReady:(XCTTestRunnerSession *)arg1;
- (void)testRunnerSessionDidAcquireConnection:(XCTTestRunnerSession *)arg1;
@end

@protocol _TtPs9AnyObject_
@end

@interface IDEManageCertificatesItem : NSObject
{
    BOOL _isValid;
    NSString *_serialNumber;
    NSString *_creatorEmail;
    DVTPortalCertificateType *_type;
    DVTPortalCertificate *_portalCertificate;
    DVTSigningCertificate *_localCertificate;
    NSString *_name;
    unsigned long long _state;
    NSString *_creator;
    NSDate *_dateCreated;
}

@property(retain, nonatomic) NSDate *dateCreated; // @synthesize dateCreated=_dateCreated;
@property(retain, nonatomic) NSString *creator; // @synthesize creator=_creator;
@property(nonatomic) unsigned long long state; // @synthesize state=_state;
@property(retain, nonatomic) NSString *name; // @synthesize name=_name;
@property(retain, nonatomic) DVTSigningCertificate *localCertificate; // @synthesize localCertificate=_localCertificate;
@property(retain, nonatomic) DVTPortalCertificate *portalCertificate; // @synthesize portalCertificate=_portalCertificate;
@property(retain, nonatomic) DVTPortalCertificateType *type; // @synthesize type=_type;
@property(retain, nonatomic) NSString *creatorEmail; // @synthesize creatorEmail=_creatorEmail;
@property(readonly, nonatomic) NSString *serialNumber; // @synthesize serialNumber=_serialNumber;
- (void).cxx_destruct;
- (unsigned long long)_stateForPortalCertificate:(id)arg1 localCertificate:(id)arg2;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
- (void)updateWithPortalCertificate:(id)arg1 localCertificate:(id)arg2;
- (id)initWithSerialNumber:(id)arg1 certificateType:(id)arg2;

@end

@interface IDEIssueLogRecordsGroup : NSObject
{
    NSMutableArray *_logRecords;
}

+ (void)initialize;
- (void).cxx_destruct;
- (void)removeLogsForIssues:(id)arg1;
- (void)addLogsForIssues:(id)arg1;
- (id)init;

// Remaining properties
@property(copy) NSArray *logRecords; // @dynamic logRecords;
@property(readonly, copy) NSMutableArray *mutableLogRecords; // @dynamic mutableLogRecords;

@end

@interface IDEDistributionExportStep : NSObject
{
    NSFileManager *_fileManager;
}

+ (void)initialize;
- (void).cxx_destruct;
- (BOOL)_exportPath:(id)arg1 toPath:(id)arg2 context:(id)arg3 error:(id *)arg4;
- (BOOL)_exportToDirectory:(id)arg1 withContext:(id)arg2 error:(id *)arg3;
- (BOOL)exportToDirectory:(id)arg1 removeTemporaryFiles:(BOOL)arg2 withContext:(id)arg3 error:(id *)arg4;
- (id)fileManager;

@end

@interface IDEDistributionPackageExportStep : IDEDistributionExportStep
{
}

- (BOOL)_exportToDirectory:(id)arg1 withContext:(id)arg2 error:(id *)arg3;
- (BOOL)writeSummaryForContext:(id)arg1 toURL:(id)arg2 error:(id *)arg3;

@end

@interface IDEDistributionArchiveExportStep : IDEDistributionExportStep
{
}

- (BOOL)_exportToDirectory:(id)arg1 withContext:(id)arg2 error:(id *)arg3;

@end

@interface IDEDistributionBuiltProductsExportStep : IDEDistributionExportStep
{
}

- (BOOL)_exportToDirectory:(id)arg1 withContext:(id)arg2 error:(id *)arg3;

@end

@interface IDEDistributionApplicationExportStep : IDEDistributionExportStep
{
}

- (BOOL)_exportToDirectory:(id)arg1 withContext:(id)arg2 error:(id *)arg3;

@end

@interface IDEProductType : NSObject
{
}

+ (BOOL)buildableProductIsWatchAppExtension:(id)arg1;
+ (BOOL)buildableProductIsWatchApp:(id)arg1;
+ (BOOL)buildableProductIsAppExtension:(id)arg1;
+ (id)_expandedPlatformForBuildableProduct:(id)arg1;
+ (id)platformProductTypeOfBuildable:(id)arg1;
+ (id)productTypeForIdentifier:(id)arg1 platform:(id)arg2;
- (long long)provisioningProfileSupport;
- (BOOL)willEmbedRunSanitizerLibraries;
- (BOOL)runsDirectlyOnProxy;
- (BOOL)runsOnProxy;
- (BOOL)installsOnProxy;
- (BOOL)shouldAutocreateSchemes;
- (BOOL)isWatch1AppExtension;
- (BOOL)isWatch2AppExtension;
- (BOOL)isWatchAppExtension;
- (BOOL)isWatch1Application;
- (BOOL)isWatch2Application;
- (BOOL)isWatchApplication;
- (BOOL)isAppExtension;
- (BOOL)isApplication;
- (BOOL)isKindOfProductType:(id)arg1;
@property(readonly) IDEProductType *superType;
@property(readonly) DVTPlatform *platform;
@property(readonly) NSString *localizedDescription;
@property(readonly) NSString *name;
@property(readonly) NSString *identifier;
- (id)debugDescription;

@end

@interface IDEAbstractProductType : NSObject
{
}

+ (BOOL)productTypeIdentifierIsMessagesExtension:(id)arg1;
+ (BOOL)productTypeIdentifierIsTodayExtension:(id)arg1;
+ (BOOL)productTypeIdentifierIsIntentExtensionFamily:(id)arg1;
+ (BOOL)productTypeIdentifierIsWatch1Extension:(id)arg1;
+ (BOOL)productTypeIdentifierIsWatch2Extension:(id)arg1;
+ (BOOL)productTypeIdentifierIsWatch1Application:(id)arg1;
+ (BOOL)productTypeIdentifierIsWatch2Application:(id)arg1;
+ (BOOL)productTypeIdentifierIsWatchExtension:(id)arg1;
+ (BOOL)productTypeIdentifierIsWatchApp:(id)arg1;

@end

@interface IDEWatchpoint : IDEBreakpoint
{
    NSString *_expression;
    NSString *_variableName;
    unsigned long long _address;
}

+ (id)_displayStringForAddress:(unsigned long long)arg1;
+ (id)keyPathsForValuesAffectingDisplayName;
+ (id)keyPathsForValuesAffectingHexAddress;
@property unsigned long long address; // @synthesize address=_address;
@property(readonly) NSString *variableName; // @synthesize variableName=_variableName;
@property(readonly) NSString *expression; // @synthesize expression=_expression;
- (void).cxx_destruct;
- (id)accessibilityDescription;
- (id)displayName;
@property(readonly) NSString *hexAddress;
- (id)initWithExpression:(id)arg1 variableName:(id)arg2;

@end

@interface IDEWatchpointNotificationInfo : NSObject
{
    IDEWatchpoint *_watchpoint;
    NSString *_watchpointID;
    NSString *_expression;
    NSString *_oldValue;
    NSString *_newValue;
    NSString *_thread;
}

@property(readonly) NSString *thread; // @synthesize thread=_thread;
@property(readonly) NSString *newValue; // @synthesize newValue=_newValue;
@property(readonly) NSString *oldValue; // @synthesize oldValue=_oldValue;
@property(readonly) NSString *expression; // @synthesize expression=_expression;
@property(readonly) NSString *watchpointID; // @synthesize watchpointID=_watchpointID;
@property(readonly) IDEWatchpoint *watchpoint; // @synthesize watchpoint=_watchpoint;
- (void).cxx_destruct;
- (id)consoleOutputStyleDisplayString;
- (id)titleStyleDisplayString;
- (id)initWithWatchpoint:(id)arg1 watchpointID:(id)arg2 expression:(id)arg3 oldValue:(id)arg4 newValue:(id)arg5 thread:(id)arg6;

@end

@interface IDEDistributionManifestStep : IDEDistributionStep
{
}

+ (id)propertyListForContext:(id)arg1;
+ (id)availableOptionsForPropertyList;
- (id)providedOutputContextPropertyNames;
- (id)requiredInputContextPropertyNames;
- (BOOL)loadFromPropertyList:(id)arg1 error:(id *)arg2;

@end

@interface IDEPlaygroundLoggerStructure : NSObject <IDEPlaygroundLoggerLogEntry>
{
    NSString *_name;
    unsigned long long _structureType;
    NSString *_typeName;
    NSString *_summary;
    unsigned long long _totalEntriesCount;
    NSArray *_logEntries;
}

@property(readonly, copy) NSArray *logEntries; // @synthesize logEntries=_logEntries;
@property(readonly) unsigned long long totalEntriesCount; // @synthesize totalEntriesCount=_totalEntriesCount;
@property(readonly, copy) NSString *summary; // @synthesize summary=_summary;
@property(readonly, copy) NSString *typeName; // @synthesize typeName=_typeName;
@property(readonly) unsigned long long structureType; // @synthesize structureType=_structureType;
@property(readonly, copy) NSString *name; // @synthesize name=_name;
- (void).cxx_destruct;
@property(readonly, copy) NSString *description;
- (id)initWithName:(id)arg1 structureType:(unsigned long long)arg2 typeName:(id)arg3 summary:(id)arg4 totalEntriesCount:(unsigned long long)arg5 logEntries:(id)arg6;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IDEDeviceAppDataReference : NSObject <DVTXMLUnarchiving>
{
    NSString *_resolvedPath;
    NSString *_appDataBundleId;
    NSString *_appDataDownloadDate;
}

@property(copy) NSString *appDataDownloadDate; // @synthesize appDataDownloadDate=_appDataDownloadDate;
@property(copy) NSString *appDataBundleId; // @synthesize appDataBundleId=_appDataBundleId;
@property(copy) NSString *resolvedPath; // @synthesize resolvedPath=_resolvedPath;
- (void).cxx_destruct;
- (void)dvt_encodeRelationshipsWithXMLArchiver:(id)arg1 version:(id)arg2;
- (void)setAppDataDownloadDateFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setAppDataBundleIdFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setResolvedPathFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)dvt_encodeAttributesWithXMLArchiver:(id)arg1 version:(id)arg2;
- (id)initFromXMLUnarchiver:(id)arg1 archiveVersion:(float)arg2;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IDEBreakpointBucket : NSObject <DVTXMLUnarchiving, DVTInvalidation>
{
    DVTCustomDataSpecifier *_archivingDataSpecifier;
    NSString *_archivingContainerItemBaseStandardizedPathString;
    NSMutableArray *_breakpoints;
    BOOL _currentlyDecoding;
    int _type;
    IDEContainer<DVTCustomDataStoring> *_archivingContainer;
    NSString *_displayName;
}

+ (id)keyPathsForValuesAffectingDisplayName;
+ (id)keyPathsForValuesAffectingShared;
+ (id)userGlobalBucket:(id *)arg1;
+ (void)initialize;
@property(copy, nonatomic) NSString *displayName; // @synthesize displayName=_displayName;
@property(retain) IDEContainer<DVTCustomDataStoring> *archivingContainer; // @synthesize archivingContainer=_archivingContainer;
@property(readonly) int type; // @synthesize type=_type;
- (void).cxx_destruct;
- (void)primitiveInvalidate;
- (void)addBreakpoints:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (id)_breakpointArchivingProxiesArray;
- (void)dvt_encodeRelationshipsWithXMLArchiver:(id)arg1 version:(id)arg2;
- (void)dvt_encodeAttributesWithXMLArchiver:(id)arg1 version:(id)arg2;
- (id)initFromXMLUnarchiver:(id)arg1 archiveVersion:(float)arg2;
- (void)dvt_awakeFromXMLUnarchiver:(id)arg1;
- (id)_displayNameForWorkspace;
- (id)archivingContainerItemBaseStandardizedPathString;
- (void)_persistBreakpoints;
- (void)notifyPersistencyStateChanged;
- (BOOL)removeBreakpoint:(id)arg1;
- (void)addBreakpoint:(id)arg1;
@property(readonly, getter=isShared) BOOL shared;
- (BOOL)containsBreakpoint:(id)arg1;
- (id)initWithType:(int)arg1 archivingContainer:(id)arg2 error:(id *)arg3;
- (BOOL)_decodeFromContainer:(id *)arg1;
- (void)_encodeToContainer;
- (BOOL)_shouldEncodeDecode;
- (id)_archivingDataSpecifierWithName:(id)arg1;
@property(readonly) DVTCustomDataSpecifier *archivingDataSpecifier;
- (id)_archivingDataStore;
- (id)init;

// Remaining properties
@property(retain) NSArray *breakpoints; // @dynamic breakpoints;
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) NSMutableArray *mutableBreakpoints; // @dynamic mutableBreakpoints;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface IDEBuildCommandLineVerb : IDESchemeBasedCommandLineVerb
{
}

+ (id)synthesizedOverridingBuildPropertiesWithEnvironment:(id)arg1;
+ (int)performWithEnvironment:(id)arg1;
+ (id)optionDefinitionsWithEnvironment:(id)arg1;

@end

@interface IDEProvisioningUserAction : NSObject <DVTInvalidation>
{
    IDEProvisioningLedgerEntry *_ledgerEntry;
    BOOL _executing;
    BOOL _authorized;
    BOOL _wantsRepairRetriedOnFinish;
    BOOL _representsRepairFailure;
    id <IDEProvisioningUserActionDelegate> _delegate;
    IDEProvisioningRepairExecutionContext *_context;
    NSArray *_steps;
    NSError *_error;
}

+ (void)initialize;
+ (BOOL)supportsInvalidationPrevention;
@property(readonly, nonatomic) BOOL representsRepairFailure; // @synthesize representsRepairFailure=_representsRepairFailure;
@property(readonly, nonatomic) BOOL wantsRepairRetriedOnFinish; // @synthesize wantsRepairRetriedOnFinish=_wantsRepairRetriedOnFinish;
@property(nonatomic, getter=isAuthorized) BOOL authorized; // @synthesize authorized=_authorized;
@property(retain, nonatomic) NSError *error; // @synthesize error=_error;
@property(getter=isExecuting) BOOL executing; // @synthesize executing=_executing;
@property(copy, nonatomic) NSArray *steps; // @synthesize steps=_steps;
@property(readonly, nonatomic) IDEProvisioningRepairExecutionContext *context; // @synthesize context=_context;
@property(retain, nonatomic) id <IDEProvisioningUserActionDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
@property(readonly, nonatomic) BOOL supportsBatchAuthorization;
@property(readonly, nonatomic) NSString *executionMessage;
@property(readonly, nonatomic) NSString *userActionMessage;
@property(readonly, nonatomic) NSString *userActionTitle;
@property(readonly, nonatomic) NSString *userActionName;
- (BOOL)executeWithError:(id *)arg1;
- (BOOL)preflightWithError:(id *)arg1;
- (void)execute;
- (void)userDidAuthorizeAction;
- (void)primitiveInvalidate;
- (id)init;
- (id)initWithContext:(id)arg1 steps:(id)arg2;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface IDEBatchFindScopeChooserCompoundPredicate : IDEBatchFindScopePredicate
{
    NSArray *_namedPredicates;
    NSArray *_workspaceLocationPredicates;
}

+ (id)predicateWithPropertyListRepresentation:(id)arg1;
+ (id)propertyListIdentifier;
@property(readonly) NSArray *workspaceLocationPredicates; // @synthesize workspaceLocationPredicates=_workspaceLocationPredicates;
@property(readonly) NSArray *namedPredicates; // @synthesize namedPredicates=_namedPredicates;
- (void).cxx_destruct;
- (BOOL)isWorkspaceSpecific;
- (id)suggestedName;
- (CDUnknownBlockType)matcherBoundToWorkspace:(id)arg1;
- (BOOL)isEqualToScopePredicateWithIdenticalClass:(id)arg1;
- (unsigned long long)hash;
- (id)propertyListRepresentation;
- (id)initWithNamedPredicates:(id)arg1 workspaceLocationPredicates:(id)arg2;

@end

@interface IDEProvisioningContext : NSObject
{
    IDEProvisioningTeamManager *_teamManager;
    DVTProvisioningProfileManager *_profileManager;
    DVTSigningCertificateManager *_certificateManager;
    long long _automaticLocationStyle;
    long long _repairMode;
    long long _evaluationMode;
}

+ (id)newContextWithDefaultManagers;
@property(nonatomic) long long evaluationMode; // @synthesize evaluationMode=_evaluationMode;
@property(nonatomic) long long repairMode; // @synthesize repairMode=_repairMode;
@property(nonatomic) long long automaticLocationStyle; // @synthesize automaticLocationStyle=_automaticLocationStyle;
@property(retain, nonatomic) DVTSigningCertificateManager *certificateManager; // @synthesize certificateManager=_certificateManager;
@property(retain, nonatomic) DVTProvisioningProfileManager *profileManager; // @synthesize profileManager=_profileManager;
@property(retain, nonatomic) IDEProvisioningTeamManager *teamManager; // @synthesize teamManager=_teamManager;
- (void).cxx_destruct;
- (id)initWithTeamManager:(id)arg1 profileManager:(id)arg2 certificateManager:(id)arg3;

@end

@interface IDEActivityLogSectionRecorder : NSObject
{
    NSPointerArray *_parentRecorders;
    NSMutableArray *_childRecorders;
    IDEActivityLogSection *_section;
    NSMutableArray *_observations;
    NSMutableArray *_changesToPost;
    BOOL _hasScheduledChangePosting;
    NSMapTable *_rememberedMessagesByKey;
    struct _NSRange _mostRecentTextRange;
    CDUnknownBlockType _completionBlock;
    NSMutableDictionary *_severityToLimitTable;
    NSMutableDictionary *_severityToCountTable;
    struct os_unfair_lock_s _lock;
    BOOL _hasAddedAnyErrorMessages;
    // Error parsing type: AB, name: _hasRequestedStop
}

@property BOOL hasAddedAnyErrorMessages; // @synthesize hasAddedAnyErrorMessages=_hasAddedAnyErrorMessages;
- (void).cxx_destruct;
- (id)addObserverUsingBlock:(CDUnknownBlockType)arg1;
- (void)setCommandDetailDescription:(id)arg1;
- (void)addContextInfoMessageWithTitle:(id)arg1;
- (void)addAnalyzerResultStepMessageWithTitle:(id)arg1;
- (void)addAnalyzerResultMessageWithTitle:(id)arg1;
- (void)addNoticeMessageWithTitle:(id)arg1;
- (void)addWarningMessageWithTitle:(id)arg1;
- (void)addErrorMessageWithTitle:(id)arg1;
- (void)addTestFailureMessageWithTitle:(id)arg1;
- (void)stopRecordingWithInfo:(id)arg1;
- (void)stopRecordingWithInfo:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)_stopRecordingWithInfo:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (BOOL)hasRequestedStopRecording;
- (void)childRecorderDidStopRecording:(id)arg1;
- (void)addSubmessage:(id)arg1 toMessage:(id)arg2;
- (void)addMessage:(id)arg1 ignoreMessageLimit:(BOOL)arg2;
- (void)addMessage:(id)arg1;
- (struct _NSRange)mostRecentlyAppendedTextRange;
- (struct _NSRange)appendTextUTF8Bytes:(const char *)arg1 length:(unsigned long long)arg2;
- (struct _NSRange)appendTextFormat:(id)arg1;
- (struct _NSRange)appendText:(id)arg1;
- (void)addSubsection:(id)arg1;
- (BOOL)_attachToParentRecorderIfStillRecording:(id)arg1;
- (BOOL)hasReachedAllMessageLimits;
- (BOOL)hasReachedMessageLimitForSeverity:(unsigned long long)arg1;
- (void)setMessageLimit:(unsigned long long)arg1 forSeverity:(unsigned long long)arg2;
- (unsigned long long)messageLimitForSeverity:(unsigned long long)arg1;
- (void)setLocalizedResultString:(id)arg1;
- (void)setWasFetchedFromCache:(BOOL)arg1;
- (void)setIsQuiet:(BOOL)arg1;
- (id)addUnitTestSectionWithTitle:(id)arg1 location:(id)arg2;
- (id)addCommandSectionWithTitle:(id)arg1 detailDescription:(id)arg2;
- (id)addCommandSectionWithDomainType:(id)arg1 title:(id)arg2 detailDescription:(id)arg3;
- (void)noteDescendantLogSectionDidClose:(id)arg1 inSupersection:(id)arg2;
- (void)noteDescendantLogSection:(id)arg1 didAppendText:(id)arg2;
- (void)noteDescendantLogSection:(id)arg1 didAddSubsection:(id)arg2;
- (void)handleChangeEvent:(id)arg1;
- (void)setRememberedMessage:(id)arg1 forKey:(id)arg2;
- (id)rememberedMessageForKey:(id)arg1;
- (void)addCompletionBlock:(CDUnknownBlockType)arg1;
- (id)section;
- (void)_performOrderedAsyncBlock:(CDUnknownBlockType)arg1;
- (id)initWithLogSection:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface IDEActivityLogSectionObservation : NSObject <DVTCancellable>
{
    CDUnknownBlockType _block;
}

+ (id)sharedNullObservation;
- (void).cxx_destruct;
@property(readonly, copy) NSString *description;
- (void)cancel;
@property(readonly, getter=isCancelled) BOOL cancelled;
- (CDUnknownBlockType)block;
- (id)init;
- (id)initWithBlock:(CDUnknownBlockType)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IDEProvisioningRepair : NSObject <DVTInvalidation, IDEProvisioningUserActionDelegate>
{
    IDEProvisioningLedgerEntry *_ledgerEntry;
    DVTDispatchLock *_userActionLock;
    BOOL _wantsDiagnoseProblemLedgerEntry;
    BOOL _executing;
    IDEProvisioningUserAction *_userAction;
    id <IDEProvisioningRepairDelegate> _delegate;
    IDEProvisioningRepairContext *_context;
    NSArray *_steps;
    NSError *_error;
}

+ (void)initialize;
@property(retain, nonatomic) NSError *error; // @synthesize error=_error;
@property(getter=isExecuting) BOOL executing; // @synthesize executing=_executing;
@property(copy, nonatomic) NSArray *steps; // @synthesize steps=_steps;
@property(readonly, nonatomic) IDEProvisioningRepairContext *context; // @synthesize context=_context;
@property(readonly, nonatomic) id <IDEProvisioningRepairDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)userAction:(id)arg1 didFailWithError:(id)arg2;
- (void)userActionDidFinish:(id)arg1;
- (void)userActionDidBegin:(id)arg1;
- (void)userActionWasAuthorized:(id)arg1;
- (void)_closeLedgerEntriesWithError:(id)arg1;
- (void)_clearUserActionAndInvalidate:(BOOL)arg1;
- (void)_waitOnUserAction:(id)arg1;
@property(retain, nonatomic) IDEProvisioningUserAction *userAction; // @synthesize userAction=_userAction;
@property(readonly, nonatomic, getter=isWaitingForUserAction) BOOL waitingForUserAction;
- (void)_repairDidFinishWithUserAction:(id)arg1 error:(id)arg2;
- (id)_executionDiagnosticLedgerEntry;
- (void)_executeSteps:(id)arg1;
- (void)execute;
- (void)primitiveInvalidate;
@property(readonly, nonatomic) id <IDERepairable> repairable;
@property(readonly, copy) NSString *description;
- (id)initWithDelegate:(id)arg1 context:(id)arg2;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface IDEDistributionMethodInAppPurchaseContent : IDEDistributionMethodAppStore
{
}

- (id)packagingStepIdentifier;
- (id)installerCertificateKind;
- (id)certificateKind;
- (long long)wantsProvisioningProfiles;
- (_Bool)supportsDistributionOfArchive:(id)arg1;

@end

@interface IDEDistributionMethodInAppPurchaseContentSubmit : IDEDistributionMethodInAppPurchaseContent
{
}

- (id)orderedDistributionStepClassNames;
- (id)shortTitle;
- (id)subtitle;
- (id)title;
- (int)supportedTask;
- (double)sortOrder;

@end

@interface IDEDistributionMethodInAppPurchaseContentValidate : IDEDistributionMethodInAppPurchaseContent
{
}

- (id)orderedDistributionStepClassNames;
- (id)shortTitle;
- (int)supportedTask;
- (double)sortOrder;

@end

@interface IDEDistributionMethodInAppPurchaseContentPackage : IDEDistributionMethodExport
{
}

- (id)packagingStepIdentifier;
- (id)installerCertificateKind;
- (id)certificateKind;
- (long long)wantsProvisioningProfiles;
- (id)exportStepName;
- (id)orderedDistributionStepClassNames;
- (id)shortTitle;
- (id)subtitle;
- (id)title;
- (id)commandLineName;
- (_Bool)supportsDistributionOfArchive:(id)arg1;
- (double)sortOrder;

@end

@interface IDEFolderCore : IDEContainerCore <IDEFolderCore>
{
}


// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;
@end

@interface IDEExceptionBreakpoint : IDEBreakpoint
{
    int _scope;
    int _stopOnStyle;
    NSString *_exceptionName;
}

+ (BOOL)isAllObjectiveCExceptionsBreakpoint:(id)arg1;
+ (BOOL)isAllExceptionsBreakpoint:(id)arg1;
+ (BOOL)isCPPOrAllExceptionBreakpoint:(id)arg1;
+ (BOOL)isCPPExceptionBreakpoint:(id)arg1;
+ (id)keyPathsForValuesAffectingDisplayName;
+ (id)propertiesAffectingPersistenceState;
@property(copy) NSString *exceptionName; // @synthesize exceptionName=_exceptionName;
@property int stopOnStyle; // @synthesize stopOnStyle=_stopOnStyle;
@property int scope; // @synthesize scope=_scope;
- (void).cxx_destruct;
- (void)dvt_encodeRelationshipsWithXMLArchiver:(id)arg1 version:(id)arg2;
- (void)dvt_encodeAttributesWithXMLArchiver:(id)arg1 version:(id)arg2;
- (id)initFromXMLUnarchiver:(id)arg1 archiveVersion:(float)arg2;
- (void)dvt_awakeFromXMLUnarchiver:(id)arg1;
- (id)accessibilityDescription;
- (BOOL)locationsProvideAdditionalInformation;
- (BOOL)matchesAllExceptionsInScope;
- (id)description;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)displayName;
- (id)init;

@end

@interface IDEDistributionAppThinningPlistStep : IDEDistributionProcessingStep
{
}

+ (_Bool)runsPerThinningVariant;
- (_Bool)runWithError:(id *)arg1;
- (_Bool)shouldSkip;
- (id)providedOutputContextPropertyNames;
- (id)requiredInputContextPropertyNames;
- (id)name;

@end

@interface _DVTDeviceIneligibilityErrorDetails : NSObject
{
    NSString *_token;
    NSString *_errorDescription;
    NSString *_suggestion;
}

@property(retain, nonatomic) NSString *suggestion; // @synthesize suggestion=_suggestion;
@property(retain, nonatomic) NSString *errorDescription; // @synthesize errorDescription=_errorDescription;
@property(retain, nonatomic) NSString *token; // @synthesize token=_token;
- (void).cxx_destruct;

@end

@interface IDEProvisioningLedger : NSObject
{
    NSMutableArray *_entries;
    id <IDEProvisioningLedgerDelegate> _delegate;
}

@property(nonatomic) __weak id <IDEProvisioningLedgerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)provisioningLedgerEntryDidClose:(id)arg1 withError:(id)arg2;
- (void)provisioningLedgerEntry:(id)arg1 didRecordDetails:(id)arg2;
- (void)provisioningLedgerEntry:(id)arg1 didCloseSubentry:(id)arg2 withError:(id)arg3;
- (void)provisioningLedgerEntry:(id)arg1 didOpenSubentry:(id)arg2;
- (id)openLedgerEntryForRepresentedObject:(id)arg1 logAspect:(id)arg2;
- (id)init;

@end

@interface IDEProvisioningLedgerEntry : NSObject
{
    _Bool _isClosed;
    NSMutableArray *_subentries;
    NSMutableString *_details;
    id <_IDEProvisioningLedgerEntryDelegate> _delegate;
    IDEProvisioningLogDVTLogAspectListener *_logAspectListener;
    IDEProvisioningLedger *_ledger;
    IDEProvisioningLedgerEntry *_parent;
    id _representedObject;
    DVTLogAspect *_logAspect;
    NSString *_title;
}

@property(readonly, nonatomic) NSString *details; // @synthesize details=_details;
@property(readonly, nonatomic) NSString *title; // @synthesize title=_title;
@property(readonly, nonatomic) DVTLogAspect *logAspect; // @synthesize logAspect=_logAspect;
@property(nonatomic) __weak id representedObject; // @synthesize representedObject=_representedObject;
@property(nonatomic) __weak IDEProvisioningLedgerEntry *parent; // @synthesize parent=_parent;
@property(nonatomic) __weak IDEProvisioningLedger *ledger; // @synthesize ledger=_ledger;
- (void).cxx_destruct;
- (void)provisioningLedgerEntry:(id)arg1 didRecordDetails:(id)arg2;
- (void)provisioningLedgerEntryDidClose:(id)arg1 withError:(id)arg2;
- (void)provisioningLedgerEntry:(id)arg1 didCloseSubentry:(id)arg2 withError:(id)arg3;
- (void)provisioningLedgerEntry:(id)arg1 didOpenSubentry:(id)arg2;
- (void)setDelegate:(id)arg1;
- (id)delegate;
- (void)recordDetails:(id)arg1;
- (id)openSubentryWithTitle:(id)arg1 representedObject:(id)arg2;
- (_Bool)closed;
- (void)closeWithError:(id)arg1;
- (void)close;
- (id)initWithLedger:(id)arg1 representedObject:(id)arg2 logAspect:(id)arg3 title:(id)arg4;

@end

@interface IDEDistributionMethodStep : IDEDistributionStep
{
}

+ (id)propertyListForContext:(id)arg1;
+ (id)distributionMethodForSameAsArchiveWithAvailableMethods:(id)arg1 existingCertificateInfo:(CDUnknownBlockType)arg2 existingProfilePurposes:(CDUnknownBlockType)arg3 fallbackMethod:(id)arg4 logAspect:(id)arg5;
+ (id)distributionMethodForSameAsArchive:(id)arg1 contentPath:(id)arg2 task:(int)arg3 logAspect:(id)arg4;
+ (id)keyPathsForValuesDistributionTask;
+ (id)keyPathsForValuesDistributionMethod;
+ (id)availableOptionsForPropertyList;
- (void)setDistributionTask:(id)arg1;
@property(readonly) NSNumber *distributionTask;
@property(retain) IDEDistributionMethod *distributionMethod;
@property(readonly) NSArray *availableDistributionMethods;
- (id)providedOutputContextPropertyNames;
- (id)requiredInputContextPropertyNames;
- (BOOL)loadFromPropertyList:(id)arg1 error:(id *)arg2;

@end

@interface IDELocalizationWorkAddFileReference : IDELocalizationWorkContext
{
    IDEContainer<IDELocalizedContainer> *_container;
    IDEGroup<IDELocalizedGroup> *_group;
    DVTLocale *_locale;
    DVTFilePath *_filePath;
}

@property(copy, nonatomic) DVTFilePath *filePath; // @synthesize filePath=_filePath;
@property(copy, nonatomic) DVTLocale *locale; // @synthesize locale=_locale;
@property(retain, nonatomic) IDEGroup<IDELocalizedGroup> *group; // @synthesize group=_group;
@property(retain, nonatomic) IDEContainer<IDELocalizedContainer> *container; // @synthesize container=_container;
- (void).cxx_destruct;
- (void)primitiveInvalidate;

@end

@interface IDEBuildIssueProvider : IDEIssueProvider
{
    NSMapTable *_blueprintToLatestLogSectionObserverMap;
    NSMapTable *_buildLogToLogNotificationObserverMap;
    NSMapTable *_blueprintToLatestBuildLogSectionMap;
    NSMapTable *_blueprintToLogRecordsMap;
    NSMapTable *_blueprintToIssuesForFileMap;
    NSMapTable *_blueprintToAuxiliaryFilesForFileMap;
    NSMapTable *_haveRemovedIssuesForFileInBlueprintMap;
    DVTObservingToken *_activeBuildOperationStateObserverToken;
    IDEBuildOperation *_activeBuildOperation;
    NSMutableSet *_pendingLogSections;
    IDELogStore *_logStore;
    DVTTimeSlicedMainThreadWorkQueue *_buildIssueChangesToPost;
}

+ (int)providerType;
+ (id)_backgroundScanningQueue;
+ (id)_backgroundLoadingQueue;
- (void).cxx_destruct;
- (id)ideModelObjectTypeIdentifier;
- (id)displayNameForIssueTypeIdentifier:(id)arg1;
- (void)_buildLogDidUpdateItems:(id)arg1 blueprint:(id)arg2;
- (void)_scanIssuesInLog:(id)arg1 forBlueprint:(id)arg2 intoArray:(id)arg3 usingSeenMessages:(id)arg4 withFileToIssuesMap:(id)arg5 fileToAuxFilesMap:(id)arg6;
- (void)_addIssueForMessage:(id)arg1 blueprint:(id)arg2 intoArray:(id)arg3 usingSeenMessages:(id)arg4 withFileToIssuesMap:(id)arg5 fileToAuxFilesMap:(id)arg6 wasFetchedFromCache:(BOOL)arg7;
- (void)startProviderSession;
- (void)_postBuildIssueChange:(id)arg1;
- (void)_asyncPostBuildIssueChanges:(CDUnknownBlockType)arg1;
- (void)_observeLogSection:(id)arg1 forBlueprint:(id)arg2 loadedFromLogStore:(BOOL)arg3;
- (void)_currentBuildOperationDidChange;
- (void)_blueprintsDidChange;
- (void)_reactToCleanBuildFolder;
- (void)_forgetBlueprint:(id)arg1;
- (void)_latestBuildLogDidChange;
- (void)_workspaceFinishedLoading;
- (void)primitiveInvalidate;
- (id)initWithIssueManager:(id)arg1 extension:(id)arg2;
- (BOOL)allowsExistingIssuesToBeCoalesced;
- (void)removeBlueprintFromIssuesCache:(id)arg1;
- (BOOL)shouldRemoveIssuesFromCacheForFile:(id)arg1 inBlueprint:(id)arg2;
- (id)removeIssuesFromCacheForFile:(id)arg1 inBlueprint:(id)arg2;
- (void)addAuxiliaryFiles:(id)arg1 toCacheForFile:(id)arg2 inBlueprint:(id)arg3;
- (void)addIssues:(id)arg1 toCacheForFile:(id)arg2 inBlueprint:(id)arg3;
- (id)latestLogRecordForBlueprint:(id)arg1;
- (void)removeAllLogRecordsForBlueprint:(id)arg1;
- (void)addLogRecord:(id)arg1 forBlueprint:(id)arg2;
- (id)logRecordsForBlueprint:(id)arg1;

@end

@interface IDEBuildIssueChange : NSObject
{
    int _type;
    NSArray *_issues;
    IDEIssueProviderSession *_session;
    id _providerContext;
    IDEContainer *_container;
    id <IDEBlueprint> _blueprint;
}

+ (id)setChangeWithIssues:(id)arg1 session:(id)arg2 forProviderContext:(id)arg3 container:(id)arg4 blueprint:(id)arg5;
+ (id)removeChangeWithIssues:(id)arg1 session:(id)arg2 forProviderContext:(id)arg3 container:(id)arg4 blueprint:(id)arg5;
+ (id)additionChangeWithIssues:(id)arg1 session:(id)arg2 forProviderContext:(id)arg3 container:(id)arg4 blueprint:(id)arg5;
@property(retain, nonatomic) id <IDEBlueprint> blueprint; // @synthesize blueprint=_blueprint;
@property(retain, nonatomic) IDEContainer *container; // @synthesize container=_container;
@property(retain, nonatomic) id providerContext; // @synthesize providerContext=_providerContext;
@property(retain, nonatomic) IDEIssueProviderSession *session; // @synthesize session=_session;
@property(retain, nonatomic) NSArray *issues; // @synthesize issues=_issues;
@property(nonatomic) int type; // @synthesize type=_type;
- (void).cxx_destruct;
- (id)initWithType:(int)arg1 session:(id)arg2 issues:(id)arg3 forProviderContext:(id)arg4 container:(id)arg5 blueprint:(id)arg6;

@end

@interface IDELaunchTestSchemeAction : IDESchemeAction
{
    NSMutableArray *_commandLineArgumentEntries;
    NSMutableArray *_environmentVariableEntries;
    BOOL _mallocStackLoggingSelected;
    BOOL _enableAddressSanitizer;
    BOOL _enableASanStackUseAfterReturn;
    BOOL _enableThreadSanitizer;
    BOOL _enableUBSanitizer;
    BOOL _enableMainThreadChecker;
    unsigned int _debugProcessAsUID;
    NSString *_selectedDebuggerIdentifier;
    NSString *_selectedLauncherIdentifier;
    NSString *_selectedMallocStackLoggingType;
    NSDictionary *_additionalOptionEntriesDict;
    NSString *_language;
    NSString *_region;
    long long _systemAttachmentLifetime;
    long long _userAttachmentLifetime;
    NSString *_selectedMallocStackLoggingTypeTooltip;
    NSString *_debugAsWhichUser;
}

+ (id)keyPathsForValuesAffectingDebugProcessAsUID;
+ (void)initialize;
@property(copy) NSString *debugAsWhichUser; // @synthesize debugAsWhichUser=_debugAsWhichUser;
@property(copy) NSString *selectedMallocStackLoggingTypeTooltip; // @synthesize selectedMallocStackLoggingTypeTooltip=_selectedMallocStackLoggingTypeTooltip;
@property long long userAttachmentLifetime; // @synthesize userAttachmentLifetime=_userAttachmentLifetime;
@property long long systemAttachmentLifetime; // @synthesize systemAttachmentLifetime=_systemAttachmentLifetime;
@property(copy, nonatomic) NSString *region; // @synthesize region=_region;
@property(copy, nonatomic) NSString *language; // @synthesize language=_language;
@property BOOL enableMainThreadChecker; // @synthesize enableMainThreadChecker=_enableMainThreadChecker;
@property BOOL enableUBSanitizer; // @synthesize enableUBSanitizer=_enableUBSanitizer;
@property BOOL enableThreadSanitizer; // @synthesize enableThreadSanitizer=_enableThreadSanitizer;
@property BOOL enableASanStackUseAfterReturn; // @synthesize enableASanStackUseAfterReturn=_enableASanStackUseAfterReturn;
@property BOOL enableAddressSanitizer; // @synthesize enableAddressSanitizer=_enableAddressSanitizer;
@property(readonly) NSDictionary *additionalOptionEntriesDict; // @synthesize additionalOptionEntriesDict=_additionalOptionEntriesDict;
@property(nonatomic) unsigned int debugProcessAsUID; // @synthesize debugProcessAsUID=_debugProcessAsUID;
@property(copy) NSString *selectedLauncherIdentifier; // @synthesize selectedLauncherIdentifier=_selectedLauncherIdentifier;
- (void).cxx_destruct;
- (long long)_getAttachmentLifetimeFromUTF8String:(id)arg1;
- (id)_setAttachmentLifetimeArchiverValue:(long long)arg1;
- (void)_setDisableMainThreadCheckerWithoutKVO;
- (void)setUserAttachmentLifetimeFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setSystemAttachmentLifetimeFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setRegionFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setLanguageFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setDisableMainThreadCheckerFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setEnableUBSanitizerFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setEnableThreadSanitizerFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setEnableASanStackUseAfterReturnFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setEnableAddressSanitizerFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)addAdditionalOptions:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)addEnvironmentVariables:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)addCommandLineArguments:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)dvt_encodeAttributesWithXMLArchiver:(id)arg1 version:(id)arg2;
- (void)dvt_awakeFromXMLUnarchiver:(id)arg1;
- (void)_updateSelectedMallocStackTooltip:(id)arg1;
- (void)_setSelectedMallocStackLoggingType:(id)arg1;
@property BOOL mallocStackLoggingSelected; // @synthesize mallocStackLoggingSelected=_mallocStackLoggingSelected;
@property(copy) NSString *selectedMallocStackLoggingType; // @synthesize selectedMallocStackLoggingType=_selectedMallocStackLoggingType;
@property(readonly) NSArray *availableMallocStackLoggingTypes;
- (id)environmentVariablesForBuildParameters:(id)arg1;
- (void)_modifyEnvironmentForMallocStackLogging:(id)arg1;
- (id)additionalOptions;
- (id)expandMacrosInString:(id)arg1 forBuildParameters:(id)arg2;
- (id)createAdditionalDiagnosticsDict;
@property(copy) NSString *selectedDebuggerIdentifier; // @synthesize selectedDebuggerIdentifier=_selectedDebuggerIdentifier;
- (id)initFromXMLUnarchiver:(id)arg1 archiveVersion:(float)arg2;
- (id)init;
- (void)_dvt_commonInit;

// Remaining properties
@property(copy) NSArray *commandLineArgumentEntries; // @dynamic commandLineArgumentEntries;
@property(copy) NSArray *environmentVariableEntries; // @dynamic environmentVariableEntries;
@property(readonly) NSMutableArray *mutableCommandLineArgumentEntries; // @dynamic mutableCommandLineArgumentEntries;
@property(readonly) NSMutableArray *mutableEnvironmentVariableEntries; // @dynamic mutableEnvironmentVariableEntries;

@end

@interface IDEDistributionIssue : NSObject
{
    int _severity;
    NSError *_error;
}

+ (id)issuesFromErrors:(id)arg1 withSeverity:(int)arg2;
+ (id)issuesFromITunesResponse:(id)arg1;
@property(readonly) NSError *error; // @synthesize error=_error;
@property(readonly) int severity; // @synthesize severity=_severity;
- (void).cxx_destruct;
- (id)description;
- (id)initWithSeverity:(int)arg1 error:(id)arg2;

@end

@interface IDEDistributionThinningVariant : NSObject <NSCopying>
{
}

+ (id)thinningVariantsForDeviceFamilies:(id)arg1;
+ (id)allocWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
@property(readonly) NSString *displayName;
@property(readonly) NSString *fileNameSuffix;

@end

@interface IDEDistributionThinningVariantUniversal : IDEDistributionThinningVariant
{
}

+ (id)singleton;
- (id)displayName;
- (id)fileNameSuffix;

@end

@interface IDEDistributionThinningVariantDeviceFamily : IDEDistributionThinningVariant
{
    NSString *_fileNameSuffix;
    NSString *_displayName;
    IDEIPAProcessorDeviceFamily *_deviceFamily;
}

@property(readonly) IDEIPAProcessorDeviceFamily *deviceFamily; // @synthesize deviceFamily=_deviceFamily;
- (id)displayName;
- (id)fileNameSuffix;
- (void).cxx_destruct;
- (id)description;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
- (id)initWithDeviceFamily:(id)arg1 andUniqueDisplayName:(id)arg2;

@end

@interface IDEDistributionOptionThinning : IDEDistributionOption
{
}

+ (id)propertyListForContext:(id)arg1;
+ (id)eligibleDeviceFamiliesWithContext:(id)arg1 error:(id *)arg2;
+ (id)availableOptionsForPropertyList;
- (id)eligibleDeviceFamiliesWithError:(id *)arg1;
- (id)providedOutputContextPropertyNames;
- (id)requiredInputContextPropertyNames;
- (BOOL)loadFromPropertyList:(id)arg1 error:(id *)arg2;

@end

@interface IDEProvisioningTryAgainUserAction : IDEProvisioningUserAction
{
}

+ (id)tryAgainUserActionWithContext:(id)arg1;
- (id)executionMessage;
- (BOOL)representsRepairFailure;
- (BOOL)wantsRepairRetriedOnFinish;
- (id)userActionMessage;
- (id)userActionTitle;
- (id)userActionName;

@end

@interface IDESourceControlTree : DVTModelTree
{
    IDESourceControlManager *_sourceControlManager;
    IDESourceControlExtension *_sourceControlExtension;
    NSString *_location;
    NSString *_name;
    BOOL _disallowLoadingChildren;
    NSString *_identifier;
    NSString *_cachedFirstRevision;
}

+ (unsigned long long)assertionBehaviorAfterEndOfEventForSelector:(SEL)arg1;
+ (void)initialize;
+ (id)treeLoadingModelObjectGraph;
@property(copy) NSString *cachedFirstRevision; // @synthesize cachedFirstRevision=_cachedFirstRevision;
@property(readonly) NSString *identifier; // @synthesize identifier=_identifier;
@property BOOL disallowLoadingChildren; // @synthesize disallowLoadingChildren=_disallowLoadingChildren;
@property(copy) NSString *location; // @synthesize location=_location;
@property(copy, nonatomic) NSString *name; // @synthesize name=_name;
@property(retain) IDESourceControlExtension *sourceControlExtension; // @synthesize sourceControlExtension=_sourceControlExtension;
@property(readonly) IDESourceControlManager *sourceControlManager; // @synthesize sourceControlManager=_sourceControlManager;
- (void).cxx_destruct;
- (id)copyRepository;
- (id)description;
- (void)setSourceControlExtension:(id)arg1 updateUserDefaults:(BOOL)arg2;
- (void)setName:(id)arg1 updateUserDefaults:(BOOL)arg2;
- (id)subclass_createRootNode;
- (void)primitiveInvalidate;
- (id)dictionaryRepresentation;
- (id)initWithDictionary:(id)arg1 sourceControlExtension:(id)arg2 sourceControlManager:(id)arg3;
- (id)initWithLocation:(id)arg1 sourceControlManager:(id)arg2;

// Remaining properties
@property(readonly) IDESourceControlTreeGroup *rootGroup; // @dynamic rootGroup;

@end

@interface IDESourceControlRepository : IDESourceControlTree <NSURLConnectionDelegate>
{
    NSURL *_URL;
    BOOL _authenticated;
    BOOL _shouldRetryAuthentication;
    BOOL _representsGitSVNBridge;
    BOOL _representsXcodeServiceHostedRepository;
    BOOL _enabled;
    NSString *_remoteName;
    NSString *_root;
    BOOL _passwordIsBeingLoaded;
    BOOL _ignoreKeychain;
    id <DVTSourceControlAccount> _account;
}

+ (id)keyPathsForValuesAffectingConnectionAddress;
@property BOOL ignoreKeychain; // @synthesize ignoreKeychain=_ignoreKeychain;
@property(retain) id <DVTSourceControlAccount> account; // @synthesize account=_account;
@property(readonly) NSString *root; // @synthesize root=_root;
@property BOOL representsGitSVNBridge; // @synthesize representsGitSVNBridge=_representsGitSVNBridge;
@property BOOL shouldRetryAuthentication; // @synthesize shouldRetryAuthentication=_shouldRetryAuthentication;
@property(nonatomic) BOOL authenticated; // @synthesize authenticated=_authenticated;
- (void).cxx_destruct;
- (id)children;
@property(readonly) BOOL isRemoteDistributedRepository;
- (id)ideModelObjectTypeIdentifier;
@property(copy) NSString *remoteName;
- (BOOL)isEqual:(id)arg1;
@property(retain) DVTSourceControlAuthenticationStrategy *authenticationStrategy;
@property(retain) NSURL *URL; // @synthesize URL=_URL;
- (void)setLocation:(id)arg1;
- (void)setSourceControlExtension:(id)arg1;
- (void)setSourceControlExtension:(id)arg1 updateUserDefaults:(BOOL)arg2;
@property BOOL representsXcodeServiceHostedRepository; // @synthesize representsXcodeServiceHostedRepository=_representsXcodeServiceHostedRepository;
- (void)setEnabled:(BOOL)arg1;
- (BOOL)enabled;
- (id)dictionaryRepresentation;
- (id)initWithDictionaryRepresentation:(id)arg1 sourceControlManager:(id)arg2 error:(id *)arg3;
- (id)initWithDictionary:(id)arg1 sourceControlExtension:(id)arg2 sourceControlManager:(id)arg3;
- (id)initWithLocation:(id)arg1 sourceControlManager:(id)arg2;
- (void)primitiveInvalidate;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IDESourceControlWorkingCopyConfiguration : NSObject
{
    NSMutableArray *_branches;
    DVTDispatchLock *_branchesLock;
    NSDate *_branchesInvalidationDate;
    IDESourceControlRepository *_repository;
    NSString *_name;
    NSString *_uniqueIdentifier;
    IDESourceControlExtension *_sourceControlExtension;
    DVTSourceControlBranchAndTagLocations *_branchAndTagLocations;
    NSString *_remoteDistributedOrigin;
}

@property(copy) NSString *remoteDistributedOrigin; // @synthesize remoteDistributedOrigin=_remoteDistributedOrigin;
@property(retain) DVTSourceControlBranchAndTagLocations *branchAndTagLocations; // @synthesize branchAndTagLocations=_branchAndTagLocations;
@property(retain) IDESourceControlExtension *sourceControlExtension; // @synthesize sourceControlExtension=_sourceControlExtension;
@property(readonly) NSString *uniqueIdentifier; // @synthesize uniqueIdentifier=_uniqueIdentifier;
@property(copy, nonatomic) NSString *name; // @synthesize name=_name;
@property(retain) IDESourceControlRepository *repository; // @synthesize repository=_repository;
- (void).cxx_destruct;
- (id)branchesForRemote:(id)arg1 withCompletionBlock:(CDUnknownBlockType)arg2;
- (id)branchesWithCompletionBlock:(CDUnknownBlockType)arg1;
- (void)_branchesWithToken:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)setBranches:(id)arg1;
@property(readonly) NSMutableArray *branches;
- (void)_automaticallyConfigureSVNLocationsForOrigin:(id)arg1 withToken:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (id)_searchRelativeLocation:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
@property(copy) NSString *relativeTagsLocation;
@property(copy) NSString *relativeTrunkLocation;
@property(copy) NSString *relativeBranchesLocation;
- (id)_stripBaseURLOrStartingSlash:(id)arg1;
- (id)tagsLocation;
- (id)trunkLocation;
- (id)branchesLocation;
- (id)_createBranchingURLWithRelativePath:(id)arg1;
- (id)remotesWithCompletionBlock:(CDUnknownBlockType)arg1;
- (id)description;
@property(readonly) BOOL needsConfiguring;
- (BOOL)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)dictionaryRepresentation;
- (id)initWithDictionary:(id)arg1 sourceControlManager:(id)arg2;
- (id)initWithName:(id)arg1 identifier:(id)arg2 sourceControlExtension:(id)arg3 relativeBranchesLocation:(id)arg4 relativeTrunkLocation:(id)arg5 relativeTagsLocation:(id)arg6 sourceControlManager:(id)arg7;
- (id)init;

@end

@interface IDESourceControlWorkingTree : IDESourceControlTree
{
    IDESourceControlWorkingCopyConfiguration *_wcc;
    IDESourceControlBranch *_currentBranch;
    long long _fileReferenceStatusProcessingQueueLockCount;
    NSOperationQueue *_fileReferenceStatusProcessingQueue;
    NSObject<OS_dispatch_queue> *_fileStatusScheduleQueue;
    unsigned long long _filesAndStatusOperationCount;
    id <DVTSourceControlCancellable> _filesAndStatusOperation;
    NSMutableArray *_itemsWithStatus;
    NSOperationQueue *_status_processing_queue;
    DVTFilePath *_filePath;
    NSString *_origin;
    BOOL _representsGitSVNBridge;
    BOOL _initialLocalStatusUpdateIsComplete;
    BOOL _initialServerStatusUpdateIsComplete;
    BOOL _needsUpgrade;
    BOOL _checkedForUpgrade;
    NSDate *_lastStatusUpdateDate;
}

@property(retain, nonatomic) NSDate *lastStatusUpdateDate; // @synthesize lastStatusUpdateDate=_lastStatusUpdateDate;
@property BOOL checkedForUpgrade; // @synthesize checkedForUpgrade=_checkedForUpgrade;
@property BOOL needsUpgrade; // @synthesize needsUpgrade=_needsUpgrade;
@property BOOL representsGitSVNBridge; // @synthesize representsGitSVNBridge=_representsGitSVNBridge;
@property(readonly) BOOL initialServerStatusUpdateIsComplete; // @synthesize initialServerStatusUpdateIsComplete=_initialServerStatusUpdateIsComplete;
@property(readonly) BOOL initialLocalStatusUpdateIsComplete; // @synthesize initialLocalStatusUpdateIsComplete=_initialLocalStatusUpdateIsComplete;
@property(retain) IDESourceControlWorkingCopyConfiguration *wcc; // @synthesize wcc=_wcc;
@property(readonly) NSString *origin; // @synthesize origin=_origin;
@property(copy) DVTFilePath *filePath; // @synthesize filePath=_filePath;
- (void).cxx_destruct;
- (void)invalidateServerStatus;
- (void)clearServerStatus;
- (void)invalidateLocalStatus;
- (void)clearLocalAndServerStatus;
- (void)clearStatusForItem:(id)arg1;
- (void)addItemWithStatus:(id)arg1;
- (void)mergeStatusOperationResults:(id)arg1 pathsWithRemoteStatus:(id)arg2 forLocalStatusOnly:(BOOL)arg3;
- (void)addNewItemsWithStatusWithResults:(id)arg1;
- (id)mutableItemsWithStatus;
@property(readonly) NSArray *itemsWithStatus; // @synthesize itemsWithStatus=_itemsWithStatus;
- (void)addUpdateFileReferenceStatueseBlock:(CDUnknownBlockType)arg1;
- (void)updateFileReferenceStatusesAndWaitForFinish:(BOOL)arg1;
- (void)blockUpdatingFileReferenceStatuses;
- (void)updateStatus:(BOOL)arg1 workspace:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (id)fileReferenceStatusProcessingQueue;
- (void)invalidateCurrentBranch;
- (id)switchToBranch:(id)arg1 inWorkspace:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (id)currentBranchWithCompletionBlock:(CDUnknownBlockType)arg1;
- (void)currentBranchWithToken:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)_preprocessBranchProcessing:(id)arg1 error:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (void)_processBranches:(id)arg1 error:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (void)automaticallyConfigureSVNLocationsWithToken:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
@property(readonly) BOOL isConfiguredForBranching;
- (id)itemForFilePath:(id)arg1;
- (BOOL)containsItemAtFilePath:(id)arg1;
- (id)subclass_createRootNode;
@property(readonly) NSDate *dataModificationDate;
@property(readonly) DVTFilePath *dataDirectory;
- (BOOL)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)dictionaryRepresentation;
- (id)description;
- (id)ideModelObjectTypeIdentifier;
@property(readonly) IDESourceControlBranch *currentBranch; // @synthesize currentBranch=_currentBranch;
@property(readonly) IDESourceControlRepository *repository;
- (void)setLocation:(id)arg1;
- (void)primitiveInvalidate;
- (void)_setOrigin:(id)arg1;
- (void)_updateWorkingTreeOrigin;
- (id)initWithDictionary:(id)arg1 repository:(id)arg2 sourceControlExtension:(id)arg3 sourceControlManager:(id)arg4;
- (id)initWithLocation:(id)arg1 sourceControlManager:(id)arg2;
- (id)_initWithLocation:(id)arg1 sourceControlManager:(id)arg2;

@end

@interface IDEProvisioningCompoundProfileIdentifier : NSObject <NSCopying>
{
    NSString *_teamID;
    NSString *_name;
}

+ (id)identifierWithName:(id)arg1 teamID:(id)arg2 profile:(id)arg3 error:(id *)arg4;
@property(retain, nonatomic) NSString *name; // @synthesize name=_name;
@property(retain, nonatomic) NSString *teamID; // @synthesize teamID=_teamID;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
- (id)description;
- (id)initWithProvisioningProfile:(id)arg1 error:(id *)arg2;
- (id)initWithPortalProfile:(id)arg1 error:(id *)arg2;

@end

@interface IDEDocumentIssueSummary : NSObject
{
    NSMutableArray *_vendedIssuesBySeqNum;
    unsigned long long _maxSeverity;
    NSMutableDictionary *_issuesIndexedByLineNumber;
    NSHashTable *_observers;
    unsigned long long _testFailureCount;
    unsigned long long _errorCount;
    unsigned long long _warningCount;
    unsigned long long _runtimeCount;
    unsigned long long _noticeCount;
    unsigned long long _analyzerResultCount;
    unsigned long long _fixItCount;
}

+ (id)keyPathsForValuesAffectingMaxSeverity;
@property(readonly) unsigned long long fixItCount; // @synthesize fixItCount=_fixItCount;
@property(readonly) unsigned long long analyzerResultCount; // @synthesize analyzerResultCount=_analyzerResultCount;
@property(readonly) unsigned long long noticeCount; // @synthesize noticeCount=_noticeCount;
@property(readonly) unsigned long long runtimeCount; // @synthesize runtimeCount=_runtimeCount;
@property(readonly) unsigned long long warningCount; // @synthesize warningCount=_warningCount;
@property(readonly) unsigned long long errorCount; // @synthesize errorCount=_errorCount;
@property(readonly) unsigned long long testFailureCount; // @synthesize testFailureCount=_testFailureCount;
@property(retain) NSHashTable *observers; // @synthesize observers=_observers;
@property(retain) NSMutableDictionary *issuesIndexedByLineNumber; // @synthesize issuesIndexedByLineNumber=_issuesIndexedByLineNumber;
@property(copy, nonatomic) NSArray *vendedIssuesBySeqNum; // @synthesize vendedIssuesBySeqNum=_vendedIssuesBySeqNum;
- (void).cxx_destruct;
@property(readonly) unsigned long long maxSeverity;
- (void)removeVendedIssuesBySeqNumAtIndexes:(id)arg1;
- (void)insertVendedIssuesBySeqNum:(id)arg1 atIndexes:(id)arg2;
- (void)removeObjectFromVendedIssuesBySeqNumAtIndex:(unsigned long long)arg1;
- (void)insertObject:(id)arg1 inVendedIssuesBySeqNumAtIndex:(unsigned long long)arg2;
- (id)init;

@end

@interface IDEIssueManager : NSObject <DVTInvalidation>
{
    NSMutableArray *_issueProviders;
    NSMapTable *_providerContextToProvisionInfoMap;
    NSMapTable *_issueToProviderContextMap;
    NSMutableArray *_issueGroups;
    NSMapTable *_identifierToGroupIndex;
    NSMapTable *_issueToGroupsIndex;
    NSMutableSet *_issuesThatWillBeRemoved;
    NSMutableArray *_vendedIssuesWithNoDocument;
    NSMutableSet *_issuesWithNoDocument;
    NSMutableArray *_documentURLsWithVendedIssues;
    NSMutableDictionary *_documentURLToIssueSummaryDict;
    NSHashTable *_allDocumentURLObservers;
    unsigned long long _nextIssueSequenceNumber;
    NSMapTable *_providerToSessionObservationToken;
    unsigned long long _nextGroupSequenceNumber;
    NSMapTable *_identifierToGroupSequenceNumberIndex;
    IDEIssueProviderSession *_lastSchemeActionSession;
    NSMutableSet *_lastSchemeActionIssues;
    id _issueFixedObserver;
    id _liveIssuesEnabledObserver;
    DVTTimeSlicedMainThreadWorkQueue *_buildableDependencyFinderQueue;
    IDEBuildParameters *_cachedBuildParamsForFindingBuildDependencies;
    NSMutableSet *_buildablesAlreadyCheckedForDependencies;
    NSHashTable *_cachedBlueprintsForShowingIssuesForActiveScheme;
    NSHashTable *_cachedBlueprintsForActiveScheme;
    NSHashTable *_cachedContainersForActiveScheme;
    int _currentIssueFilterStyle;
    id _issueFilterStyleObserver;
    id _schemeBuildablesObserver;
    DVTObservingToken *_activeSchemeObserver;
    DVTObservingToken *_runDestinationObserver;
    DVTObservingToken *_implicitDependenciesObserver;
    BOOL _liveIssuesEnabled;
    IDEWorkspace *_workspace;
    IDEIssueLogRecordsGroup *_issueLogRecordsGroup;
    unsigned long long _numberOfBuildtimeIssues;
    unsigned long long _numberOfRuntimeIssues;
}

+ (id)issueManagerLogAspect;
+ (id)_issueProviderInfo;
+ (void)_useDebugProviderExtensionPointWithIdentifier:(id)arg1;
+ (void)initialize;
@property unsigned long long numberOfRuntimeIssues; // @synthesize numberOfRuntimeIssues=_numberOfRuntimeIssues;
@property unsigned long long numberOfBuildtimeIssues; // @synthesize numberOfBuildtimeIssues=_numberOfBuildtimeIssues;
@property(readonly) IDEIssueLogRecordsGroup *issueLogRecordsGroup; // @synthesize issueLogRecordsGroup=_issueLogRecordsGroup;
@property(readonly, getter=areLiveIssuesEnabled) BOOL liveIssuesEnabled; // @synthesize liveIssuesEnabled=_liveIssuesEnabled;
@property(readonly) IDEWorkspace *workspace; // @synthesize workspace=_workspace;
- (void).cxx_destruct;
- (void)_containersOrBlueprintsUpdated;
- (id)_issuesForProviderContext:(id)arg1;
- (id)_providerContextToProvisionInfoMapForIssues:(id)arg1;
- (id)_unitTestIssueProvidersAccessor;
- (void)_validateGroupIdentifiers;
- (void)_updateVendedIssues;
- (void)_updateContainersAndBlueprintsForActiveScheme;
- (void)_findDependencyForBuildable:(id)arg1;
- (void)_updateIssueFilterStyle;
- (void)_needsUpdateInResponseToFilterChanges;
- (void)_coalescedUpdateInResponseToFilterChanges;
- (void)_hideIssues:(id)arg1;
- (void)_setIssues:(id)arg1 forProviderContext:(id)arg2 container:(id)arg3 blueprint:(id)arg4 runtimeGroupingObject:(id)arg5 session:(id)arg6;
- (void)_removeIssues:(id)arg1 forProviderContext:(id)arg2 session:(id)arg3;
- (void)_addIssues:(id)arg1 forProviderContext:(id)arg2 container:(id)arg3 blueprint:(id)arg4 runtimeGroupingObject:(id)arg5 session:(id)arg6 tryToCoalesce:(BOOL)arg7;
- (BOOL)_vendOnlyActiveSchemeIssues;
- (void)_retractIssues:(id)arg1;
- (void)_vendIssues:(id)arg1 container:(id)arg2 blueprint:(id)arg3 runtimeGroupingObject:(id)arg4 issueToGroupingObjectMap:(id)arg5 session:(id)arg6;
- (void)_setNumBuildtimeIssues:(unsigned long long)arg1 numRuntimeIssues:(unsigned long long)arg2;
- (id)_similarExistingIssueForIssue:(id)arg1;
- (id)_similarExistingIssueForIssue:(id)arg1 container:(id)arg2 blueprint:(id)arg3;
- (_Bool)_doesIssue:(id)arg1 fromContainer:(id)arg2 andBlueprint:(id)arg3 coalesceWithIssue:(id)arg4;
- (_Bool)_doesIssue:(id)arg1 coalesceWithIssue:(id)arg2;
- (id)_groupingObjectsForIssue:(id)arg1;
- (void)_rescindObserverToken:(id)arg1;
- (id)newIssueObserverForDocumentURL:(id)arg1 options:(unsigned long long)arg2 withHandlerBlock:(CDUnknownBlockType)arg3;
- (void)_notifyAllObserversOfDocumentURL:(id)arg1 isPrior:(BOOL)arg2;
- (void)_notifyObserver:(id)arg1 forURL:(id)arg2 isPrior:(BOOL)arg3;
- (id)issuesWithNoDocument;
- (id)issuesForDocumentURL:(id)arg1;
- (id)buildtimeIssuesWithNoDocument;
- (id)buildtimeIssuesForDocumentURL:(id)arg1;
- (id)_buildtimeIssuesFromIssues:(id)arg1;
- (unsigned long long)maxSeverityOfDocumentAtURL:(id)arg1;
- (unsigned long long)numberOfFixableDiagnosticItemsInDocumentAtURL:(id)arg1;
- (unsigned long long)numberOfAnalyzerResultsInDocumentAtURL:(id)arg1;
- (unsigned long long)numberOfNoticesInDocumentAtURL:(id)arg1;
- (unsigned long long)numberOfRuntimeIssuesInDocumentAtURL:(id)arg1;
- (unsigned long long)numberOfWarningsInDocumentAtURL:(id)arg1;
- (unsigned long long)numberOfErrorsInDocumentAtURL:(id)arg1;
- (unsigned long long)numberOfTestFailuresInDocumentAtURL:(id)arg1;
- (id)_documentIssueSummaryForURL:(id)arg1;
@property(readonly) NSArray *documentURLsWithIssues;
@property(readonly) NSArray *issueGroups;
- (void)_updateIssueProviders;
- (void)primitiveInvalidate;
- (id)initWithWorkspace:(id)arg1;
- (id)init;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) NSSet *lastSchemeActionIssues; // @dynamic lastSchemeActionIssues;
@property(readonly) NSMutableSet *mutableLastSchemeActionIssues; // @dynamic mutableLastSchemeActionIssues;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface IDEIssueManager_ByFileObserverToken : NSObject <DVTCancellable>
{
    IDEIssueManager *_issueManager;
    NSURL *_documentURL;
    unsigned long long _observingOptions;
    CDUnknownBlockType _observerBlock;
}

@property(readonly, copy) CDUnknownBlockType observerBlock; // @synthesize observerBlock=_observerBlock;
@property(readonly) unsigned long long observingOptions; // @synthesize observingOptions=_observingOptions;
@property(readonly) NSURL *documentURL; // @synthesize documentURL=_documentURL;
- (void).cxx_destruct;
- (void)cancel;
@property(readonly, getter=isCancelled) BOOL cancelled;
- (id)initWithIssueManager:(id)arg1 documentURL:(id)arg2 options:(unsigned long long)arg3 block:(CDUnknownBlockType)arg4;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface _IDEIssueProvisionInfo : NSObject
{
    NSMutableArray *_issues;
    id <IDEBlueprint> _blueprint;
    IDEContainer *_container;
    id <IDEIssueRuntimeGroupingObject> _runtimeGroupingObject;
    NSMapTable *_issueToGroupingObjectsMap;
    IDEIssueProviderSession *_session;
}

@property(readonly) IDEIssueProviderSession *session; // @synthesize session=_session;
@property(copy) NSMapTable *issueToGroupingObjectsMap; // @synthesize issueToGroupingObjectsMap=_issueToGroupingObjectsMap;
@property(readonly) __weak id <IDEIssueRuntimeGroupingObject> runtimeGroupingObject; // @synthesize runtimeGroupingObject=_runtimeGroupingObject;
@property(readonly) __weak IDEContainer *container; // @synthesize container=_container;
@property(readonly) __weak id <IDEBlueprint> blueprint; // @synthesize blueprint=_blueprint;
@property(readonly) NSMutableArray *_mutableIssues; // @synthesize _mutableIssues=_issues;
- (void).cxx_destruct;
- (void)removeIssues:(id)arg1;
- (void)addIssues:(id)arg1;
@property(readonly) NSArray *issues;
@property(readonly) IDEIssueProvider *issueProvider;
- (id)initWithBlueprint:(id)arg1 container:(id)arg2 runtimeGroupingObject:(id)arg3 issues:(id)arg4 session:(id)arg5;

@end

@interface IDEIndexDBConnection : IDEIndexDBSQLStream <DVTInvalidation>
{
    int _inUseCount;
    // Error parsing type: Ai, name: _collectionCount
    IDEIndexDatabase *_database;
    NSObject<OS_dispatch_queue> *_runQueue;
    struct sqlite3 *_dbHandle;
    CDUnknownBlockType _cancelCallback;
    long long _tempTableCount;
    NSMutableSet *_tempTables;
    BOOL _closing;
    void *_checkpointInfo;
}

+ (unsigned long long)assertionBehaviorForKeyValueObservationsAtEndOfEvent;
+ (unsigned long long)assertionBehaviorAfterEndOfEventForSelector:(SEL)arg1;
+ (void)initialize;
- (id)database;
- (void).cxx_destruct;
- (void)dealloc;
- (void)primitiveInvalidate;
- (void)close;
- (void)wait;
- (void)reportSQLiteError:(int)arg1 function:(id)arg2 message:(const char *)arg3 info:(id)arg4;
- (void)finalizeSQLiteStmt:(struct sqlite3_stmt **)arg1;
- (void)runSQLiteStmt:(struct sqlite3_stmt **)arg1 sql:(id)arg2 bindings:(CDUnknownBlockType)arg3 forEachRow:(CDUnknownBlockType)arg4 whenDone:(CDUnknownBlockType)arg5;
- (void)cancelWhen:(CDUnknownBlockType)arg1;
- (BOOL)shouldCancel;
- (void)shutdown;
- (void)runSQLite:(id)arg1;
- (void)willSubmitTransaction:(id)arg1;
- (void)explainQueryPlan:(id)arg1;
- (int)doSQLChanges:(id)arg1 withBindings:(CDUnknownBlockType)arg2;
- (void)doSQLQuery:(id)arg1 withBindings:(CDUnknownBlockType)arg2 forEachRow:(CDUnknownBlockType)arg3;
- (void)didDropTempTable:(id)arg1;
- (void)didCreateTempTable:(id)arg1;
- (id)newTempTableWithName:(id)arg1 schema:(id)arg2;
- (id)newTempTableWithSchema:(id)arg1;
- (id)newTempTableName;
- (void)doBlock:(CDUnknownBlockType)arg1;
- (id)dbConnection;
- (void)setAutoCheckpointThreshold:(int)arg1;
- (id)initWithDatabase:(id)arg1 create:(BOOL)arg2 backgroundPriority:(BOOL)arg3;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface IDEIndexSymbolWithOccurrenceCollection : IDEIndexSymbolCollection
{
}

- (id)instantiateRow:(struct sqlite3_stmt *)arg1;
- (id)tempTableSchema;

@end

@interface IDEPlaygroundPage : IDEPlaygroundPageCommon
{
}

+ (BOOL)isSourcesDirectorySubPath:(id)arg1;
+ (id)containerTypeDisplayName;
+ (id)containerFileDataType;
- (id)computedChildItemSubpathsFixed;

@end

@interface IDEDebugSession : NSObject <DVTInvalidation>
{
    NSMapTable *_breakpointsToTokenSets;
    NSMapTable *_locationsToTokenSets;
    NSMapTable *_watchpointsToTokenSets;
    NSMapTable *_breakpointsToIdentifiers;
    NSMapTable *_locationsToIdentifiers;
    NSMapTable *_watchpointsToIdentifiers;
    DVTDispatchLock *_breakpointsAndWatchpointsToIdentifiersLock;
    NSMutableSet *_profileDataObservers;
    BOOL _touchedProfileDataObserversRegistration;
    struct __CFSet *_stackFramesForDisassembly;
    NSMutableArray *_CPUFirstIndicators;
    NSDictionary *_CPUDistribution;
    DVTMutableOrderedDictionary *_CPUUsagesForThreadDictionary;
    NSMutableArray *_prunedThreadIDsForCPUUsages;
    NSMutableDictionary *_threadNameForThreadIDDictionary;
    NSMutableDictionary *_qosValueForThreadIDDictionary;
    NSMutableArray *_memoryFirstIndicators;
    NSDictionary *_memoryDistribution;
    NSMutableArray *_memoryMeasurements;
    NSMutableArray *_energyMeasurements;
    NSMutableArray *_CPUCapMeasurements;
    NSMutableArray *_CPUCapAverageMeasurements;
    int _logFD;
    DVTObservingToken *_targetControlStateObservingToken;
    DVTObservingToken *_breakpontsActivationObservingToken;
    DVTObservingToken *_breakpointListObserverToken;
    BOOL _syntheticDebugSession;
    BOOL _profilingSupported;
    BOOL _supportsMultiplePCAnnotation;
    int _state;
    int _coalescedState;
    int _lastObserversForGaugesState;
    int _memoryDebuggingState;
    id <IDEDebugTopNavigableModel> _topNavigableModel;
    IDELaunchSession *_launchSession;
    IDERunOperationWorker *_debugLauncher;
    IDEDebugProcess *_process;
    DVTTextDocumentLocation *_instructionPointerLocation;
    DVTTextDocumentLocation *_instructionPointerLocationForDisassembly;
    id <DBGDebugSessionBreakpointLifeCycleDelegate> _breakpointLifeCycleDelegate;
    IDEConsoleAdaptor *_debuggerConsoleAdaptor;
    IDEConsoleAdaptor *_targetConsoleAdaptor;
    unsigned long long _CPUFirstIndicatorHigh;
    unsigned long long _CPUFirstIndicatorLow;
    unsigned long long _totalRunningTimeMicroSeconds;
    NSDate *_loggingInitializedDate;
    IDEDebugSessionRuntimeGroup *_runtimeIssueGroupingObject;
    NSArray *_threadSanitizerIssues;
    NSArray *_UBSanitizerIssues;
    NSArray *_mainThreadCheckerIssues;
    unsigned long long _memoryRPRVTHigh;
    unsigned long long _memoryRPRVTLow;
    unsigned long long _memoryAnonymousHigh;
    unsigned long long _memoryAnonymousLow;
    unsigned long long _memoryDirtyPageSizeHigh;
    unsigned long long _memoryDirtyPageSizeLow;
}

+ (unsigned long long)assertionBehaviorForKeyValueObservationsAtEndOfEvent;
+ (id)keyPathsForValuesAffectingTotalRunningTime;
+ (void)initialize;
@property unsigned long long memoryDirtyPageSizeLow; // @synthesize memoryDirtyPageSizeLow=_memoryDirtyPageSizeLow;
@property unsigned long long memoryDirtyPageSizeHigh; // @synthesize memoryDirtyPageSizeHigh=_memoryDirtyPageSizeHigh;
@property unsigned long long memoryAnonymousLow; // @synthesize memoryAnonymousLow=_memoryAnonymousLow;
@property unsigned long long memoryAnonymousHigh; // @synthesize memoryAnonymousHigh=_memoryAnonymousHigh;
@property unsigned long long memoryRPRVTLow; // @synthesize memoryRPRVTLow=_memoryRPRVTLow;
@property unsigned long long memoryRPRVTHigh; // @synthesize memoryRPRVTHigh=_memoryRPRVTHigh;
@property(readonly, copy) NSArray *mainThreadCheckerIssues; // @synthesize mainThreadCheckerIssues=_mainThreadCheckerIssues;
@property(readonly, copy) NSArray *UBSanitizerIssues; // @synthesize UBSanitizerIssues=_UBSanitizerIssues;
@property(readonly, copy) NSArray *threadSanitizerIssues; // @synthesize threadSanitizerIssues=_threadSanitizerIssues;
@property(retain) IDEDebugSessionRuntimeGroup *runtimeIssueGroupingObject; // @synthesize runtimeIssueGroupingObject=_runtimeIssueGroupingObject;
@property(readonly) NSDate *loggingInitializedDate; // @synthesize loggingInitializedDate=_loggingInitializedDate;
@property unsigned long long totalRunningTimeMicroSeconds; // @synthesize totalRunningTimeMicroSeconds=_totalRunningTimeMicroSeconds;
@property(readonly) NSArray *CPUCapAverageMeasurements; // @synthesize CPUCapAverageMeasurements=_CPUCapAverageMeasurements;
@property(readonly) NSArray *CPUCapMeasurements; // @synthesize CPUCapMeasurements=_CPUCapMeasurements;
@property(copy) NSDictionary *memoryDistribution; // @synthesize memoryDistribution=_memoryDistribution;
@property(readonly) NSArray *prunedThreadIDsForCPUUsages; // @synthesize prunedThreadIDsForCPUUsages=_prunedThreadIDsForCPUUsages;
@property(readonly) DVTMutableOrderedDictionary *CPUUsagesForThreadDictionary; // @synthesize CPUUsagesForThreadDictionary=_CPUUsagesForThreadDictionary;
@property(copy) NSDictionary *CPUDistribution; // @synthesize CPUDistribution=_CPUDistribution;
@property unsigned long long CPUFirstIndicatorLow; // @synthesize CPUFirstIndicatorLow=_CPUFirstIndicatorLow;
@property unsigned long long CPUFirstIndicatorHigh; // @synthesize CPUFirstIndicatorHigh=_CPUFirstIndicatorHigh;
@property(readonly) BOOL supportsMultiplePCAnnotation; // @synthesize supportsMultiplePCAnnotation=_supportsMultiplePCAnnotation;
@property(retain) IDEConsoleAdaptor *targetConsoleAdaptor; // @synthesize targetConsoleAdaptor=_targetConsoleAdaptor;
@property(retain) IDEConsoleAdaptor *debuggerConsoleAdaptor; // @synthesize debuggerConsoleAdaptor=_debuggerConsoleAdaptor;
@property int memoryDebuggingState; // @synthesize memoryDebuggingState=_memoryDebuggingState;
@property int lastObserversForGaugesState; // @synthesize lastObserversForGaugesState=_lastObserversForGaugesState;
@property(retain, nonatomic) id <DBGDebugSessionBreakpointLifeCycleDelegate> breakpointLifeCycleDelegate; // @synthesize breakpointLifeCycleDelegate=_breakpointLifeCycleDelegate;
@property(getter=isProfilingSupported) BOOL profilingSupported; // @synthesize profilingSupported=_profilingSupported;
@property(copy, nonatomic) DVTTextDocumentLocation *instructionPointerLocationForDisassembly; // @synthesize instructionPointerLocationForDisassembly=_instructionPointerLocationForDisassembly;
@property(copy, nonatomic) DVTTextDocumentLocation *instructionPointerLocation; // @synthesize instructionPointerLocation=_instructionPointerLocation;
@property(retain, nonatomic) IDEDebugProcess *process; // @synthesize process=_process;
@property int coalescedState; // @synthesize coalescedState=_coalescedState;
@property(nonatomic) int state; // @synthesize state=_state;
@property(getter=isSyntheticDebugSession) BOOL syntheticDebugSession; // @synthesize syntheticDebugSession=_syntheticDebugSession;
@property(retain) IDERunOperationWorker *debugLauncher; // @synthesize debugLauncher=_debugLauncher;
@property(retain) IDELaunchSession *launchSession; // @synthesize launchSession=_launchSession;
@property(retain, nonatomic) id <IDEDebugTopNavigableModel> topNavigableModel; // @synthesize topNavigableModel=_topNavigableModel;
- (void).cxx_destruct;
- (void)primitiveInvalidate;
@property(readonly) NSString *totalRunningTime;
- (void)setCurrentCPUCapAverageMeasurement:(id)arg1;
- (void)setCurrentCPUCapMeasurement:(id)arg1;
- (void)setCurrentEnergyMeasurement:(id)arg1;
- (void)setCurrentMemoryMeasurement:(id)arg1;
- (void)_updateMemoryMeasureDictionary:(id)arg1 firstEntry:(BOOL)arg2 key:(id)arg3 highValue:(unsigned long long *)arg4 highValueKey:(id)arg5 lowValue:(unsigned long long *)arg6 lowValueKey:(id)arg7;
- (void)setCurrentMemoryFirstIndicator:(id)arg1;
- (id)memoryProfilingDisabledMessage;
- (void)setCurrentThreadsCPUUsage:(id)arg1;
- (id)CPUUsageThreadNameForThreadID:(id)arg1;
- (void)setCPUUsageThreadName:(id)arg1 forThreadID:(id)arg2;
- (void)setCurrentCPUFirstIndicator:(id)arg1;
- (void)_setLastValue:(id)arg1 inGaugeValues:(id)arg2;
- (void)forceRefreshPausedStates;
- (id)supportedDataValueFormatsForDataValue:(id)arg1;
- (void)printDescriptionOfDataValueToConsole:(id)arg1 runAllThreads:(BOOL)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)completeString:(id)arg1 resultHandler:(CDUnknownBlockType)arg2;
- (id)qualityOfServiceValueForThreadID:(id)arg1;
- (id)verifyStackFrameForDisassembly:(id)arg1;
- (void)removeToBeInvalidatedStackFramesForDisassembly:(id)arg1;
- (BOOL)addStackFrameForDisassembly:(id)arg1;
- (void)determineProfileDataObserversState;
- (void)deregisterProfileDataObserver:(id)arg1;
- (void)registerProfileDataObserver:(id)arg1;
- (void)requestLoadDylibAtPath:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (id)commandsExpectingExpressions;
- (BOOL)canContinueToLocation:(id)arg1 withinBlockAtRange:(struct _NSRange)arg2;
- (BOOL)consoleShouldTrackInputHistory;
- (void)evaluateExpression:(id)arg1 threadID:(unsigned long long)arg2 stackFrameID:(unsigned long long)arg3 queue:(id)arg4 options:(id)arg5 completionHandler:(CDUnknownBlockType)arg6;
- (void)evaluateExpression:(id)arg1 threadID:(unsigned long long)arg2 stackFrameID:(unsigned long long)arg3 queue:(id)arg4 completionHandler:(CDUnknownBlockType)arg5;
- (void)executeDebuggerCommand:(id)arg1 threadID:(unsigned long long)arg2 stackFrameID:(unsigned long long)arg3;
- (BOOL)shouldAcceptFromDebugSession:(id)arg1 error:(id *)arg2;
- (BOOL)shouldRelinquishToDebugSession:(id)arg1 error:(id *)arg2;
- (void)requestMovePCInStackFrame:(id)arg1 toLineNumber:(unsigned long long)arg2;
- (void)requestStepIntoCallSymbol:(id)arg1 atLocation:(id)arg2;
- (BOOL)supportsUISnapshot;
- (void)requestUISnapshotRefresh;
- (void)requestFetchEvent;
- (void)requestDetach;
- (void)requestStop;
- (void)requestContinueToLocation:(id)arg1;
- (void)requestContinue;
- (void)requestPause;
- (void)requestStepOverSuspendOtherThreads;
- (void)requestStepInSuspendOtherThreads;
- (void)requestStepOverInstruction;
- (void)requestStepIntoInstruction;
- (void)requestStepOut;
- (void)requestStepOverLine;
- (void)requestStepIn;
- (void)logDebugStringWithTimestampUsingFormat:(id)arg1;
- (void)logDebugStringWithFormat:(id)arg1;
- (void)logDebugStringWithTimestamp:(id)arg1;
- (void)logDebugString:(id)arg1;
@property(readonly) BOOL isLoggingEnabled;
- (void)_initializeLogging;
- (id)logFilename;
- (void)setIdentifier:(unsigned long long)arg1 forWatchpoint:(id)arg2;
- (id)watchpointForIdentifier:(unsigned long long)arg1;
- (void)setIdentifier:(unsigned long long)arg1 forBreakpointLocation:(id)arg2;
- (unsigned long long)identifierForBreakpointLocation:(id)arg1;
- (void)setIdentifier:(unsigned long long)arg1 forBreakpoint:(id)arg2;
- (unsigned long long)identifierForBreakpoint:(id)arg1;
- (id)breakpointForIdentifier:(unsigned long long)arg1;
- (BOOL)_isBreakpointValid:(id)arg1;
- (BOOL)_isWatchpointValid:(id)arg1;
- (void)_recreateBreakpointIfNeccessary:(id)arg1;
- (void)_createBreakpointIfNeccessary:(id)arg1;
- (void)_handleBreakpointIgnoreCountChanged:(id)arg1;
- (void)_handleBreakpointConditionChanged:(id)arg1;
- (void)_handleBreakpointEnablementChanged:(id)arg1;
- (void)_handleBreakpointActivationChanged;
- (void)_handleBreakpointLocationsRemoved:(id)arg1;
- (void)_handleBreakpointLocationsAdded:(id)arg1;
- (void)_handleBreakpointLocationChanges:(id)arg1;
- (void)_handleBreakpointsDeleted:(id)arg1;
- (void)_handleBreakpointsCreated:(id)arg1;
- (void)_handleBreakpointsListChanged:(id)arg1;
- (void)_removeWatchpointObservers:(id)arg1;
- (void)_addWatchpointObservers:(id)arg1;
- (void)_removeBreakpointLocationObservers:(id)arg1;
- (void)_addLocationObservers:(id)arg1;
- (void)_removeBreakpointObservers:(id)arg1;
- (void)_addBreakpointObservers:(id)arg1;
- (unsigned long long)identifierForWatchpoint:(id)arg1;
@property(readonly) IDEBreakpointManager *breakpointManager;
@property(readonly) BOOL supportsPCAnnotationDragging;
- (void)_delayedSetState;
- (void)_handleProcessStateChanged;
- (id)initWithDebugLauncher:(id)arg1;

// Remaining properties
@property(readonly) NSArray *CPUFirstIndicators; // @dynamic CPUFirstIndicators;
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) NSArray *energyMeasurements; // @dynamic energyMeasurements;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) NSArray *memoryFirstIndicators; // @dynamic memoryFirstIndicators;
@property(readonly) NSArray *memoryMeasurements; // @dynamic memoryMeasurements;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface IDEDebugSessionRuntimeGroup : NSObject <IDEIssueRuntimeGroupingObject>
{
    DVTObservingToken *_processPIDObservingToken;
    NSString *_name;
    IDEDebugSession *_debugSession;
    id issueTypeIdentifier;
    NSArray *subgroupTypeIdentifiers;
}

@property(copy) NSArray *subgroupTypeIdentifiers; // @synthesize subgroupTypeIdentifiers;
@property(copy) id issueTypeIdentifier; // @synthesize issueTypeIdentifier;
@property(retain) IDEDebugSession *debugSession; // @synthesize debugSession=_debugSession;
@property(copy) NSString *name; // @synthesize name=_name;
- (void).cxx_destruct;
- (void)dealloc;
- (id)initWithDebugProcess:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IDEEntitlementsFile : NSObject
{
    DVTFilePath *_filePath;
    id _keyValuePairProxy;
}

@property(readonly) DVTFilePath *filePath; // @synthesize filePath=_filePath;
- (void).cxx_destruct;
- (void)noteValuesDidChange;
- (void)removeAllSandboxValues;
- (BOOL)hasSandboxValues;
- (id)allKeys;
- (id)keyValuePairProxy;
- (id)initWithFilePath:(id)arg1;

@end

@interface _IDEEntitlementsKeyValuePairProxy : NSObject
{
    NSMutableDictionary *_keysAndValues;
    IDEEntitlementsFile *_owner;
}

- (void).cxx_destruct;
- (id)plistRepresentation;
- (id)allKeys;
- (void)removeAllSandboxValues;
- (BOOL)hasSandboxValues;
- (void)setValue:(id)arg1 forKey:(id)arg2;
- (id)valueForKey:(id)arg1;
- (id)nonSandboxIdentifiers;
- (id)allTagKeys;
- (id)identifierForKey:(id)arg1;
- (id)initWithDictionary:(id)arg1 owner:(id)arg2;

@end

@interface IDECoverageReportGenerationOperation : DVTOperation <DVTProgressReporting>
{
    BOOL isCpp;
    BOOL isSwift;
    NSString *baseFileName;
    NSMutableArray *lineCoverageObjects;
    NSMutableArray *functions;
    unsigned int numFunctions;
    unsigned int coveredFunctions;
    unsigned int executableLines;
    unsigned int coveredLines;
    unsigned int prevLine;
    NSString *_logIdentifier;
    IDEScheme *_runContext;
    IDEBuildParameters *_buildParameters;
    NSString *_architecture;
    DVTFilePath *_outputLogFilePath;
    DVTFilePath *_profileFilePath;
    IDEActivityLogSection *_logSection;
    long long _progress;
    NSMutableArray *_staticLibFiles;
}

@property(retain) NSMutableArray *staticLibFiles; // @synthesize staticLibFiles=_staticLibFiles;
@property long long progress; // @synthesize progress=_progress;
@property(nonatomic) __weak IDEActivityLogSection *logSection; // @synthesize logSection=_logSection;
@property(retain) DVTFilePath *profileFilePath; // @synthesize profileFilePath=_profileFilePath;
@property(retain) DVTFilePath *outputLogFilePath; // @synthesize outputLogFilePath=_outputLogFilePath;
@property(retain, nonatomic) NSString *architecture; // @synthesize architecture=_architecture;
@property(retain, nonatomic) IDEBuildParameters *buildParameters; // @synthesize buildParameters=_buildParameters;
@property(retain, nonatomic) IDEScheme *runContext; // @synthesize runContext=_runContext;
@property(readonly, copy) NSString *logIdentifier; // @synthesize logIdentifier=_logIdentifier;
- (void).cxx_destruct;
- (void)notifyCoverageReportGenerationFailedWithError:(id)arg1;
- (id)generateCoverageDataObjectForBuildable:(id)arg1 error:(id *)arg2;
- (id)generateCoverageDataForFunction:(struct LLVMOpaqueCoverageData *)arg1 functionName:(const char *)arg2 toolchains:(id)arg3;
- (void)addLine:(unsigned int)arg1 executionCount:(unsigned long long)arg2 executable:(BOOL)arg3 subRanges:(id)arg4;
- (void)main;
- (id)initWithRunContext:(id)arg1 buildParameters:(id)arg2 outputLogFilePath:(id)arg3 logSection:(id)arg4 profileFilePath:(id)arg5;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IDELogManager : NSObject <DVTInvalidation>
{
    id _domainItem;
    NSString *_domainName;
    NSArray *_logProviders;
    NSMutableArray *_logRecords;
    NSMapTable *_logProviderToRecordsIndex;
    NSSet *_cachedRecentLogRecords;
    NSMutableDictionary *_navigatorRootItems;
}

+ (void)initialize;
@property(readonly) NSMutableDictionary *navigatorRootItems; // @synthesize navigatorRootItems=_navigatorRootItems;
@property(copy) NSString *domainName; // @synthesize domainName=_domainName;
@property(retain) id domainItem; // @synthesize domainItem=_domainItem;
@property(readonly) NSArray *logProviders; // @synthesize logProviders=_logProviders;
- (void).cxx_destruct;
- (id)mostRecentLogRecordForType:(id)arg1;
@property(readonly) NSSet *mostRecentLogRecordForEachType;
- (void)_handleLogRecordChangesForProvider:(id)arg1;
- (id)_findLogProviders;
- (id)extensionsFromExtensionPointIdentifier:(id)arg1;
- (void)primitiveInvalidate;
- (id)initWithDomainItem:(id)arg1 domain:(id)arg2;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) NSArray *logRecords; // @dynamic logRecords;
@property(readonly) NSMutableArray *mutableLogRecords; // @dynamic mutableLogRecords;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface IDEIndexImportSession : NSObject
{
    IDEIndexDatabase *_database;
    BOOL _wasSaved;
    BOOL _hasEnded;
    void *_cxIndex;
    void *_cxIndexAction;
    void *_resolvedPathMap;
    NSObject<OS_dispatch_queue> *_resolvedPathQueue;
    NSDate *_startTime;
    long long _nUnits_C;
    long long _nUnits_ObjC;
    long long _nUnits_CXX;
    long long _nUnits_ObjCXX;
    long long _nUnits_Other;
    long long _nPCHs;
    long long _nSymbols;
    long long _nReferences;
}

@property(readonly, nonatomic) void *cxIndexAction; // @synthesize cxIndexAction=_cxIndexAction;
@property(readonly, nonatomic) void *cxIndex; // @synthesize cxIndex=_cxIndex;
@property(readonly, nonatomic) BOOL hasEnded; // @synthesize hasEnded=_hasEnded;
@property(readonly, nonatomic) BOOL wasSaved; // @synthesize wasSaved=_wasSaved;
@property(readonly, nonatomic) IDEIndexDatabase *database; // @synthesize database=_database;
- (void).cxx_destruct;
- (void)didEnd;
- (void)recordSymbols:(long long)arg1 references:(long long)arg2;
- (void)recordUnitWithLanguage:(id)arg1 pch:(BOOL)arg2;
- (void)endSession;
- (void)didSave;
- (id)newMainFileWithPath:(id)arg1 target:(id)arg2 source:(id)arg3 modified:(id)arg4;
- (id)initWithDatabase:(id)arg1;
- (void)deletePathMap;
- (void)setResolvedPath:(id)arg1 forFileID:(CDStruct_3c4b7cd8)arg2;
- (id)resolvedPathForFileID:(CDStruct_3c4b7cd8)arg1;
- (void)withPathMapDo:(CDUnknownBlockType)arg1;
- (void)createPathMap;

@end

@interface IDEArchiveSchemeAction : IDESchemeAction
{
    BOOL _includeSnapshotInArchive;
    BOOL _revealArchiveInOrganizer;
    NSString *_customArchiveName;
    NSString *_buildConfiguration;
    NSString *_packagerIdentifier;
}

+ (id)keyPathsForValuesAffectingDefaultArchiveName;
+ (id)keyPathsForValuesAffectingSubtitle;
@property(copy) NSString *packagerIdentifier; // @synthesize packagerIdentifier=_packagerIdentifier;
- (void)setBuildConfiguration:(id)arg1;
- (id)buildConfiguration;
@property(copy) NSString *customArchiveName; // @synthesize customArchiveName=_customArchiveName;
@property BOOL revealArchiveInOrganizer; // @synthesize revealArchiveInOrganizer=_revealArchiveInOrganizer;
@property BOOL includeSnapshotInArchive; // @synthesize includeSnapshotInArchive=_includeSnapshotInArchive;
- (void).cxx_destruct;
- (void)addArchivingStrategy:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setRevealArchiveInOrganizerFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setIncludeSnapshotInArchiveFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setPackagerIdentifierFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setCustomArchiveNameFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setBuildConfigurationFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)dvt_encodeRelationshipsWithXMLArchiver:(id)arg1 version:(id)arg2;
- (void)dvt_encodeAttributesWithXMLArchiver:(id)arg1 version:(id)arg2;
- (void)dvt_awakeFromXMLUnarchiver:(id)arg1;
- (id)initFromXMLUnarchiver:(id)arg1 archiveVersion:(float)arg2;
- (id)archivingOperationGroupForExecutionEnvironment:(id)arg1 buildLog:(id)arg2 buildParameters:(id)arg3 schemeActionRecord:(id)arg4 error:(id *)arg5 actionCallbackBlock:(CDUnknownBlockType)arg6;
- (id)overridingMacrosForArchiveBuildWithSchemeName:(id)arg1 workspaceArena:(id)arg2;
@property(readonly) NSString *defaultArchiveName;
- (BOOL)doesNonActionWork;
- (id)subtitle;
- (id)name;
- (void)_commonInit;
- (id)init;

@end

@interface IDEQualifiableProfileQualification : NSObject
{
    BOOL _allowTeamProfiles;
    id <DVTQualifiableProfile> _profile;
    id <IDEProvisioningBasicTeam> _team;
    NSString *_bundleID;
    DVTPlatform *_platform;
}

@property(retain, nonatomic) DVTPlatform *platform; // @synthesize platform=_platform;
@property(retain, nonatomic) NSString *bundleID; // @synthesize bundleID=_bundleID;
@property(retain, nonatomic) id <IDEProvisioningBasicTeam> team; // @synthesize team=_team;
@property(retain, nonatomic) id <DVTQualifiableProfile> profile; // @synthesize profile=_profile;
@property(nonatomic) BOOL allowTeamProfiles; // @synthesize allowTeamProfiles=_allowTeamProfiles;
- (void).cxx_destruct;
- (id)activeQualifier;
- (id)notExpiredQualifier;
- (id)manuallyManagedQualifier;
- (id)platformQualifier;
- (id)teamIDQualifier;
- (id)bundleIDQualifier;
- (BOOL)qualifyWithQualifiers:(id)arg1;
- (BOOL)qualifyForManuallyManagedActiveNotExpired;
- (BOOL)qualifyForManuallyManaged;
- (id)manualQualifiers;
- (id)manualQualifiersIncludingExpiredAndInactiveQualifiers:(BOOL)arg1;
- (id)initWithProfile:(id)arg1 team:(id)arg2 bundleID:(id)arg3 platform:(id)arg4;

@end

@interface IDETestProgressNotificationsObserver : NSObject <IDETestRunSessionEvents>
{
    IDETestRunSession *_testRunSession;
    NSString *_currentSuite;
    NSString *_currentTestClass;
    NSString *_currentTestMethod;
    double _postTimeForLastNotification;
    NSTimer *_postNotificationCoalescingTimer;
}

@property(retain) NSTimer *postNotificationCoalescingTimer; // @synthesize postNotificationCoalescingTimer=_postNotificationCoalescingTimer;
@property double postTimeForLastNotification; // @synthesize postTimeForLastNotification=_postTimeForLastNotification;
@property(copy) NSString *currentTestMethod; // @synthesize currentTestMethod=_currentTestMethod;
@property(copy) NSString *currentTestClass; // @synthesize currentTestClass=_currentTestClass;
@property(copy) NSString *currentSuite; // @synthesize currentSuite=_currentSuite;
@property(retain) IDETestRunSession *testRunSession; // @synthesize testRunSession=_testRunSession;
- (void).cxx_destruct;
- (void)didFinishTest:(id)arg1 withTestResult:(id)arg2 rawOutput:(id)arg3;
- (void)didFailTest:(id)arg1 withTestResultMessage:(id)arg2 rawOutput:(id)arg3;
- (void)test:(id)arg1 didMeasurePerformanceMetric:(id)arg2 rawOutput:(id)arg3;
- (void)didStartTest:(id)arg1 withRawOutput:(id)arg2;
- (void)_considerPostingDistributedNotification;
- (void)testOperationGroupDidFinish;
- (void)testRunner:(id)arg1 willFinishPrematurelyWithError:(id)arg2;
- (void)testOperationWillFinishWithSuccess:(BOOL)arg1 withError:(id)arg2;
- (void)testSuiteDidFinish:(unsigned long long)arg1 withFailures:(unsigned long long)arg2 unexpected:(unsigned long long)arg3 testDuration:(double)arg4 totalDuration:(double)arg5 rawOutput:(id)arg6;
- (void)testSuite:(id)arg1 willFinishAt:(id)arg2 rawOutput:(id)arg3;
- (void)testDidOutput:(id)arg1;
- (void)test:(id)arg1 didFinishActivity:(id)arg2;
- (void)test:(id)arg1 willStartActivity:(id)arg2;
- (void)testSuite:(id)arg1 didStartAt:(id)arg2 rawOutput:(id)arg3;
- (void)testRunner:(id)arg1 didLaunchTestSessionForScheme:(id)arg2 withDisplayName:(id)arg3 diagnosticLogPath:(id)arg4;
- (id)initWithTestOperationsObserver:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IDESourceKitGeniusCallersCalleesInfo : NSObject
{
    NSArray *_callers;
    NSArray *_testCallers;
    NSArray *_callees;
}

- (void).cxx_destruct;
@property(readonly) NSArray *callees;
@property(readonly) NSArray *testCallers;
@property(readonly) NSArray *callers;
- (id)initWithCallers:(id)arg1 testCallers:(id)arg2 callees:(id)arg3;

@end

@interface IDESourceKitUnhandledURLSymbolInfo : NSObject
{
    NSString *_oldName;
    NSString *_name;
    IDEIndexSymbol *_symbol;
}

@property(readonly) IDEIndexSymbol *symbol; // @synthesize symbol=_symbol;
@property(readonly) NSString *name; // @synthesize name=_name;
@property(readonly) NSString *oldName; // @synthesize oldName=_oldName;
- (void).cxx_destruct;
- (id)initWithSymbol:(id)arg1 oldName:(id)arg2 newName:(id)arg3;

@end

@interface _IDESourceKitAvailableRefactoring : NSObject <IDESourceKitAvailableRefactoring>
{
    long long _kind;
    long long _ident;
    NSString *_name;
}

@property(readonly) NSString *name; // @synthesize name=_name;
@property(readonly) long long ident; // @synthesize ident=_ident;
@property(readonly) long long kind; // @synthesize kind=_kind;
- (void).cxx_destruct;
- (id)initWithKind:(long long)arg1 ident:(long long)arg2 name:(id)arg3;

@end

@interface IDEIndexSymbolNameResults : NSObject
{
    IDESourceKitResponseStringArray *_strArr;
}

- (void).cxx_destruct;
- (void)enumerateNamesUsingBlock:(CDUnknownBlockType)arg1;
- (const char *)cStringAtIndex:(unsigned long long)arg1;
@property(readonly) unsigned long long count;
- (id)initWithStringArray:(id)arg1;

@end

@interface IDESourceKitWorkspace : NSObject <IDESourceKitWorkspaceDelegate, DVTInvalidation>
{
    IDESourceKitConnection *_conn;
    long long _indexerToken;
    IDEWorkspace *_workspace;
    DVTFilePath *_databaseFolder;
    DVTFilePath *_workspaceSettingIndexStoreFolderPath;
    BOOL _workspaceSettingEnabledFullStoreVisibility;
    IDEIndexingPrebuildController *_prebuildController;
    DVTDispatchLock *_stateLock;
    NSMutableDictionary *_identifiersToIndexables;
    NSMutableDictionary *_indexablesToProductHeaders;
    DVTObservingToken *_activeRunContextObservingToken;
    DVTObservingToken *_activeRunDestinationObservingToken;
    DVTNotificationToken *_indexableFileWasAddedNotificationObservingToken;
    DVTNotificationToken *_indexableFileWillBeRemovedNotificationObservingToken;
    DVTNotificationToken *_indexableDidRenameFileNotificationObservingToken;
    DVTNotificationToken *_buildablesDidChangeNotificationObservingToken;
    DVTNotificationToken *_buildSettingsDidChangeNotificationObservingToken;
    DVTNotificationToken *_buildOperationWillStartNotificationObservingToken;
    DVTNotificationToken *_buildOperationDidStopNotificationObservingToken;
    DVTNotificationToken *_prebuildNotificationToken;
    DVTNotificationToken *_connectionInterruptedNotificationToken;
    DVTNotificationToken *_connectionRestoredNotificationToken;
    // Error parsing type: Ac, name: _connectionWasInterrupted
    DVTTimeSlicedMainThreadWorkQueue *_orderedMainThreadQueue;
    long long _purgeCount;
}

+ (unsigned long long)assertionBehaviorAfterEndOfEventForSelector:(SEL)arg1;
+ (BOOL)supportsInvalidationPrevention;
+ (void)initialize;
+ (id)logAspect;
+ (void)setIsBoltIndexEnabled:(BOOL)arg1;
+ (BOOL)isBoltIndexEnabled;
+ (void)setIsEnabled:(BOOL)arg1;
+ (BOOL)isEnabled;
@property(readonly, nonatomic) IDEWorkspace *workspace; // @synthesize workspace=_workspace;
- (void).cxx_destruct;
- (id)availableRefactoringsAtLocation:(id)arg1 withCurrentFileContentDictionary:(id)arg2;
- (long long)refactoringKindForUID:(struct _sourcekit_uid_s *)arg1;
- (id)localRefactoringAtLocation:(id)arg1 identifier:(long long)arg2 withCurrentFileContentDictionary:(id)arg3 delegate:(id)arg4;
- (id)renameAtLocation:(id)arg1 toName:(id)arg2 withCurrentFileContentDictionary:(id)arg3 delegate:(id)arg4;
- (id)findRenameRangesAtLocation:(id)arg1 withCurrentFileContentDictionary:(id)arg2 delegate:(id)arg3;
- (long long)refactoringIdentifierForString:(id)arg1;
- (id)stringForRefactoringIdentifier:(long long)arg1;
- (id)allAutoImportItemsMatchingKind:(id)arg1 symbolLanguage:(id)arg2;
- (id)allAutoImportItemsMatchingKind:(id)arg1;
- (id)filesWithSymbolOccurrencesMatchingName:(id)arg1 kind:(id)arg2;
- (id)classesWithReferencesToSymbols:(id)arg1;
- (id)allClassesWithMembers:(id)arg1;
- (id)classesWithMembers:(id)arg1;
- (id)allMethodsMatchingMethod:(id)arg1 forReceiver:(id)arg2;
- (id)membersMatchingName:(id)arg1 kinds:(id)arg2 forInterfaces:(id)arg3;
- (id)topLevelSymbolsInFile:(id)arg1;
- (id)testMethodsForClasses:(id)arg1;
- (id)testCaseBaseClasses;
- (id)allSubClassesForClasses:(id)arg1;
- (id)allSymbolsMatchingNames:(id)arg1 kind:(id)arg2;
- (id)allProtocolsMatchingName:(id)arg1;
- (id)collectionElementTypeSymbolForSymbol:(id)arg1 withCurrentFileContentDictionary:(id)arg2;
- (id)messageReceiverInContext:(id)arg1 withCurrentFileContentDictionary:(id)arg2;
- (id)referencesToSymbol:(id)arg1 inContext:(id)arg2 withCurrentFileContentDictionary:(id)arg3;
- (id)symbolsUsedInContext:(id)arg1 withCurrentFileContentDictionary:(id)arg2;
- (id)topLevelProtocols;
- (id)topLevelClasses;
- (id)sdkForFile:(id)arg1;
- (void)sdkForFile:(id)arg1 queue:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (void)mainFilesForFile:(id)arg1 queue:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (id)mainFilesForFile:(id)arg1;
- (id)_adjustMainFilesForFileDict:(id)arg1;
- (void)doWhenFilesReady:(CDUnknownBlockType)arg1;
- (void)setIndexState:(id)arg1;
- (id)indexState;
- (void)purgeFileCaches;
- (long long)purgeCount;
- (void)resumeIndexing;
- (void)suspendIndexing;
- (BOOL)isKindOfClass:(Class)arg1;
- (void)primitiveInvalidate;
- (void)postNotificationName:(id)arg1;
- (void)postNotificationName:(id)arg1 userInfo:(id)arg2;
- (void)editorDidSaveFile:(id)arg1;
- (void)editorWillSaveFile:(id)arg1;
- (BOOL)_shouldTriggerPrebuildOnSaveForFile:(id)arg1;
- (void)gatherProductHeadersForIndexable:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)writeWorkspaceHeaderMap:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (id)indexHeadersForIndexable:(id)arg1;
- (id)workspaceHeadersForIndexable:(id)arg1;
- (id)headerMapFilePath;
- (void)filesContainingWordWithInfo:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)_computePreferredTargets:(id)arg1 priorityTargets:(id)arg2;
- (void)onSettingsForIndexableWithInfo:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)onGatherProductHeadersWithInfo:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)onWriteHeaderMapWithInfo:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)onCreateWorkspaceArenaFolderWithCompletionBlock:(CDUnknownBlockType)arg1;
- (void)onIndexDidFastScan;
- (void)onIndexIsFastScanning:(id)arg1;
- (void)onIndexWillFastScan;
- (void)onIndexDidPopulateDatabase;
- (void)onIndexIsPopulatingDatabase:(id)arg1;
- (void)onIndexWillPopulateDatabase;
- (void)onDidResumeIndexingWorkspace;
- (void)onDidSuspendIndexingWorkspace;
- (void)onDidIndexWorkspace;
- (void)onIsIndexingWorkspace:(id)arg1;
- (void)onWillIndexWorkspace:(id)arg1;
- (void)onDidChangeState;
- (void)onDidChange;
- (void)onInitiatePrebuild;
- (id)makeIndexable:(id)arg1;
- (id)symbolMembersMatchingKind:(id)arg1 forSymbol:(id)arg2;
- (id)allOccurrencesOfMembers:(id)arg1 forClass:(id)arg2;
- (id)symbolIBRelationClass:(id)arg1;
- (id)symbolRelatedClass:(id)arg1;
- (id)propertyForCallable:(id)arg1;
- (id)overriddenSymbolsForCallable:(id)arg1;
- (id)symbolContainers:(id)arg1;
- (id)symbolContainer:(id)arg1;
- (id)symbolModelOccurrence:(id)arg1;
- (id)symbolReferencingFiles:(id)arg1;
- (id)symbolImplementingClassesForProtocol:(id)arg1;
- (id)symbolAllSubclassesForClass:(id)arg1;
- (id)symbolAllSuperclassesForClass:(id)arg1;
- (id)symbolAllProtocolsForClass:(id)arg1;
- (id)symbolProtocolsForClass:(id)arg1;
- (id)symbolInterfacesForClass:(id)arg1;
- (id)symbolCategoriesForClass:(id)arg1;
- (id)symbolSuperclassesForClass:(id)arg1;
- (id)symbolSubclassesForClass:(id)arg1;
- (id)symbolReferences:(id)arg1;
- (id)symbolOccurrences:(id)arg1;
- (id)symbolDefinitions:(id)arg1;
- (id)symbolDeclarations:(id)arg1;
- (id)symbolQualifiedDisplayName:(id)arg1;
- (id)symbolsForResolutions:(id)arg1;
- (id)allParentsOfSymbols:(id)arg1 cancelWhen:(CDUnknownBlockType)arg2;
- (unsigned long long)countOfSymbolsMatchingKind:(id)arg1 workspaceOnly:(BOOL)arg2;
- (id)allSymbolsMatchingKind:(id)arg1 workspaceOnly:(BOOL)arg2 cancelWhen:(CDUnknownBlockType)arg3;
- (id)allSymbolsMatchingKind:(id)arg1 workspaceOnly:(BOOL)arg2;
- (void)allSymbolsMatchingKind:(id)arg1 queue:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (id)allSymbolsMatchingKind:(id)arg1;
- (id)topLevelProtocolsWorkspaceOnly:(BOOL)arg1 cancelWhen:(CDUnknownBlockType)arg2;
- (id)topLevelProtocolsWorkspaceOnly:(BOOL)arg1;
- (id)topLevelClassesWorkspaceOnly:(BOOL)arg1 cancelWhen:(CDUnknownBlockType)arg2;
- (id)topLevelClassesWorkspaceOnly:(BOOL)arg1;
- (id)typeSymbolForSymbol:(id)arg1 withCurrentFileContentDictionary:(id)arg2;
- (id)membersMatchingKinds:(id)arg1 forInterfaces:(id)arg2;
- (id)allClassesMatchingName:(id)arg1;
- (void)allSymbolsMatchingName:(id)arg1 kind:(id)arg2 queue:(id)arg3 completionBlock:(CDUnknownBlockType)arg4;
- (id)allSymbolsMatchingName:(id)arg1 kind:(id)arg2;
- (void)allSymbolsMatchingName:(id)arg1 queue:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (id)allSymbolsMatchingName:(id)arg1;
- (void)allSymbolNamesQueue:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (id)allSymbolNames;
- (id)filesIncludedByFile:(id)arg1;
- (id)filesIncludingFile:(id)arg1;
- (id)importedFilesAtDocument:(id)arg1 withCurrentFileContentDictionary:(id)arg2;
- (id)geniusReferencingTestClassesForSymbol:(id)arg1;
- (id)geniusCallersCalleesAtLocation:(id)arg1 withCurrentFileContentDictionary:(id)arg2;
- (id)parsedCodeCommentAtLocation:(id)arg1 withCurrentFileContentDictionary:(id)arg2 symbolKindOut:(id *)arg3;
- (id)parsedCodeCommentAtLocation:(id)arg1 withCurrentFileContentDictionary:(id)arg2 cursorKindOut:(long long *)arg3;
- (id)parsedCodeCommentAtLocation:(id)arg1 withCurrentFileContentDictionary:(id)arg2;
- (id)codeDiagnosticsAtLocation:(id)arg1 withCurrentFileContentDictionary:(id)arg2;
- (id)referencesToSymbolMatchingName:(id)arg1 inContext:(id)arg2 withCurrentFileContentDictionary:(id)arg3;
- (void)symbolsOccurrencesInContext:(id)arg1 withCurrentFileContentDictionary:(id)arg2 queue:(id)arg3 completionBlock:(CDUnknownBlockType)arg4;
- (id)symbolsOccurrencesInContext:(id)arg1 withCurrentFileContentDictionary:(id)arg2;
- (id)symbolsMatchingName:(id)arg1 inContext:(id)arg2 withCurrentFileContentDictionary:(id)arg3;
- (id)symbolsMatchingName:(id)arg1 inContext:(id)arg2;
- (id)codeCompletionsAtLocation:(id)arg1 withCurrentFileContentDictionary:(id)arg2 completionContext:(id *)arg3;
- (id)collectTestMethodsPerTestTargets;
- (id)symbolsContaining:(id)arg1 anchorStart:(BOOL)arg2 anchorEnd:(BOOL)arg3 subsequence:(BOOL)arg4 ignoreCase:(BOOL)arg5 cancelWhen:(CDUnknownBlockType)arg6;
- (id)symbolsContaining:(id)arg1 anchorStart:(BOOL)arg2 anchorEnd:(BOOL)arg3 subsequence:(BOOL)arg4 ignoreCase:(BOOL)arg5;
- (id)filesContaining:(id)arg1 anchorStart:(BOOL)arg2 anchorEnd:(BOOL)arg3 subsequence:(BOOL)arg4 ignoreCase:(BOOL)arg5 cancelWhen:(CDUnknownBlockType)arg6;
- (id)impliedHeadersForModuleImportLocation:(id)arg1 withCurrentFileContentDictionary:(id)arg2;
- (id)importedFileAtDocumentLocation:(id)arg1 withCurrentFileContentDictionary:(id)arg2;
- (id)callersForSymbol:(id)arg1;
- (id)jumpToDefinitionForName:(id)arg1 inContext:(id)arg2 withCurrentFileContentDictionary:(id)arg3 isInComment:(BOOL)arg4 isInFunctionOrMethodBody:(BOOL)arg5 looksLikeASetter:(BOOL)arg6 onlyCurrentDeclarator:(BOOL)arg7 includeCurrentLoc:(BOOL)arg8;
- (id)effectivePathForHeader:(id)arg1;
- (BOOL)isPreferredTarget:(id)arg1;
- (void)expediteIndexing;
@property(readonly, nonatomic) BOOL shouldAllowRefactoring;
- (void)setThrottleFactor:(double)arg1;
@property(readonly, nonatomic) BOOL isQuiescent;
- (void)willRegisterMoreFiles:(BOOL)arg1;
- (void)unregisterFile:(id)arg1;
- (void)registerFile:(id)arg1;
- (id)registeredIndexables;
- (id)indexableForIdentifier:(id)arg1;
- (void)unregisterObject:(id)arg1;
- (void)registerObject:(id)arg1;
- (BOOL)isCurrentForWorkspace:(id)arg1;
- (void)_connectionDidRestore;
- (void)_connectionDidCrash;
- (void)_activeRunDestinationDidChange:(id)arg1;
- (void)_activeRunContextDidChange:(id)arg1;
- (void)_buildOperationDidStop:(id)arg1;
- (void)_buildOperationWillStart:(id)arg1;
- (void)_buildSettingsDidChange:(id)arg1;
- (void)_respondToFileChangeNotification:(id)arg1;
- (void)_setupObservers;
- (BOOL)connectionWasInterrupted;
- (id)internalConnection;
- (id)UIDSet;
- (long long)indexerToken;
- (id)init;
- (id)initWithWorkspace:(id)arg1 error:(id *)arg2;
- (void)testFilesContainingWord:(id)arg1 queue:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (id)testFilesContainingWord:(id)arg1 error:(id *)arg2;
- (void)filesContainingWordUpdate:(long long)arg1 isFinished:(BOOL)arg2 fileURLs:(id)arg3 queue:(id)arg4 completion:(CDUnknownBlockType)arg5;
- (BOOL)filesContainingWordUpdate:(long long)arg1 isFinished:(BOOL)arg2 fileURLs:(id)arg3 error:(id *)arg4;
- (void)closeRefactoringAction:(long long)arg1 queue:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (BOOL)closeRefactoringAction:(long long)arg1 error:(id *)arg2;
- (void)startRefactoringAction:(long long)arg1 queue:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (BOOL)startRefactoringAction:(long long)arg1 error:(id *)arg2;
- (void)cancelRefactoringAction:(long long)arg1 queue:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (BOOL)cancelRefactoringAction:(long long)arg1 error:(id *)arg2;
- (void)availableRefactorings:(id)arg1 fileContent:(id)arg2 queue:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (id)availableRefactorings:(id)arg1 fileContent:(id)arg2 error:(id *)arg3;
- (void)localRefactoring:(id)arg1 identifier:(struct _sourcekit_uid_s *)arg2 fileContent:(id)arg3 queue:(id)arg4 completion:(CDUnknownBlockType)arg5;
- (id)localRefactoring:(id)arg1 identifier:(struct _sourcekit_uid_s *)arg2 fileContent:(id)arg3 error:(id *)arg4;
- (void)renameAtLocation:(id)arg1 name:(id)arg2 fileContent:(id)arg3 queue:(id)arg4 completion:(CDUnknownBlockType)arg5;
- (id)renameAtLocation:(id)arg1 name:(id)arg2 fileContent:(id)arg3 error:(id *)arg4;
- (void)findRenameRangesAtLocation:(id)arg1 fileContent:(id)arg2 queue:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (id)findRenameRangesAtLocation:(id)arg1 fileContent:(id)arg2 error:(id *)arg3;
- (void)geniusReferencingTestClasses:(id)arg1 queue:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (id)geniusReferencingTestClasses:(id)arg1 error:(id *)arg2;
- (void)geniusCallersCalleesAtDocument:(id)arg1 fileContent:(id)arg2 queue:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (id)geniusCallersCalleesAtDocument:(id)arg1 fileContent:(id)arg2 error:(id *)arg3;
- (void)importedFilesAtDocument:(id)arg1 fileContent:(id)arg2 queue:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (id)importedFilesAtDocument:(id)arg1 fileContent:(id)arg2 error:(id *)arg3;
- (void)typeSymbolForSymbolAtDocument:(id)arg1 docLocation:(id)arg2 fileContent:(id)arg3 queue:(id)arg4 completion:(CDUnknownBlockType)arg5;
- (id)typeSymbolForSymbolAtDocument:(id)arg1 docLocation:(id)arg2 fileContent:(id)arg3 error:(id *)arg4;
- (void)parsedCodeCommentAtDocument:(id)arg1 fileContent:(id)arg2 queue:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (id)parsedCodeCommentAtDocument:(id)arg1 fileContent:(id)arg2 error:(id *)arg3;
- (void)codeDiagnosticsAtDocument:(id)arg1 fileContent:(id)arg2 queue:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (id)codeDiagnosticsAtDocument:(id)arg1 fileContent:(id)arg2 error:(id *)arg3;
- (void)referencesToSymbolAtDocument:(id)arg1 name:(id)arg2 fileContent:(id)arg3 queue:(id)arg4 completion:(CDUnknownBlockType)arg5;
- (id)referencesToSymbolAtDocument:(id)arg1 name:(id)arg2 fileContent:(id)arg3 error:(id *)arg4;
- (void)symbolOccurrencesAtDocument:(id)arg1 fileContent:(id)arg2 queue:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (id)symbolOccurrencesAtDocument:(id)arg1 fileContent:(id)arg2 error:(id *)arg3;
- (void)symbolsMatchingNameAtDocument:(id)arg1 docLocation:(id)arg2 fileContent:(id)arg3 queue:(id)arg4 completion:(CDUnknownBlockType)arg5;
- (id)symbolsMatchingNameAtDocument:(id)arg1 docLocation:(id)arg2 fileContent:(id)arg3 error:(id *)arg4;
- (void)codeComplete:(id)arg1 fileContent:(id)arg2 queue:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (id)codeComplete:(id)arg1 fileContent:(id)arg2 error:(id *)arg3;
- (void)unitTestMethodsStructure:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (id)unitTestMethodsStructure:(id *)arg1;
- (void)allSymbolNames:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (id)allSymbolNames:(id *)arg1;
- (void)membersMatchingKinds:(id)arg1 symbols:(id)arg2 queue:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (id)membersMatchingKinds:(id)arg1 symbols:(id)arg2 error:(id *)arg3;
- (void)filesIncludedByFile:(id)arg1 queue:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (id)filesIncludedByFile:(id)arg1 error:(id *)arg2;
- (void)filesIncludingFile:(id)arg1 queue:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (id)filesIncludingFile:(id)arg1 error:(id *)arg2;
- (void)symbolsForResolutions:(id)arg1 queue:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (id)symbolsForResolutions:(id)arg1 error:(id *)arg2;
- (void)allParentsOfSymbols:(id)arg1 queue:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (id)allParentsOfSymbols:(id)arg1 error:(id *)arg2;
- (void)countOfSymbolsMatchingKind:(id)arg1 workspaceOnly:(BOOL)arg2 queue:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (id)countOfSymbolsMatchingKind:(id)arg1 workspaceOnly:(BOOL)arg2 error:(id *)arg3;
- (void)allSymbolsMatchingKind:(id)arg1 workspaceOnly:(BOOL)arg2 topLevelOnly:(BOOL)arg3 queue:(id)arg4 completion:(CDUnknownBlockType)arg5;
- (id)allSymbolsMatchingKind:(id)arg1 workspaceOnly:(BOOL)arg2 topLevelOnly:(BOOL)arg3 error:(id *)arg4;
- (void)allClassesMatchingName:(id)arg1 queue:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (id)allClassesMatchingName:(id)arg1 error:(id *)arg2;
- (void)allSymbolsMatchingName:(id)arg1 symbolKind:(id)arg2 queue:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (id)allSymbolsMatchingName:(id)arg1 symbolKind:(id)arg2 error:(id *)arg3;
- (void)symbolMembersMatchingKind:(id)arg1 symbol:(id)arg2 queue:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (id)symbolMembersMatchingKind:(id)arg1 symbol:(id)arg2 error:(id *)arg3;
- (void)symbolIBRelationClass:(id)arg1 queue:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (id)symbolIBRelationClass:(id)arg1 error:(id *)arg2;
- (void)symbolRelatedClass:(id)arg1 queue:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (id)symbolRelatedClass:(id)arg1 error:(id *)arg2;
- (void)symbolProperty:(id)arg1 queue:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (id)symbolProperty:(id)arg1 error:(id *)arg2;
- (void)symbolOverriddenSymbols:(id)arg1 queue:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (id)symbolOverriddenSymbols:(id)arg1 error:(id *)arg2;
- (void)symbolContainers:(id)arg1 queue:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (id)symbolContainers:(id)arg1 error:(id *)arg2;
- (void)symbolContainer:(id)arg1 queue:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (id)symbolContainer:(id)arg1 error:(id *)arg2;
- (void)symbolModelOccurrence:(id)arg1 queue:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (id)symbolModelOccurrence:(id)arg1 error:(id *)arg2;
- (void)symbolReferencingFiles:(id)arg1 queue:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (id)symbolReferencingFiles:(id)arg1 error:(id *)arg2;
- (void)symbolAllOccurrencesOfMembers:(id)arg1 members:(id)arg2 queue:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (id)symbolAllOccurrencesOfMembers:(id)arg1 members:(id)arg2 error:(id *)arg3;
- (void)symbolImplementingClassesForProtocol:(id)arg1 queue:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (id)symbolImplementingClassesForProtocol:(id)arg1 error:(id *)arg2;
- (void)symbolAllSubclasses:(id)arg1 queue:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (id)symbolAllSubclasses:(id)arg1 error:(id *)arg2;
- (void)symbolAllSuperclasses:(id)arg1 queue:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (id)symbolAllSuperclasses:(id)arg1 error:(id *)arg2;
- (void)symbolAllProtocols:(id)arg1 queue:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (id)symbolAllProtocols:(id)arg1 error:(id *)arg2;
- (void)symbolProtocols:(id)arg1 queue:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (id)symbolProtocols:(id)arg1 error:(id *)arg2;
- (void)symbolInterfaces:(id)arg1 queue:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (id)symbolInterfaces:(id)arg1 error:(id *)arg2;
- (void)symbolCategories:(id)arg1 queue:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (id)symbolCategories:(id)arg1 error:(id *)arg2;
- (void)symbolSuperclasses:(id)arg1 queue:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (id)symbolSuperclasses:(id)arg1 error:(id *)arg2;
- (void)symbolSubclasses:(id)arg1 queue:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (id)symbolSubclasses:(id)arg1 error:(id *)arg2;
- (void)symbolReferences:(id)arg1 queue:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (id)symbolReferences:(id)arg1 error:(id *)arg2;
- (void)symbolOccurrences:(id)arg1 queue:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (id)symbolOccurrences:(id)arg1 error:(id *)arg2;
- (void)symbolDefinitions:(id)arg1 queue:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (id)symbolDefinitions:(id)arg1 error:(id *)arg2;
- (void)symbolDeclarations:(id)arg1 queue:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (id)symbolDeclarations:(id)arg1 error:(id *)arg2;
- (void)symbolQualifiedDisplayName:(id)arg1 queue:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (id)symbolQualifiedDisplayName:(id)arg1 error:(id *)arg2;
- (void)callersForSymbol:(id)arg1 queue:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (id)callersForSymbol:(id)arg1 error:(id *)arg2;
- (void)filesContaining:(id)arg1 isAnchorStart:(BOOL)arg2 isAnchorEnd:(BOOL)arg3 isSubsequence:(BOOL)arg4 isIgnoreCase:(BOOL)arg5 queue:(id)arg6 completion:(CDUnknownBlockType)arg7;
- (id)filesContaining:(id)arg1 isAnchorStart:(BOOL)arg2 isAnchorEnd:(BOOL)arg3 isSubsequence:(BOOL)arg4 isIgnoreCase:(BOOL)arg5 error:(id *)arg6;
- (void)symbolsContaining:(id)arg1 isAnchorStart:(BOOL)arg2 isAnchorEnd:(BOOL)arg3 isSubsequence:(BOOL)arg4 isIgnoreCase:(BOOL)arg5 queue:(id)arg6 completion:(CDUnknownBlockType)arg7;
- (id)symbolsContaining:(id)arg1 isAnchorStart:(BOOL)arg2 isAnchorEnd:(BOOL)arg3 isSubsequence:(BOOL)arg4 isIgnoreCase:(BOOL)arg5 error:(id *)arg6;
- (void)jumpToModuleImportHeaders:(id)arg1 fileContent:(id)arg2 queue:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (id)jumpToModuleImportHeaders:(id)arg1 fileContent:(id)arg2 error:(id *)arg3;
- (void)jumpToImportedFile:(id)arg1 fileContent:(id)arg2 queue:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (id)jumpToImportedFile:(id)arg1 fileContent:(id)arg2 error:(id *)arg3;
- (void)jumpToExpressionDefinition:(id)arg1 docLocation:(id)arg2 fileContent:(id)arg3 isInComment:(BOOL)arg4 isInFuncOrMethodBody:(BOOL)arg5 looksLikeASetter:(BOOL)arg6 onlyCurrentDeclarator:(BOOL)arg7 includeCurrentLoc:(BOOL)arg8 queue:(id)arg9 completion:(CDUnknownBlockType)arg10;
- (id)jumpToExpressionDefinition:(id)arg1 docLocation:(id)arg2 fileContent:(id)arg3 isInComment:(BOOL)arg4 isInFuncOrMethodBody:(BOOL)arg5 looksLikeASetter:(BOOL)arg6 onlyCurrentDeclarator:(BOOL)arg7 includeCurrentLoc:(BOOL)arg8 error:(id *)arg9;
- (void)isQuiescent:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (id)isQuiescent:(id *)arg1;
- (void)setThrottleFactor:(double)arg1 queue:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (BOOL)setThrottleFactor:(double)arg1 error:(id *)arg2;
- (void)anyBuildSettingsForFile:(id)arg1 queue:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (id)anyBuildSettingsForFile:(id)arg1 error:(id *)arg2;
- (void)mainFilesForFile:(id)arg1 queue:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (id)mainFilesForFile:(id)arg1 error:(id *)arg2;
- (void)editorDidSaveFile:(id)arg1 queue:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (BOOL)editorDidSaveFile:(id)arg1 error:(id *)arg2;
- (void)editorWillSaveFile:(id)arg1 queue:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (BOOL)editorWillSaveFile:(id)arg1 error:(id *)arg2;
- (void)notifyActiveRunDestinationDidChange:(id)arg1 queue:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (BOOL)notifyActiveRunDestinationDidChange:(id)arg1 error:(id *)arg2;
- (void)buildOperationDidStop:(id)arg1 buildOperationToken:(long long)arg2 queue:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (BOOL)buildOperationDidStop:(id)arg1 buildOperationToken:(long long)arg2 error:(id *)arg3;
- (void)buildOperationWillStart:(id)arg1 buildOperationToken:(long long)arg2 queue:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (BOOL)buildOperationWillStart:(id)arg1 buildOperationToken:(long long)arg2 error:(id *)arg3;
- (void)buildSettingsChanged:(id)arg1 queue:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (BOOL)buildSettingsChanged:(id)arg1 error:(id *)arg2;
- (void)notifyIndexableDidRenameFile:(id)arg1 prevFilePath:(id)arg2 filePath:(id)arg3 queue:(id)arg4 completion:(CDUnknownBlockType)arg5;
- (BOOL)notifyIndexableDidRenameFile:(id)arg1 prevFilePath:(id)arg2 filePath:(id)arg3 error:(id *)arg4;
- (void)notifyIndexableWillRemoveFile:(id)arg1 filePath:(id)arg2 queue:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (BOOL)notifyIndexableWillRemoveFile:(id)arg1 filePath:(id)arg2 error:(id *)arg3;
- (void)notifyIndexableDidAddFile:(id)arg1 filePath:(id)arg2 queue:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (BOOL)notifyIndexableDidAddFile:(id)arg1 filePath:(id)arg2 error:(id *)arg3;
- (void)willRegisterMoreFiles:(BOOL)arg1 queue:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (BOOL)willRegisterMoreFiles:(BOOL)arg1 error:(id *)arg2;
- (void)prebuildCompleted:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (BOOL)prebuildCompleted:(id *)arg1;
- (void)registerPreferredTargets:(id)arg1 priorityTargets:(id)arg2 queue:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (BOOL)registerPreferredTargets:(id)arg1 priorityTargets:(id)arg2 error:(id *)arg3;
- (void)unregisterIndexable:(id)arg1 queue:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (BOOL)unregisterIndexable:(id)arg1 error:(id *)arg2;
- (void)registerIndexable:(id)arg1 queue:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (BOOL)registerIndexable:(id)arg1 error:(id *)arg2;
- (void)unregisterFile:(id)arg1 queue:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (BOOL)unregisterFile:(id)arg1 error:(id *)arg2;
- (void)registerFile:(id)arg1 queue:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (BOOL)registerFile:(id)arg1 error:(id *)arg2;
- (void)closeIndex:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (BOOL)closeIndex:(id *)arg1;
- (void)startIndex:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (BOOL)startIndex:(id *)arg1;
- (id)ide_callHeirarchy_callsOfSymbol:(id)arg1;
- (BOOL)filesContainingWordWithInfo:(id)arg1 workspace:(id)arg2;
- (id)mainFileForSelectionFilePath:(id)arg1 buildSettings:(id *)arg2;
- (id)objCOrCCompilationUnitIndexablesForMainFile:(id)arg1 indexableObjects:(id)arg2;
- (BOOL)isFileObjCCompilationUnitOrHeader:(id)arg1 error:(id *)arg2;
- (id)_localizedPhraseForDependentObjCCompilationUnit:(id)arg1 errorLanguages:(id)arg2 sharedLanguageIdentifier:(id)arg3 sharedIndexableObject:(id)arg4;
- (id)_localizedDescriptionForObjCCompilationUnit:(id)arg1 errorLanguages:(id)arg2;
- (BOOL)_errorLanguages:(id *)arg1 forFilePath:(id)arg2 indexableObjects:(id)arg3;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface IDESourceKitRefactoringAction : NSObject <IDESourceKitRefactoringActionDelegate>
{
    id <IDESourceKitRefactoringDelegate> _delegate;
    long long _token;
    long long _indexerToken;
    IDESourceKitWorkspace *_workspace;
    long long _state;
}

+ (BOOL)getRemappedFiles:(id)arg1 callback:(CDUnknownBlockType)arg2 error:(id *)arg3;
@property long long state; // @synthesize state=_state;
- (void).cxx_destruct;
- (void)refactoringUnhandledURLs:(id)arg1;
- (void)refactoringProgressUpdated:(id)arg1;
- (void)refactoringRenameRangesFound:(id)arg1;
- (void)refactoringStateChanged:(id)arg1;
- (long long)refactoringStateForUID:(struct _sourcekit_uid_s *)arg1;
- (long long)refactoringActionToken;
- (long long)indexerToken;
- (BOOL)cancel:(id *)arg1;
- (void)dealloc;
- (id)initWithToken:(long long)arg1 indexerToken:(long long)arg2 delegate:(id)arg3 workspace:(id)arg4;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IDEDistributionCopyItemStep : IDEDistributionItemProcessingStep
{
}

- (_Bool)runWithError:(id *)arg1;
- (id)providedOutputContextPropertyNames;
- (id)requiredInputContextPropertyNames;
- (id)name;

@end

@interface IDEDownloadablePermissionsCheckProvider : DVTDownloadablePermissionsCheckProvider
{
}

- (id)isRegisteredAppleDeveloper:(id)arg1 session:(id)arg2 error:(id *)arg3;

@end

@interface IDEBuildableProductRunnable : IDERunnable <DVTXMLUnarchiving>
{
    id <IDEBuildableProduct> _buildableProduct;
    IDESchemeBuildableReference *_buildableReference;
}

+ (id)keyPathsForValuesAffectingBuildableProduct;
+ (id)keyPathsForValuesAffectingHasRunnablePath;
+ (id)keyPathsForValuesAffectingDisplayName;
@property(retain) IDESchemeBuildableReference *buildableReference; // @synthesize buildableReference=_buildableReference;
- (void).cxx_destruct;
- (void)dvt_encodeRelationshipsWithXMLArchiver:(id)arg1 version:(id)arg2;
- (void)dvt_encodeAttributesWithXMLArchiver:(id)arg1 version:(id)arg2;
- (void)addBuildableProductReference:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)addBuildableReference:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)dvt_awakeFromXMLUnarchiver:(id)arg1;
- (void)resolveBuildableFromImport;
- (void)setScheme:(id)arg1;
@property(readonly) id <IDEBuildableProduct> buildableProduct; // @synthesize buildableProduct=_buildableProduct;
- (int)runnableType;
- (id)runnableUTIType:(id *)arg1;
- (BOOL)hasRunnablePath;
- (id)pathToRunnableForBuildParameters:(id)arg1;
- (BOOL)isBlueprint;
- (id)toolTip;
- (id)bundleIdentifier;
- (id)displayName;
- (id)initFromXMLUnarchiver:(id)arg1 archiveVersion:(float)arg2;
- (id)initWithBuildableProduct:(id)arg1 scheme:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IDEPlaygroundUpgrader : NSObject
{
}

- (void)_bumpPlaygroundSharedContextVersion:(id)arg1;
- (BOOL)_migratePlaygroundWithContext:(id)arg1 fromVersion5ToVersion6WithError:(id *)arg2;
- (BOOL)_migratePlaygroundWithContext:(id)arg1 fromVersion4ToVersion5WithError:(id *)arg2;
- (BOOL)_migratePlaygroundWithContext:(id)arg1 fromVersion3ToVersion4WithError:(id *)arg2;
- (BOOL)_migratePlaygroundWithContext:(id)arg1 fromVersion2ToVersion3WithError:(id *)arg2;
- (BOOL)_migratePlaygroundWithContext:(id)arg1 fromVersion1ToVersion2WithError:(id *)arg2;
- (BOOL)upgradePlaygroundWithContext:(id)arg1 toVersion:(id)arg2 error:(id *)arg3;
- (BOOL)upgradePlaygroundWithSharedContext:(id)arg1 error:(id *)arg2;

@end

@interface IDEDistributionMethodExport : IDEDistributionMethod
{
}

- (BOOL)isAppStoreBound;
- (int)supportedTask;

@end

@interface IDEProvisioningCommandInputs : NSObject
{
    NSString *_identityHash;
    NSString *_identityName;
    NSString *_profileName;
    NSString *_profileUUID;
    DVTFilePath *_profilePath;
    NSDictionary *_mergedEntitlements;
    NSDictionary *_provisionableExpandedEntitlements;
    NSString *_designatedRequirements;
    NSString *_appIdentifierPrefix;
    NSString *_teamIdentifierPrefix;
    NSArray *_errors;
    NSArray *_warnings;
}

+ (id)_identityNameFromSnapshot:(id)arg1;
+ (id)_identityHashFromSnapshot:(id)arg1;
+ (id)inputsFromEvaluation:(id)arg1;
@property(readonly) NSArray *warnings; // @synthesize warnings=_warnings;
@property(readonly) NSArray *errors; // @synthesize errors=_errors;
@property(readonly) NSString *teamIdentifierPrefix; // @synthesize teamIdentifierPrefix=_teamIdentifierPrefix;
@property(readonly) NSString *appIdentifierPrefix; // @synthesize appIdentifierPrefix=_appIdentifierPrefix;
@property(readonly) NSString *designatedRequirements; // @synthesize designatedRequirements=_designatedRequirements;
@property(readonly) NSDictionary *provisionableExpandedEntitlements; // @synthesize provisionableExpandedEntitlements=_provisionableExpandedEntitlements;
@property(readonly) NSDictionary *mergedEntitlements; // @synthesize mergedEntitlements=_mergedEntitlements;
@property(readonly) DVTFilePath *profilePath; // @synthesize profilePath=_profilePath;
@property(readonly) NSString *profileUUID; // @synthesize profileUUID=_profileUUID;
@property(readonly) NSString *profileName; // @synthesize profileName=_profileName;
@property(readonly) NSString *identityName; // @synthesize identityName=_identityName;
@property(readonly) NSString *identityHash; // @synthesize identityHash=_identityHash;
- (void).cxx_destruct;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
- (id)description;

@end

@interface IDERunGeneratesOutputAlertEvent : IDEAlertEvent
{
}

- (void)runInWorkspace:(id)arg1 context:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;

@end

@interface IDEDebugProcess : NSObject <IDEDebugTopNavigableModel>
{
    NSMutableArray *_memoryDatas;
    NSMutableArray *_memoryFaultedMemoryData;
    NSMutableArray *_delayedInvalidationQueues;
    NSMutableSet *_threadsAutoRefreshStackFrames;
    BOOL _threadsAutoRefreshStackFramesDone;
    int _PID;
    int _controlState;
    NSString *_associatedProcessUUID;
    IDELaunchSession *_launchSession;
    NSString *_name;
    NSString *_rawName;
    NSArray *_threads;
    NSArray *_queues;
    IDEThread *_currentThread;
    IDEStackFrame *_currentStackFrame;
    IDEStackFrame *_instructionPointerStackFrame;
    NSArray *_loadedCodeModules;
    unsigned long long _addressByteSize;
    IDEDebugSession *_parentDebugSession;
}

+ (id)keyPathsForValuesAffectingSubtitle;
+ (id)keyPathsForValuesAffectingThreads;
+ (void)initialize;
@property(retain, nonatomic) IDEDebugSession *parentDebugSession; // @synthesize parentDebugSession=_parentDebugSession;
@property(nonatomic) BOOL threadsAutoRefreshStackFramesDone; // @synthesize threadsAutoRefreshStackFramesDone=_threadsAutoRefreshStackFramesDone;
@property(readonly, nonatomic) unsigned long long addressByteSize; // @synthesize addressByteSize=_addressByteSize;
@property(readonly, nonatomic) NSArray *loadedCodeModules; // @synthesize loadedCodeModules=_loadedCodeModules;
@property(retain, nonatomic) IDEStackFrame *instructionPointerStackFrame; // @synthesize instructionPointerStackFrame=_instructionPointerStackFrame;
@property(retain, nonatomic) IDEStackFrame *currentStackFrame; // @synthesize currentStackFrame=_currentStackFrame;
@property(retain, nonatomic) IDEThread *currentThread; // @synthesize currentThread=_currentThread;
@property(copy, nonatomic) NSArray *queues; // @synthesize queues=_queues;
@property(copy, nonatomic) NSArray *threads; // @synthesize threads=_threads;
@property(nonatomic) int controlState; // @synthesize controlState=_controlState;
@property(nonatomic) int PID; // @synthesize PID=_PID;
@property(copy, nonatomic) NSString *name; // @synthesize name=_name;
@property(readonly, copy) NSString *associatedProcessUUID; // @synthesize associatedProcessUUID=_associatedProcessUUID;
- (void).cxx_destruct;
- (void)primitiveInvalidate;
- (void)symbolicatedThreadFromAddress:(unsigned long long)arg1 size:(unsigned long long)arg2 isLiteZone:(BOOL)arg3 handler:(CDUnknownBlockType)arg4;
- (id)symbolicatedThreadWithAddresses:(id)arg1;
- (void)deregisterThreadAutoRefreshesStackFrames:(id)arg1;
- (void)registerThreadAutoRefreshesStackFrames:(id)arg1;
- (void)recordedThreadsForAddress:(unsigned long long)arg1 handleOnMainQueueWithResultHandler:(CDUnknownBlockType)arg2;
- (void)shadowMemoryForAddress:(unsigned long long)arg1 numberOfBytes:(unsigned long long)arg2 handleOnMainQueueWithResultHandler:(CDUnknownBlockType)arg3;
- (void)memoryPointerDescriptionForAddress:(unsigned long long)arg1 handleOnMainQueueWithResultHandler:(CDUnknownBlockType)arg2;
- (void)removeMemoryFaultedMemoryDatum:(id)arg1;
- (void)addMemoryFaultedMemoryDatum:(id)arg1;
- (void)removeMemoryData:(id)arg1;
- (void)autoUpdateAllMemoryDatas;
- (id)readMemoryAtAddress:(unsigned long long)arg1 numberOfBytes:(unsigned long long)arg2 progressHandler:(CDUnknownBlockType)arg3 resultHandler:(CDUnknownBlockType)arg4;
- (id)readMemoryAtAddress:(unsigned long long)arg1 numberOfBytes:(unsigned long long)arg2 resultHandler:(CDUnknownBlockType)arg3;
- (void)rawMemoryDataForAddressExpression:(id)arg1 numberOfBytes:(unsigned long long)arg2 resultHandler:(CDUnknownBlockType)arg3;
- (id)memoryDataForUUID:(id)arg1;
- (id)memoryDataForAddressOfExpression:(id)arg1 numberOfBytes:(unsigned long long)arg2;
- (Class)classForMemoryData;
- (BOOL)isPaused;
@property(readonly) NSString *subtitle;
@property(readonly) NSString *rawName; // @synthesize rawName=_rawName;
@property(readonly) IDELaunchSession *launchSession; // @synthesize launchSession=_launchSession;
- (id)contentDelegateUIExtensionIdentifier;
- (id)init;
- (id)initWithDebugSession:(id)arg1;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly, nonatomic) NSArray *memoryDatas; // @dynamic memoryDatas;
@property(retain) NSMutableArray *mutableMemoryDatas; // @dynamic mutableMemoryDatas;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface IDEPlaygroundDefaults : NSObject
{
}

+ (BOOL)playgroundExecutionShouldSimulateHang;
+ (BOOL)playgroundShouldLogAdditionalProcessInfo;
+ (BOOL)playgroundUsesCoreFoundationResourceLinking;
+ (BOOL)playgroundUsesNativeMarkupRenderer;
+ (BOOL)playgroundDisplaysObjectLiterals;
+ (BOOL)playgroundUsesSingleViewEditor;
+ (BOOL)playgroundDiplaysResultControlsInMenu;
+ (BOOL)playgroundAuxiliarySourceEnabled;
+ (BOOL)playgroundUsesInlineToys;
+ (void)initialize;

@end

@interface IDEIndexClangTranslationUnit : NSObject
{
    NSString *_path;
    int _argc;
    const char **_argv;
    BOOL _isPCHFile;
    BOOL _shouldCreate;
    unsigned int _tuOptions;
    IDEIndexImportSession *_session;
    void *_cxIndex;
    struct CXTranslationUnitImpl *_cxTranslationUnit;
}

+ (void *)createCXIndexForSession:(id)arg1;
+ (void)initialize;
- (void).cxx_destruct;
- (void)dealloc;
- (void)discard;
- (void)discardTU;
- (void)discardArgs;
- (void)logMemoryUsage;
- (void)logFailure;
- (void)logInvocation;
- (void)indexUsingDataSource:(id)arg1;
@property(readonly, nonatomic) struct CXTranslationUnitImpl *cxTranslationUnit;
- (void)resetArguments:(id)arg1;
- (id)initPCHWithPath:(id)arg1 arguments:(id)arg2 session:(id)arg3 shouldCreate:(BOOL)arg4;
- (id)initWithPath:(id)arg1 arguments:(id)arg2 session:(id)arg3;

@end

@interface IDELogProvider : NSObject <DVTInvalidation>
{
    id _domainItem;
}

+ (void)initialize;
@property(readonly) id domainItem; // @synthesize domainItem=_domainItem;
- (void).cxx_destruct;
- (id)ideModelObjectTypeIdentifier;
@property(readonly) NSArray *logRecords;
- (void)primitiveInvalidate;
- (id)initWithDomainItem:(id)arg1;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface IDEOverridingBuildProperties : NSObject
{
    NSMutableDictionary *_macros;
    NSArray *_arrayRepresentation;
    unsigned long long _hash;
}

- (void).cxx_destruct;
- (id)dvt_detailedDebugDescription;
- (id)description;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
- (BOOL)isEmpty;
@property(readonly) NSArray *macroDefinitionTables;
@property(readonly, copy) DVTMacroDefinitionTable *macrosFromEnvironmentXcconfigFile;
@property(readonly, copy) DVTMacroDefinitionTable *macrosFromCommandLineXcconfigFile;
@property(readonly, copy) DVTMacroDefinitionTable *macrosFromCommandLine;
@property(readonly, copy) DVTMacroDefinitionTable *synthesizedMacros;
- (void)_setMacroDefinitionTable:(id)arg1 forLevel:(int)arg2;
- (id)macroDefinitionTableForLevel:(int)arg1;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)_copyUsingOverridingPropertiesClass:(Class)arg1 synthesizedMacros:(id)arg2;
- (id)copyWithSynthesizedMacros:(id)arg1;
- (id)initWithMacroDefinitionTable:(id)arg1;
- (id)init;

@end

@interface IDEMutableOverridingBuildProperties : IDEOverridingBuildProperties
{
}

@property(copy) DVTMacroDefinitionTable *macrosFromEnvironmentXcconfigFile;
@property(copy) DVTMacroDefinitionTable *macrosFromCommandLineXcconfigFile;
@property(copy) DVTMacroDefinitionTable *macrosFromCommandLine;
@property(copy) DVTMacroDefinitionTable *synthesizedMacros;
- (void)setMacroDefinitionTable:(id)arg1 forLevel:(int)arg2;

@end

@interface IDEObjCModernizationTarget : IDEMigrationTarget
{
    BOOL _enabled;
    NSString *_subTitle;
}

@property BOOL enabled; // @synthesize enabled=_enabled;
@property(readonly, copy) NSString *subTitle; // @synthesize subTitle=_subTitle;
- (void).cxx_destruct;
- (void)updateBuildSettings;
- (id)warningMessage;
- (id)initWithBlueprint:(id)arg1 migrationContext:(id)arg2;

@end

@interface IDELaunchSession : NSObject
{
    NSMutableArray *_debugSessions;
    NSMutableArray *_debuggingAdditions;
    NSMutableSet *_shellXPCLaunchSessions;
    NSMutableSet *_xpcLaunchSessions;
    DVTPerformanceMetric *_xpcDebuggingMetric;
    NSArray *_frameworkNamesIncludingExtensionsLinkedByExecutable;
    NSArray *_frameworkNamesIncludingExtensionsLinkedByExecutableForAllSlices;
    NSMutableSet *_gaugeLocations;
    BOOL _allConsoleAdaptorsTerminated;
    BOOL _hasAlreadyOutputExitString;
    DVTFuture *_appExtensionInstallFuture;
    DVTObservingToken *_appExtensionObserverToken;
    BOOL _debuggerShouldAttachToTarget;
    BOOL _wasDetached;
    BOOL _iconChanged;
    BOOL _representsAnXPCService;
    BOOL _hasExitCode;
    BOOL _hasCrashed;
    int _state;
    int _runnablePID;
    int _parentPID;
    int _simulatorPID;
    int _targetOutputState;
    IDEExecutionEnvironment *_executionEnvironment;
    IDESchemeActionRecord *_schemeActionRecord;
    IDEExecutionTracker *_executionTracker;
    IDEDebugSession *_currentDebugSession;
    id <IDETraceInferiorSession> _currentTraceInferiorSession;
    IDELaunchParametersSnapshot *_launchParameters;
    DVTFileDataType *_runnableType;
    IDESchemeCommand *_schemeCommand;
    IDERunDestination *_runDestination;
    NSString *_runnableDisplayName;
    IDELocationSimulator *_locationSimulator;
    NSError *_alertError;
    NSString *_explicitActivityViewTitle;
    NSArray *_xpcServices;
    XCTestConfiguration *_testConfiguration;
    long long _exitCode;
    NSMutableSet *_consoleAdaptors;
    NSMapTable *_targetConsoleAdaptorToTerminationToken;
    DVTObservingToken *_codeModulesObserver;
}

+ (id)watchLaunchOptionsForLaunchParameters:(id)arg1;
+ (id)notificationPayloadForFilePath:(id)arg1;
+ (id)languageArguments;
+ (BOOL)_isLaunchSession:(id)arg1 soleRecipientForAppExt:(id)arg2;
+ (BOOL)_unregisterLaunchSession:(id)arg1 asSoleRecipientForAppExt:(id)arg2;
+ (BOOL)_registerLaunchSession:(id)arg1 asSoleRecipientForAppExt:(id)arg2 error:(id *)arg3;
+ (id)keyPathsForValuesAffectingIsCurrentlyTracing;
+ (BOOL)automaticallyNotifiesObserversOfTargetOutputState;
+ (void)terminateLaunchSession:(id)arg1 inWorkspace:(id)arg2;
+ (void)terminateLaunchSession:(id)arg1;
+ (id)createLaunchSessionForCrashPoint:(id)arg1 inWorkspace:(id)arg2;
+ (id)createLaunchSessionForDebuggingAddition:(id)arg1 inWorkspace:(id)arg2 launchParameters:(id)arg3 runnableDisplayName:(id)arg4 runDestination:(id)arg5;
+ (id)launchSessionForReference:(id)arg1;
+ (void)_setLaunchSession:(id)arg1 forReference:(id)arg2;
+ (void)initialize;
@property(retain, nonatomic) DVTObservingToken *codeModulesObserver; // @synthesize codeModulesObserver=_codeModulesObserver;
@property(retain, nonatomic) NSMapTable *targetConsoleAdaptorToTerminationToken; // @synthesize targetConsoleAdaptorToTerminationToken=_targetConsoleAdaptorToTerminationToken;
@property(retain, nonatomic) NSMutableSet *consoleAdaptors; // @synthesize consoleAdaptors=_consoleAdaptors;
@property BOOL hasCrashed; // @synthesize hasCrashed=_hasCrashed;
@property long long exitCode; // @synthesize exitCode=_exitCode;
@property BOOL hasExitCode; // @synthesize hasExitCode=_hasExitCode;
@property(retain) XCTestConfiguration *testConfiguration; // @synthesize testConfiguration=_testConfiguration;
@property(copy) NSArray *xpcServices; // @synthesize xpcServices=_xpcServices;
@property BOOL representsAnXPCService; // @synthesize representsAnXPCService=_representsAnXPCService;
@property(copy) NSString *explicitActivityViewTitle; // @synthesize explicitActivityViewTitle=_explicitActivityViewTitle;
@property(copy) NSError *alertError; // @synthesize alertError=_alertError;
@property(readonly) IDELocationSimulator *locationSimulator; // @synthesize locationSimulator=_locationSimulator;
@property(readonly, nonatomic) int targetOutputState; // @synthesize targetOutputState=_targetOutputState;
@property(readonly, copy) NSString *runnableDisplayName; // @synthesize runnableDisplayName=_runnableDisplayName;
@property(retain, nonatomic) IDERunDestination *runDestination; // @synthesize runDestination=_runDestination;
@property(retain) IDESchemeCommand *schemeCommand; // @synthesize schemeCommand=_schemeCommand;
@property BOOL iconChanged; // @synthesize iconChanged=_iconChanged;
@property int simulatorPID; // @synthesize simulatorPID=_simulatorPID;
@property int parentPID; // @synthesize parentPID=_parentPID;
@property(nonatomic) int runnablePID; // @synthesize runnablePID=_runnablePID;
@property(readonly) DVTFileDataType *runnableType; // @synthesize runnableType=_runnableType;
@property(retain) IDELaunchParametersSnapshot *launchParameters; // @synthesize launchParameters=_launchParameters;
@property(readonly, copy) NSArray *debuggingAdditions; // @synthesize debuggingAdditions=_debuggingAdditions;
@property(retain) id <IDETraceInferiorSession> currentTraceInferiorSession; // @synthesize currentTraceInferiorSession=_currentTraceInferiorSession;
@property(nonatomic) BOOL wasDetached; // @synthesize wasDetached=_wasDetached;
@property(readonly, nonatomic) BOOL debuggerShouldAttachToTarget; // @synthesize debuggerShouldAttachToTarget=_debuggerShouldAttachToTarget;
@property(retain, nonatomic) IDEDebugSession *currentDebugSession; // @synthesize currentDebugSession=_currentDebugSession;
@property(nonatomic) int state; // @synthesize state=_state;
@property(retain) IDEExecutionTracker *executionTracker; // @synthesize executionTracker=_executionTracker;
@property(retain) IDESchemeActionRecord *schemeActionRecord; // @synthesize schemeActionRecord=_schemeActionRecord;
- (void).cxx_destruct;
- (void)performanceMetric_xpcDebuggingCheckpointWithLabel:(id)arg1;
- (void)performanceMetric_xpcDebuggingCompleted;
- (void)performanceMetric_xpcDebuggingStarted;
- (id)performanceMetric_xpcIdentifierForLaunchSession;
- (void)_handleXPCServiceObservation:(id)arg1;
- (void)_fillUpXPCServiceWithPid:(int)arg1 forServiceName:(id)arg2;
- (id)_findShellXPCLaunchSessionForServiceName:(id)arg1;
- (id)xpcLaunchSessions;
- (void)_cancelXPCPostLaunchActions;
- (void)_startXPCPostLaunchActions;
- (void)_startObservingXPCServicesAndAppExtensionsStage2;
- (id)_tweakEnvironmentVariablesForXPCDebugging;
- (void)_startObservingXPCServicesAndAppExtensions;
- (id)_environmentVariablesWithTestingFilteredOut:(id)arg1;
- (id)_createLaunchSessionForXPCServiceName:(id)arg1 withLaunchParameters:(id)arg2;
- (void)_cancelAllXPCRelatedWork;
@property(readonly) NSArray *frameworkNamesIncludingExtensionsLinkedByExecutableForAllSlices;
@property(readonly) NSArray *frameworkNamesIncludingExtensionsLinkedByExecutable;
- (id)_frameworkNamesIncludingExtensionsLinkedByExecutableForCpuType:(int)arg1;
- (id)debuggingAdditionMatchingClass:(id)arg1;
- (id)debuggingAdditionMatchingID:(id)arg1;
- (void)addNewGaugeLocation:(id)arg1 withPriority:(unsigned long long)arg2;
- (void)addNewGaugeLocation:(id)arg1;
- (id)existingGaugeLocationForURL:(id)arg1;
- (id)referenceWhenAlive;
- (BOOL)isAlive;
@property(readonly) BOOL supportsDebugSession;
@property(readonly) BOOL isCurrentlyTracing;
- (void)_willExpire;
- (void)_invalidateExecutionEnvironment;
- (id)_frameworkNamesIncludingExtensionsFromLoadedCodeModules;
- (id)_createDebuggingAdditionForExtension:(id)arg1 availableBinariesNames:(id)arg2 anyMatchCriteriaFailuresDueToAvailableBinaries:(char *)arg3;
- (BOOL)_extensionHasLinkedFrameworkNameMatchCriteria:(id)arg1;
- (void)_didStart;
- (void)_removeConsoleAdaptorObservations:(id)arg1;
- (void)_handleConsoleAdaptorOutputTerminated:(id)arg1;
- (void)_handleConsoleItemAdded:(id)arg1;
- (void)removeConsoleAdaptor:(id)arg1;
- (void)addConsoleAdaptor:(id)arg1;
@property(readonly, copy) NSMutableSet *kvoConsoleAdaptors;
- (void)setTargetOutputState:(int)arg1;
@property(readonly) IDEExecutionEnvironment *executionEnvironment; // @synthesize executionEnvironment=_executionEnvironment;
@property(readonly) int CPUType;
- (void)dealloc;
- (id)initWithExecutionEnvironment:(id)arg1 launchParameters:(id)arg2 runnableDisplayName:(id)arg3 runnableType:(id)arg4 runDestination:(id)arg5;

// Remaining properties
@property(copy) NSArray *debugSessions; // @dynamic debugSessions;
@property(readonly) NSSet *gaugeLocations; // @dynamic gaugeLocations;
@property(readonly, copy) NSMutableArray *mutableDebugSessions; // @dynamic mutableDebugSessions;
@property(retain, nonatomic) NSMutableArray *mutableDebuggingAdditions; // @dynamic mutableDebuggingAdditions;
@property(readonly) NSMutableSet *mutableGaugeLocations; // @dynamic mutableGaugeLocations;

@end

@interface IDESyntheticLaunchSession : IDELaunchSession
{
    NSString *_debuggingAdditionIdentifier;
}

@property(copy) NSString *debuggingAdditionIdentifier; // @synthesize debuggingAdditionIdentifier=_debuggingAdditionIdentifier;
- (void).cxx_destruct;
- (void)_didStart;
- (BOOL)supportsDebugSession;

@end

@interface IDEBreakpointArchivingProxy : NSObject
{
    NSString *_breakpointExtensionID;
    BOOL _wasSuccessfullyUnarchived;
    IDEBreakpoint *_proxiedBreakpoint;
}

+ (id)_breakpointExtensions;
+ (id)_extensionIDForBreakpoint:(id)arg1;
+ (id)breakpointProxyForBreakpoint:(id)arg1;
@property(readonly) BOOL wasSuccessfullyUnarchived; // @synthesize wasSuccessfullyUnarchived=_wasSuccessfullyUnarchived;
@property(readonly) IDEBreakpoint *proxiedBreakpoint; // @synthesize proxiedBreakpoint=_proxiedBreakpoint;
- (void).cxx_destruct;
- (void)addBreakpointContent:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setBreakpointExtensionIDFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)dvt_encodeRelationshipsWithXMLArchiver:(id)arg1 version:(id)arg2;
- (void)dvt_encodeAttributesWithXMLArchiver:(id)arg1 version:(id)arg2;

@end

@interface IDELocationScenarioReference : IDESchemeOptionReference
{
    int _referenceType;
}

@property int referenceType; // @synthesize referenceType=_referenceType;
- (void)dvt_encodeRelationshipsWithXMLArchiver:(id)arg1 version:(id)arg2;
- (void)dvt_encodeAttributesWithXMLArchiver:(id)arg1 version:(id)arg2;
- (id)initFromXMLUnarchiver:(id)arg1 archiveVersion:(float)arg2;

@end

@interface IDESourceControlDocumentLocation : DVTTextDocumentLocation
{
    IDESourceControlBranch *_branch;
    NSString *_revisionName;
    DVTSourceControlWorkingCopy *_workingCopy;
    NSURL *_currentDocumentURL;
    unsigned long long _status;
}

@property(readonly) unsigned long long status; // @synthesize status=_status;
@property(readonly) NSURL *currentDocumentURL; // @synthesize currentDocumentURL=_currentDocumentURL;
@property(readonly) NSString *revisionName; // @synthesize revisionName=_revisionName;
@property(readonly) IDESourceControlBranch *branch; // @synthesize branch=_branch;
@property(readonly) DVTSourceControlWorkingCopy *workingCopy; // @synthesize workingCopy=_workingCopy;
- (void).cxx_destruct;
- (id)description;
- (BOOL)isEqualDisregardingTimestamp:(id)arg1;
- (id)workingTreeItem;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
@property(readonly) NSString *relativeDocumentPath;
@property(readonly) NSURL *relativeDocumentURL;
@property(readonly) NSString *relativeCurrentDocumentPath;
@property(readonly) NSURL *relativeCurrentDocumentURL;
- (id)initWithDocumentURL:(id)arg1 currentDocumentURL:(id)arg2 workingCopy:(id)arg3 branch:(id)arg4 revisionName:(id)arg5;
- (id)initWithDocumentURL:(id)arg1 currentDocumentURL:(id)arg2 workingCopy:(id)arg3 branch:(id)arg4 revisionName:(id)arg5 status:(unsigned long long)arg6;
- (id)initWithDocumentURL:(id)arg1 currentDocumentURL:(id)arg2 workingCopy:(id)arg3;
- (id)initWithDocumentURL:(id)arg1 currentDocumentURL:(id)arg2 workingCopy:(id)arg3 timestamp:(id)arg4 lineRange:(struct _NSRange)arg5;
- (id)initWithDocumentLocation:(id)arg1 workingCopy:(id)arg2 branch:(id)arg3 revisionName:(id)arg4;
- (id)initWithDocumentURL:(id)arg1 workingCopy:(id)arg2 branch:(id)arg3 revisionName:(id)arg4;
- (id)initWithDocumentURL:(id)arg1 workingCopy:(id)arg2 branch:(id)arg3 revisionName:(id)arg4 status:(unsigned long long)arg5;

@end

@interface IDELocation : NSObject
{
    NSNumber *_latitude;
    NSNumber *_longitude;
    NSDate *_time;
    NSNumber *_speed;
    NSNumber *_course;
    IDELocationScenario *_scenario;
}

@property(readonly) IDELocationScenario *scenario; // @synthesize scenario=_scenario;
@property(readonly) NSNumber *course; // @synthesize course=_course;
@property(readonly) NSNumber *speed; // @synthesize speed=_speed;
@property(readonly) NSDate *time; // @synthesize time=_time;
@property(readonly) NSNumber *longitude; // @synthesize longitude=_longitude;
@property(readonly) NSNumber *latitude; // @synthesize latitude=_latitude;
- (void).cxx_destruct;
- (BOOL)hasSameCoordinateAs:(id)arg1;
- (id)description;
- (id)locationWithSpeed:(id)arg1 course:(id)arg2;
- (id)initWithLatitude:(id)arg1 longitude:(id)arg2 time:(id)arg3 speed:(id)arg4 course:(id)arg5;
- (id)initWithLatitude:(id)arg1 longitude:(id)arg2 time:(id)arg3;
- (id)initWithLatitude:(id)arg1 longitude:(id)arg2;

@end

@interface IDEDistributionUploadStep : IDEDistributionStep
{
}

+ (id)propertyListForContext:(id)arg1;
+ (id)availableOptionsForPropertyList;
- (BOOL)loadFromPropertyList:(id)arg1 error:(id *)arg2;
- (id)providedOutputContextPropertyNames;
- (id)requiredInputContextPropertyNames;

@end

@interface IDEDistributionOptionICloudEnvironment : IDEDistributionOptionEntitlementProcessor
{
}

+ (id)propertyListForContext:(id)arg1;
+ (id)availableOptionsForPropertyList;
- (id)matchingPrcoessorFromProcessors:(id)arg1;
- (id)makeNewPrcoessorWithDistributionMethod:(id)arg1 item:(id)arg2 itemEntitlements:(id)arg3;

@end

@interface IDECompressedStackFrame : NSObject <IDEDebugNavigableModel>
{
    unsigned long long _hash;
    NSString *_associatedProcessUUID;
    NSArray *_representedStackFrames;
}

@property(readonly, copy) NSArray *representedStackFrames; // @synthesize representedStackFrames=_representedStackFrames;
@property(readonly, copy) NSString *associatedProcessUUID; // @synthesize associatedProcessUUID=_associatedProcessUUID;
- (void).cxx_destruct;
@property(readonly) unsigned long long hash;
- (BOOL)isEqual:(id)arg1;
@property(readonly) IDELaunchSession *launchSession;
@property(readonly) BOOL hasSymbols;
@property(readonly, copy) NSString *displayName;
@property(readonly, copy) NSNumber *frameNumber;
@property(readonly, copy) NSString *name;
- (id)init;
- (id)initWithStackFrames:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;

@end

@interface IDEDistributioniTunesConnectAccountStep : IDEDistributionStep
{
}

+ (id)propertyListForContext:(id)arg1;
+ (id)availableOptionsForPropertyList;
- (BOOL)loadFromPropertyList:(id)arg1 error:(id *)arg2;
- (id)providedOutputContextPropertyNames;
- (id)requiredInputContextPropertyNames;

@end

@interface IDEArchiveCommandLineVerb : IDESchemeBasedCommandLineVerb
{
}

+ (int)performWithEnvironment:(id)arg1;
+ (id)optionDefinitionsWithEnvironment:(id)arg1;

@end

@interface IDELocalizationWorkWriteStrings : IDELocalizationWorkContext <IDELocalizationWorkProvider>
{
}

+ (id)contextWithParent:(id)arg1 dryRun:(BOOL)arg2 strings:(id)arg3 comments:(id)arg4 container:(id)arg5 group:(id)arg6 language:(id)arg7;
- (id)work;
@property(readonly, copy) NSValue *createdNewSubitem;
@property(readonly, copy) DVTFilePath *path;
- (id)language;
- (id)group;
- (id)container;
- (id)comments;
- (id)strings;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IDEIndexNewMainFile : IDEIndexNewFile
{
    IDEIndexImportSession *_session;
    NSString *_target;
    NSString *_source;
    DVTFilePath *_pchPath;
    NSMutableArray *_files;
    NSSet *_dirtyFiles;
    long long _unitId;
    BOOL _deferred;
}

@property(nonatomic, getter=isDeferred) BOOL deferred; // @synthesize deferred=_deferred;
@property(nonatomic) long long unitId; // @synthesize unitId=_unitId;
@property(retain, nonatomic) NSSet *dirtyFiles; // @synthesize dirtyFiles=_dirtyFiles;
@property(readonly, nonatomic) NSArray *files; // @synthesize files=_files;
@property(retain, nonatomic) DVTFilePath *pchPath; // @synthesize pchPath=_pchPath;
@property(copy, nonatomic) NSString *source; // @synthesize source=_source;
@property(copy, nonatomic) NSString *target; // @synthesize target=_target;
@property(retain, nonatomic) IDEIndexImportSession *session; // @synthesize session=_session;
- (void).cxx_destruct;
- (void)didSubmit;
- (void)submit;
- (long long)realGroupIdForId:(long long)arg1;
- (long long)realFileIdForId:(long long)arg1;
@property(readonly, nonatomic) long long realUnitId;
- (id)importer;
- (void)addFile:(id)arg1;
- (id)initWithPath:(id)arg1 modified:(id)arg2;

@end

@interface IDESourceTrees : NSObject
{
}

+ (BOOL)stringContainsSourceTreeReference:(id)arg1;
+ (id)stringByExpandingSourceTreeReferencesInString:(id)arg1;
+ (Class)sourceTreeProviderClass;

@end

@interface IDEProfileOptimizationActionController : NSObject
{
    BOOL _doingCodeCoverage;
    NSString *_bundleIDForAppToOptimize;
    NSMutableSet *_clangProfileDataGenerationDirs_private;
    NSMutableSet *_clangProfileFinalOutputFiles;
    NSMutableSet *_macPGODirectories;
    NSMutableSet *_allBundleIDs;
    IDEContainer *_container;
    NSString *_schemeName;
    IDEWorkspace *_workspace;
    NSString *_runnableDisplayName;
}

+ (id)aggregatedProfileDataFileFor:(id)arg1 buildParameters:(id)arg2 doingCodeCoverage:(BOOL)arg3;
+ (id)dataGenerationDirectoryFor:(id)arg1 buildParameters:(id)arg2 doingCodeCoverage:(BOOL)arg3;
+ (id)relevantBuildablesForOptimizationProfileGenerationForSchemeCommand:(id)arg1 buildSchemeAction:(id)arg2;
@property(retain) NSString *runnableDisplayName; // @synthesize runnableDisplayName=_runnableDisplayName;
@property __weak IDEWorkspace *workspace; // @synthesize workspace=_workspace;
@property(retain) NSString *schemeName; // @synthesize schemeName=_schemeName;
@property(retain) IDEContainer *container; // @synthesize container=_container;
@property(retain) NSMutableSet *allBundleIDs; // @synthesize allBundleIDs=_allBundleIDs;
@property(retain) NSMutableSet *macPGODirectories; // @synthesize macPGODirectories=_macPGODirectories;
@property(retain) NSMutableSet *clangProfileFinalOutputFiles; // @synthesize clangProfileFinalOutputFiles=_clangProfileFinalOutputFiles;
@property(retain) NSMutableSet *clangProfileDataGenerationDirs_private; // @synthesize clangProfileDataGenerationDirs_private=_clangProfileDataGenerationDirs_private;
@property BOOL doingCodeCoverage; // @synthesize doingCodeCoverage=_doingCodeCoverage;
@property(copy) NSString *bundleIDForAppToOptimize; // @synthesize bundleIDForAppToOptimize=_bundleIDForAppToOptimize;
- (void).cxx_destruct;
- (void)_handleDownloadSucceeded:(id)arg1;
- (id)_fileNameForProfraw;
- (void)_addProfileDataPath:(id)arg1 toGroup:(id)arg2;
- (id)_addFileGroupForPath:(id)arg1 container:(id)arg2;
- (void)_notifyOptimizationProfileCreationFailedWithError:(id)arg1;
- (void)_notifyOptimizationProfileCreationSucceeded;
- (id)_profileFileNameForBundleID:(id)arg1 settingEnvironmentVariables:(id)arg2 error:(id *)arg3;
- (void)_addOptimizationProfileFromFilePath:(id)arg1 toContainer:(id)arg2;
- (BOOL)_mergeOptimizationProfilesFromDirectoryAtPath:(id)arg1 toFileAtPath:(id)arg2 returningError:(id *)arg3;
- (BOOL)_mergeOptimizationProfiles:(id)arg1 aggregateFile:(id)arg2 toFileAtPath:(id)arg3 returningError:(id *)arg4;
- (void)downloadAndMergePGOFilesForTargetDevice:(id)arg1;
- (BOOL)createLLVMProfileFileNameForBundleID:(id)arg1 settingEnvironmentVariables:(id)arg2 error:(id *)arg3;
- (BOOL)createOutputDirectoriesWithOutError:(id *)arg1;
- (BOOL)addOptimizationProfileFilePath:(id)arg1 dataGenerationDirectory:(id)arg2 container:(id)arg3 outError:(id *)arg4;
- (id)initWithWorkspace:(id)arg1 schemeName:(id)arg2 runnableDisplayName:(id)arg3;
@property(readonly, copy) NSSet *clangProfileDataGenerationDirs;

@end

@interface IDESchemeActionTestAttachment : NSObject
{
    NSString *_payloadFileName;
    BOOL _hasPayload;
    NSString *_uniformTypeIdentifier;
    NSString *_name;
    NSDate *_timestamp;
    NSDictionary *_userInfo;
    long long _lifetime;
    long long _inActivityIdentifier;
    NSUUID *_activityUUID;
    NSString *_attachmentsDirectory;
}

@property(readonly) BOOL hasPayload; // @synthesize hasPayload=_hasPayload;
@property(copy) NSString *attachmentsDirectory; // @synthesize attachmentsDirectory=_attachmentsDirectory;
@property(readonly, copy) NSUUID *activityUUID; // @synthesize activityUUID=_activityUUID;
@property(readonly) long long inActivityIdentifier; // @synthesize inActivityIdentifier=_inActivityIdentifier;
@property(readonly) long long lifetime; // @synthesize lifetime=_lifetime;
@property(readonly, copy) NSDictionary *userInfo; // @synthesize userInfo=_userInfo;
@property(copy) NSDate *timestamp; // @synthesize timestamp=_timestamp;
@property(readonly, copy) NSString *name; // @synthesize name=_name;
@property(readonly, copy) NSString *uniformTypeIdentifier; // @synthesize uniformTypeIdentifier=_uniformTypeIdentifier;
- (void).cxx_destruct;
@property(readonly) NSDictionary *dictionaryRepresentation;
- (id)initWithDictionaryRepresentation:(id)arg1 activityUUID:(id)arg2;
- (void)deletePayload;
- (id)_loadAttachmentData;
- (void)_savePayload:(id)arg1;
@property(readonly, copy) NSData *payload;
@property(readonly, copy) NSString *payloadFilePath;
@property(readonly, copy) NSString *payloadFileName;
- (void)_resolveLazyPayload:(id)arg1;
- (id)initWithUniformTypeIdentifier:(id)arg1 name:(id)arg2 timestamp:(id)arg3 userInfo:(id)arg4 lifetime:(long long)arg5 inActivityIdentifier:(long long)arg6 fileName:(id)arg7 activityUUID:(id)arg8 attachmentsDirectory:(id)arg9;
- (id)initWithAttachment:(id)arg1 inActivityIdentifier:(long long)arg2 activityUUID:(id)arg3 attachmentsDirectory:(id)arg4;

@end

@interface IDEProvisionableManager : NSObject <IDEProvisioningManagerRepairObserver, DVTInvalidation, IDEProvisioningStyleDataSource>
{
    unsigned int _currentGeneration;
    BOOL _disableEvaluation;
    BOOL _configurationsFinishedLoading;
    id <IDEProvisionable> _provisionable;
    IDEProvisioningManager *_manager;
    IDEProvisionableStatusEvaluator *_statusEvaluator;
    NSArray *_statusErrors;
    DVTDelayedInvocation *_delayedStatusEvaluation;
    NSArray *_configurations;
    DVTNotificationToken *_profilesDidChangeToken;
    DVTNotificationToken *_certificatesDidChangeToken;
    DVTNotificationToken *_provisionableDidChangeToken;
    DVTNotificationToken *_repairActionToken;
    DVTNotificationToken *_accountsToken;
    NSSet *_entitlementsFilePaths;
    DVTPerformanceMetric *_loadingMetric;
}

+ (id)keyPathsForValuesAffectingProvisioningSelectionDataSources;
+ (id)keyPathsForValuesAffectingTeams;
+ (id)keyPathsForValuesAffectingFinishedLoading;
+ (id)statusEvaluatorQueue;
+ (void)initialize;
@property(retain, nonatomic) DVTPerformanceMetric *loadingMetric; // @synthesize loadingMetric=_loadingMetric;
@property(retain, nonatomic) NSSet *entitlementsFilePaths; // @synthesize entitlementsFilePaths=_entitlementsFilePaths;
@property(nonatomic) BOOL configurationsFinishedLoading; // @synthesize configurationsFinishedLoading=_configurationsFinishedLoading;
@property(retain) DVTNotificationToken *accountsToken; // @synthesize accountsToken=_accountsToken;
@property(retain) DVTNotificationToken *repairActionToken; // @synthesize repairActionToken=_repairActionToken;
@property(retain) DVTNotificationToken *provisionableDidChangeToken; // @synthesize provisionableDidChangeToken=_provisionableDidChangeToken;
@property(retain) DVTNotificationToken *certificatesDidChangeToken; // @synthesize certificatesDidChangeToken=_certificatesDidChangeToken;
@property(retain) DVTNotificationToken *profilesDidChangeToken; // @synthesize profilesDidChangeToken=_profilesDidChangeToken;
@property(retain) NSArray *configurations; // @synthesize configurations=_configurations;
@property BOOL disableEvaluation; // @synthesize disableEvaluation=_disableEvaluation;
@property(retain) DVTDelayedInvocation *delayedStatusEvaluation; // @synthesize delayedStatusEvaluation=_delayedStatusEvaluation;
@property(copy, nonatomic) NSArray *statusErrors; // @synthesize statusErrors=_statusErrors;
@property(retain, nonatomic) IDEProvisionableStatusEvaluator *statusEvaluator; // @synthesize statusEvaluator=_statusEvaluator;
@property(retain) IDEProvisioningManager *manager; // @synthesize manager=_manager;
@property(retain) id <IDEProvisionable> provisionable; // @synthesize provisionable=_provisionable;
- (void).cxx_destruct;
@property(readonly) BOOL requiresImmediateUserActionResolution;
- (void)_performRepairsForConfigurations:(id)arg1 retryExistingRepairs:(BOOL)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (void)_processEvaluationResults:(id)arg1;
@property(readonly, nonatomic, getter=isProvisioningStyleSelectable) BOOL provisioningStyleSelectable;
@property(readonly) NSArray *provisioningSelectionDataSources;
- (void)setProvisioningStyle:(long long)arg1;
@property(readonly) NSOrderedSet *teams;
@property(readonly, getter=isFinishedLoading) BOOL finishedLoading;
@property(readonly) id <IDEMutableProvisionable> mutableProvisionable;
- (void)delayEvaluationUntilAfterPerformingBlock:(CDUnknownBlockType)arg1 evaluateImmediately:(BOOL)arg2;
- (void)primitiveInvalidate;
- (void)immediatelyEvaluateWithOverrides:(id)arg1 deviceSnapshots:(id)arg2 shouldRepairIfNecessary:(BOOL)arg3 isXBS:(BOOL)arg4 callbackQueue:(id)arg5 callback:(CDUnknownBlockType)arg6;
- (void)_updateEntitlementsFilePathsFromSnapshot:(id)arg1;
- (void)_setUpObservations;
- (void)_evaluateStatusWithStatusEvaluator:(id)arg1 overrides:(id)arg2;
- (void)_commonInit;
- (id)initWithProvisionable:(id)arg1 manager:(id)arg2;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface _IDEProvisionableManagerConfiguration : NSObject <IDEProvisioningAssetSelectionDataSource>
{
    BOOL _repairBusy;
    BOOL _finishedLoading;
    IDEProvisionableManager *_provisionableManager;
    NSString *_configurationName;
    NSOrderedSet *_provisioningProfiles;
    NSOrderedSet *_ineligibleProvisioningProfiles;
    NSString *_repairBusyReason;
    IDEProvisionableStatusEvaluation *_evaluation;
    IDEProvisioningUserAction *_repairUserAction;
    NSError *_repairError;
}

+ (id)keyPathsForValuesAffectingNeedsRepair;
+ (id)keyPathsForValuesAffectingErrors;
+ (id)keyPathsForValuesAffectingProvisioningStyle;
+ (id)configurationWithManager:(id)arg1 configurationName:(id)arg2 evaluation:(id)arg3;
@property(retain, nonatomic) NSError *repairError; // @synthesize repairError=_repairError;
@property(retain, nonatomic) IDEProvisioningUserAction *repairUserAction; // @synthesize repairUserAction=_repairUserAction;
@property(nonatomic) BOOL finishedLoading; // @synthesize finishedLoading=_finishedLoading;
@property(readonly, nonatomic) IDEProvisionableStatusEvaluation *evaluation; // @synthesize evaluation=_evaluation;
@property(retain, nonatomic) NSString *repairBusyReason; // @synthesize repairBusyReason=_repairBusyReason;
@property(nonatomic, getter=isRepairBusy) BOOL repairBusy; // @synthesize repairBusy=_repairBusy;
@property(readonly, nonatomic) NSOrderedSet *ineligibleProvisioningProfiles; // @synthesize ineligibleProvisioningProfiles=_ineligibleProvisioningProfiles;
@property(readonly, nonatomic) NSOrderedSet *provisioningProfiles; // @synthesize provisioningProfiles=_provisioningProfiles;
@property(readonly, nonatomic) NSString *configurationName; // @synthesize configurationName=_configurationName;
@property(readonly, nonatomic) IDEProvisionableManager *provisionableManager; // @synthesize provisionableManager=_provisionableManager;
- (void).cxx_destruct;
- (void)_repairCompletedWithError:(id)arg1;
- (id)_wrappedRepairError:(id)arg1;
- (void)_repairRequiresUserAction:(id)arg1;
- (void)_waitForRepair:(id)arg1;
- (BOOL)_matchesRepairable:(id)arg1;
@property(readonly, nonatomic) BOOL needsRepair;
@property(readonly, nonatomic) BOOL showEmptyProfileSelectionPlaceholder;
@property(readonly, nonatomic) IDEProfileQualification *profileQualification;
- (id)provisioningProfileDownloaderContextWithError:(id *)arg1;
- (void)locateEligibleProfiles:(id *)arg1 ineligibleProfiles:(id *)arg2;
@property(retain, nonatomic) id <IDEProvisioningBasicTeam> team;
@property(retain, nonatomic) IDEProvisioningBasicProfile *provisioningProfile;
- (id)provisioningProfileIdentifier;
@property(retain, nonatomic) IDEProvisioningBasicSigningIdentity *signingIdentity;
- (id)_userDescriptionForSigningIdentityIdentifier:(id)arg1;
@property(readonly, nonatomic) NSOrderedSet *signingIdentities;
@property(readonly) BOOL isSigningIdentityChangeable;
@property(readonly) BOOL wantsTeamSelectionRegardlessOfSigningStyle;
@property(readonly) long long signingStyle;
@property(readonly, getter=isProfileChangeable) BOOL profileChangeable;
@property(readonly) long long profileSupport;
- (id)_errorsWithRepairIssuesSuppressed;
- (id)_errorsWithRepairIssues;
@property(readonly, nonatomic) NSArray *errors;
@property(readonly, nonatomic) BOOL isTeamSelectionRequired;
@property(readonly, nonatomic) long long provisioningStyle;

@end

@interface IDELocalizationWorkContext : IDEStreamWorkContext <DVTInvalidation>
{
}

+ (void)initialize;
+ (id)contextWithParent:(id)arg1 values:(id)arg2;
+ (id)contextWithParent:(id)arg1 dryRun:(BOOL)arg2;
+ (id)contextWithParent:(id)arg1;
+ (id)contextWithValues:(id)arg1;
- (void)primitiveInvalidate;
@property(readonly) BOOL dryRun;
@property(readonly) IDELocalizationWorkContext *parentContext;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface IDELocalizationWork : NSObject
{
}

+ (id)groupStreamFromFileReference:(id)arg1 language:(id)arg2;
+ (id)fileReferenceStreamForName:(id)arg1 directoryPath:(id)arg2 superitem:(id)arg3 target:(id)arg4;
+ (id)addItemAtFilePathToSCM:(id)arg1 workspace:(id)arg2;
+ (id)addFileReference:(id)arg1;

@end

@interface IDEBuildLogProvider : IDELogProvider
{
}

+ (id)keyPathsForValuesAffectingLogRecords;
- (id)ideModelObjectTypeIdentifier;
- (id)logRecords;

@end

@interface _IDELocalizationXLIFFComparisonIssueLocation : DVTComparisonDocumentLocation
{
}

- (long long)compare:(id)arg1;
- (id)newLocation;
- (id)oldLocation;

@end

@interface IDELocalizationXLIFFComparisonIssue : NSObject
{
    int _category;
    NSString *_message;
    DVTComparisonDocumentLocation *_location;
}

@property(readonly) DVTComparisonDocumentLocation *location; // @synthesize location=_location;
@property(readonly) int category; // @synthesize category=_category;
@property(readonly) NSString *message; // @synthesize message=_message;
- (void).cxx_destruct;
- (long long)compare:(id)arg1;
- (id)description;
- (id)initWithMessage:(id)arg1 category:(int)arg2 oldLocation:(id)arg3 newLocation:(id)arg4;

@end

@interface IDELocalizationXLIFFComparisonFile : NSObject
{
    BOOL _foundInProject;
    NSString *_original;
    DVTComparisonDocumentLocation *_location;
}

@property(readonly) BOOL foundInProject; // @synthesize foundInProject=_foundInProject;
@property(readonly) DVTComparisonDocumentLocation *location; // @synthesize location=_location;
@property(readonly) NSString *original; // @synthesize original=_original;
- (void).cxx_destruct;
- (long long)compare:(id)arg1;
- (id)initWithOriginal:(id)arg1 oldLocation:(id)arg2 newLocation:(id)arg3 foundInProject:(BOOL)arg4;

@end

@interface IDELocalizationXLIFFComparisonContext : IDELocalizationWorkContext
{
    NSMutableArray *_issues;
    NSMutableArray *_filesWithChanges;
    NSURL *_destinationURL;
}

+ (id)contextWithDestinationURL:(id)arg1;
@property(readonly) NSArray *filesWithChanges; // @synthesize filesWithChanges=_filesWithChanges;
@property(readonly) NSArray *issues; // @synthesize issues=_issues;
@property(retain) NSURL *destinationURL; // @synthesize destinationURL=_destinationURL;
- (void).cxx_destruct;
- (void)recordFileChangeForFile:(id)arg1 importUrl:(id)arg2 exportUrl:(id)arg3 foundInProject:(BOOL)arg4;
- (void)recordMissingFile:(id)arg1 appendedIncomingRange:(struct _NSRange)arg2 appendedProjectRange:(struct _NSRange)arg3 importUrl:(id)arg4 exportUrl:(id)arg5;
- (void)recordExtraFile:(id)arg1 appendedIncomingRange:(struct _NSRange)arg2 appendedProjectRange:(struct _NSRange)arg3 importUrl:(id)arg4 exportUrl:(id)arg5;
- (void)recordExtraTUInFile:(id)arg1 idString:(id)arg2 appendedIncomingRange:(struct _NSRange)arg3 appendedProjectRange:(struct _NSRange)arg4 importUrl:(id)arg5 exportUrl:(id)arg6;
- (void)recordMissingTUInFile:(id)arg1 idString:(id)arg2 appendedIncomingRange:(struct _NSRange)arg3 appendedProjectRange:(struct _NSRange)arg4 importUrl:(id)arg5 exportUrl:(id)arg6;
- (void)recordEmptyTargetInFile:(id)arg1 idString:(id)arg2 appendedIncomingRange:(struct _NSRange)arg3 appendedProjectRange:(struct _NSRange)arg4 importUrl:(id)arg5 exportUrl:(id)arg6;
- (void)recordMismatchedSourceInFile:(id)arg1 idString:(id)arg2 incomingStringValue:(id)arg3 projectStringValue:(id)arg4 appendedIncomingRange:(struct _NSRange)arg5 appendedProjectRange:(struct _NSRange)arg6 importUrl:(id)arg7 exportUrl:(id)arg8;
- (void)recordIssue:(int)arg1 message:(id)arg2 appendedIncomingRange:(struct _NSRange)arg3 appendedProjectRange:(struct _NSRange)arg4 importUrl:(id)arg5 exportUrl:(id)arg6;
- (id)init;

@end

@interface _IDELocalizationXLIFFTextualRepresentation : NSObject
{
    NSMutableString *_representation;
}

@property(retain) NSMutableString *representation; // @synthesize representation=_representation;
- (void).cxx_destruct;
- (unsigned long long)length;
- (BOOL)createDirectoryAndWriteToURL:(id)arg1 error:(id *)arg2;
- (struct _NSRange)appendResource:(id)arg1 translationUnits:(id)arg2;
- (void)appendResourceEnd:(id)arg1;
- (void)appendResourceStart:(id)arg1;
- (struct _NSRange)appendGap;
- (struct _NSRange)appendTranslationUnit:(id)arg1;
- (id)init;

@end

@interface IDEArchivePathsSnapshot : NSObject <NSCopying>
{
    DVTFilePath *_archivePath;
    DVTFilePath *_archiveProductsPath;
    DVTFilePath *_archiveDSYMsPath;
}

@property(retain) DVTFilePath *archiveDSYMsPath; // @synthesize archiveDSYMsPath=_archiveDSYMsPath;
@property(retain) DVTFilePath *archiveProductsPath; // @synthesize archiveProductsPath=_archiveProductsPath;
@property(retain) DVTFilePath *archivePath; // @synthesize archivePath=_archivePath;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface IDEArchiveManager : NSObject
{
    DVTDispatchLock *_archiveManagerLock;
    NSFileManager *_fileManager;
    NSMutableArray *_archives;
    _Bool _hasScanned;
    DVTObservingToken *_distributionArchivesLocationObservingToken;
}

+ (void)initialize;
+ (id)sharedArchiveManager;
- (void).cxx_destruct;
@property(readonly) NSSet *supportedFileDataTypeIdentifiers;
- (BOOL)installArchiveAtPath:(id)arg1 revealInstalledArchive:(BOOL)arg2 error:(id *)arg3;
- (BOOL)installArchiveAtPath:(id)arg1 revealInstalledArchive:(BOOL)arg2;
- (id)_installedArchiveAtPath:(id)arg1;
- (void)deleteArchives:(id)arg1;
- (void)deleteArchive:(id)arg1;
@property(copy) NSArray *archives; // @dynamic archives;
- (void)_populateArchivesIfNeeded;
- (void)_refreshArchives;
- (id)_allPotentialArchivePathsWithin:(id)arg1;
- (void)_checkPathForArchive:(id)arg1 andAddToArray:(id)arg2;
- (BOOL)_couldBeArchivePath:(id)arg1;
- (void)_revealArchiveAtPath:(id)arg1;
- (void)archiveInstalledProductsDirectoryWithPath:(id)arg1 auxiliaryFilesDirectoryPath:(id)arg2 schemeName:(id)arg3 archiveName:(id)arg4 platform:(id)arg5 toolchain:(id)arg6 revealNewArchive:(BOOL)arg7 workspace:(id)arg8 completionBlock:(CDUnknownBlockType)arg9;
- (id)init;

// Remaining properties
@property(readonly) NSMutableArray *mutableArchives; // @dynamic mutableArchives;

@end

@interface IDEProvisioningWorkspaceMonitor : NSObject <IDEProvisioningLedgerDelegate, DVTInvalidation>
{
    NSObject<OS_dispatch_queue> *_logQueue;
    IDETypeIdentifier *_logDomainType;
    IDETypeIdentifier *_logSectionDomainType;
    NSMutableDictionary *_ledgerSections;
    IDEProvisioningLogDVTLogAspectListener *_provisioningManagerListener;
    IDEProvisioningLogDVTLogAspectListener *_provisioningMechanicListener;
    IDEProvisioningLogDVTLogAspectListener *_codesigningAllTheThingsListener;
    IDEProvisioningLogDVTLogAspectListener *_signingCertificateManagerListener;
    NSMutableString *_orphanedLogEntries;
    id <IDEProvisioningWorkspaceMonitorDelegate> _delegate;
    IDELogStore *_logStore;
    IDEActivityLogSection *_activeSessionLogSection;
    IDEWorkspace *_workspace;
}

+ (id)keyPathsForValuesAffectingLogRecords;
+ (void)initialize;
@property(retain) IDEWorkspace *workspace; // @synthesize workspace=_workspace;
@property(retain) IDEActivityLogSection *activeSessionLogSection; // @synthesize activeSessionLogSection=_activeSessionLogSection;
@property(retain) IDELogStore *logStore; // @synthesize logStore=_logStore;
@property(nonatomic) __weak id <IDEProvisioningWorkspaceMonitorDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)debug_addMessageWithTitle:(id)arg1 details:(id)arg2;
- (void)_nolock_removeSection:(id)arg1 entry:(id)arg2;
- (id)_nolock_logSectionForLedgerEntry:(id)arg1;
- (id)_subtitleForEntry:(id)arg1;
- (id)_domainTypeForEntry:(id)arg1;
- (id)_repairableForEntry:(id)arg1;
- (id)_blueprintForEntry:(id)arg1;
- (void)_closeSection:(id)arg1 entry:(id)arg2;
- (void)_logSectionForLedgerEntry:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)_setupMainLogRecorder;
- (void)_setupObservers;
- (void)_invalidateObservers;
- (void)provisioningLedger:(id)arg1 didCloseLedgerEntry:(id)arg2 withError:(id)arg3;
- (void)provisioningLedger:(id)arg1 didOpenLedgerEntry:(id)arg2;
- (void)provisioningLedger:(id)arg1 didAddDetails:(id)arg2 toLedgerEntry:(id)arg3;
- (void)loadProvisioningLogsForWorkspace:(id)arg1;
@property(readonly) NSArray *logRecords;
- (void)primitiveInvalidate;
- (id)init;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface IDEValueHistoryToyResult : IDETimestampedPlaygroundResult
{
    id <IDEPlaygroundLoggerLogEntry> _toyValue;
    NSString *_label;
}

@property(readonly, copy) NSString *label; // @synthesize label=_label;
@property(readonly) id <IDEPlaygroundLoggerLogEntry> toyValue; // @synthesize toyValue=_toyValue;
- (void).cxx_destruct;
- (id)initWithSubjectIdentifier:(id)arg1 resultDate:(id)arg2 toyValue:(id)arg3 resultLabel:(id)arg4;
- (id)initWithChannelIdentifier:(id)arg1 subjectIdentifier:(id)arg2 sequenceNumber:(unsigned long long)arg3;

@end

@interface IDEQueryBasedTextFragmentIndexPrescanner : NSObject <IDEBatchFindQueryDelegate, IDETextFragmentIndexPrescanner>
{
    IDEWorkspace *_workspace;
    IDEBatchFindPrescanTextQuery *_query;
    CDUnknownBlockType _completionObserver;
}

- (void).cxx_destruct;
- (void)findNavigatorQuery:(id)arg1 isStalledOnFilePaths:(id)arg2;
- (void)findNavigatorQuery:(id)arg1 didFinishGeneratingLazyChildrenOfResult:(id)arg2;
- (void)findNavigatorQuery:(id)arg1 didGenerateResults:(id)arg2;
- (void)findNavigatorQueryDidComplete:(id)arg1;
- (void)findNavigatorQuery:(id)arg1 progressUpdate:(long long)arg2;
- (void)startWithCompletionObserver:(CDUnknownBlockType)arg1;
- (id)initWithWorkspace:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IDEBatchFindPrescanTextQuery : IDEBatchFindAbstractWorkspacePerFileQuery
{
}

- (id)activityReportTitle;
- (void)processFilePath:(id)arg1 withIndex:(id)arg2 progressNotifier:(id)arg3 resultOrder:(long long)arg4 completionHandler:(CDUnknownBlockType)arg5;
- (BOOL)requiresEditorDocumentsToSaveBeforeSearching;
- (BOOL)trimsIndexAfterCompletion;

@end

@interface IDERunDeviceService : DVTDeviceService
{
}

- (id)operationWorkerWithLaunchSession:(id)arg1 error:(id *)arg2;

@end

@interface IDEAppIDAbstractFlightCheck : NSObject <IDEFlightChecking>
{
    BOOL _failed;
    IDEAppIDFeatureCoordinator *_coordinator;
    NSError *_resolutionError;
}

+ (id)keyPathsForValuesAffectingAutomaticallyResolvable;
+ (id)keyPathsForValuesAffectingRequiresAccountAndTeamSelection;
+ (id)keyPathsForValuesAffectingStatus;
+ (void)initialize;
@property(retain, nonatomic) NSError *resolutionError; // @synthesize resolutionError=_resolutionError;
@property(nonatomic) BOOL failed; // @synthesize failed=_failed;
@property(retain, nonatomic) IDEAppIDFeatureCoordinator *coordinator; // @synthesize coordinator=_coordinator;
- (void).cxx_destruct;
@property(readonly, copy, nonatomic) NSString *resolvingTitle;
@property(readonly, copy, nonatomic) NSString *pastTitle;
@property(readonly, copy, nonatomic) NSString *title;
- (void)validate;
- (void)unresolveWithContext:(id)arg1;
- (void)resolveWithContext:(id)arg1;
- (void)revert;
@property(readonly, nonatomic, getter=isAutomaticallyResolvable) BOOL automaticallyResolvable;
@property(readonly, nonatomic, getter=isLongRunning) BOOL longRunning;
@property(readonly, nonatomic) BOOL requiresAccountAndTeamSelection;
@property(readonly, nonatomic) int status;
- (void)_updateState;
- (id)expectedFeaturesWithError:(id *)arg1;
- (void)_setUpObservations;
- (id)initWithAppIDFeatureCoordinator:(id)arg1;
- (void)primitiveInvalidate;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface IDEAppIDFeatureFlightCheck : IDEAppIDAbstractFlightCheck
{
    DVTPortalProfileFeature *_feature;
}

@property(readonly, nonatomic) DVTPortalProfileFeature *feature; // @synthesize feature=_feature;
- (void).cxx_destruct;
- (id)resolvingTitle;
- (id)pastTitle;
- (id)title;
- (id)expectedFeaturesWithError:(id *)arg1;
- (id)initWithAppIDFeatureCoordinator:(id)arg1 feature:(id)arg2;

@end

@interface IDEAppIDContainerFlightCheck : IDEAppIDAbstractFlightCheck
{
    id <IDEAppIDContainerFlightCheckDelegate> _delegate;
    DVTPortalContainerType *_containerType;
}

@property(readonly, nonatomic) DVTPortalContainerType *containerType; // @synthesize containerType=_containerType;
@property(retain, nonatomic) id <IDEAppIDContainerFlightCheckDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)validate;
- (id)resolvingTitle;
- (id)pastTitle;
- (id)title;
- (id)expectedFeaturesWithError:(id *)arg1;
- (void)primitiveInvalidate;
- (id)initWithAppIDFeatureCoordinator:(id)arg1 containerType:(id)arg2;

@end

@interface IDEDisassemblyStorageSupport : NSObject
{
}

+ (unsigned long long)_integerFromHexString:(id)arg1;
+ (unsigned long long)_integerAddressFromLineOfDisassembly:(id)arg1;
+ (id)hexAddressFromLineOfDisassembly:(id)arg1;
+ (id)addressForLineNumber:(unsigned long long)arg1 inDisassembly:(id)arg2;
+ (unsigned long long)_lineNumberForAddress:(id)arg1 inLinesOfDisassembly:(id)arg2;
+ (unsigned long long)lineNumberForAddress:(id)arg1 inDisassembly:(id)arg2;
+ (BOOL)isDisassemblyStorageURL:(id)arg1;

@end

@interface IDECoverageAnnotationSubrange : NSObject
{
    unsigned long long _startColumn;
    unsigned long long _endColumn;
    long long _executionCount;
}

@property(nonatomic) long long executionCount; // @synthesize executionCount=_executionCount;
@property(nonatomic) unsigned long long endColumn; // @synthesize endColumn=_endColumn;
@property(nonatomic) unsigned long long startColumn; // @synthesize startColumn=_startColumn;

@end

@interface IDECoverageAnnotationBuilder : NSObject
{
}

- (id)combineCoverageAnnotations:(id)arg1;
- (BOOL)lineContainsAnUncoveredRange:(id)arg1;
- (BOOL)lineContainsMixedRanges:(id)arg1;
- (id)coverageAnnotationsForFile:(id)arg1;

@end

@interface IDECoverageAnnotationLineCoverage : NSObject
{
    unsigned long long _lineCoverageType;
    long long _lineNumber;
    long long _executionCount;
    DVTSourceFileLineCoverageData *_lineCoverageData;
    NSArray *_subranges;
}

@property(copy, nonatomic) NSArray *subranges; // @synthesize subranges=_subranges;
@property(retain, nonatomic) DVTSourceFileLineCoverageData *lineCoverageData; // @synthesize lineCoverageData=_lineCoverageData;
@property(nonatomic) long long executionCount; // @synthesize executionCount=_executionCount;
@property(nonatomic) long long lineNumber; // @synthesize lineNumber=_lineNumber;
@property(nonatomic) unsigned long long lineCoverageType; // @synthesize lineCoverageType=_lineCoverageType;
- (void).cxx_destruct;
- (id)description;

@end

@interface IDECoverageAnnotationLineCoverageRange : NSObject
{
    long long _executionCount;
    NSIndexSet *_lineIndexes;
    unsigned long long _lineCoverageType;
    NSArray *_subranges;
}

@property(copy, nonatomic) NSArray *subranges; // @synthesize subranges=_subranges;
@property(nonatomic) unsigned long long lineCoverageType; // @synthesize lineCoverageType=_lineCoverageType;
@property(copy, nonatomic) NSIndexSet *lineIndexes; // @synthesize lineIndexes=_lineIndexes;
@property(nonatomic) long long executionCount; // @synthesize executionCount=_executionCount;
- (void).cxx_destruct;
- (id)description;

@end

@interface IDETestBundleDeviceRecord : NSObject
{
    NSString *_platformIdentifier;
    NSString *_modelCode;
    NSString *_cpuKind;
    NSNumber *_cpuCount;
    NSNumber *_cpuSpeedInMHz;
    NSNumber *_busSpeedInMHz;
    NSNumber *_physicalCPUCoresPerPackage;
    NSNumber *_logicalCPUCoresPerPackage;
}

@property(copy) NSNumber *logicalCPUCoresPerPackage; // @synthesize logicalCPUCoresPerPackage=_logicalCPUCoresPerPackage;
@property(copy) NSNumber *physicalCPUCoresPerPackage; // @synthesize physicalCPUCoresPerPackage=_physicalCPUCoresPerPackage;
@property(copy) NSNumber *busSpeedInMHz; // @synthesize busSpeedInMHz=_busSpeedInMHz;
@property(copy) NSNumber *cpuSpeedInMHz; // @synthesize cpuSpeedInMHz=_cpuSpeedInMHz;
@property(copy) NSNumber *cpuCount; // @synthesize cpuCount=_cpuCount;
@property(copy) NSString *cpuKind; // @synthesize cpuKind=_cpuKind;
@property(copy) NSString *modelCode; // @synthesize modelCode=_modelCode;
@property(copy) NSString *platformIdentifier; // @synthesize platformIdentifier=_platformIdentifier;
- (void).cxx_destruct;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
- (id)description;
- (id)initWithDictionary:(id)arg1;
- (id)dictionaryRepresentation;
- (id)initWithDeviceRecord:(id)arg1;
- (id)initWithDevice:(id)arg1;
- (id)initWithPlatformIdentifier:(id)arg1 modelCode:(id)arg2 cpuKind:(id)arg3 cpuCount:(id)arg4 cpuSpeedInMHz:(id)arg5 busSpeedInMHz:(id)arg6 physicalCPUCoresPerPackage:(id)arg7 logicalCPUCoresPerPackage:(id)arg8;
- (id)init;

@end

@interface IDETestBundleRunDestinationRecord : NSObject
{
    NSString *_targetArchitecture;
    IDETestBundleDeviceRecord *_targetDevice;
    IDETestBundleDeviceRecord *_localComputer;
}

@property(retain) IDETestBundleDeviceRecord *localComputer; // @synthesize localComputer=_localComputer;
@property(retain) IDETestBundleDeviceRecord *targetDevice; // @synthesize targetDevice=_targetDevice;
@property(retain) NSString *targetArchitecture; // @synthesize targetArchitecture=_targetArchitecture;
- (void).cxx_destruct;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
- (id)description;
- (id)dictionaryRepresentation;
- (id)initWithDictionary:(id)arg1;
- (id)initWithRunDestinationRecord:(id)arg1;
- (id)initWithTargetArchitecture:(id)arg1 targetDeviceRecord:(id)arg2 localComputerRecord:(id)arg3;
- (id)init;

@end

@interface IDEFolderRootGroup : IDEGroup
{
}

- (BOOL)_structureEditRemoveSubitemsShouldCloseDocumentsUnderPathWithoutSaving;
- (BOOL)allowRemovingContainerGroup;
- (BOOL)structureEditSetName:(id)arg1 inContext:(id)arg2;
- (BOOL)canStructureEditName;
- (BOOL)structureEditRemoveSubitemsAtIndexes:(id)arg1 error:(id *)arg2;
- (BOOL)canStructureEditRemoveSubitemsAtIndexes:(id)arg1;
- (BOOL)structureEditSortSubitemsAtIndexes:(id)arg1 byNameOrByType:(BOOL)arg2;
- (BOOL)canStructureEditSortSubitemsAtIndexes:(id)arg1 byNameOrByType:(BOOL)arg2;
- (BOOL)canStructureEditInsertFileURLs:(id)arg1 atIndex:(unsigned long long)arg2;
- (BOOL)canStructureEditInsertSubitems:(id)arg1 atIndex:(unsigned long long)arg2;
- (BOOL)allowUserModificationOfSubitems;
- (BOOL)createNewSubgroupAtIndex:(unsigned long long)arg1;
- (BOOL)structureEditingCanAddNewSubgroup;
- (BOOL)subitemsAreEditable;

@end

@interface IDESourceKitCompletionsArray : NSArray
{
    IDESourceKitResponse *_response;
    IDESourceKitUIDSet *_UID;
    CDStruct_4c46f3f5 _completions;
    id *_items;
    unsigned long long _itemCount;
}

- (void).cxx_destruct;
- (id)objectAtIndex:(unsigned long long)arg1;
- (unsigned long long)count;
- (void)dealloc;
- (id)initWithSourceKitResponse:(id)arg1 UIDSet:(id)arg2;

@end

@interface IDESourceKitCompletionItem : NSObject
{
    CDStruct_4c46f3f5 _obj;
    IDESourceKitResponse *_response;
    IDESourceKitUIDSet *_UID;
    double _priority;
    double _fuzzyMatchingScore;
    NSString *_name;
}

@property(readonly) NSString *name; // @synthesize name=_name;
@property(nonatomic) double fuzzyMatchingScore; // @synthesize fuzzyMatchingScore=_fuzzyMatchingScore;
@property(nonatomic) double priority; // @synthesize priority=_priority;
- (void).cxx_destruct;
- (BOOL)isKindOfClass:(Class)arg1;
- (id)description;
@property(readonly) BOOL notRecommended;
@property(readonly) DVTSourceCodeSymbolKind *symbolKind;
@property(readonly) NSAttributedString *descriptionText;
@property(readonly, copy) NSString *parentText;
@property(readonly) NSString *completionText;
@property(readonly) NSString *displayType;
@property(readonly) NSString *displayText;
- (id)initWithSourceKitDictionary:(CDStruct_4c46f3f5)arg1 completionResponse:(id)arg2 UIDSet:(id)arg3;

@end

@interface IDEPlaygroundAuxiliarySourceMonitor : NSObject <DVTInvalidation>
{
    IDEPlaygroundCommonSharedContext *_context;
    IDEPlaygroundAuxiliarySourceMonitor *_dependency;
    NSDate *_lastModificationDate;
    NSSet *_sourcesDirectorySwiftFiles;
    NSArray *__monitoredFrameworksDirectories;
    DVTObservingToken *__sourcesDirectorySwiftFileObserverToken;
    DVTObservingToken *__frameworkSearchPathsObserverToken;
    DVTObservingToken *__dependencyModificationObserverToken;
    NSDictionary *__sourcesFileContentsHashes;
}

+ (void)initialize;
@property(retain, nonatomic) NSDictionary *_sourcesFileContentsHashes; // @synthesize _sourcesFileContentsHashes=__sourcesFileContentsHashes;
@property(retain, nonatomic) DVTObservingToken *_dependencyModificationObserverToken; // @synthesize _dependencyModificationObserverToken=__dependencyModificationObserverToken;
@property(retain, nonatomic) DVTObservingToken *_frameworkSearchPathsObserverToken; // @synthesize _frameworkSearchPathsObserverToken=__frameworkSearchPathsObserverToken;
@property(retain, nonatomic) DVTObservingToken *_sourcesDirectorySwiftFileObserverToken; // @synthesize _sourcesDirectorySwiftFileObserverToken=__sourcesDirectorySwiftFileObserverToken;
@property(retain, nonatomic, setter=_setMonitoredFrameworksDirectories:) NSArray *_monitoredFrameworksDirectories; // @synthesize _monitoredFrameworksDirectories=__monitoredFrameworksDirectories;
@property(copy, nonatomic) NSSet *sourcesDirectorySwiftFiles; // @synthesize sourcesDirectorySwiftFiles=_sourcesDirectorySwiftFiles;
@property(retain, nonatomic) NSDate *lastModificationDate; // @synthesize lastModificationDate=_lastModificationDate;
@property(readonly) __weak IDEPlaygroundAuxiliarySourceMonitor *dependency; // @synthesize dependency=_dependency;
@property(readonly, nonatomic) IDEPlaygroundCommonSharedContext *context; // @synthesize context=_context;
- (void).cxx_destruct;
- (id)_hashesForSwiftFiles:(id)arg1;
- (void)sourceDirectorySwiftFilesUpdated;
- (void)primitiveInvalidate;
- (id)initWithPlaygroundContext:(id)arg1 dependency:(id)arg2;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface IDESourceKitClassSymbol : IDESourceKitContainerSymbol
{
}

- (BOOL)isKindOfClass:(Class)arg1;
- (id)allInterfaces;
- (id)interfaces;
- (id)allProtocols;
- (id)protocols;
- (id)allOccurrencesOfMembers:(id)arg1;
- (id)allSubclasses;
- (id)subclasses;
- (id)allSuperclasses;
- (id)superclasses;
- (id)categories;
- (id)gkInspectableProperties;
- (id)ibOutletCollectionProperties;
- (id)ibOutletCollectionVariables;
- (id)ibOutletCollections;
- (id)ibOutletProperties;
- (id)ibOutletVariables;
- (id)ibOutlets;
- (id)ibActionMethods;
- (id)properties;
- (id)instanceVariables;
- (id)classVariables;
- (id)instanceMethods;
- (id)classMethods;

@end

@interface IDELocalizationLanguageImportContext : IDELocalizationWorkContext
{
    NSURL *_sourceUrl;
    IDEContainer<IDELocalizedContainer> *_container;
    NSXMLDocument *_importXLIFF;
}

+ (id)contextWithParent:(id)arg1 sourceUrl:(id)arg2 container:(id)arg3 importXLIFF:(id)arg4;
@property(retain) NSXMLDocument *importXLIFF; // @synthesize importXLIFF=_importXLIFF;
@property(retain) IDEContainer<IDELocalizedContainer> *container; // @synthesize container=_container;
@property(retain) NSURL *sourceUrl; // @synthesize sourceUrl=_sourceUrl;
- (void).cxx_destruct;
- (void)primitiveInvalidate;

@end

@interface IDELocalizationImporterContext : IDELocalizationWorkContext <IDELocalizationWorkProvider>
{
    BOOL _allowProjectChanges;
    BOOL _shouldContinue;
    NSURL *_sourceUrl;
    IDEContainer<IDELocalizedContainer> *_container;
    NSString *_sourceLanguage;
    CDUnknownBlockType _onNeedsReview;
    IDELocalizationXLIFFComparisonContext *_comparison;
    NSString *_targetLanguage;
    IDELocalizationLanguageExportContext *_languageExportContext;
    IDELocalizationLanguageImportContext *_languageImportContext;
}

+ (id)contextWithParent:(id)arg1 sourceUrl:(id)arg2 container:(id)arg3 sourceLanguage:(id)arg4 allowProjectChanges:(BOOL)arg5 onNeedsReview:(CDUnknownBlockType)arg6;
@property BOOL shouldContinue; // @synthesize shouldContinue=_shouldContinue;
@property(retain) IDELocalizationLanguageImportContext *languageImportContext; // @synthesize languageImportContext=_languageImportContext;
@property(retain) IDELocalizationLanguageExportContext *languageExportContext; // @synthesize languageExportContext=_languageExportContext;
@property(retain) NSString *targetLanguage; // @synthesize targetLanguage=_targetLanguage;
@property(retain) IDELocalizationXLIFFComparisonContext *comparison; // @synthesize comparison=_comparison;
@property(copy) CDUnknownBlockType onNeedsReview; // @synthesize onNeedsReview=_onNeedsReview;
@property BOOL allowProjectChanges; // @synthesize allowProjectChanges=_allowProjectChanges;
@property(retain) NSString *sourceLanguage; // @synthesize sourceLanguage=_sourceLanguage;
@property(retain) IDEContainer<IDELocalizedContainer> *container; // @synthesize container=_container;
@property(retain) NSURL *sourceUrl; // @synthesize sourceUrl=_sourceUrl;
- (void).cxx_destruct;
- (id)writeWorkWithFileChanges:(BOOL)arg1;
- (id)work;
- (void)primitiveInvalidate;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IDELocalizationImporter : NSObject <IDELocalizationWorkProgress, DVTInvalidation>
{
    IDEStream *_importWork;
    IDELocalizationImporterContext *_importContext;
    long long _workDone;
    long long _workOutstanding;
    DVTNotificationToken *_localizationPhaseObserver;
    DVTNotificationToken *_localizationWorkItemIncrementObserver;
    DVTNotificationToken *_localizationWorkItemDecrementObserver;
    BOOL _complete;
    long long _progress;
    NSString *_phase;
    NSString *_workTitle;
    CDUnknownBlockType _onErrorBlock;
    CDUnknownBlockType _onCompletedBlock;
}

+ (void)initialize;
+ (id)importerFromURL:(id)arg1 container:(id)arg2 sourceLanguage:(id)arg3 allowProjectChanges:(BOOL)arg4 onNeedsReview:(CDUnknownBlockType)arg5;
@property(copy) CDUnknownBlockType onCompletedBlock; // @synthesize onCompletedBlock=_onCompletedBlock;
@property(copy) CDUnknownBlockType onErrorBlock; // @synthesize onErrorBlock=_onErrorBlock;
@property(readonly, copy) NSString *workTitle; // @synthesize workTitle=_workTitle;
@property(copy) NSString *phase; // @synthesize phase=_phase;
@property BOOL complete; // @synthesize complete=_complete;
@property long long progress; // @synthesize progress=_progress;
- (void).cxx_destruct;
- (void)cancel;
- (void)start;
- (void)primitiveInvalidate;
- (id)initWithImportContext:(id)arg1;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface IDEDistributionAppThinningStep : IDEDistributionProcessingStep
{
}

+ (_Bool)runsPerThinningVariant;
- (_Bool)runWithError:(id *)arg1;
- (_Bool)shouldSkip;
- (id)providedOutputContextPropertyNames;
- (id)requiredInputContextPropertyNames;
- (id)name;

@end

@interface IDETemplateTextSubstitutionOperation : DVTOperation
{
    NSArray *_paths;
    DVTFilePath *_primaryPath;
}

@property(copy) DVTFilePath *primaryPath; // @synthesize primaryPath=_primaryPath;
@property(copy) NSArray *paths; // @synthesize paths=_paths;
- (void).cxx_destruct;

@end

@interface IDETemplateKind : NSObject
{
    Class _instantiationContextClass;
    IDETemplateFactory *_factory;
    NSArray *_conformedToTemplateKinds;
    DVTExtension *_extension;
    NSString *_assistantIdentifier;
}

+ (id)targetTemplateKind;
+ (id)packageTemplateKind;
+ (id)projectTemplateKind;
+ (id)playgroundTemplateKind;
+ (id)fileTemplateKind;
+ (id)allTemplateKinds;
+ (id)templateKindForIdentifier:(id)arg1;
+ (id)_templateKindForExtension:(id)arg1;
+ (void)initialize;
@property(readonly, copy) NSString *assistantIdentifier; // @synthesize assistantIdentifier=_assistantIdentifier;
@property(readonly) DVTExtension *extension; // @synthesize extension=_extension;
- (void).cxx_destruct;
- (id)nextAssistantIdentifierForWorkspace:(id)arg1;
- (id)newTemplateInstantiationContext;
- (Class)instantiationContextClass;
@property(readonly, nonatomic) BOOL prefersStandaloneWorkspace;
@property(readonly, nonatomic) BOOL requiresProject;
@property(readonly, nonatomic) BOOL wantsToolbarInSimpleFilesWorkspace;
@property(readonly, nonatomic) BOOL wantsSimpleFilesWorkspace;
- (id)createdObjectTypeName;
- (id)_possiblyInheritedValueForExtensionKey:(id)arg1;
- (BOOL)conformsToTemplateKind:(id)arg1;
@property(readonly, copy) NSArray *conformedToTemplateKinds; // @synthesize conformedToTemplateKinds=_conformedToTemplateKinds;
@property(readonly) Class templateClass;
@property(readonly) IDETemplateFactory *factory; // @synthesize factory=_factory;
- (id)description;
- (id)initWithExtension:(id)arg1;

@end

@interface IDEDistributionSigningMethodStep : IDEDistributionStep
{
}

+ (id)propertyListForContext:(id)arg1;
+ (id)availableOptionsForPropertyList;
- (BOOL)loadFromPropertyList:(id)arg1 error:(id *)arg2;
- (id)providedOutputContextPropertyNames;
- (id)requiredInputContextPropertyNames;

@end

@interface IDEWorkspaceIssueProvider : IDEIssueProvider
{
    id _modelObjectDidChangeObserver;
    DVTObservingToken *_referencedContainersObserverToken;
    NSMapTable *_referencedContainersToIssueObserverTokensMapTable;
    NSMapTable *_referencedContainersToProviderContextsMapTable;
    DVTObservingToken *_blueprintsObserverToken;
    NSMapTable *_blueprintsToIssueObserverTokensMapTable;
    NSMapTable *_blueprintsToProviderContextsMapTable;
}

+ (int)providerType;
+ (void)initialize;
- (void).cxx_destruct;
- (id)ideModelObjectTypeIdentifier;
- (id)displayNameForIssueTypeIdentifier:(id)arg1;
- (void)_blueprintsDidChange;
- (void)_referencedContainersDidChange;
- (id)_integrityIssuesForDataSource:(id)arg1;
- (id)_issueForMessage:(id)arg1;
- (void)primitiveInvalidate;
- (id)initWithIssueManager:(id)arg1 extension:(id)arg2;

@end

@interface IDEWorkspaceIssueProviderContext : NSObject
{
    IDEIssueProvider *_issueProvider;
    id <IDEIssueLogDataSource> _dataSource;
    unsigned long long _hash;
}

@property(readonly) id <IDEIssueLogDataSource> dataSource; // @synthesize dataSource=_dataSource;
@property(readonly) IDEIssueProvider *issueProvider; // @synthesize issueProvider=_issueProvider;
- (void).cxx_destruct;
- (id)description;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
- (id)initWithIssueManager:(id)arg1 dataSource:(id)arg2;

@end

@interface IDEPlaygroundDebuggerLaunchParameters : NSObject <NSSecureCoding>
{
    BOOL _shouldDisableConsoleToySTDERR;
    unsigned int _uid;
    NSArray *_arguments;
    NSDictionary *_environment;
    DVTFilePath *_workingDirectory;
}

+ (BOOL)supportsSecureCoding;
@property(readonly) BOOL shouldDisableConsoleToySTDERR; // @synthesize shouldDisableConsoleToySTDERR=_shouldDisableConsoleToySTDERR;
@property(readonly) unsigned int uid; // @synthesize uid=_uid;
@property(readonly) DVTFilePath *workingDirectory; // @synthesize workingDirectory=_workingDirectory;
@property(readonly) NSDictionary *environment; // @synthesize environment=_environment;
@property(readonly) NSArray *arguments; // @synthesize arguments=_arguments;
- (void).cxx_destruct;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithArguments:(id)arg1 environment:(id)arg2 workingDirectory:(id)arg3 uid:(unsigned int)arg4 disableConsoleToySTDERR:(BOOL)arg5;

@end

@interface IDEPlaygroundPreparationParameters : NSObject <NSSecureCoding>
{
    unsigned long long _hash;
    BOOL _reuseProcess;
    DVTDevice *_device;
    DVTFilePath *_executablePath;
    DVTFilePath *_sdkPath;
    NSString *_playgroundName;
    NSArray *_librarySearchPaths;
    NSArray *_frameworkSearchPaths;
    DVTFilePath *_standardLibraryLocation;
    DVTFilePath *_playgroundLoggerLibraryLocation;
    DVTFilePath *_lldbLocation;
    NSArray *_auxiliarySourceFrameworkLocations;
    DVTFilePath *_symlinkedResourcesDirectory;
    NSArray *_resourceSearchPaths;
    DVTFilePath *_containerPath;
    IDEPlaygroundDebuggerLaunchParameters *_debuggerLaunchParameters;
}

+ (BOOL)supportsSecureCoding;
@property(retain) IDEPlaygroundDebuggerLaunchParameters *debuggerLaunchParameters; // @synthesize debuggerLaunchParameters=_debuggerLaunchParameters;
@property(readonly) DVTFilePath *containerPath; // @synthesize containerPath=_containerPath;
@property(readonly) NSArray *resourceSearchPaths; // @synthesize resourceSearchPaths=_resourceSearchPaths;
@property(readonly) DVTFilePath *symlinkedResourcesDirectory; // @synthesize symlinkedResourcesDirectory=_symlinkedResourcesDirectory;
@property(readonly) NSArray *auxiliarySourceFrameworkLocations; // @synthesize auxiliarySourceFrameworkLocations=_auxiliarySourceFrameworkLocations;
@property(readonly) DVTFilePath *lldbLocation; // @synthesize lldbLocation=_lldbLocation;
@property(readonly) DVTFilePath *playgroundLoggerLibraryLocation; // @synthesize playgroundLoggerLibraryLocation=_playgroundLoggerLibraryLocation;
@property(readonly) DVTFilePath *standardLibraryLocation; // @synthesize standardLibraryLocation=_standardLibraryLocation;
@property(readonly) NSArray *frameworkSearchPaths; // @synthesize frameworkSearchPaths=_frameworkSearchPaths;
@property(readonly) NSArray *librarySearchPaths; // @synthesize librarySearchPaths=_librarySearchPaths;
@property(readonly, copy) NSString *playgroundName; // @synthesize playgroundName=_playgroundName;
@property(readonly) BOOL reuseProcess; // @synthesize reuseProcess=_reuseProcess;
@property(readonly) DVTFilePath *sdkPath; // @synthesize sdkPath=_sdkPath;
@property(readonly) DVTFilePath *executablePath; // @synthesize executablePath=_executablePath;
@property(readonly) DVTDevice *device; // @synthesize device=_device;
- (void).cxx_destruct;
- (id)debugDescription;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
- (id)_comparisonKeyPaths;
- (id)_auxiliarySourceFrameworkLocationsAsSet;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithExecutablePath:(id)arg1 sdk:(id)arg2 reuseProcess:(BOOL)arg3 device:(id)arg4 playgroundName:(id)arg5 librarySearchPaths:(id)arg6 frameworkSearchPaths:(id)arg7 standardLibraryLocation:(id)arg8 playgroundLoggerLibraryLocation:(id)arg9 lldbLocation:(id)arg10 auxiliarySourceFrameworkLocations:(id)arg11 symlinkedResourcesDirectory:(id)arg12 resourceSearchPaths:(id)arg13 containerPath:(id)arg14;

@end

@interface IDEPlaygroundExecutionParameters : NSObject <NSSecureCoding>
{
    DVTLineOffsetAwareStringWrapper *_sourceCodeToExecute;
    DVTLineOffsetAwareStringWrapper *_sourceCodePreambleToExecute;
    NSURL *_documentFileURL;
    NSNumber *_documentContentTimestamp;
    NSNumber *_autoTerminationDelay;
    IDEPlaygroundPreparationParameters *_preparationParameters;
}

+ (BOOL)supportsSecureCoding;
@property(readonly) IDEPlaygroundPreparationParameters *preparationParameters; // @synthesize preparationParameters=_preparationParameters;
@property(readonly) NSNumber *autoTerminationDelay; // @synthesize autoTerminationDelay=_autoTerminationDelay;
@property(readonly) NSNumber *documentContentTimestamp; // @synthesize documentContentTimestamp=_documentContentTimestamp;
@property(readonly) NSURL *documentFileURL; // @synthesize documentFileURL=_documentFileURL;
@property(readonly, copy) DVTLineOffsetAwareStringWrapper *sourceCodePreambleToExecute; // @synthesize sourceCodePreambleToExecute=_sourceCodePreambleToExecute;
@property(readonly, copy) DVTLineOffsetAwareStringWrapper *sourceCodeToExecute; // @synthesize sourceCodeToExecute=_sourceCodeToExecute;
- (void).cxx_destruct;
- (id)debugDescription;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithSourceCodeToExecute:(id)arg1 sourceCodePreambleToExecute:(id)arg2 documentFileURL:(id)arg3 documentContentTimestamp:(id)arg4 autoTerminationDelay:(id)arg5 executionPreparationParameters:(id)arg6;

@end

@interface IDETestsSummariesBuilder : NSObject <IDETestRunSessionEvents>
{
    IDEWorkspaceArena *_workspaceArena;
    NSString *_attachmentsDirectory;
    IDESchemeActionTestableSummary *_currentTestableSummary;
    IDESchemeActionTestSummaryGroup *_currentTestGroup;
    NSMutableArray *_testSuiteStack;
    NSMutableArray *_performanceMetricSummaries;
    NSMutableArray *_failureSummaries;
    NSMutableArray *_activitySummaries;
    NSMutableArray *_currentActivityStack;
    IDESchemeActionResult *_actionResult;
}

@property(retain) IDESchemeActionResult *actionResult; // @synthesize actionResult=_actionResult;
- (void).cxx_destruct;
- (void)didFinishTest:(id)arg1 withTestResult:(id)arg2 rawOutput:(id)arg3;
- (void)didFailTest:(id)arg1 withTestResultMessage:(id)arg2 rawOutput:(id)arg3;
- (void)test:(id)arg1 didMeasurePerformanceMetric:(id)arg2 rawOutput:(id)arg3;
- (void)test:(id)arg1 didFinishActivity:(id)arg2;
- (void)test:(id)arg1 willStartActivity:(id)arg2;
- (void)didStartTest:(id)arg1 withRawOutput:(id)arg2;
- (void)testOperationGroupDidFinish;
- (void)testRunner:(id)arg1 willFinishPrematurelyWithError:(id)arg2;
- (void)testOperationWillFinishWithSuccess:(BOOL)arg1 withError:(id)arg2;
- (void)testSuiteDidFinish:(unsigned long long)arg1 withFailures:(unsigned long long)arg2 unexpected:(unsigned long long)arg3 testDuration:(double)arg4 totalDuration:(double)arg5 rawOutput:(id)arg6;
- (void)testSuite:(id)arg1 willFinishAt:(id)arg2 rawOutput:(id)arg3;
- (void)testDidOutput:(id)arg1;
- (void)testSuite:(id)arg1 didStartAt:(id)arg2 rawOutput:(id)arg3;
- (void)testRunner:(id)arg1 didLaunchTestSessionForScheme:(id)arg2 withDisplayName:(id)arg3 diagnosticLogPath:(id)arg4;
- (void)recordErrorSummaryWithError:(id)arg1;
- (id)initWithActionResult:(id)arg1 workspaceArena:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IDEDistributionMethodSaveBuiltProducts : IDEDistributionMethodExport
{
}

- (id)exportStepName;
- (long long)wantsProvisioningProfiles;
- (id)installerCertificateKind;
- (id)certificateKind;
- (id)orderedDistributionStepClassNames;
- (id)subtitle;
- (id)shortTitle;
- (id)title;
- (_Bool)supportsDistributionOfArchive:(id)arg1;
- (double)sortOrder;

@end

@interface IDEIssueProvider : NSObject <DVTInvalidation>
{
    IDEIssueManager *_issueManager;
    DVTExtension *_extension;
    IDEIssueProviderSession *_session;
    IDEIssueProviderSession *_currentProviderSession;
}

+ (int)providerType;
+ (unsigned long long)assertionBehaviorAfterEndOfEventForSelector:(SEL)arg1;
+ (void)initialize;
@property(retain) IDEIssueProviderSession *currentProviderSession; // @synthesize currentProviderSession=_currentProviderSession;
@property(readonly) DVTExtension *extension; // @synthesize extension=_extension;
@property(retain) IDEIssueManager *issueManager; // @synthesize issueManager=_issueManager;
- (void).cxx_destruct;
- (BOOL)allowsExistingIssuesToBeCoalesced;
- (BOOL)allowsNewIssuesToBeCoalesced;
@property(readonly) BOOL _filterIssuesByActiveScheme;
- (id)logDocumentLocationForIssue:(id)arg1;
- (id)activityLogRecordForIssue:(id)arg1;
- (void)endProviderSession;
- (void)startProviderSession;
- (id)displayNameForIssueTypeIdentifier:(id)arg1;
- (void)removeIssues:(id)arg1 forProviderContext:(id)arg2 providerSession:(id)arg3;
- (void)addIssues:(id)arg1 forProviderContext:(id)arg2 providerSession:(id)arg3 container:(id)arg4 blueprint:(id)arg5 runtimeGroupingObject:(id)arg6;
- (void)addIssues:(id)arg1 forProviderContext:(id)arg2 providerSession:(id)arg3 container:(id)arg4 blueprint:(id)arg5;
- (void)setIssues:(id)arg1 forProviderContext:(id)arg2 providerSession:(id)arg3 container:(id)arg4 blueprint:(id)arg5 runtimeGroupingObject:(id)arg6;
- (void)setIssues:(id)arg1 forProviderContext:(id)arg2 providerSession:(id)arg3 container:(id)arg4 blueprint:(id)arg5;
- (void)setIssues:(id)arg1 forProviderContext:(id)arg2;
@property(readonly, copy) NSString *description;
- (void)primitiveInvalidate;
- (id)initWithIssueManager:(id)arg1 extension:(id)arg2;
- (id)init;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface IDEIssueProviderSession : NSObject
{
    double _timestamp;
}

@property(readonly) double timestamp; // @synthesize timestamp=_timestamp;
- (id)init;

@end

@interface IDESchemeOptionReference : NSObject <DVTXMLUnarchiving>
{
    NSString *_identifier;
    NSString *resolvedReference;
}

@property(copy) NSString *resolvedReference; // @synthesize resolvedReference;
@property(copy) NSString *identifier; // @synthesize identifier=_identifier;
- (void).cxx_destruct;
- (id)resolvedReferenceForWorkspace:(id)arg1;
- (void)dvt_encodeRelationshipsWithXMLArchiver:(id)arg1 version:(id)arg2;
- (void)setIdentifierFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)dvt_encodeAttributesWithXMLArchiver:(id)arg1 version:(id)arg2;
- (id)initFromXMLUnarchiver:(id)arg1 archiveVersion:(float)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IDEXMLPackageContainer : IDEContainer <DVTXMLUnarchiverDelegate, DVTXMLUnarchiving, IDECustomDataStoring>
{
    IDEGroup *_unarchivingGroup;
    NSMutableDictionary *_unarchivingProperties;
    IDEDirectoryBasedCustomDataStore *_customDataStore;
    NSMapTable *_unsavedXMLDataForCustomDataStoreSpecifier;
    BOOL _hasUnhandledArchiveData;
}

+ (id)containerDataFilePathsForFilePath:(id)arg1;
+ (id)xmlArchiveFileName;
+ (id)rootElementName;
+ (BOOL)supportsFilePersistence;
@property(readonly) BOOL hasUnhandledArchiveData; // @synthesize hasUnhandledArchiveData=_hasUnhandledArchiveData;
@property(retain) IDEDirectoryBasedCustomDataStore *customDataStore; // @synthesize customDataStore=_customDataStore;
- (void).cxx_destruct;
@property(readonly) float maxSupportedArchiveVersion;
@property(readonly) float archiveVersion;
@property(readonly) NSString *displayName;
- (BOOL)supportsCustomDataForOwnership:(id)arg1;
- (void)moveCustomDataWithSpecifier:(id)arg1 toSpecifier:(id)arg2 completionQueue:(id)arg3 completionBlock:(CDUnknownBlockType)arg4;
- (void)removeCustomDataWithSpecifier:(id)arg1 completionQueue:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (void)writeCustomData:(id)arg1 withSpecifier:(id)arg2 forceOverwrite:(BOOL)arg3 completionQueue:(id)arg4 completionBlock:(CDUnknownBlockType)arg5;
- (id)readCustomDataWithSpecifier:(id)arg1 error:(id *)arg2;
- (id)customDataOwnershipsForGrouping:(id)arg1;
- (id)customDataSpecifiersForGrouping:(id)arg1 ownership:(id)arg2;
- (void)primitiveInvalidate;
- (void)addSpecifier:(id)arg1 inWorkspace:(id)arg2 toSCMWithCompletionBlock:(CDUnknownBlockType)arg3;
- (void)scmStatusForSpecifier:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)_handleFilePathDidChange:(id)arg1;
- (BOOL)writeToFilePath:(id)arg1 forceWrite:(BOOL)arg2 error:(id *)arg3;
- (id)_xmlData;
- (BOOL)didReadFromFilePath:(id)arg1 error:(id *)arg2;
- (id)_subitemsForUnarchivedSubitems:(id)arg1;
- (BOOL)willReadFromFilePath:(id)arg1 error:(id *)arg2;
- (BOOL)readFromFilePath:(id)arg1 error:(id *)arg2;
- (id)initFromXMLUnarchiver:(id)arg1 archiveVersion:(float)arg2;
- (void)customDataStoreClosing:(id)arg1;
- (id)initWithFilePath:(id)arg1 extension:(id)arg2 workspace:(id)arg3 options:(id)arg4 error:(id *)arg5;
- (void)_createCustomDataStore:(id)arg1;
- (id)_archiveFilePathForFilePath:(id)arg1;
- (void)dvt_encodeRelationshipsWithXMLArchiver:(id)arg1 version:(id)arg2;
- (void)dvt_encodeAttributesWithXMLArchiver:(id)arg1 version:(id)arg2;
- (void)dvt_addObject:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)dvt_setProperty:(id)arg1 fromUTF8String:(const char *)arg2 fromXMLUnarchiver:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IDEBuildTask : DVTOperation
{
    NSString *_identifier;
    NSDictionary *_properties;
    IDEActivityLogSection *_activityLogSection;
    BOOL _restorePersistedBuildResults;
    BOOL _dontActuallyRun;
    int _exitCode;
    id <IDEBuildTaskCallbacks> _callbackDelegate;
}

+ (id)defaultProperties;
+ (id)buildTaskWithIdentifier:(id)arg1 restorePersistedBuildResults:(BOOL)arg2 properties:(id)arg3;
+ (void)initialize;
@property __weak id <IDEBuildTaskCallbacks> callbackDelegate; // @synthesize callbackDelegate=_callbackDelegate;
@property BOOL dontActuallyRun; // @synthesize dontActuallyRun=_dontActuallyRun;
@property(nonatomic) int exitCode; // @synthesize exitCode=_exitCode;
@property(retain, nonatomic) IDEActivityLogSection *activityLogSection; // @synthesize activityLogSection=_activityLogSection;
@property(readonly) BOOL restorePersistedBuildResults; // @synthesize restorePersistedBuildResults=_restorePersistedBuildResults;
@property(readonly) NSDictionary *properties; // @synthesize properties=_properties;
@property(readonly) NSString *identifier; // @synthesize identifier=_identifier;
- (void).cxx_destruct;
- (id)longDescription;
- (id)description;
- (void)main;
- (void)addStatisticsDataToStatisticsSection:(id)arg1;
- (BOOL)isWrapperForCommand:(id)arg1;
- (id)init;
- (id)initWithIdentifier:(id)arg1 restorePersistedBuildResults:(BOOL)arg2 properties:(id)arg3;

@end

@interface IDEDistributionSkipPackagingStep : IDEDistributionProcessingPackagingStep
{
}

+ (_Bool)supportsDryRun;
+ (BOOL)wantsPayloadDir;
- (id)providedOutputContextPropertyNames;
- (id)requiredInputContextPropertyNames;
- (_Bool)runWithError:(id *)arg1;

@end

@interface IDEXMLPackageContainerCore : IDEContainerCore <IDEXMLPackageContainerCore>
{
}

- (BOOL)writeToFile:(id)arg1 error:(id *)arg2;
- (id)initWithContentsOfFile:(id)arg1 error:(id *)arg2;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface IDEAppClientTracker : NSObject <IDEClientTracking>
{
    IDEConcreteClientTracker *_clientTracker;
}

+ (id)sharedAppClientTracker;
- (void).cxx_destruct;
@property(readonly) BOOL isCancelling;
- (void)cancelTrackedClients;
- (id)clientsNotSupportingCancellation;
- (id)clientsRequiringCancellationPrompt;
- (id)registerUncancellableClientWithName:(id)arg1;
- (id)registerClientWithName:(id)arg1 promptForCancellation:(BOOL)arg2 cancellationBlock:(CDUnknownBlockType)arg3;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IDEConcreteClientTracker : NSObject <IDEClientTracking>
{
    NSMutableSet *_clientTrackingTokensRequiringCancellation;
    NSMutableSet *_clientTrackingTokensRequiringCancellationPrompt;
    NSMutableSet *_clientTrackingTokensNotSupportingCancellation;
    BOOL _isCancelling;
}

@property(readonly) BOOL isCancelling; // @synthesize isCancelling=_isCancelling;
- (void).cxx_destruct;
- (void)_clientCancellationTimeout;
- (void)cancelTrackedClients;
- (void)_waitForTokensToCancel:(id)arg1;
- (void)unregisterClient:(id)arg1;
- (id)clientsNotSupportingCancellation;
- (id)clientsRequiringCancellationPrompt;
- (id)registerUncancellableClientWithName:(id)arg1;
- (id)registerClientWithName:(id)arg1 promptForCancellation:(BOOL)arg2 cancellationBlock:(CDUnknownBlockType)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IDEConcreteClientTrackingToken : NSObject <IDEClientTrackingToken>
{
    NSString *_clientName;
    CDUnknownBlockType _cancellationBlock;
    BOOL _hasUnregistered;
    IDEConcreteClientTracker *_clientTracker;
    DVTSystemActivityToken *_systemActivityToken;
    DVTStackBacktrace *_creationBacktrace;
}

@property(retain) DVTStackBacktrace *creationBacktrace; // @synthesize creationBacktrace=_creationBacktrace;
@property(retain) DVTSystemActivityToken *systemActivityToken; // @synthesize systemActivityToken=_systemActivityToken;
@property(readonly) NSString *clientName; // @synthesize clientName=_clientName;
- (void).cxx_destruct;
- (void)cancelClient;
- (id)initWithClientName:(id)arg1 clientTracker:(id)arg2 cancellationBlock:(CDUnknownBlockType)arg3;
@property(readonly, copy) NSString *description;
- (void)unregisterClient;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IDEMigrationContext : NSObject <DVTInvalidation, NSCopying>
{
    IDEWorkspace *_workspace;
    NSMutableArray *_targets;
    NSMutableArray *_selectedTargets;
}

+ (id)buildablesIncludingImplicitDependenciesForWorkspace:(id)arg1 scheme:(id)arg2;
+ (Class)migrationTargetSublass;
+ (void)initialize;
@property(retain) NSMutableArray *selectedTargets; // @synthesize selectedTargets=_selectedTargets;
@property(readonly) NSArray *targets; // @synthesize targets=_targets;
- (void).cxx_destruct;
- (void)selectDefaultTargets;
@property(retain) IDEWorkspace *workspace;
- (void)primitiveInvalidate;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)init;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface IDEBuildableSnapshot : NSObject
{
    id <IDEBuildable> _buildable;
    NSString *_name;
    IDEBuildParameters *_buildParameters;
    IDEActivityLogSection *_activityLogSection;
    BOOL _cleanupDidRun;
    NSMutableArray *_postprocessingBlocks;
    NSMutableArray *_readyBuildCommands;
    NSMutableArray *_startedBuildTasks;
    long long _buildResult;
    DVTDispatchLock *_syncLock;
}

+ (id)_enqueue_semaphore;
+ (void)initialize;
@property(retain) DVTDispatchLock *syncLock; // @synthesize syncLock=_syncLock;
@property long long buildResult; // @synthesize buildResult=_buildResult;
@property(retain) NSMutableArray *startedBuildTasks; // @synthesize startedBuildTasks=_startedBuildTasks;
@property(retain) NSMutableArray *readyBuildCommands; // @synthesize readyBuildCommands=_readyBuildCommands;
@property(retain) NSMutableArray *postprocessingBlocks; // @synthesize postprocessingBlocks=_postprocessingBlocks;
@property(readonly) id <IDEBuildable> buildable; // @synthesize buildable=_buildable;
@property(retain) IDEActivityLogSection *activityLogSection; // @synthesize activityLogSection=_activityLogSection;
@property(readonly) IDEBuildParameters *buildParameters; // @synthesize buildParameters=_buildParameters;
@property(readonly) NSString *name; // @synthesize name=_name;
- (void).cxx_destruct;
- (id)description;
- (void)buildTask:(id)arg1 addsPostprocessingBlocks:(id)arg2 forBuilder:(id)arg3;
- (void)buildTask:(id)arg1 updatesBuildStatusForBuilder:(id)arg2;
- (void)buildTask:(id)arg1 didSetExitCode:(int)arg2 forBuilder:(id)arg3;
- (void)buildTask:(id)arg1 activityLogSectionDidChange:(id)arg2 forBuilder:(id)arg3;
- (void)buildTask:(id)arg1 didStartExecutingForBuilder:(id)arg2;
- (void)cleanupForBuilder:(id)arg1;
- (void)builderWasCancelled:(id)arg1;
- (void)buildDidFinishForBuilder:(id)arg1 buildPlan:(id)arg2;
- (id)buildTaskForBuildCommand:(id)arg1 builder:(id)arg2;
- (BOOL)prepareForBuildingWithBuildPlan:(id)arg1;
- (id)buildPlanForBuilder:(id)arg1 buildCommand:(long long)arg2 buildOnlyTheseFiles:(id)arg3;
- (BOOL)buildForBuilderWillStart:(id)arg1;
- (long long)performBuildForBuilder:(id)arg1 buildCommand:(long long)arg2 buildOnlyTheseFiles:(id)arg3;
- (void)prepareForBuildingForBuilder:(id)arg1;
- (void)_buildCommandDidRestoreCachedOutputs:(id)arg1;
- (void)_updateBuildOperationStatusForBuilder:(id)arg1 buildTask:(id)arg2;
- (void)_buildTaskDidStartForBuilder:(id)arg1 buildTask:(id)arg2;
- (void)addPostprocessingBlocks:(id)arg1;
@property(readonly) NSString *logOutputSubpath; // @dynamic logOutputSubpath;
- (id)initWithName:(id)arg1 buildParameters:(id)arg2;
- (id)initFromBuildable:(id)arg1 withBuildParameters:(id)arg2;

@end

@interface IDEConcretePrimitiveSchemeCommand : IDESchemeCommand <IDEPrimitiveSchemeCommand>
{
}


// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@end

@interface IDESchemeCommand : NSObject
{
    BOOL _appleInternalOnly;
    BOOL _shouldLaunch;
    BOOL _shouldTest;
    BOOL _shouldProfile;
    BOOL _shouldArchive;
    BOOL _shouldInstall;
    BOOL _shouldBuildThinnedResources;
    BOOL _shouldGenerateOptimizationProfile;
    BOOL _supportsCodeCoverage;
    BOOL _supportsSingleFileProcessing;
    BOOL _supportsCompilerSanitizers;
    NSString *_commandName;
    NSString *_commandNameGerund;
}

+ (id)availablePrimitiveSchemeCommands;
+ (id)allNonAppleInternalPrimitiveSchemeCommands;
+ (id)allPrimitiveSchemeCommands;
+ (id)availableSchemeCommands;
+ (id)allNonAppleInternalSchemeCommands;
+ (id)allSchemeCommands;
+ (id)installSchemeCommand;
+ (id)testForPGOSchemeCommand;
+ (id)launchForPGOSchemeCommand;
+ (id)analyzeSchemeCommand;
+ (id)archiveSchemeCommand;
+ (id)profileSchemeCommand;
+ (id)testSchemeCommand;
+ (id)launchSchemeCommand;
+ (void)initialize;
@property(readonly, nonatomic) BOOL supportsCompilerSanitizers; // @synthesize supportsCompilerSanitizers=_supportsCompilerSanitizers;
@property(readonly, nonatomic) BOOL supportsSingleFileProcessing; // @synthesize supportsSingleFileProcessing=_supportsSingleFileProcessing;
@property(readonly, nonatomic) BOOL supportsCodeCoverage; // @synthesize supportsCodeCoverage=_supportsCodeCoverage;
@property(readonly, nonatomic) BOOL shouldGenerateOptimizationProfile; // @synthesize shouldGenerateOptimizationProfile=_shouldGenerateOptimizationProfile;
@property(readonly, nonatomic) BOOL shouldBuildThinnedResources; // @synthesize shouldBuildThinnedResources=_shouldBuildThinnedResources;
@property(readonly, nonatomic) BOOL shouldInstall; // @synthesize shouldInstall=_shouldInstall;
@property(readonly, nonatomic) BOOL shouldArchive; // @synthesize shouldArchive=_shouldArchive;
@property(readonly, nonatomic) BOOL shouldProfile; // @synthesize shouldProfile=_shouldProfile;
@property(readonly, nonatomic) BOOL shouldTest; // @synthesize shouldTest=_shouldTest;
@property(readonly, nonatomic) BOOL shouldLaunch; // @synthesize shouldLaunch=_shouldLaunch;
@property(readonly, nonatomic, getter=isAppleInternalOnly) BOOL appleInternalOnly; // @synthesize appleInternalOnly=_appleInternalOnly;
@property(readonly, copy, nonatomic) NSString *commandNameGerund; // @synthesize commandNameGerund=_commandNameGerund;
@property(readonly, copy, nonatomic) NSString *commandName; // @synthesize commandName=_commandName;
- (void).cxx_destruct;
- (id)description;
- (id)initWithCommandName:(id)arg1 gerund:(id)arg2 appleInternalOnly:(BOOL)arg3;
- (id)init;

@end

@interface IDEClangDiagnosticActivityLogMessage : IDEDiagnosticActivityLogMessage
{
}

+ (void)initialize;
- (id)initWithDiagnostic:(void *)arg1 timestamp:(double)arg2 pathMap:(id)arg3 workingDirectory:(id)arg4 documentURL:(id)arg5;
- (id)initWithDiagnostic:(void *)arg1 timestamp:(double)arg2 pathMap:(id)arg3 workingDirectory:(id)arg4;
- (id)initWithDiagnostic:(void *)arg1 timestamp:(double)arg2 pathMap:(id)arg3 documentURL:(id)arg4;
- (id)initWithDiagnostic:(void *)arg1 timestamp:(double)arg2 documentURL:(id)arg3;
- (id)initWithDiagnostic:(void *)arg1 timestamp:(double)arg2 pathMap:(id)arg3;
- (id)initWithDiagnostic:(void *)arg1 timestamp:(double)arg2;

@end

@interface _IDEPlaygroundMonitorPair : NSObject
{
    IDEPlaygroundAuxiliarySourceMonitor *_playgroundMonitor;
    IDEPlaygroundAuxiliarySourceMonitor *_playgroundPageMonitor;
}

@property(readonly) IDEPlaygroundAuxiliarySourceMonitor *playgroundPageMonitor; // @synthesize playgroundPageMonitor=_playgroundPageMonitor;
@property(readonly) IDEPlaygroundAuxiliarySourceMonitor *playgroundMonitor; // @synthesize playgroundMonitor=_playgroundMonitor;
- (void).cxx_destruct;
- (id)initWithPlaygroundMonitor:(id)arg1 playgroundPageMonitor:(id)arg2;

@end

@interface IDEPlaygroundAuxiliarySourceCompilationManager : NSObject <DVTInvalidation>
{
    NSMapTable *__contextToSourceMonitorMap;
    NSMapTable *__monitorToCompilerOperationMap;
    NSMapTable *__monitorToModificationObservingTokenMap;
    NSMapTable *__pageContextToCurrentCompilerFutureMap;
    NSOperationQueue *__compilerOperationQueue;
}

+ (void)initialize;
+ (id)sharedManager;
@property(retain) NSOperationQueue *_compilerOperationQueue; // @synthesize _compilerOperationQueue=__compilerOperationQueue;
@property(retain) NSMapTable *_pageContextToCurrentCompilerFutureMap; // @synthesize _pageContextToCurrentCompilerFutureMap=__pageContextToCurrentCompilerFutureMap;
@property(retain) NSMapTable *_monitorToModificationObservingTokenMap; // @synthesize _monitorToModificationObservingTokenMap=__monitorToModificationObservingTokenMap;
@property(retain) NSMapTable *_monitorToCompilerOperationMap; // @synthesize _monitorToCompilerOperationMap=__monitorToCompilerOperationMap;
@property(retain) NSMapTable *_contextToSourceMonitorMap; // @synthesize _contextToSourceMonitorMap=__contextToSourceMonitorMap;
- (void).cxx_destruct;
- (id)frameworkLocationsForCompilerOperations:(id)arg1;
- (void)compileAuxiliarySourcesForPageContext:(id)arg1;
- (id)_createCompilerOperationForMonitor:(id)arg1 dependency:(id)arg2;
- (id)_createMonitorForPlaygroundContext:(id)arg1 dependency:(id)arg2;
- (id)_findOrCreateMonitorsForPlaygroundPageContext:(id)arg1;
- (id)_updatedCompilerOperationForPlaygroundMonitor:(id)arg1 dependency:(id)arg2;
- (id)buildSettingsForSourceFile:(id)arg1;
- (void)_unregisterMonitor:(id)arg1;
- (id)frameworkLocationsForPageContext:(id)arg1;
- (void)unregisterPlaygroundPageContext:(id)arg1;
- (void)registerPlaygroundPageContext:(id)arg1;
- (void)primitiveInvalidate;
- (id)init;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface IDEXBSBuildOptionOverrides : NSObject
{
    NSString *_xbsProjectName;
    NSString *_workspaceName;
    NSString *_configurationName;
    NSString *_schemeName;
    NSString *_targetName;
}

@property(readonly, nonatomic) NSString *targetName; // @synthesize targetName=_targetName;
@property(readonly, nonatomic) NSString *schemeName; // @synthesize schemeName=_schemeName;
@property(readonly, nonatomic) NSString *configurationName; // @synthesize configurationName=_configurationName;
@property(readonly, nonatomic) NSString *workspaceName; // @synthesize workspaceName=_workspaceName;
@property(readonly, nonatomic) NSString *xbsProjectName; // @synthesize xbsProjectName=_xbsProjectName;
- (void).cxx_destruct;
- (id)initWithXBSProjectNamed:(id)arg1 workspaceNamed:(id)arg2 configurationNamed:(id)arg3 schemeNamed:(id)arg4 targetNamed:(id)arg5;

@end

@interface IDEArchivedContent : NSObject
{
    IDEArchive *_archive;
}

+ (BOOL)fillInfoDictionary:(id)arg1 forContentAtPath:(id)arg2 inArchiveProductsDirectory:(id)arg3;
+ (id)soleArchivedContentRelativePathInDirectory:(id)arg1;
+ (id)archivedContentPathPlistKey;
+ (id)archivedContentPropertiesPlistKey;
+ (id)teamIdentifierForPath:(id)arg1;
+ (id)keyPathsForValuesAffectingContentPath;
+ (id)_archivedContentPathForArchive:(id)arg1;
+ (id)_archivedContentShortBundleVersionStringForArchive:(id)arg1;
+ (id)_archivedContentBundleVersionForArchive:(id)arg1;
+ (id)_archivedContentBundleIdentifierForArchive:(id)arg1;
+ (id)archivedContentInfoDictForArchive:(id)arg1;
+ (BOOL)validArchivedContentInfoInArchive:(id)arg1;
+ (id)archivedContentWithArchive:(id)arg1;
+ (BOOL)fillArchivedContentInfoInArchiveInfoDictionary:(id)arg1 forContentInArchiveProductsDirectory:(id)arg2;
+ (id)contentClasses;
@property(readonly) IDEArchive *archive; // @synthesize archive=_archive;
- (void).cxx_destruct;
- (long long)autodetectedFormatForPackaging;
- (BOOL)supportsPackagingAsFormat:(long long)arg1;
@property(readonly) IDEEntitlementsMerger *packager;
@property(readonly) NSString *teamIdentifier;
@property(readonly) NSString *shortBundleVersionString;
@property(readonly) NSString *bundleVersion;
@property(readonly) NSString *bundleIdentifier;
@property(readonly) DVTFilePath *contentPath;
- (id)initWithArchive:(id)arg1;

@end

@interface IDETextFragmentIndexEntry : NSObject <NSCoding>
{
    DVTFilePath *_filePath;
    Class _providerClass;
    NSNumber *_sourceFileModificationTimestamp;
    NSArray *_retainedTextFragments;
    IDETextFragmentIndexQuickRejectionFilter *_filter;
    NSError *_providerError;
}

@property(readonly) NSError *providerError; // @synthesize providerError=_providerError;
@property(readonly) IDETextFragmentIndexQuickRejectionFilter *filter; // @synthesize filter=_filter;
@property(readonly) NSArray *retainedTextFragments; // @synthesize retainedTextFragments=_retainedTextFragments;
@property(readonly) NSNumber *sourceFileModificationTimestamp; // @synthesize sourceFileModificationTimestamp=_sourceFileModificationTimestamp;
@property(readonly) Class providerClass; // @synthesize providerClass=_providerClass;
@property(readonly) DVTFilePath *filePath; // @synthesize filePath=_filePath;
- (void).cxx_destruct;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithFilePath:(id)arg1 providerClass:(Class)arg2 sourceFileModificationTimestamp:(id)arg3 fragments:(id)arg4 retainFragments:(BOOL)arg5;
- (id)initWithFilePath:(id)arg1 providerClass:(Class)arg2 sourceFileModificationTimestamp:(id)arg3 providerError:(id)arg4;

@end

@interface _IDEXCTestSuiteRecord : NSObject
{
    BOOL _shouldUseForReportingSuiteCompletion;
    IDETestIdentifier *_suiteIdentifier;
    long long _runCount;
    long long _failureCount;
    double _suiteStartTime;
    long long _unexpectedFailureCount;
}

@property long long unexpectedFailureCount; // @synthesize unexpectedFailureCount=_unexpectedFailureCount;
@property BOOL shouldUseForReportingSuiteCompletion; // @synthesize shouldUseForReportingSuiteCompletion=_shouldUseForReportingSuiteCompletion;
@property double suiteStartTime; // @synthesize suiteStartTime=_suiteStartTime;
@property long long failureCount; // @synthesize failureCount=_failureCount;
@property long long runCount; // @synthesize runCount=_runCount;
@property(copy) IDETestIdentifier *suiteIdentifier; // @synthesize suiteIdentifier=_suiteIdentifier;
- (void).cxx_destruct;
- (id)description;

@end

@interface IDETestRunner : NSObject <IDETestOperationCoordinatorEvents, DVTInvalidation>
{
    NSMutableArray *_testResults;
    NSMutableSet *_runningTests;
    BOOL _finished;
    BOOL _treatMissingBaselinesAsFailures;
    BOOL _hasStartedRunning;
    BOOL _ignoreNextSuiteDidFinish;
    BOOL _needsToResyncStateWithRestartedOperation;
    BOOL _currentOperationSuccessfullyBootstrapped;
    IDETestRunSpecification *_testRunSpecification;
    IDEExecutionEnvironment *_executionEnvironment;
    IDERunDestination *_runDestination;
    IDEActivityLogSection *_activityLog;
    NSString *_launchName;
    IDESchemeCommand *_schemeCommand;
    id <IDEBuildableProduct> _buildableProductForUIRecordingManager;
    id <IDETestRunnerEvents> _testsOperationsObserver;
    NSMutableSet *_skippedTestIDs;
    NSMutableSet *_pendingRunTestIDs;
    NSMutableSet *_alreadyRunTestIDs;
    DVTFilePath *_temporaryDirectoryPath;
    NSMutableArray *_testResultStack;
    double _testRunStartedTime;
    NSMutableSet *_testsThatHaveStarted;
    NSMutableArray *_suiteStack;
    NSMutableSet *_suitesThatHaveFinished;
    DVTOperationGroup *_testSessionOperation;
    IDETestOperationCoordinator *_currentTestOperationCoordinator;
    IDERunOperation *_currentTestRunOperation;
    long long _restartCount;
    unsigned long long _currentSuiteResyncIndex;
    IDETestIdentifier *_currentTestIdentifier;
    IDETestIdentifier *_crashingTestIdentifier;
    DVTDisallowFinishToken *_testOperationDisallowFinishToken;
    NSString *_runnerIdentifier;
    CDUnknownBlockType _launchParametersBlock;
}

+ (id)_commandLineArgumentsForRunDestination:(id)arg1;
+ (id)_configurationOperationForLaunchSession:(id)arg1 reportResultsToIDE:(BOOL)arg2 pathToXcodeReportingSocket:(id)arg3 testRunSpecification:(id)arg4 runDestination:(id)arg5 testsThatHaveStarted:(id)arg6 aggregateStatisticsFromLastLaunch:(id)arg7 temporaryDirectoryPath:(id)arg8 error:(id *)arg9;
+ (void)initialize;
@property(copy) CDUnknownBlockType launchParametersBlock; // @synthesize launchParametersBlock=_launchParametersBlock;
@property(readonly) NSString *runnerIdentifier; // @synthesize runnerIdentifier=_runnerIdentifier;
@property BOOL currentOperationSuccessfullyBootstrapped; // @synthesize currentOperationSuccessfullyBootstrapped=_currentOperationSuccessfullyBootstrapped;
@property(retain) DVTDisallowFinishToken *testOperationDisallowFinishToken; // @synthesize testOperationDisallowFinishToken=_testOperationDisallowFinishToken;
@property(retain) IDETestIdentifier *crashingTestIdentifier; // @synthesize crashingTestIdentifier=_crashingTestIdentifier;
@property(retain) IDETestIdentifier *currentTestIdentifier; // @synthesize currentTestIdentifier=_currentTestIdentifier;
@property unsigned long long currentSuiteResyncIndex; // @synthesize currentSuiteResyncIndex=_currentSuiteResyncIndex;
@property long long restartCount; // @synthesize restartCount=_restartCount;
@property BOOL needsToResyncStateWithRestartedOperation; // @synthesize needsToResyncStateWithRestartedOperation=_needsToResyncStateWithRestartedOperation;
@property(retain) IDERunOperation *currentTestRunOperation; // @synthesize currentTestRunOperation=_currentTestRunOperation;
@property(retain) IDETestOperationCoordinator *currentTestOperationCoordinator; // @synthesize currentTestOperationCoordinator=_currentTestOperationCoordinator;
@property(retain) DVTOperationGroup *testSessionOperation; // @synthesize testSessionOperation=_testSessionOperation;
@property BOOL ignoreNextSuiteDidFinish; // @synthesize ignoreNextSuiteDidFinish=_ignoreNextSuiteDidFinish;
@property(retain) NSMutableSet *suitesThatHaveFinished; // @synthesize suitesThatHaveFinished=_suitesThatHaveFinished;
@property(retain) NSMutableArray *suiteStack; // @synthesize suiteStack=_suiteStack;
@property(retain) NSMutableSet *testsThatHaveStarted; // @synthesize testsThatHaveStarted=_testsThatHaveStarted;
@property BOOL hasStartedRunning; // @synthesize hasStartedRunning=_hasStartedRunning;
@property double testRunStartedTime; // @synthesize testRunStartedTime=_testRunStartedTime;
@property(retain) NSMutableArray *testResultStack; // @synthesize testResultStack=_testResultStack;
@property(readonly) BOOL treatMissingBaselinesAsFailures; // @synthesize treatMissingBaselinesAsFailures=_treatMissingBaselinesAsFailures;
@property(readonly) DVTFilePath *temporaryDirectoryPath; // @synthesize temporaryDirectoryPath=_temporaryDirectoryPath;
@property(readonly, retain) NSMutableSet *alreadyRunTestIDs; // @synthesize alreadyRunTestIDs=_alreadyRunTestIDs;
@property(readonly, retain) NSMutableSet *pendingRunTestIDs; // @synthesize pendingRunTestIDs=_pendingRunTestIDs;
@property(readonly, retain) NSMutableSet *skippedTestIDs; // @synthesize skippedTestIDs=_skippedTestIDs;
@property(readonly) BOOL finished; // @synthesize finished=_finished;
@property __weak id <IDETestRunnerEvents> testsOperationsObserver; // @synthesize testsOperationsObserver=_testsOperationsObserver;
@property(readonly) id <IDEBuildableProduct> buildableProductForUIRecordingManager; // @synthesize buildableProductForUIRecordingManager=_buildableProductForUIRecordingManager;
@property(readonly) IDESchemeCommand *schemeCommand; // @synthesize schemeCommand=_schemeCommand;
@property(readonly) NSString *launchName; // @synthesize launchName=_launchName;
@property(retain) IDEActivityLogSection *activityLog; // @synthesize activityLog=_activityLog;
@property(readonly) IDERunDestination *runDestination; // @synthesize runDestination=_runDestination;
@property(readonly) IDEExecutionEnvironment *executionEnvironment; // @synthesize executionEnvironment=_executionEnvironment;
@property(readonly) IDETestRunSpecification *testRunSpecification; // @synthesize testRunSpecification=_testRunSpecification;
- (void).cxx_destruct;
- (void)testCaseWithIdentifier:(id)arg1 didFinishWithStatus:(id)arg2 duration:(double)arg3 rawOutput:(id)arg4 sessionState:(id)arg5;
- (void)testCaseWithIdentifier:(id)arg1 didFailWithMessage:(id)arg2 file:(id)arg3 line:(long long)arg4 rawOutput:(id)arg5 sessionState:(id)arg6;
- (void)testCaseWithIdentifier:(id)arg1 didMeasurePerformanceMetric:(id)arg2 rawOutput:(id)arg3 sessionState:(id)arg4;
- (void)testDidOutput:(id)arg1 sessionState:(id)arg2;
- (void)testCaseWithIdentifier:(id)arg1 didFinishActivity:(id)arg2 sessionState:(id)arg3;
- (void)testCaseWithIdentifier:(id)arg1 willStartActivity:(id)arg2 sessionState:(id)arg3;
- (void)testCaseWithIdentifier:(id)arg1 didStartWithRawOutput:(id)arg2 sessionState:(id)arg3;
- (void)testSuiteDidFinish:(unsigned long long)arg1 withFailures:(unsigned long long)arg2 unexpected:(unsigned long long)arg3 testDuration:(double)arg4 totalDuration:(double)arg5 rawOutput:(id)arg6 sessionState:(id)arg7;
- (void)testSuiteWithIdentifier:(id)arg1 willFinishAt:(id)arg2 rawOutput:(id)arg3 sessionState:(id)arg4;
- (void)testSuiteWithIdentifier:(id)arg1 didStartAt:(id)arg2 rawOutput:(id)arg3 sessionState:(id)arg4;
- (void)_unwindTestSuiteStackForResultsProcessor:(id)arg1;
- (void)willFinishWithError:(id)arg1 didCancel:(BOOL)arg2 sessionState:(id)arg3;
- (void)launchSessionStarted:(id)arg1 diagnosticLogPath:(id)arg2;
- (BOOL)_hasTestsLeftToRun;
- (id)_aggregateStatisticsFromLastLaunch;
- (BOOL)_addTestRunOperation:(id *)arg1;
@property(readonly) NSString *currentDiagnosticLogPath;
- (id)testOperationWithLaunchParametersBlock:(CDUnknownBlockType)arg1 withError:(id *)arg2;
- (id)_testRunOperationWithLaunchParameters:(id)arg1 error:(id *)arg2;
- (id)configurationOperationForLaunchSession:(id)arg1 error:(id *)arg2;
- (BOOL)validateRunDestinationWithError:(id *)arg1;
@property(readonly, copy) NSString *description;
- (void)primitiveInvalidate;
- (id)initWithTestRunSpecification:(id)arg1 executionEnvironment:(id)arg2 runDestination:(id)arg3 testRunSession:(id)arg4 activityLog:(id)arg5;
- (id)init;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) NSMutableArray *mutableTestResults; // @dynamic mutableTestResults;
@property(readonly) Class superclass;
@property(readonly) NSArray *testResults; // @dynamic testResults;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface IDEIndexAutoImportItemCollection : IDEIndexCollection
{
    DVTSourceCodeSymbolKind *_symbolKind;
}

@property(retain, nonatomic) DVTSourceCodeSymbolKind *symbolKind; // @synthesize symbolKind=_symbolKind;
- (void).cxx_destruct;
- (id)instantiateRow:(struct sqlite3_stmt *)arg1;
- (id)tempTableSchema;

@end

@interface IDEIndexAutoImportItem : NSObject <IDEAutoImportable>
{
    IDEIndexDatabase *_database;
    BOOL _checkedAutoImportability;
    long long _resolutionOffset;
    BOOL _inProject;
    BOOL _autoImportable;
    NSString *_name;
    NSString *_completionString;
    DVTFilePath *_filePathToHeaderToImport;
    NSString *_resolution;
    DVTSourceCodeSymbolKind *_symbolKind;
}

@property(readonly, nonatomic) DVTSourceCodeSymbolKind *symbolKind; // @synthesize symbolKind=_symbolKind;
@property(readonly, nonatomic) NSString *resolution; // @synthesize resolution=_resolution;
@property(readonly, nonatomic, getter=isInProject) BOOL inProject; // @synthesize inProject=_inProject;
@property(readonly, nonatomic) DVTFilePath *filePathToHeaderToImport; // @synthesize filePathToHeaderToImport=_filePathToHeaderToImport;
@property(readonly, nonatomic) NSString *completionString; // @synthesize completionString=_completionString;
@property(readonly, nonatomic) NSString *name; // @synthesize name=_name;
- (void).cxx_destruct;
@property(readonly) unsigned long long hash;
- (BOOL)isEqual:(id)arg1;
@property(readonly, nonatomic) IDEIndexCollection *definitions;
@property(readonly, nonatomic, getter=isAutoImportable) BOOL autoImportable; // @synthesize autoImportable=_autoImportable;
- (id)initWithName:(id)arg1 completionString:(id)arg2 resolution:(id)arg3 file:(id)arg4 inProject:(BOOL)arg5 symbolKind:(id)arg6 database:(id)arg7 resolutionOffset:(long long)arg8;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;

@end

@interface IDEProvisioningRepairStepGenerator : NSObject
{
    BOOL _runningInIDE;
}

+ (id)generatorForProvisioningStyle:(long long)arg1;
+ (id)generatorForProvisioningStyle:(long long)arg1 runningInIDE:(BOOL)arg2;
@property BOOL runningInIDE; // @synthesize runningInIDE=_runningInIDE;
- (id)stepsWithSession:(id)arg1 context:(id)arg2 userAction:(id *)arg3 error:(id *)arg4;
- (id)initForProvisioningStyle:(long long)arg1;

@end

@interface IDEProvisioningRepairStepGenerator_Automatic : IDEProvisioningRepairStepGenerator
{
}

- (id)_createProfileStepWithCharacteristics:(id)arg1;
- (BOOL)_areDevicesRegisteredWithSession:(id)arg1 context:(id)arg2 devices:(id)arg3 missingDevices:(id *)arg4 error:(id *)arg5;
- (id)_registerDeviceRepairStepWithDevice:(id)arg1 team:(id)arg2;
- (BOOL)_evaluateDevicesWithSession:(id)arg1 context:(id)arg2 repairable:(id)arg3 steps:(id)arg4 userAction:(id *)arg5 error:(id *)arg6;
- (id)_errorForDistributionCertsAlreadyExist:(id)arg1 context:(id)arg2;
- (BOOL)_evaluateCertificatesWithSession:(id)arg1 context:(id)arg2 repairable:(id)arg3 steps:(id)arg4 userAction:(id *)arg5 error:(id *)arg6;
- (id)_createCertificateRepairStepWithCertificateType:(id)arg1;
- (BOOL)_isUnderLimitForCertificateType:(id)arg1 certificates:(id)arg2 context:(id)arg3;
- (BOOL)_newestLocalCertIsOnPortal:(id)arg1 type:(id)arg2 context:(id)arg3;
- (id)stepsWithSession:(id)arg1 context:(id)arg2 userAction:(id *)arg3 error:(id *)arg4;

@end

@interface IDEProvisioningRepairStepGenerator_Manual : IDEProvisioningRepairStepGenerator
{
}

- (id)_evaluateProfilesWithSession:(id)arg1 context:(id)arg2 userAction:(id *)arg3 error:(id *)arg4;
- (id)stepsWithSession:(id)arg1 context:(id)arg2 userAction:(id *)arg3 error:(id *)arg4;

@end

@interface IDESwiftErrorBreakpoint : IDEBreakpoint
{
    NSString *_typeName;
}

@property(copy) NSString *typeName; // @synthesize typeName=_typeName;
- (void).cxx_destruct;
- (void)dvt_encodeAttributesWithXMLArchiver:(id)arg1 version:(id)arg2;
- (id)accessibilityDescription;
- (id)displayName;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface IDEMigrationTarget : NSObject
{
    IDEMigrationContext *_migrationContext;
    id <IDEBlueprint> _blueprint;
    NSMutableArray *_buildFiles;
    id _iconImage;
    NSString *_title;
}

@property(readonly, copy) NSString *title; // @synthesize title=_title;
@property(readonly, copy) NSArray *buildFiles; // @synthesize buildFiles=_buildFiles;
@property(readonly) id <IDEBlueprint> blueprint; // @synthesize blueprint=_blueprint;
@property(readonly) IDEMigrationContext *migrationContext; // @synthesize migrationContext=_migrationContext;
- (void).cxx_destruct;
@property(readonly) BOOL shouldMigrate;
@property(readonly) BOOL canMigrate;
@property(readonly) BOOL buildsWithClang;
@property(readonly) BOOL buildsValidArchtectures;
@property(readonly, copy) NSString *warningMessage;
- (id)latestSDK;
- (void)updateBuildSettings;
- (id)description;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
- (id)initWithBlueprint:(id)arg1 migrationContext:(id)arg2;

@end

@interface IDEDVTMockPortalCertificate : DVTPortalCertificate
{
    NSString *_machineName;
    NSString *_machineID;
}

- (void).cxx_destruct;
- (id)machineID;
- (id)machineName;
- (id)initWithMachineName:(id)arg1 machineID:(id)arg2;

@end

@interface IDEProvisionableSnapshot : NSObject
{
    NSString *_name;
    NSOrderedSet *_configurations;
    NSDictionary *_configurationSnapshots;
    IDEProvisionableOverrides *_overrides;
}

+ (id)snapshotFromProvisionable:(id)arg1 overrides:(id)arg2;
@property(readonly, nonatomic) IDEProvisionableOverrides *overrides; // @synthesize overrides=_overrides;
@property(readonly, copy, nonatomic) NSDictionary *configurationSnapshots; // @synthesize configurationSnapshots=_configurationSnapshots;
@property(readonly, nonatomic) NSOrderedSet *configurations; // @synthesize configurations=_configurations;
@property(readonly, nonatomic) NSString *name; // @synthesize name=_name;
- (void).cxx_destruct;
- (BOOL)signingRequiresTeamForConfigurationNamed:(id)arg1;
- (BOOL)allowSigningWithoutTeamSelectionForConfigurationNamed:(id)arg1;
- (id)entitlementsExpansionForConfigurationNamed:(id)arg1;
- (id)baseEntitlementsForConfigurationNamed:(id)arg1;
- (id)entitlementsFilePathForConfigurationNamed:(id)arg1;
- (id)appIDFeaturesForConfigurationNamed:(id)arg1;
- (id)signingCertificateIdentifierForConfigurationNamed:(id)arg1;
- (id)provisioningProfileSpecifierForConfigurationNamed:(id)arg1;
- (id)provisioningProfileSpecifierSpecifierForConfigurationNamed:(id)arg1;
- (id)bundleIdentifierForConfigurationNamed:(id)arg1;
- (id)platformForConfigurationNamed:(id)arg1;
- (long long)profileSupportForConfigurationNamed:(id)arg1;
- (id)teamForConfigurationNamed:(id)arg1;
- (long long)provisioningStyleForConfigurationNamed:(id)arg1;
- (BOOL)_isConfigurationOverriden:(id)arg1;
- (id)provisioningPurposeForConfigurationNamed:(id)arg1;
- (id)description;

@end

@interface _IDEProvisionableConfigurationSnapshot : NSObject
{
    BOOL _allowSigningWithoutTeamSelection;
    BOOL _signingRequiresTeam;
    NSString *_name;
    long long _provisioningStyle;
    id <IDEProvisioningBasicTeam> _team;
    long long _profileSupport;
    DVTPlatform *_platform;
    NSString *_bundleIdentifier;
    NSString *_profileSpecifier;
    NSString *_certificateIdentifier;
    DVTFilePath *_entitlementsFilePath;
    NSDictionary *_baseEntitlements;
    IDEProvisioningEntitlementsExpansion *_entitlementsExpansion;
    DVTAppIDFeatures *_appIDFeatures;
    DVTPortalProfilePurpose *_provisioningPurpose;
}

+ (id)snapshotWithConfigurationName:(id)arg1 provisioningStyle:(long long)arg2 team:(id)arg3 profileSupport:(long long)arg4 platform:(id)arg5 bundleIdentifier:(id)arg6 profileSpecifier:(id)arg7 certificateIdentifier:(id)arg8 entitlementsFilePath:(id)arg9 baseEntitlements:(id)arg10 entitlementsExpansion:(id)arg11 allowSigningWithoutTeamSelection:(BOOL)arg12 signingRequiresTeam:(BOOL)arg13 appIDFeatures:(id)arg14 provisioningPurpose:(id)arg15;
@property(readonly, nonatomic) DVTPortalProfilePurpose *provisioningPurpose; // @synthesize provisioningPurpose=_provisioningPurpose;
@property(readonly, nonatomic) DVTAppIDFeatures *appIDFeatures; // @synthesize appIDFeatures=_appIDFeatures;
@property(readonly, nonatomic) BOOL signingRequiresTeam; // @synthesize signingRequiresTeam=_signingRequiresTeam;
@property(readonly, nonatomic) BOOL allowSigningWithoutTeamSelection; // @synthesize allowSigningWithoutTeamSelection=_allowSigningWithoutTeamSelection;
@property(readonly, nonatomic) IDEProvisioningEntitlementsExpansion *entitlementsExpansion; // @synthesize entitlementsExpansion=_entitlementsExpansion;
@property(readonly, nonatomic) NSDictionary *baseEntitlements; // @synthesize baseEntitlements=_baseEntitlements;
@property(readonly, nonatomic) DVTFilePath *entitlementsFilePath; // @synthesize entitlementsFilePath=_entitlementsFilePath;
@property(readonly, nonatomic) NSString *certificateIdentifier; // @synthesize certificateIdentifier=_certificateIdentifier;
@property(readonly, nonatomic) NSString *profileSpecifier; // @synthesize profileSpecifier=_profileSpecifier;
@property(readonly, nonatomic) NSString *bundleIdentifier; // @synthesize bundleIdentifier=_bundleIdentifier;
@property(readonly, nonatomic) DVTPlatform *platform; // @synthesize platform=_platform;
@property(readonly, nonatomic) long long profileSupport; // @synthesize profileSupport=_profileSupport;
@property(readonly, nonatomic) id <IDEProvisioningBasicTeam> team; // @synthesize team=_team;
@property(readonly, nonatomic) long long provisioningStyle; // @synthesize provisioningStyle=_provisioningStyle;
@property(readonly, nonatomic) NSString *name; // @synthesize name=_name;
- (void).cxx_destruct;

@end

@interface IDEEntitlementsProcessor : NSObject
{
    IDEDistributionMethod *_distributionMethod;
    IDEDistributionItem *_distributionItem;
    IDEEntitlementsDictionary *_itemEntitlements;
}

+ (id)propertyListForContext:(id)arg1;
+ (id)availableOptionsForPropertyList;
@property(readonly, nonatomic) IDEEntitlementsDictionary *itemEntitlements; // @synthesize itemEntitlements=_itemEntitlements;
@property(readonly, nonatomic) IDEDistributionItem *distributionItem; // @synthesize distributionItem=_distributionItem;
@property(readonly, nonatomic) IDEDistributionMethod *distributionMethod; // @synthesize distributionMethod=_distributionMethod;
- (void).cxx_destruct;
- (BOOL)runWithError:(id *)arg1;
- (BOOL)loadFromPropertyList:(id)arg1 error:(id *)arg2;
@property(readonly, nonatomic) BOOL needsInteraction;
- (id)initWithDistributionMethod:(id)arg1 distributionItem:(id)arg2 itemEntitlements:(id)arg3;
- (id)init;

@end

@interface IDEInitializationErrorRecoveryAttempter : NSObject
{
}

- (BOOL)attemptRecoveryFromError:(id)arg1 optionIndex:(unsigned long long)arg2;

@end

@interface IDEFoundationTestInitializer : NSObject
{
}

+ (BOOL)initializeTestabilityWithUI:(BOOL)arg1 error:(id *)arg2;

@end

@interface IDEPlaygroundResult : NSObject
{
    NSString *_channelIdentifier;
    NSString *_subjectIdentifier;
}

@property(readonly, copy) NSString *subjectIdentifier; // @synthesize subjectIdentifier=_subjectIdentifier;
@property(readonly, copy) NSString *channelIdentifier; // @synthesize channelIdentifier=_channelIdentifier;
- (void).cxx_destruct;
- (id)initWithChannelIdentifier:(id)arg1 subjectIdentifier:(id)arg2;

@end

@interface IDEProfileBlockQualifier : NSObject <IDEProfileQualifier>
{
    BOOL _onlyDisplayOnError;
    NSString *_userFacingName;
    NSString *_debugDescription;
    IDEProfileQualifierResult *_result;
    CDUnknownBlockType _block;
}

@property(copy, nonatomic) CDUnknownBlockType block; // @synthesize block=_block;
@property(retain, nonatomic) IDEProfileQualifierResult *result; // @synthesize result=_result;
@property(copy, nonatomic) NSString *debugDescription; // @synthesize debugDescription=_debugDescription;
@property(nonatomic) BOOL onlyDisplayOnError; // @synthesize onlyDisplayOnError=_onlyDisplayOnError;
@property(readonly, nonatomic) NSString *userFacingName; // @synthesize userFacingName=_userFacingName;
- (void).cxx_destruct;
- (id)description;
- (BOOL)qualify;
- (id)initWithUserFacingName:(id)arg1 block:(CDUnknownBlockType)arg2;
- (id)initWithUserFacingName:(id)arg1 onlyDisplayOnError:(BOOL)arg2 block:(CDUnknownBlockType)arg3;

@end

@interface IDEProfileDevicesQualifier : NSObject <IDEProfileQualifier>
{
    IDEProfileQualifierResult *_result;
    id <DVTProvisioningProfile> _profile;
    NSArray *_devices;
}

@property(readonly, nonatomic) NSArray *devices; // @synthesize devices=_devices;
@property(readonly, nonatomic) id <DVTProvisioningProfile> profile; // @synthesize profile=_profile;
@property(retain, nonatomic) IDEProfileQualifierResult *result; // @synthesize result=_result;
- (void).cxx_destruct;
- (BOOL)qualify;
@property(readonly, nonatomic) NSString *userFacingName;
@property(readonly, nonatomic) BOOL onlyDisplayOnError;
- (BOOL)_profileDoesntNeedToMatchDevices;
- (id)initWithProfile:(id)arg1 devices:(id)arg2;

// Remaining properties
@property(readonly, copy, nonatomic) NSString *debugDescription;

@end

@interface IDEShellCommandBreakpointAction : IDEBreakpointAction
{
    BOOL _waitUntilDone;
    NSString *_command;
    NSString *_arguments;
}

+ (id)propertiesAffectingPersistenceState;
@property BOOL waitUntilDone; // @synthesize waitUntilDone=_waitUntilDone;
@property(copy, nonatomic) NSString *arguments; // @synthesize arguments=_arguments;
@property(copy, nonatomic) NSString *command; // @synthesize command=_command;
- (void).cxx_destruct;
- (void)setWaitUntilDoneFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)dvt_encodeAttributesWithXMLArchiver:(id)arg1 version:(id)arg2;
- (void)setArgumentsFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setCommandFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (id)initFromXMLUnarchiver:(id)arg1 archiveVersion:(float)arg2;
- (id)_stringForFileHandleData:(id)arg1;
- (id)_taskWithLaunchPath:(id)arg1 arguments:(id)arg2 consoleAdaptor:(id)arg3;
- (id)_errorMessageForShellCommandValidity:(int)arg1 shellCommand:(id)arg2;
- (int)_commandValidity:(id)arg1;
- (id)_fullPathOfCommand:(int *)arg1;
- (void)performActionUsingContext:(id)arg1 andBreakpoint:(id)arg2;
- (id)_argumentsArrayForBreakpoint:(id)arg1;
- (void)_extractExpressionsAndMacrosFromCommandAndArguments;
- (void)_shellCommandActionCommonInit;
- (id)init;

@end

@interface IDEProvisioningProfileDownloaderContext : NSObject
{
    DVTPlatform *_platform;
    NSString *_bundleIdentifier;
    id <IDEProvisioningBasicTeam> _team;
    NSString *_provisionableName;
    IDEProvisionableStatusEvaluation *_evaluation;
    DVTProvisioningProfileManager *_profileManager;
    DVTDeveloperAccountManager *_accountManager;
    IDEProvisioningTeamManager *_teamManager;
    IDEProvisioningTeamAccountPairManager *_teamAccountPairManager;
    IDEProvisioningSessionManager *_sessionManager;
    DVTPortalCertificateType *_certificateType;
}

@property(retain, nonatomic) DVTPortalCertificateType *certificateType; // @synthesize certificateType=_certificateType;
@property(retain, nonatomic) IDEProvisioningSessionManager *sessionManager; // @synthesize sessionManager=_sessionManager;
@property(retain, nonatomic) IDEProvisioningTeamAccountPairManager *teamAccountPairManager; // @synthesize teamAccountPairManager=_teamAccountPairManager;
@property(retain, nonatomic) IDEProvisioningTeamManager *teamManager; // @synthesize teamManager=_teamManager;
@property(retain, nonatomic) DVTDeveloperAccountManager *accountManager; // @synthesize accountManager=_accountManager;
@property(retain, nonatomic) DVTProvisioningProfileManager *profileManager; // @synthesize profileManager=_profileManager;
@property(readonly, nonatomic) IDEProvisionableStatusEvaluation *evaluation; // @synthesize evaluation=_evaluation;
@property(readonly, nonatomic) NSString *provisionableName; // @synthesize provisionableName=_provisionableName;
@property(retain, nonatomic) id <IDEProvisioningBasicTeam> team; // @synthesize team=_team;
@property(retain, nonatomic) NSString *bundleIdentifier; // @synthesize bundleIdentifier=_bundleIdentifier;
@property(retain, nonatomic) DVTPlatform *platform; // @synthesize platform=_platform;
- (void).cxx_destruct;
@property(readonly, nonatomic) id <IDEProvisioningProfileDownloaderPortal> portal;
- (id)initWithPlatform:(id)arg1 bundleIdentifier:(id)arg2 team:(id)arg3 provisionableName:(id)arg4 evaluation:(id)arg5 profileManager:(id)arg6 accountManager:(id)arg7 teamManager:(id)arg8 teamAccountPairManager:(id)arg9 sessionManager:(id)arg10;

@end

@interface IDEExecutionActionArchivingProxy : NSObject
{
    NSString *_actionExtensionID;
    IDEExecutionAction *_proxiedAction;
}

+ (id)actionProxyForAction:(id)arg1;
@property(readonly) IDEExecutionAction *proxiedAction; // @synthesize proxiedAction=_proxiedAction;
@property(readonly) NSString *actionExtensionID; // @synthesize actionExtensionID=_actionExtensionID;
- (void).cxx_destruct;
- (void)addActionContent:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setActionTypeFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)dvt_encodeRelationshipsWithXMLArchiver:(id)arg1 version:(id)arg2;
- (void)dvt_encodeAttributesWithXMLArchiver:(id)arg1 version:(id)arg2;

@end

@interface IDERunDestinationDisambiguator : NSObject
{
}

+ (id)disambiguationAdditionsForDisambiguationInfos:(id)arg1;
+ (id)disambiguatedRunDestinationsWithNamesForRunDestinations:(id)arg1;
+ (id)disambiguatedRunDestinationsWithNameForRunDestinations:(id)arg1 scheme:(id)arg2;

@end

@interface IDERunDestinationWithName : NSObject <IDERunDestinationRepresentedObject>
{
    BOOL _isWatchDestination;
    IDERunDestination *_runDestination;
    NSString *_name;
}

+ (id)keyPathsForValuesAffectingFullDisplayName;
@property(readonly) NSString *name; // @synthesize name=_name;
@property(readonly) BOOL isWatchDestination; // @synthesize isWatchDestination=_isWatchDestination;
@property(readonly) IDERunDestination *runDestination; // @synthesize runDestination=_runDestination;
- (void).cxx_destruct;
@property(readonly) NSString *fullDisplayName;
- (id)_baseName;
@property(readonly, copy) NSString *description;
- (id)initWithRunDestination:(id)arg1 name:(id)arg2 isWatchDestination:(BOOL)arg3;
- (id)initWithRunDestination:(id)arg1 name:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IDERunDestinationDisambiguationInfo : NSObject <NSCopying>
{
    NSString *_deviceOperatingSystemVersion;
    NSString *_deviceOperatingSystemBuild;
    NSString *_deviceModelName;
    NSString *_deviceIdentifier;
    NSString *_targetArchitecture;
    DVTSDK *_targetSDK;
}

@property(readonly) DVTSDK *targetSDK; // @synthesize targetSDK=_targetSDK;
@property(readonly) NSString *targetArchitecture; // @synthesize targetArchitecture=_targetArchitecture;
@property(readonly) NSString *deviceIdentifier; // @synthesize deviceIdentifier=_deviceIdentifier;
@property(readonly) NSString *deviceModelName; // @synthesize deviceModelName=_deviceModelName;
@property(readonly) NSString *deviceOperatingSystemBuild; // @synthesize deviceOperatingSystemBuild=_deviceOperatingSystemBuild;
@property(readonly) NSString *deviceOperatingSystemVersion; // @synthesize deviceOperatingSystemVersion=_deviceOperatingSystemVersion;
- (void).cxx_destruct;
- (id)description;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithRunDestination:(id)arg1;
- (id)initWithDeviceOperatingSystemVersion:(id)arg1 deviceOperatingSystemBuild:(id)arg2 deviceModelName:(id)arg3 deviceIdentifier:(id)arg4 targetArchitecture:(id)arg5 targetSDK:(id)arg6;

@end

@interface IDELocalizationInvalidationPool : NSObject <DVTInvalidation>
{
    NSMutableSet *_toInvalidate;
}

+ (void)initialize;
+ (id)sharedInstance;
- (void).cxx_destruct;
- (void)primitiveInvalidate;
- (void)invalidateAndRemoveAllObjects;
- (void)invalidateAndRemoveObject:(id)arg1;
- (void)addObject:(id)arg1;
- (id)init;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface IDEPlaygroundLoggerScopeBoundary : NSObject <IDEPlaygroundLoggerLogEntry>
{
    unsigned long long _scopeBoundaryType;
}

@property unsigned long long scopeBoundaryType; // @synthesize scopeBoundaryType=_scopeBoundaryType;
@property(readonly, copy) NSString *description;
@property(readonly, copy) NSString *summary;
@property(readonly, copy) NSString *name;
- (id)initWithScopeBoundaryType:(unsigned long long)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IDEDistributionContext : NSObject
{
    IDEArchive *_archive;
    DVTSigningCertificateManager *_certificateManager;
    DVTProvisioningProfileManager *_profileManager;
    IDEProvisioningTeamManager *_teamManager;
    DVTDeveloperAccountManager *_accountManager;
    IDEDistributionMethod *_distributionMethod;
    id <IDEProvisioningBasicTeam> _team;
    DVTDeveloperAccount *_account;
    NSNumber *_distributionTask;
    IDEDistributionProvisioningEvaluation *_provisioningEvaluation;
    NSArray *_topLevelDistributionItems;
    IDEDistributionLogging *_logging;
    NSNumber *_uploadSymbols;
    NSNumber *_uploadBitcode;
    NSNumber *_compileBitcode;
    NSNumber *_stripSwiftSymbols;
    IDEAppStoreSubmissionConfiguration *_appStoreSubmissionConfiguration;
    id <ITunesSoftwareServiceConfigurationResponse> _appStoreSubmissionConfigurationResponse;
    NSArray *_distributionIssues;
    DVTMutableOrderedDictionary *_itemToEntitlementsProcessorsMap;
    IDEDistributionProcessingPipeline *_pipeline;
    DVTMutableOrderedDictionary *_itemToProcessingResultsMap;
    id <ITunesSoftwareApplicationDescription> _applicationRecord;
    NSURL *_ODRAssetPackBaseURL;
    NSNumber *_includeODRAssetPackInBundle;
    IDEDistributionManifest *_distributionManifest;
    NSArray *_thinningVariants;
    DVTDeveloperAccount *_iTunesConnectAccount;
    NSNumber *_archivedProvisioningStyle;
    NSNumber *_provisioningStyle;
    IDEDistributionProvisioningManualSigningMap *_manualSigningAssetMap;
    NSMutableSet *_itemsWithProfileSelection;
    NSMutableOrderedSet *_certificatesCreated;
    NSArray *_cachedDeviceFamiliesForThinning;
    DVTLogAspect *_logAspect;
    IDEDistributionContext *_parent;
    NSSet *_allowedInputs;
    NSSet *_allowedOutputs;
    NSArray *_stepClasses;
}

+ (void)initialize;
@property(readonly, nonatomic) NSArray *stepClasses; // @synthesize stepClasses=_stepClasses;
@property(readonly, nonatomic) NSSet *allowedOutputs; // @synthesize allowedOutputs=_allowedOutputs;
@property(readonly, nonatomic) NSSet *allowedInputs; // @synthesize allowedInputs=_allowedInputs;
@property(readonly, nonatomic) IDEDistributionContext *parent; // @synthesize parent=_parent;
- (void).cxx_destruct;
- (id)propertyListRepresentation;
@property(retain, nonatomic) DVTLogAspect *logAspect; // @synthesize logAspect=_logAspect;
- (BOOL)strictTeamIDMatch;
- (BOOL)isInAppContent;
- (id)flattenedDistributionItems;
@property(retain, nonatomic) NSArray *cachedDeviceFamiliesForThinning; // @synthesize cachedDeviceFamiliesForThinning=_cachedDeviceFamiliesForThinning;
- (id)_distributionContext_get_cachedDeviceFamiliesForThinning;
@property(retain, nonatomic) NSMutableOrderedSet *certificatesCreated; // @synthesize certificatesCreated=_certificatesCreated;
- (id)_distributionContext_get_certificatesCreated;
@property(retain, nonatomic) NSMutableSet *itemsWithProfileSelection; // @synthesize itemsWithProfileSelection=_itemsWithProfileSelection;
- (id)_distributionContext_get_itemsWithProfileSelection;
@property(retain, nonatomic) IDEDistributionProvisioningManualSigningMap *manualSigningAssetMap; // @synthesize manualSigningAssetMap=_manualSigningAssetMap;
- (id)_distributionContext_get_manualSigningAssetMap;
@property(retain, nonatomic) NSNumber *provisioningStyle; // @synthesize provisioningStyle=_provisioningStyle;
- (id)_distributionContext_get_provisioningStyle;
@property(retain, nonatomic) NSNumber *archivedProvisioningStyle; // @synthesize archivedProvisioningStyle=_archivedProvisioningStyle;
- (id)_distributionContext_get_archivedProvisioningStyle;
@property(retain, nonatomic) DVTDeveloperAccount *iTunesConnectAccount; // @synthesize iTunesConnectAccount=_iTunesConnectAccount;
- (id)_distributionContext_get_iTunesConnectAccount;
@property(retain, nonatomic) NSArray *thinningVariants; // @synthesize thinningVariants=_thinningVariants;
- (id)_distributionContext_get_thinningVariants;
@property(retain, nonatomic) IDEDistributionManifest *distributionManifest; // @synthesize distributionManifest=_distributionManifest;
- (id)_distributionContext_get_distributionManifest;
@property(retain, nonatomic) NSNumber *includeODRAssetPackInBundle; // @synthesize includeODRAssetPackInBundle=_includeODRAssetPackInBundle;
- (id)_distributionContext_get_includeODRAssetPackInBundle;
@property(retain, nonatomic) NSURL *ODRAssetPackBaseURL; // @synthesize ODRAssetPackBaseURL=_ODRAssetPackBaseURL;
- (id)_distributionContext_get_ODRAssetPackBaseURL;
@property(retain, nonatomic) id <ITunesSoftwareApplicationDescription> applicationRecord; // @synthesize applicationRecord=_applicationRecord;
- (id)_distributionContext_get_applicationRecord;
@property(retain, nonatomic) DVTMutableOrderedDictionary *itemToProcessingResultsMap; // @synthesize itemToProcessingResultsMap=_itemToProcessingResultsMap;
- (id)_distributionContext_get_itemToProcessingResultsMap;
@property(retain, nonatomic) IDEDistributionProcessingPipeline *pipeline; // @synthesize pipeline=_pipeline;
- (id)_distributionContext_get_pipeline;
@property(retain, nonatomic) DVTMutableOrderedDictionary *itemToEntitlementsProcessorsMap; // @synthesize itemToEntitlementsProcessorsMap=_itemToEntitlementsProcessorsMap;
- (id)_distributionContext_get_itemToEntitlementsProcessorsMap;
@property(retain, nonatomic) NSArray *distributionIssues; // @synthesize distributionIssues=_distributionIssues;
- (id)_distributionContext_get_distributionIssues;
@property(retain, nonatomic) id <ITunesSoftwareServiceConfigurationResponse> appStoreSubmissionConfigurationResponse; // @synthesize appStoreSubmissionConfigurationResponse=_appStoreSubmissionConfigurationResponse;
- (id)_distributionContext_get_appStoreSubmissionConfigurationResponse;
@property(retain, nonatomic) IDEAppStoreSubmissionConfiguration *appStoreSubmissionConfiguration; // @synthesize appStoreSubmissionConfiguration=_appStoreSubmissionConfiguration;
- (id)_distributionContext_get_appStoreSubmissionConfiguration;
@property(retain, nonatomic) NSNumber *stripSwiftSymbols; // @synthesize stripSwiftSymbols=_stripSwiftSymbols;
- (id)_distributionContext_get_stripSwiftSymbols;
@property(retain, nonatomic) NSNumber *compileBitcode; // @synthesize compileBitcode=_compileBitcode;
- (id)_distributionContext_get_compileBitcode;
@property(retain, nonatomic) NSNumber *uploadBitcode; // @synthesize uploadBitcode=_uploadBitcode;
- (id)_distributionContext_get_uploadBitcode;
@property(retain, nonatomic) NSNumber *uploadSymbols; // @synthesize uploadSymbols=_uploadSymbols;
- (id)_distributionContext_get_uploadSymbols;
@property(retain, nonatomic) IDEDistributionLogging *logging; // @synthesize logging=_logging;
- (id)_distributionContext_get_logging;
@property(retain, nonatomic) NSArray *topLevelDistributionItems; // @synthesize topLevelDistributionItems=_topLevelDistributionItems;
- (id)_distributionContext_get_topLevelDistributionItems;
@property(retain, nonatomic) IDEDistributionProvisioningEvaluation *provisioningEvaluation; // @synthesize provisioningEvaluation=_provisioningEvaluation;
- (id)_distributionContext_get_provisioningEvaluation;
@property(retain, nonatomic) NSNumber *distributionTask; // @synthesize distributionTask=_distributionTask;
- (id)_distributionContext_get_distributionTask;
@property(retain, nonatomic) DVTDeveloperAccount *account; // @synthesize account=_account;
- (id)_distributionContext_get_account;
@property(retain, nonatomic) id <IDEProvisioningBasicTeam> team; // @synthesize team=_team;
- (id)_distributionContext_get_team;
@property(retain, nonatomic) IDEDistributionMethod *distributionMethod; // @synthesize distributionMethod=_distributionMethod;
- (id)_distributionContext_get_distributionMethod;
@property(retain, nonatomic) DVTDeveloperAccountManager *accountManager; // @synthesize accountManager=_accountManager;
- (id)_distributionContext_get_accountManager;
@property(retain, nonatomic) IDEProvisioningTeamManager *teamManager; // @synthesize teamManager=_teamManager;
- (id)_distributionContext_get_teamManager;
@property(retain, nonatomic) DVTProvisioningProfileManager *profileManager; // @synthesize profileManager=_profileManager;
- (id)_distributionContext_get_profileManager;
@property(retain, nonatomic) DVTSigningCertificateManager *certificateManager; // @synthesize certificateManager=_certificateManager;
- (id)_distributionContext_get_certificateManager;
@property(retain, nonatomic) IDEArchive *archive; // @synthesize archive=_archive;
- (id)_distributionContext_get_archive;
- (id)nonChainedDescription;
- (id)description;
- (id)initWithParent:(id)arg1 stepClass:(Class)arg2 allowedInputs:(id)arg3 allowedOutputs:(id)arg4;
- (id)initWithParent:(id)arg1 allowedInputs:(id)arg2 allowedOutputs:(id)arg3;
- (id)initWithParent:(id)arg1 stepClass:(Class)arg2;

@end

@interface IDEDeviceThinningTraits : NSObject
{
    NSString *_productType;
    NSString *_artworkDeviceIdiom;
    long long _artworkDeviceScaleFactor;
    long long _artworkDeviceSubtype;
    long long _devicePerformanceMemoryClass;
    NSString *_deviceGraphicsFeatureSetClass;
    NSArray *_deviceGraphicsFeatureSetFallbacks;
    NSArray *_artworkHostedIdioms;
    NSString *_displayGamut;
    NSString *_artworkDynamicDisplayMode;
}

+ (id)deviceTraitInfoForProductType:(id)arg1 fromPlatform:(id)arg2 error:(id *)arg3;
@property(readonly) NSString *artworkDynamicDisplayMode; // @synthesize artworkDynamicDisplayMode=_artworkDynamicDisplayMode;
@property(readonly) NSString *displayGamut; // @synthesize displayGamut=_displayGamut;
@property(readonly) NSArray *artworkHostedIdioms; // @synthesize artworkHostedIdioms=_artworkHostedIdioms;
@property(readonly) NSArray *deviceGraphicsFeatureSetFallbacks; // @synthesize deviceGraphicsFeatureSetFallbacks=_deviceGraphicsFeatureSetFallbacks;
@property(readonly) NSString *deviceGraphicsFeatureSetClass; // @synthesize deviceGraphicsFeatureSetClass=_deviceGraphicsFeatureSetClass;
@property(readonly) long long devicePerformanceMemoryClass; // @synthesize devicePerformanceMemoryClass=_devicePerformanceMemoryClass;
@property(readonly) long long artworkDeviceSubtype; // @synthesize artworkDeviceSubtype=_artworkDeviceSubtype;
@property(readonly) long long artworkDeviceScaleFactor; // @synthesize artworkDeviceScaleFactor=_artworkDeviceScaleFactor;
@property(readonly) NSString *artworkDeviceIdiom; // @synthesize artworkDeviceIdiom=_artworkDeviceIdiom;
@property(readonly) NSString *productType; // @synthesize productType=_productType;
- (void).cxx_destruct;
- (id)initWithProductType:(id)arg1 artworkDeviceIdiom:(id)arg2 artworkDeviceScaleFactor:(long long)arg3 artworkDeviceSubtype:(long long)arg4 devicePerformanceMemoryClass:(long long)arg5 deviceGraphicsFeatureSetClass:(id)arg6 deviceGraphicsFeatureSetFallbacks:(id)arg7 artworkHostedIdioms:(id)arg8 displayGamut:(id)arg9 artworkDynamicDisplayMode:(id)arg10;

@end

@interface IDEUpgradeTask : NSObject
{
    NSString *_title;
    NSString *_subtitle;
    NSString *_category;
    IDEUpgradeContext *_context;
    BOOL _selected;
}

+ (id)analyzeInScheme:(id)arg1;
+ (id)analyzeInContext:(id)arg1;
+ (id)metricLogAspect;
@property BOOL selected; // @synthesize selected=_selected;
@property(readonly) IDEUpgradeContext *context; // @synthesize context=_context;
@property(readonly) NSString *category; // @synthesize category=_category;
@property(readonly) NSString *subtitle; // @synthesize subtitle=_subtitle;
@property(readonly) NSString *title; // @synthesize title=_title;
- (void).cxx_destruct;
- (void)_setCategory:(id)arg1;
- (BOOL)upgrade;
- (id)initWithTitle:(id)arg1 subtitle:(id)arg2 context:(id)arg3;

@end

@interface IDECustomUpgradeTask : IDEUpgradeTask
{
}

- (id)handlerForTask;

@end

@interface IDEBatchFindQueryProgressNotifier : NSObject
{
    IDEBatchFindAbstractQuery *_query;
    long long _progress;
    NSDate *_lastProgressNotificationDate;
    NSMutableArray *_bufferedResults;
    NSDate *_lastBufferedResultDeliveryDate;
    long long _totalOfResultsDelivered;
    NSMutableSet *_seenResults;
    NSObject<OS_dispatch_queue> *_queue;
    NSNumber *_totalWork;
    long long _incrementalProgress;
    BOOL _fakeSlowness;
    BOOL _started;
    BOOL _finished;
    NSMutableSet *_stalledFilePaths;
}

- (void).cxx_destruct;
- (void)finishProcessing;
- (void)didFinishGeneratingLazyChildrenOfResult:(id)arg1;
- (void)didFinishStallingOnFilePath:(id)arg1;
- (void)didBeginStallingOnFilePath:(id)arg1;
- (void)deliverStalledFilesWithLockAlreadyHeld:(long long)arg1;
- (void)deliverResult:(id)arg1;
- (void)deliverResults:(id)arg1;
- (void)deliverBufferedResultsIfNeededWithLockAlreadyHeld:(long long)arg1;
- (void)deliverBufferedResultsWithLockAlreadyHeld:(long long)arg1;
- (void)updateProgress:(long long)arg1 withLockAlreadyHeld:(long long)arg2;
- (void)updateProgress:(long long)arg1;
- (void)incrementProgressBy:(long long)arg1;
- (void)noteIncrementalGoal:(long long)arg1;
- (void)started;
- (void)withLock:(CDUnknownBlockType)arg1;
- (id)initWithQuery:(id)arg1;

@end

@interface IDEdSYMDownloader : NSObject
{
    IDEArchive *_archive;
    NSURLSession *_urlSession;
    CDUnknownBlockType _fileDownloadedCallback;
    CDUnknownBlockType _completionCallback;
    unsigned long long _maximumConcurrentTasks;
    NSArray *_downloadTasks;
}

@property(copy) NSArray *downloadTasks; // @synthesize downloadTasks=_downloadTasks;
@property(nonatomic) unsigned long long maximumConcurrentTasks; // @synthesize maximumConcurrentTasks=_maximumConcurrentTasks;
@property(copy, nonatomic) CDUnknownBlockType completionCallback; // @synthesize completionCallback=_completionCallback;
@property(copy, nonatomic) CDUnknownBlockType fileDownloadedCallback; // @synthesize fileDownloadedCallback=_fileDownloadedCallback;
@property(readonly) NSURLSession *urlSession; // @synthesize urlSession=_urlSession;
@property(readonly) IDEArchive *archive; // @synthesize archive=_archive;
- (void).cxx_destruct;
- (void)initiateDownloadWithAccount:(id)arg1;
- (id)initWithArchive:(id)arg1;

@end

@interface IDEDebuggerCommandBreakpointAction : IDEBreakpointAction
{
    NSString *_consoleCommand;
}

+ (id)propertiesAffectingPersistenceState;
@property(copy, nonatomic) NSString *consoleCommand; // @synthesize consoleCommand=_consoleCommand;
- (void).cxx_destruct;
- (void)dvt_encodeAttributesWithXMLArchiver:(id)arg1 version:(id)arg2;
- (void)setConsoleCommandFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (id)initFromXMLUnarchiver:(id)arg1 archiveVersion:(float)arg2;
- (void)performActionUsingContext:(id)arg1 andBreakpoint:(id)arg2;
- (void)_debuggerCommandActionCommonInit;
- (id)init;

@end

@interface IDEBuilder : DVTOperation <IDEBuildTaskCallbacks>
{
    long long _buildCommand;
    IDEBuildableSnapshot *_snapshot;
    NSArray *_exclusiveSourceFiles;
    NSArray *_warningsToEmit;
    NSString *_uniqueIdentifier;
    long long _result;
    IDEActivityLogSection *_activityLogSection;
    NSString *_localizedDescription;
    IDEBuildOperationQueueSet *_buildTaskQueueSet;
    BOOL _restorePersistedBuildResults;
    id <DVTCancellationBlockCompletion> _cancellationToken;
    NSMutableSet *_generatedFileInfo;
    NSMutableArray *_buildTaskStatistics;
    NSDictionary *_copiedFilePathsFromBuildOperation;
    NSDictionary *_copiedFilePathsFromBuildableProduct;
    DVTSystemStatisticsMeasurement *_initialSystemStats;
    BOOL _dontActuallyRunCommands;
    DVTDynamicLogController *_builderTimingDataLogController;
    IDEBuildStatisticsSection *_buildStatisticsSection;
    IDEBuilderHarvestedInfo *_harvestedInfo;
    id <IDEBuilderCallbacks> _callbackDelegate;
    IDESchemeActionResult *_schemeBuildResult;
}

+ (void)initialize;
@property(retain) IDESchemeActionResult *schemeBuildResult; // @synthesize schemeBuildResult=_schemeBuildResult;
@property __weak id <IDEBuilderCallbacks> callbackDelegate; // @synthesize callbackDelegate=_callbackDelegate;
@property(readonly) IDEBuilderHarvestedInfo *harvestedInfo; // @synthesize harvestedInfo=_harvestedInfo;
@property(retain) IDEBuildStatisticsSection *buildStatisticsSection; // @synthesize buildStatisticsSection=_buildStatisticsSection;
@property(retain) DVTDynamicLogController *builderTimingDataLogController; // @synthesize builderTimingDataLogController=_builderTimingDataLogController;
@property BOOL dontActuallyRunCommands; // @synthesize dontActuallyRunCommands=_dontActuallyRunCommands;
@property(readonly, copy) NSString *uniqueIdentifier; // @synthesize uniqueIdentifier=_uniqueIdentifier;
@property(copy) NSDictionary *copiedFilePathsFromBuildableProduct; // @synthesize copiedFilePathsFromBuildableProduct=_copiedFilePathsFromBuildableProduct;
@property(copy) NSDictionary *copiedFilePathsFromBuildOperation; // @synthesize copiedFilePathsFromBuildOperation=_copiedFilePathsFromBuildOperation;
@property(readonly) NSSet *generatedFileInfo; // @synthesize generatedFileInfo=_generatedFileInfo;
@property(readonly) BOOL restorePersistedBuildResults; // @synthesize restorePersistedBuildResults=_restorePersistedBuildResults;
@property(readonly) NSArray *exclusiveSourceFiles; // @synthesize exclusiveSourceFiles=_exclusiveSourceFiles;
@property(readonly) IDEBuildOperationQueueSet *buildTaskQueueSet; // @synthesize buildTaskQueueSet=_buildTaskQueueSet;
@property(copy) NSString *localizedDescription; // @synthesize localizedDescription=_localizedDescription;
@property(retain, nonatomic) IDEActivityLogSection *activityLogSection; // @synthesize activityLogSection=_activityLogSection;
@property(nonatomic) long long result; // @synthesize result=_result;
@property(copy) NSArray *warningsToEmit; // @synthesize warningsToEmit=_warningsToEmit;
@property(readonly) IDEBuildableSnapshot *snapshot; // @synthesize snapshot=_snapshot;
@property(readonly) long long buildCommand; // @synthesize buildCommand=_buildCommand;
- (void).cxx_destruct;
@property(readonly, copy) NSString *description;
- (void)_logBuilderTimingDataIfNecessary;
- (void)addGeneratedFileInfo:(id)arg1;
- (void)buildTask:(id)arg1 addsPostprocessingBlocks:(id)arg2;
- (void)buildTaskDidUpdateStatus:(id)arg1;
- (void)buildTask:(id)arg1 didSetExitCode:(int)arg2;
- (void)buildTask:(id)arg1 activityLogSectionDidChange:(id)arg2;
- (void)buildTaskDidStartExecuting:(id)arg1;
- (void)cleanupAfterBuilding;
- (void)primitiveMain;
- (void)main;
- (void)prepareForBuilding;
- (id)init;
- (id)initForBuildCommand:(long long)arg1 withBuildableSnapshot:(id)arg2 buildTaskQueueSet:(id)arg3 buildOnlyTheseFiles:(id)arg4 restorePersistedBuildResults:(BOOL)arg5;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IDEBuilderHarvestedInfo : NSObject
{
    DVTMacroExpansionScope *_macroExpansionScope;
    NSString *_threadSanitizerMessage;
    BOOL _isImmutable;
}

@property(readonly) BOOL isImmutable; // @synthesize isImmutable=_isImmutable;
- (void).cxx_destruct;
@property(copy) NSString *threadSanitizerMessage;
@property(copy) DVTMacroExpansionScope *macroExpansionScope;
- (void)makeImmutable;
- (id)init;

@end

@interface IDEBuilderGeneratedFileInfo : NSObject <NSCoding>
{
    long long _buildCommand;
    DVTFilePath *_sourceFilePath;
    DVTFilePath *_generatedFilePath;
    long long _commandResult;
    NSString *_errorString;
    IDEActivityLogSection *_commandLogSection;
}

@property(readonly) IDEActivityLogSection *commandLogSection; // @synthesize commandLogSection=_commandLogSection;
@property(readonly) NSString *errorString; // @synthesize errorString=_errorString;
@property(readonly) long long commandResult; // @synthesize commandResult=_commandResult;
@property(readonly) DVTFilePath *generatedFilePath; // @synthesize generatedFilePath=_generatedFilePath;
@property(readonly) DVTFilePath *sourceFilePath; // @synthesize sourceFilePath=_sourceFilePath;
@property(readonly) long long buildCommand; // @synthesize buildCommand=_buildCommand;
- (void).cxx_destruct;
- (id)description;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithBuildCommand:(long long)arg1 sourceFilePath:(id)arg2 generatedFilePath:(id)arg3 commandResult:(long long)arg4 errorString:(id)arg5 commandLogSection:(id)arg6;

@end

@interface IDEWorkspace : IDEXMLPackageContainer <IDEClientTracking, IDEIssueLogDataSource, IDEProvisionableProvider>
{
    NSString *_untitledName;
    IDEWorkspaceArena *_workspaceArena;
    DVTFilePath *_headerMapFilePath;
    IDEExecutionEnvironment *_executionEnvironment;
    IDEContainerQuery *_containerQuery;
    DVTObservingToken *_containerQueryObservingToken;
    NSMutableSet *_referencedContainers;
    NSHashTable *_fileRefsWithContainerLoadingIssues;
    IDEActivityLogSection *_containerLoadingIntegrityLog;
    NSMutableSet *_customDataStores;
    IDEWorkspaceUserSettings *_userSettings;
    IDEWorkspaceSharedSettings *_sharedSettings;
    NSMapTable *_blueprintProviderObserverMap;
    NSMutableSet *_referencedBlueprints;
    BOOL _initialContainerScanComplete;
    NSMutableArray *_referencedRunnableBuildableProducts;
    IDERunContextManager *_runContextManager;
    IDELogManager *_logManager;
    IDEIssueManager *_issueManager;
    IDEBreakpointManager *_breakpointManager;
    IDETestManager *_testManager;
    _TtC16DVTDocumentation23DVTDocumentationManager *_documentationManager;
    IDEContainerQuery *_indexableSourceQuery;
    DVTObservingToken *_indexableSourceQueryObservingToken;
    NSMapTable *_observedIndexableSourcesToObservingTokensTable;
    IDEContainerQuery *_indexableFileQuery;
    DVTObservingToken *_indexableFileQueryObservingToken;
    id _indexableFileUpdateNotificationToken;
    IDEIndex *_index;
    IDERefactoring *_refactoring;
    NSMapTable *_fileRefsToResolvedFilePaths;
    DVTTimeSlicedMainThreadWorkQueue *_fileReferenceForIndexingQueue;
    IDEDeviceInstallWorkspaceMonitor *_deviceInstallWorkspaceMonitor;
    IDEProvisioningWorkspaceMonitor *_provisioningWorkspaceMonitor;
    IDESourceControlWorkspaceMonitor *_sourceControlWorkspaceMonitor;
    IDEProvisioningManager *_provisioningManager;
    IDELocalizationManager *_localizationManager;
    _TtC13IDEFoundation30IDEStructureEditingCoordinator *_structureEditingMoveCoordinator;
    NSNumber *_shouldUseLegacyBuildSystem;
    id <IDEBuildSystemServiceProvider> _buildSystemServiceProvider;
    DVTNotificationToken *_buildSystemSettingsNotificationToken;
    DVTFilePath *_wrappedContainerPath;
    IDEContainer<IDECustomDataStoring> *_wrappedContainer;
    DVTObservingToken *_wrappedContainerValidObservingToken;
    DVTObservingToken *_newWrappedContainerObservingToken;
    NSHashTable *_pendingReferencedFileReferences;
    NSHashTable *_pendingReferencedContainers;
    DVTNotificationToken *_holdFilesOnAppActivationNotificationToken;
    IDEConcreteClientTracker *_clientTracker;
    NSHashTable *_fileReferencesForProblem8727051;
    DVTObservingToken *_finishedLoadingObservingToken;
    NSDictionary *_Problem9887530_preferredStructurePaths;
    BOOL _simpleFilesFocused;
    id _openingPerformanceMetricIdentifier;
    DVTStackBacktrace *_finishedLoadingBacktrace;
    NSMutableOrderedSet *_initialOrderedReferencedBlueprintProviders;
    BOOL _hasPostedIndexingRegistrationBatchNotification;
    BOOL _didFinishLoadingFirstStage;
    BOOL _finishedLoading;
    BOOL _postLoadingPerformanceMetricsAllowed;
    BOOL _willInvalidate;
    BOOL _pendingFileReferencesAndContainers;
    BOOL _didProcessFileReferencesForProblem8727051;
    BOOL _isCleaningBuildFolder;
    BOOL _indexingAndRefactoringRestartScheduled;
    BOOL _indexCreationInFlight;
    BOOL _didFinishBuildingInitialBlueprintProviderOrderedSet;
    NSMapTable *_pendingExecutionNotificationTokens;
    BOOL _wasLoadedForUIContext;
    BOOL _hostsOnlyWrappedContainer;
    BOOL _hostsOnlyXcode3Project;
    BOOL _hostsOnlyPlayground;
    BOOL _isPotentiallyClosing;
    _IDEDynamicContentRootGroup *_dynamicContentRootGroup;
    IDETextFragmentIndex *_textFragmentIndex;
    IDEWorkspaceUpgradeTasksController *_deferredUpgradeTasksController;
    NSDate *_icloudDriveLastHeldDate;
    long long _indexGenerationCounter;
    id <IDEActiveRunContextStoring> _activeRunContextStore;
}

+ (id)keyPathsForValuesAffectingProvisionableDevices;
+ (id)keyPathsForValuesAffectingProvisionables;
+ (BOOL)_shouldTrackReadOnlyStatus;
+ (id)keyPathsForValuesAffectingRepresentingCustomDataStore;
+ (id)keyPathsForValuesAffectingHostsOnlyPlayground;
+ (id)keyPathsForValuesAffectingHostsOnlyXcode3Project;
+ (id)keyPathsForValuesAffectingRepresentingTitle;
+ (id)keyPathsForValuesAffectingRepresentingFilePath;
+ (id)keyPathsForValuesAffectingName;
+ (id)keyPathsForValuesAffectingReferencedSourcePackages;
+ (id)_workspaceFileExtension;
+ (id)containerTypeDisplayName;
+ (id)containerFileDataType;
+ (id)xmlArchiveFileName;
+ (id)rootElementName;
+ (BOOL)_shouldLoadUISubsystems;
+ (BOOL)automaticallyNotifiesObserversOfFileRefsWithContainerLoadingIssues;
+ (unsigned long long)assertionBehaviorAfterEndOfEventForSelector:(SEL)arg1;
+ (unsigned long long)assertionBehaviorForKeyValueObservationsAtEndOfEvent;
+ (void)initialize;
+ (id)globalScopeStore;
+ (id)createGlobalScopeStore;
@property(retain) id <IDEActiveRunContextStoring> activeRunContextStore; // @synthesize activeRunContextStore=_activeRunContextStore;
@property(readonly, nonatomic) long long indexGenerationCounter; // @synthesize indexGenerationCounter=_indexGenerationCounter;
@property(nonatomic) BOOL isPotentiallyClosing; // @synthesize isPotentiallyClosing=_isPotentiallyClosing;
@property BOOL isCleaningBuildFolder; // @synthesize isCleaningBuildFolder=_isCleaningBuildFolder;
@property(copy) NSDate *icloudDriveLastHeldDate; // @synthesize icloudDriveLastHeldDate=_icloudDriveLastHeldDate;
@property(retain) IDEWorkspaceUpgradeTasksController *deferredUpgradeTasksController; // @synthesize deferredUpgradeTasksController=_deferredUpgradeTasksController;
@property(retain, nonatomic) IDEWorkspaceSharedSettings *sharedSettings; // @synthesize sharedSettings=_sharedSettings;
@property(retain, nonatomic) IDEWorkspaceUserSettings *userSettings; // @synthesize userSettings=_userSettings;
@property(nonatomic) BOOL pendingFileReferencesAndContainers; // @synthesize pendingFileReferencesAndContainers=_pendingFileReferencesAndContainers;
@property(retain, nonatomic) IDEWorkspaceArena *workspaceArena; // @synthesize workspaceArena=_workspaceArena;
@property BOOL hostsOnlyPlayground; // @synthesize hostsOnlyPlayground=_hostsOnlyPlayground;
@property BOOL hostsOnlyXcode3Project; // @synthesize hostsOnlyXcode3Project=_hostsOnlyXcode3Project;
@property BOOL hostsOnlyWrappedContainer; // @synthesize hostsOnlyWrappedContainer=_hostsOnlyWrappedContainer;
@property(readonly) DVTFilePath *wrappedContainerPath; // @synthesize wrappedContainerPath=_wrappedContainerPath;
@property(readonly, nonatomic) BOOL postLoadingPerformanceMetricsAllowed; // @synthesize postLoadingPerformanceMetricsAllowed=_postLoadingPerformanceMetricsAllowed;
@property(nonatomic) BOOL finishedLoading; // @synthesize finishedLoading=_finishedLoading;
@property(nonatomic) BOOL wasLoadedForUIContext; // @synthesize wasLoadedForUIContext=_wasLoadedForUIContext;
@property(retain, nonatomic) IDEProvisioningManager *provisioningManager; // @synthesize provisioningManager=_provisioningManager;
@property(retain) IDESourceControlWorkspaceMonitor *sourceControlWorkspaceMonitor; // @synthesize sourceControlWorkspaceMonitor=_sourceControlWorkspaceMonitor;
@property(retain) IDEProvisioningWorkspaceMonitor *provisioningWorkspaceMonitor; // @synthesize provisioningWorkspaceMonitor=_provisioningWorkspaceMonitor;
@property(retain) IDEDeviceInstallWorkspaceMonitor *deviceInstallWorkspaceMonitor; // @synthesize deviceInstallWorkspaceMonitor=_deviceInstallWorkspaceMonitor;
@property(readonly) IDERefactoring *refactoring; // @synthesize refactoring=_refactoring;
@property(readonly) IDETextFragmentIndex *textFragmentIndex; // @synthesize textFragmentIndex=_textFragmentIndex;
@property(retain) IDEIndex *index; // @synthesize index=_index;
@property(retain) IDERunContextManager *runContextManager; // @synthesize runContextManager=_runContextManager;
@property BOOL initialContainerScanComplete; // @synthesize initialContainerScanComplete=_initialContainerScanComplete;
@property(retain) _IDEDynamicContentRootGroup *dynamicContentRootGroup; // @synthesize dynamicContentRootGroup=_dynamicContentRootGroup;
- (void).cxx_destruct;
@property(readonly, nonatomic) NSSet *provisionableDevices;
@property(readonly, nonatomic) NSSet *provisionables;
- (void)notifyBuildSystemServiceProviderThatBlueprintProviderDidChange:(id)arg1;
- (id)buildableProductsForBaseName:(id)arg1;
- (void)_handleIndexablesChange:(id)arg1;
- (void)didCreateIndex:(id)arg1;
- (void)initializeIndexAndRefactoring:(id)arg1;
- (void)_scheduleWorkspaceUpgradeTasksController:(id)arg1;
- (void)_setupWorkspaceUpgradeTasksController;
- (void)_setupSourceControlWorkspaceMonitorIfNeeded;
- (void)_initializeSourceControlWorkspaceMonitor;
- (void)_setupProvisioningWorkspaceMonitor;
- (void)_setupDeviceInstallWorkspaceMonitor;
- (id)tearDownIndexAndRefactoring;
- (void)_restartIndexingAndRefactoring;
- (void)_scheduleIndexingAndRefactoringRestart;
- (void)_handleIndexableFilesChange:(id)arg1;
- (void)_updateIndexableFiles:(id)arg1;
- (id)_fileRefsToResolvedFilePaths;
- (void)_handleIndexableSourcesChange:(id)arg1;
- (void)primitiveInvalidate;
@property(readonly) IDEContainer<IDECustomDataStoring> *representingCustomDataStore;
- (void)_updateWrappedContainer;
- (void)_setWrappedContainer:(id)arg1;
@property(readonly, getter=isSimpleFilesFocused) BOOL simpleFilesFocused;
- (void)_setSimpleFilesFocused:(BOOL)arg1;
- (void)_primitiveSetSimpleFilesFocused:(BOOL)arg1;
@property(readonly) NSString *representingTitle;
@property(readonly) DVTFilePath *representingFilePath;
@property(retain) IDEExecutionEnvironment *executionEnvironment;
- (void)_setupExecutionEnvironment;
- (id)_subitemsForUnarchivedSubitems:(id)arg1;
- (float)maxSupportedArchiveVersion;
- (float)archiveVersion;
- (id)displayName;
@property(readonly) NSString *name;
@property(readonly) BOOL supportsSourcePackages;
@property(readonly) id <IDEBuildSystemServiceProvider> buildSystemServiceProvider;
@property(readonly) BOOL usesModernBuildSystem;
- (void)_invalidateBuildSystemServiceProvider;
@property(retain, nonatomic) NSNumber *shouldUseLegacyBuildSystem; // @dynamic shouldUseLegacyBuildSystem;
@property(readonly) _TtC13IDEFoundation30IDEStructureEditingCoordinator *structureEditingMoveCoordinator;
@property(readonly) IDELocalizationManager *localizationManager;
@property(retain) _TtC16DVTDocumentation23DVTDocumentationManager *documentationManager; // @dynamic documentationManager;
@property(retain) IDETestManager *testManager; // @dynamic testManager;
@property(retain) IDEBreakpointManager *breakpointManager; // @dynamic breakpointManager;
@property(readonly) IDEIssueManager *issueManager;
- (void)_setupIssueManagerIfNeeded;
@property(readonly) IDELogManager *logManager;
- (void)_setupLogManagerIfNeeded;
- (id)blueprintsContainingFilePaths:(id)arg1;
@property(readonly) NSArray *notificationPayloadFileReferences;
@property(readonly) NSSet *customDataStores;
- (id)likelyAttachToTargetRunnableBuildableNames;
@property(readonly) NSSet *referencedRunnableBuildableProducts;
- (id)referencedSourcePackageForURL:(id)arg1;
@property(readonly) NSSet *referencedSourcePackages;
@property(readonly) NSSet *referencedBlueprints;
- (id)containerGraphOrderForBlueprintProviders:(id)arg1;
@property(readonly) NSSet *referencedBlueprintProviders;
@property(readonly) NSSet *referencedContainers;
- (void)_referencedContainersDidUpdate;
- (void)invokeChangingValueForKey:(id)arg1 fromSet:(id)arg2 toSet:(id)arg3 block:(CDUnknownBlockType)arg4;
- (void)_referencedBlueprintsDidUpdateForProvider:(id)arg1;
- (id)buildableProductsForProductWithModuleName:(id)arg1;
- (id)buildableProductsForProductName:(id)arg1;
- (void)_setupHeaderMapPath;
- (void)_setupContainerQueries;
- (void)_addBlueprintProviderToOrderedSet:(id)arg1;
- (id)_Problem9887530_preferredStructurePathForContainerAtPath:(id)arg1;
- (id)_Problem9887530_preferredStructurePaths;
- (id)_Problem9887530_preferredStructurePathsForContainerToContainerFileReferences:(id)arg1;
- (id)_Problem9887530_wrappedContainerFileReferences:(id)arg1 forPath:(id)arg2;
- (void)_processFileReferencesForProblem8727051;
- (void)_setFileRefsForProblem8727051:(id)arg1;
- (void)cancelTrackedClients;
@property(readonly) BOOL isCancelling;
- (id)clientsNotSupportingCancellation;
- (id)clientsRequiringCancellationPrompt;
- (id)registerUncancellableClientWithName:(id)arg1;
- (id)registerClientWithName:(id)arg1 promptForCancellation:(BOOL)arg2 cancellationBlock:(CDUnknownBlockType)arg3;
@property(readonly) IDEConcreteClientTracker *clientTracker;
- (BOOL)_cancelOngoingBuildWithCompletionBlockIfNeeded:(CDUnknownBlockType)arg1;
- (void)_setupBuildCompletedNotificationForExecutionEnvironment:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (BOOL)setContainerFilePath:(id)arg1 error:(id *)arg2;
- (BOOL)_setContainerFilePath:(id)arg1 upgradeToWorkspace:(BOOL)arg2 error:(id *)arg3;
- (void)_changeContainerFilePath:(id)arg1 inContext:(id)arg2 upgradeToWorkspace:(BOOL)arg3;
- (void)_changeContainerFilePath:(id)arg1 inContext:(id)arg2;
- (BOOL)_configureWrappedWorkspaceWithError:(id *)arg1;
- (id)_wrappingContainerPath;
- (id)_wrappedPlaygroundContainer;
- (void)_setWrappedContainerPath:(id)arg1;
- (id)initWithFilePath:(id)arg1 extension:(id)arg2 workspace:(id)arg3 options:(id)arg4 error:(id *)arg5;
- (void)_buildProductsLocationDidChange;
- (void)_containerDidLoad;
- (void)_checkIfHasFinishedLoading;
- (void)_finishLoadingAsynchronously:(BOOL)arg1 shouldUpgradeFromSimpleFilesFocused:(BOOL)arg2;
- (void)_setupWorkspaceArenaIfNeeded;
- (void)holdOnDiskFilesForICloudDriveIfNecessary;
@property(readonly) IDEActivityLogSection *issueLog;
- (void)analyzeModelForIssues;
- (void)_setFileRefsWithContainerLoadingIssues:(id)arg1;
- (void)_handleContainerResolutionFailureForFileReference:(id)arg1;
- (void)_clearPendingFileReferencesAndContainerLoadingTokens;
- (void)_removePendingReferencedContainerPath:(id)arg1;
- (void)_addPendingReferencedContainerPath:(id)arg1;
- (void)_removePendingReferencedFileReference:(id)arg1;
- (void)_addPendingReferencedFileReference:(id)arg1;
@property(retain) id <IDEWorkspaceDelegate> workspaceDelegate;
- (id)_openingPerformanceMetricIdentifier;
- (void)dvt_encodeRelationshipsWithXMLArchiver:(id)arg1 version:(id)arg2;
- (void)dvt_encodeAttributesWithXMLArchiver:(id)arg1 version:(id)arg2;
- (void)setSdefSupport_activeRunDestination:(id)arg1;
- (id)sdefSupport_activeRunDestinationForDocument:(id)arg1;
- (id)sdefSupport_runDestinationsForDocument:(id)arg1;
- (id)_disambiguatedRunDestinations;
- (void)setSdefSupport_activeScheme:(id)arg1;
- (id)sdefSupport_activeSchemeForDocument:(id)arg1;
- (id)sdefSupport_schemesForDocument:(id)arg1;
- (id)newScriptingObjectOfClass:(Class)arg1 forValueForKey:(id)arg2 withContentsValue:(id)arg3 properties:(id)arg4;
@property(retain) NSArray *namedBatchFindScopes;
- (id)localScopeStore;
- (id)ideModelObjectTypeIdentifier;
- (id)ideIndex_configurationNameForIndexingBlueprint:(id)arg1 scheme:(id)arg2;
- (id)ideIndex_runDestinationForIndexingWithScheme:(id)arg1;
- (id)ideIndex_bestSchemeForBlueprint:(id)arg1;
- (id)ideIndex_buildParametersForIndexingBlueprint:(id)arg1 synthesizedMacroOverrides:(id)arg2;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface _IDEDynamicContentRootGroup : IDEGroup
{
}

+ (id)keyPathsForValuesAffectingIde_childItemsGroupIdentifier;
- (BOOL)canStructureEditSortSubitemsAtIndexes:(id)arg1 byNameOrByType:(BOOL)arg2;
- (BOOL)canStructureEditRemoveSubitemsAtIndexes:(id)arg1;
- (BOOL)canStructureEditInsertSubitems:(id)arg1 atIndex:(unsigned long long)arg2;
- (BOOL)canStructureEditInsertFileURLs:(id)arg1 atIndex:(unsigned long long)arg2;
- (BOOL)canStructureEditName;
- (id)ide_childItemsGroupIdentifier;

@end

@interface IDEInMemoryActivityLogRecord : IDEActivityLogRecord
{
    IDEInMemoryLogStore_Impl *_logStore;
    IDEActivityLogSection *_fullLog;
    DVTFileDataType *_documentType;
}

+ (id)keyPathsForValuesAffectingTimeStoppedRecording;
+ (id)keyPathsForValuesAffectingIsRecording;
- (void).cxx_destruct;
- (id)description;
- (double)timeStoppedRecording;
- (id)highLevelStatus;
- (id)signature;
- (id)documentType;
- (double)timeStartedRecording;
- (id)title;
- (id)uniqueIdentifier;
- (id)domainType;
- (BOOL)isRecording;
- (id)fullLogIfInMemory;
- (id)fullLogWithError:(id *)arg1;
- (void)removeSelfWithCompletionBlock:(CDUnknownBlockType)arg1;
- (BOOL)isRemoved;
- (id)initWithLog:(id)arg1 entityIdentifier:(id)arg2 store:(id)arg3;

@end

@interface IDEInMemoryLogStore_Impl : IDEInMemoryLogStore
{
}

- (BOOL)preserveOldLogs;
- (void)setPreserveOldLogs:(BOOL)arg1;
- (void)_removeLogRecord:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (id)addLog:(id)arg1 entityIdentifier:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;

@end

@interface IDEInMemoryLogStore : IDELogStore
{
}

+ (id)inMemoryStore;

@end

@interface IDEIndexCollectionLogging : NSObject
{
}

+ (void)logTestStructure:(id)arg1 toFile:(id)arg2;
+ (void)logIndexCollection:(id)arg1 toFile:(id)arg2;
+ (void)dump:(id)arg1 toFile:(id)arg2 ofContent:(id)arg3;
+ (id)describeIndexCollection:(id)arg1;
+ (id)testLogDirectory;
+ (void)initialize;

@end

@interface IDEIndexDatabase : NSObject
{
    NSURL *_fileURL;
    IDEIndexImporter *_importer;
    NSMutableArray *_dbConnections;
    DVTDispatchLock *_dbConnectionsLock;
    NSMutableDictionary *_rawKindForSymbolKind;
    NSMutableDictionary *_symbolKindForRawKind;
    NSDictionary *_rawLanguageForSymbolLanguage;
    NSDictionary *_symbolLanguageForRawLanguage;
    NSObject<IDEIndexDatabaseDelegate> *_delegate;
    IDEIndexDatabaseQueryProvider *_queryProvider;
    BOOL _readonly;
    BOOL _diagnosticMode;
    BOOL _enabledWAL;
    NSMutableArray *_errors;
    DVTDispatchLock *_dataLock;
    IDEIndexDBStringStorage *_directoryStringStorage;
    IDEIndexDBStringStorage *_filenameStringStorage;
    IDEIndexDBStringStorage *_moduleURLStringStorage;
    IDEIndexDBStringStorage *_spellingStringStorage;
    IDEIndexDBStringStorage *_resolutionStringStorage;
    IDEIndexDBStringStorage *_completionStringStorage;
    NSDictionary *_rootPathsTrie;
    NSMutableDictionary *_rootPathsCache;
    NSMapTable *_directoryPathsCache;
}

+ (id)modulesTargetID;
+ (id)auxTargetID;
+ (id)pchTargetID;
+ (void)reportException:(id)arg1;
+ (BOOL)verboseLogging;
+ (void)logCritical:(id)arg1;
+ (void)logVerbose:(id)arg1;
+ (void)log:(id)arg1;
+ (void)initialize;
@property(readonly, nonatomic) BOOL enabledWAL; // @synthesize enabledWAL=_enabledWAL;
@property(readonly, nonatomic) NSObject<IDEIndexQueryProvider> *queryProvider; // @synthesize queryProvider=_queryProvider;
@property(retain, nonatomic) NSObject<IDEIndexDatabaseDelegate> *delegate; // @synthesize delegate=_delegate;
@property(readonly, nonatomic) IDEIndexImporter *importer; // @synthesize importer=_importer;
@property(copy, nonatomic) NSURL *fileURL; // @synthesize fileURL=_fileURL;
- (void).cxx_destruct;
- (id)symbolDumpForFile:(id)arg1;
- (void)saveStringStorage;
- (void)findSpellingStringsContaining:(id)arg1 anchorStart:(BOOL)arg2 anchorEnd:(BOOL)arg3 subsequence:(BOOL)arg4 lowercase:(BOOL)arg5 cancelWhen:(CDUnknownBlockType)arg6 forEachResult:(CDUnknownBlockType)arg7;
- (void)findFilenameStringsContaining:(id)arg1 anchorStart:(BOOL)arg2 anchorEnd:(BOOL)arg3 subsequence:(BOOL)arg4 lowercase:(BOOL)arg5 cancelWhen:(CDUnknownBlockType)arg6 forEachResult:(CDUnknownBlockType)arg7;
- (void)findStringsContaining:(id)arg1 inStorage:(id)arg2 anchorStart:(BOOL)arg3 anchorEnd:(BOOL)arg4 subsequence:(BOOL)arg5 lowercase:(BOOL)arg6 cancelWhen:(CDUnknownBlockType)arg7 forEachResult:(CDUnknownBlockType)arg8;
- (id)moduleURLAtOffset:(long long)arg1;
- (id)filePathForDirectoryAtOffset:(long long)arg1 fileAtOffset:(long long)arg2;
- (char *)completionCStringAtOffset:(long long)arg1;
- (char *)resolutionCStringAtOffset:(long long)arg1;
- (char *)spellingCStringAtOffset:(long long)arg1;
- (char *)moduleURLCStringAtOffset:(long long)arg1;
- (char *)filenameCStringAtOffset:(long long)arg1;
- (char *)directoryCStringAtOffset:(long long)arg1;
- (char *)cStringAtOffset:(long long)arg1 inStorage:(id)arg2;
- (id)completionStringAtOffset:(long long)arg1;
- (id)resolutionStringAtOffset:(long long)arg1;
- (id)spellingStringAtOffset:(long long)arg1;
- (id)moduleURLStringAtOffset:(long long)arg1;
- (id)filenameStringAtOffset:(long long)arg1;
- (id)directoryStringAtOffset:(long long)arg1;
- (id)stringAtOffset:(long long)arg1 inStorage:(id)arg2;
- (long long)offsetOfCompletionCString:(const char *)arg1 addIfMissing:(BOOL)arg2;
- (long long)offsetOfResolutionCString:(const char *)arg1 addIfMissing:(BOOL)arg2;
- (long long)offsetOfSpellingCString:(const char *)arg1 addIfMissing:(BOOL)arg2;
- (long long)offsetOfCompletionString:(id)arg1 addIfMissing:(BOOL)arg2;
- (long long)offsetOfResolutionString:(id)arg1 addIfMissing:(BOOL)arg2;
- (long long)offsetOfSpellingString:(id)arg1 addIfMissing:(BOOL)arg2;
- (long long)offsetOfModuleURLString:(id)arg1 addIfMissing:(BOOL)arg2;
- (long long)offsetOfFilenameString:(id)arg1 addIfMissing:(BOOL)arg2;
- (long long)offsetOfDirectoryString:(id)arg1 addIfMissing:(BOOL)arg2;
- (long long)offsetOfString:(id)arg1 inStorage:(id)arg2 addIfMissing:(BOOL)arg3;
- (void)registerSymbolLanguages:(id)arg1;
- (id)symbolLanguageForRawLanguage:(long long)arg1;
- (long long)rawLanguageForSymbolLanguage:(id)arg1;
- (void)addKindsTableToConnection:(id)arg1;
- (void)registerSymbolKinds:(id)arg1;
- (id)symbolKindForRawKind:(long long)arg1;
- (long long)rawKindForSymbolKind:(id)arg1;
- (void)purgeStaleData:(id)arg1;
- (BOOL)spliceChanges:(id)arg1 toMainFile:(id)arg2 target:(id)arg3;
- (void)registerHotFile:(id)arg1;
- (void)reportAutoQueryProgress:(double)arg1;
- (void)clearPCHFailures;
- (void)unregisterTarget:(id)arg1 dirtyFiles:(id)arg2;
- (void)registerTarget:(id)arg1 byCaller:(id)arg2 outOfDateCallback:(CDUnknownBlockType)arg3;
- (id)auxiliaryFiles:(id)arg1 mainFile:(id)arg2;
- (id)mainFilesForFile:(id)arg1;
- (id)timestampForFile:(id)arg1;
- (BOOL)isKnownFile:(id)arg1 makeKnown:(BOOL)arg2;
- (id)mainFilesForTarget:(id)arg1;
- (id)filesForMainFile:(id)arg1 target:(id)arg2 followPCH:(BOOL)arg3;
- (id)filesForMainFile:(id)arg1 target:(id)arg2;
- (BOOL)isProjectFile:(id)arg1;
- (id)rebuildProjectFiles:(id)arg1;
- (BOOL)updateProjectFiles:(id)arg1;
- (BOOL)isProjectDirectory:(id)arg1;
- (void)setRootPaths:(id)arg1;
- (id)newImportSession;
- (id)providersAndVersions;
@property(readonly, nonatomic) NSArray *errors;
- (void)reportErrorCode:(long long)arg1 description:(id)arg2 reason:(id)arg3;
- (void)reportError:(id)arg1;
- (void)didReportError;
- (void)didForgetFiles:(id)arg1;
- (void)sendDelegateDidForgetFiles:(id)arg1;
- (void)didEndSession:(id)arg1;
- (void)sendDelegateDidEndImportSession:(id)arg1;
- (void)didSave;
- (void)didIndexHotFile;
- (void)didLoad;
- (void)close;
- (void)releaseQueryConnection:(id)arg1;
- (id)obtainQueryConnection:(id)arg1;
- (id)newBackgroundPriorityConnection;
- (id)newConnection;
- (void)openReadonly:(BOOL)arg1 diagnosticMode:(BOOL)arg2;
- (void)openInDiagnosticMode;
- (void)openReadonly;
- (void)open;
- (id)initWithFileURL:(id)arg1;

@end

@interface IDERunDestinationProfile : NSObject
{
    IDEWorkspaceArenaSnapshot *_workspaceArenaSnapshot;
    IDEScheme *_scheme;
    NSArray *_runDestinations;
    NSArray *_buildDestinations;
    double _timeTaken;
}

+ (void)generateProfileForWorkspaceArenaSnapshot:(id)arg1 scheme:(id)arg2 sortedRunDestinations:(id)arg3 buildDestinations:(id)arg4 timeTaken:(double)arg5;
- (void).cxx_destruct;
- (void)generateProfile;
- (id)_runDestinationDictionaryFor:(id)arg1;
- (id)initWithWorkspaceArenaSnapshot:(id)arg1 scheme:(id)arg2 sortedRunDestinations:(id)arg3 buildDestinations:(id)arg4 timeTaken:(double)arg5;

@end

@interface IDEIndexSymbolOccurrenceCollection : IDEIndexCollection
{
    IDEIndexSymbol *_correspondingSymbol;
}

@property(retain, nonatomic) IDEIndexSymbol *correspondingSymbol; // @synthesize correspondingSymbol=_correspondingSymbol;
- (void).cxx_destruct;
- (id)instantiateRow:(struct sqlite3_stmt *)arg1;
- (id)tempTableSchema;

@end

@interface IDEProvisioningBasicTeam : NSObject <IDEProvisioningBasicTeam>
{
    BOOL _freeProvisioningTeam;
    NSString *_teamID;
    NSString *_teamName;
}

+ (id)basicTeamWithID:(id)arg1 name:(id)arg2;
@property(nonatomic, getter=isFreeProvisioningTeam) BOOL freeProvisioningTeam; // @synthesize freeProvisioningTeam=_freeProvisioningTeam;
@property(readonly, nonatomic) NSString *teamName; // @synthesize teamName=_teamName;
@property(readonly, nonatomic) NSString *teamID; // @synthesize teamID=_teamID;
- (void).cxx_destruct;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
- (BOOL)isEqual:(id)arg1;
- (id)initWithTeamID:(id)arg1 teamName:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) Class superclass;

@end

@interface IDEIndexSymbolFormatterFactory : NSObject
{
}

+ (id)formatterForLanguage:(id)arg1;
+ (id)_formatterExtensionForLanguage:(id)arg1;
+ (void)initialize;

@end

@interface IDEIndexPropertySymbol : IDEIndexSymbol
{
}

- (id)getter;
- (id)setter;
- (id)ide_callHeirarchy_callableSymbols;

@end

@interface IDEDistributionConsoleLogger : DVTConsoleLogger
{
    int _exclusiveLogLevel;
}

@property(readonly) int exclusiveLogLevel; // @synthesize exclusiveLogLevel=_exclusiveLogLevel;
- (void)logMessage:(id)arg1 forAspect:(id)arg2 logLevel:(int)arg3;
- (id)initWithExclusiveLogLevel:(int)arg1;

@end

@interface IDECapabilitiesContext : NSObject <IDEPortalInfoDelegate>
{
    BOOL _internal;
    Xcode3TargetEntitlementsCoordinator *_entitlementsCoordinator;
    Xcode3TargetInfoPlistCoordinator *_infoPlistCoordinator;
    Xcode3TargetBuildSettingsCoordinator *_buildSettingsCoordinator;
    IDEAppIDFeatureCoordinator *_appIDFeatureCoordinator;
    Xcode3TargetLinkedFrameworksCoordinator *_linkedFrameworksCoordinator;
    NSString *_platformIdentifier;
    NSString *_targetBundleIdentifier;
    id <IDEBlueprint> _blueprint;
    NSArray *_capabilityItemModels;
    NSString *_buildConfiguration;
}

+ (id)capabilityItemsForPlatformIdentifier:(id)arg1;
+ (id)projectItemExtensionsForPlatform:(id)arg1;
+ (id)allCapabilityItems;
+ (id)projectItemExtensions;
@property(readonly) NSString *buildConfiguration; // @synthesize buildConfiguration=_buildConfiguration;
@property(readonly) NSArray *capabilityItemModels; // @synthesize capabilityItemModels=_capabilityItemModels;
@property(readonly) id <IDEBlueprint> blueprint; // @synthesize blueprint=_blueprint;
@property(readonly, getter=isInternal) BOOL internal; // @synthesize internal=_internal;
@property(readonly) NSString *targetBundleIdentifier; // @synthesize targetBundleIdentifier=_targetBundleIdentifier;
@property(readonly) NSString *platformIdentifier; // @synthesize platformIdentifier=_platformIdentifier;
@property(readonly) Xcode3TargetLinkedFrameworksCoordinator *linkedFrameworksCoordinator; // @synthesize linkedFrameworksCoordinator=_linkedFrameworksCoordinator;
@property(readonly) IDEAppIDFeatureCoordinator *appIDFeatureCoordinator; // @synthesize appIDFeatureCoordinator=_appIDFeatureCoordinator;
@property(readonly) Xcode3TargetBuildSettingsCoordinator *buildSettingsCoordinator; // @synthesize buildSettingsCoordinator=_buildSettingsCoordinator;
@property(readonly) Xcode3TargetInfoPlistCoordinator *infoPlistCoordinator; // @synthesize infoPlistCoordinator=_infoPlistCoordinator;
@property(readonly) Xcode3TargetEntitlementsCoordinator *entitlementsCoordinator; // @synthesize entitlementsCoordinator=_entitlementsCoordinator;
- (void).cxx_destruct;
- (id)appIDFeatureStateBasedOnCapabilitiesAndEntitlementsForBuildConfiguration:(id)arg1 expansion:(id)arg2;
- (id)appIDFeatureStateBasedOnCapabilitiesAndEntitlementsForBuildConfiguration:(id)arg1;
- (void)setEnabled:(BOOL)arg1 forCapabilityItemModel:(id)arg2;
- (BOOL)isCapabilityItemEnabled:(id)arg1 allowEducatedGuess:(BOOL)arg2;
- (BOOL)isCapabilityItemModelEnabled:(id)arg1;
- (id)expandEntitlements:(id)arg1 buildConfiguration:(id)arg2 expansion:(id)arg3 error:(id *)arg4;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly, nonatomic) DVTPlatform *platform; // @dynamic platform;
@property(retain, nonatomic) id <IDEProvisioningBasicTeam> selectedProvisioningTeam; // @dynamic selectedProvisioningTeam;
@property(readonly) Class superclass;

@end

@interface IDETimestampedPlaygroundResult : IDEPlaygroundResult
{
    NSDate *_date;
}

@property(readonly) NSDate *date; // @synthesize date=_date;
- (void).cxx_destruct;
- (id)initWithChannelIdentifier:(id)arg1 subjectIdentifier:(id)arg2 resultDate:(id)arg3;

@end

@interface IDELaunchParametersSnapshot : NSObject
{
    struct {
        unsigned int _launchStyle:1;
        unsigned int _commandLineArgs:1;
        unsigned int _toolchainLLDBFrameworkPath:1;
        unsigned int _stopOnEveryThreadSanitizerIssue:1;
        unsigned int _stopOnEveryUBSanitizerIssue:1;
        unsigned int _stopOnEveryMainThreadCheckerIssue:1;
        unsigned int _isLaunchedForTesting:1;
    } _uninitializedFlags;
    BOOL _stopOnEveryThreadSanitizerIssue;
    BOOL _stopOnEveryUBSanitizerIssue;
    BOOL _stopOnEveryMainThreadCheckerIssue;
    BOOL _isLaunchedForTesting;
    BOOL _askOnLaunchChangedRunnable;
    BOOL _allowLocationSimulation;
    BOOL _showNonLocalizedStrings;
    BOOL _debugAsAService;
    BOOL _usingCommandLineUnitTesting;
    BOOL _debugXPCServices;
    BOOL _debugAppExtensions;
    BOOL _viewDebuggingEnabled;
    BOOL _queueDebuggingEnabled;
    BOOL _shouldGenerateOptimizationProfile;
    BOOL _enableUBSanitizer;
    BOOL _mallocScribble;
    BOOL _mallocGuardEdges;
    BOOL _guardMalloc;
    BOOL _NSZombieEnabled;
    BOOL _mallocStackLogging;
    BOOL _mallocStackLoggingLite;
    BOOL _dyldPrintAPIs;
    BOOL _dyldPrintLibraries;
    BOOL _useDestinationArtifactsForTest;
    BOOL _skipInternalInstallSDKCheck;
    BOOL _suppressSimulatorApplication;
    int _launchStyle;
    int _runnableType;
    unsigned int _debugProcessAsUID;
    int _enableGPUFrameCaptureMode;
    int _enableGPUValidationMode;
    int _debugServiceFD;
    int _runnableAppExtensionHostRunMode;
    int _internalIOSLaunchStyle;
    NSArray *_commandLineArgs;
    NSMutableDictionary *_testingEnvironmentVariables;
    NSDictionary *_environmentVariables;
    DVTFilePath *_runnableLocation;
    DVTFilePath *_filePathToBinary;
    NSString *_toolchainLLDBFrameworkPath;
    IDEEntityIdentifier *_schemeIdentifier;
    NSString *_selectedLauncherIdentifier;
    NSString *_selectedDebuggerIdentifier;
    unsigned long long _launchAutomaticallySubstyle;
    NSString *_runnableBundleIdentifier;
    NSDictionary *_appExtensionBuiltPaths;
    DVTFilePath *_replacementRunnableLocation;
    DVTFilePath *_workingDirectory;
    NSString *_architecture;
    IDELocationScenarioReference *_locationScenarioReference;
    NSString *_language;
    NSString *_region;
    IDESchemeOptionReference *_routingCoverageFileReference;
    NSString *_sdkPath;
    NSString *_remoteInstallPath;
    id _debugServiceObject;
    id _deviceArbitrationObject;
    NSString *_platformIdentifier;
    NSString *_buildConfiguration;
    id <IDEBuildableProduct> _buildableProduct;
    NSSet *_buildProductDirectories;
    NSArray *_testingCommandLineArgs;
    NSArray *_testingAdditionalBuiltDependenciesProductPaths;
    NSDictionary *_additionalDeviceSubstitutionPaths;
    NSString *_deviceAppDataPackage;
    long long _consoleMode;
    NSString *_optimizationProfilePathString;
    IDEProductType *_productType;
    NSString *_internalIOSSubstitutionApp;
    NSString *_customLaunchCommand;
    NSString *_debugServiceExtension;
    DVTVersion *_runnableSwiftVersion;
}

+ (id)environmentVariablesToMergeFromTestingEnvironmentVariables;
+ (id)snapshotForUnitTestingWithLauncherIdentifier:(id)arg1 debuggerIdentifier:(id)arg2 runnableLocation:(id)arg3 commandLineArgs:(id)arg4 environmentVariables:(id)arg5;
+ (id)launchParametersWithSchemeIdentifier:(id)arg1 launcherIdentifier:(id)arg2 debuggerIdentifier:(id)arg3 launchStyle:(int)arg4 runnableLocation:(id)arg5 debugProcessAsUID:(unsigned int)arg6 workingDirectory:(id)arg7 commandLineArgs:(id)arg8 environmentVariables:(id)arg9 architecture:(id)arg10 platformIdentifier:(id)arg11 buildConfiguration:(id)arg12 buildableProduct:(id)arg13 deviceAppDataPackage:(id)arg14 allowLocationSimulation:(BOOL)arg15 locationScenarioReference:(id)arg16 showNonLocalizedStrings:(BOOL)arg17 language:(id)arg18 region:(id)arg19 routingCoverageFileReference:(id)arg20 enableGPUFrameCaptureMode:(int)arg21 enableGPUValidationMode:(int)arg22 debugXPCServices:(BOOL)arg23 debugAppExtensions:(BOOL)arg24 internalIOSLaunchStyle:(int)arg25 internalIOSSubstitutionApp:(id)arg26 launchAutomaticallySubstyle:(unsigned long long)arg27;
@property(nonatomic) BOOL suppressSimulatorApplication; // @synthesize suppressSimulatorApplication=_suppressSimulatorApplication;
@property(nonatomic) BOOL skipInternalInstallSDKCheck; // @synthesize skipInternalInstallSDKCheck=_skipInternalInstallSDKCheck;
@property(nonatomic) BOOL useDestinationArtifactsForTest; // @synthesize useDestinationArtifactsForTest=_useDestinationArtifactsForTest;
@property(nonatomic) BOOL dyldPrintLibraries; // @synthesize dyldPrintLibraries=_dyldPrintLibraries;
@property(nonatomic) BOOL dyldPrintAPIs; // @synthesize dyldPrintAPIs=_dyldPrintAPIs;
@property(nonatomic) BOOL mallocStackLoggingLite; // @synthesize mallocStackLoggingLite=_mallocStackLoggingLite;
@property(nonatomic) BOOL mallocStackLogging; // @synthesize mallocStackLogging=_mallocStackLogging;
@property(nonatomic) BOOL NSZombieEnabled; // @synthesize NSZombieEnabled=_NSZombieEnabled;
@property(nonatomic) BOOL guardMalloc; // @synthesize guardMalloc=_guardMalloc;
@property(nonatomic) BOOL mallocGuardEdges; // @synthesize mallocGuardEdges=_mallocGuardEdges;
@property(nonatomic) BOOL mallocScribble; // @synthesize mallocScribble=_mallocScribble;
@property(nonatomic) BOOL enableUBSanitizer; // @synthesize enableUBSanitizer=_enableUBSanitizer;
@property(retain) DVTVersion *runnableSwiftVersion; // @synthesize runnableSwiftVersion=_runnableSwiftVersion;
@property(copy) NSString *debugServiceExtension; // @synthesize debugServiceExtension=_debugServiceExtension;
@property(copy) NSString *customLaunchCommand; // @synthesize customLaunchCommand=_customLaunchCommand;
@property(copy) NSString *internalIOSSubstitutionApp; // @synthesize internalIOSSubstitutionApp=_internalIOSSubstitutionApp;
@property(retain) IDEProductType *productType; // @synthesize productType=_productType;
@property(copy, nonatomic) NSString *optimizationProfilePathString; // @synthesize optimizationProfilePathString=_optimizationProfilePathString;
@property BOOL shouldGenerateOptimizationProfile; // @synthesize shouldGenerateOptimizationProfile=_shouldGenerateOptimizationProfile;
@property long long consoleMode; // @synthesize consoleMode=_consoleMode;
@property BOOL queueDebuggingEnabled; // @synthesize queueDebuggingEnabled=_queueDebuggingEnabled;
@property BOOL viewDebuggingEnabled; // @synthesize viewDebuggingEnabled=_viewDebuggingEnabled;
@property int internalIOSLaunchStyle; // @synthesize internalIOSLaunchStyle=_internalIOSLaunchStyle;
@property int runnableAppExtensionHostRunMode; // @synthesize runnableAppExtensionHostRunMode=_runnableAppExtensionHostRunMode;
@property(readonly) BOOL debugAppExtensions; // @synthesize debugAppExtensions=_debugAppExtensions;
@property(readonly) BOOL debugXPCServices; // @synthesize debugXPCServices=_debugXPCServices;
@property(readonly) NSString *deviceAppDataPackage; // @synthesize deviceAppDataPackage=_deviceAppDataPackage;
@property(copy) NSDictionary *additionalDeviceSubstitutionPaths; // @synthesize additionalDeviceSubstitutionPaths=_additionalDeviceSubstitutionPaths;
@property(getter=isUsingCommandLineUnitTesting) BOOL usingCommandLineUnitTesting; // @synthesize usingCommandLineUnitTesting=_usingCommandLineUnitTesting;
@property(copy) NSArray *testingAdditionalBuiltDependenciesProductPaths; // @synthesize testingAdditionalBuiltDependenciesProductPaths=_testingAdditionalBuiltDependenciesProductPaths;
@property(copy) NSArray *testingCommandLineArgs; // @synthesize testingCommandLineArgs=_testingCommandLineArgs;
@property(copy) NSSet *buildProductDirectories; // @synthesize buildProductDirectories=_buildProductDirectories;
@property(readonly) id <IDEBuildableProduct> buildableProduct; // @synthesize buildableProduct=_buildableProduct;
@property(readonly) NSString *buildConfiguration; // @synthesize buildConfiguration=_buildConfiguration;
@property(readonly) NSString *platformIdentifier; // @synthesize platformIdentifier=_platformIdentifier;
@property(retain) id deviceArbitrationObject; // @synthesize deviceArbitrationObject=_deviceArbitrationObject;
@property(retain) id debugServiceObject; // @synthesize debugServiceObject=_debugServiceObject;
@property int debugServiceFD; // @synthesize debugServiceFD=_debugServiceFD;
@property BOOL debugAsAService; // @synthesize debugAsAService=_debugAsAService;
@property(copy) NSString *remoteInstallPath; // @synthesize remoteInstallPath=_remoteInstallPath;
@property(copy) NSString *sdkPath; // @synthesize sdkPath=_sdkPath;
@property(readonly) int enableGPUValidationMode; // @synthesize enableGPUValidationMode=_enableGPUValidationMode;
@property(readonly) int enableGPUFrameCaptureMode; // @synthesize enableGPUFrameCaptureMode=_enableGPUFrameCaptureMode;
@property(readonly) IDESchemeOptionReference *routingCoverageFileReference; // @synthesize routingCoverageFileReference=_routingCoverageFileReference;
@property(readonly, copy, nonatomic) NSString *region; // @synthesize region=_region;
@property(readonly, copy, nonatomic) NSString *language; // @synthesize language=_language;
@property(readonly) BOOL showNonLocalizedStrings; // @synthesize showNonLocalizedStrings=_showNonLocalizedStrings;
@property(readonly) IDELocationScenarioReference *locationScenarioReference; // @synthesize locationScenarioReference=_locationScenarioReference;
@property(readonly) BOOL allowLocationSimulation; // @synthesize allowLocationSimulation=_allowLocationSimulation;
@property(readonly, copy) NSString *architecture; // @synthesize architecture=_architecture;
@property(readonly) DVTFilePath *workingDirectory; // @synthesize workingDirectory=_workingDirectory;
@property unsigned int debugProcessAsUID; // @synthesize debugProcessAsUID=_debugProcessAsUID;
@property(copy) DVTFilePath *replacementRunnableLocation; // @synthesize replacementRunnableLocation=_replacementRunnableLocation;
@property BOOL askOnLaunchChangedRunnable; // @synthesize askOnLaunchChangedRunnable=_askOnLaunchChangedRunnable;
@property(copy) NSDictionary *appExtensionBuiltPaths; // @synthesize appExtensionBuiltPaths=_appExtensionBuiltPaths;
@property int runnableType; // @synthesize runnableType=_runnableType;
@property(copy) NSString *runnableBundleIdentifier; // @synthesize runnableBundleIdentifier=_runnableBundleIdentifier;
@property(readonly) unsigned long long launchAutomaticallySubstyle; // @synthesize launchAutomaticallySubstyle=_launchAutomaticallySubstyle;
@property(nonatomic) int launchStyle; // @synthesize launchStyle=_launchStyle;
@property(readonly) NSString *selectedDebuggerIdentifier; // @synthesize selectedDebuggerIdentifier=_selectedDebuggerIdentifier;
@property(readonly) NSString *selectedLauncherIdentifier; // @synthesize selectedLauncherIdentifier=_selectedLauncherIdentifier;
@property(readonly) IDEEntityIdentifier *schemeIdentifier; // @synthesize schemeIdentifier=_schemeIdentifier;
@property(nonatomic) BOOL isLaunchedForTesting; // @synthesize isLaunchedForTesting=_isLaunchedForTesting;
@property(nonatomic) BOOL stopOnEveryMainThreadCheckerIssue; // @synthesize stopOnEveryMainThreadCheckerIssue=_stopOnEveryMainThreadCheckerIssue;
@property(nonatomic) BOOL stopOnEveryUBSanitizerIssue; // @synthesize stopOnEveryUBSanitizerIssue=_stopOnEveryUBSanitizerIssue;
@property(nonatomic) BOOL stopOnEveryThreadSanitizerIssue; // @synthesize stopOnEveryThreadSanitizerIssue=_stopOnEveryThreadSanitizerIssue;
@property(copy, nonatomic) NSString *toolchainLLDBFrameworkPath; // @synthesize toolchainLLDBFrameworkPath=_toolchainLLDBFrameworkPath;
- (void).cxx_destruct;
- (id)launchParametersByAppendingPath:(id)arg1 toSearchPathEnvironmentVariable:(id)arg2;
- (id)launchParametersByPrependingPath:(id)arg1 toSearchPathEnvironmentVariable:(id)arg2;
- (id)launchParametersByReplacingEnvironmentVariablesWithDictionary:(id)arg1;
- (id)launchParametersByReplacingCommandLineArgsWithArray:(id)arg1;
@property(readonly) DVTFilePath *filePathToBinary; // @synthesize filePathToBinary=_filePathToBinary;
@property(readonly) DVTFilePath *originalRunnableLocation;
@property(readonly, copy) DVTFilePath *runnableLocation; // @synthesize runnableLocation=_runnableLocation;
@property(readonly, copy) NSDictionary *environmentVariables; // @synthesize environmentVariables=_environmentVariables;
@property(readonly, copy) NSMutableDictionary *testingEnvironmentVariables; // @synthesize testingEnvironmentVariables=_testingEnvironmentVariables;
@property(copy, nonatomic) NSArray *commandLineArgs; // @synthesize commandLineArgs=_commandLineArgs;
@property(readonly) NSArray *rawCommandLineArgs;
- (void)_setUninitializedFlagsToInitialized;
- (id)init;

@end

@interface IDEDistributionCopyAppleProvidedContentStep : IDEDistributionProcessingStep
{
}

- (_Bool)runWithError:(id *)arg1;
- (id)providedOutputContextPropertyNames;
- (id)requiredInputContextPropertyNames;
- (id)name;

@end

@interface IDETestResultMessage : NSObject
{
    NSString *_text;
    unsigned long long _messageType;
    NSString *_filePath;
    NSNumber *_lineNumber;
}

@property(readonly, copy) NSNumber *lineNumber; // @synthesize lineNumber=_lineNumber;
@property(readonly, copy) NSString *filePath; // @synthesize filePath=_filePath;
@property(readonly) unsigned long long messageType; // @synthesize messageType=_messageType;
@property(readonly, copy) NSString *text; // @synthesize text=_text;
- (void).cxx_destruct;
- (id)initWithText:(id)arg1 messageType:(unsigned long long)arg2 filePath:(id)arg3 lineNumber:(id)arg4;

@end

@interface IDETestResult : NSObject <NSCopying>
{
    IDETestIdentifier *_identifier;
    NSString *_testName;
    unsigned long long _status;
    NSDate *_date;
    double _duration;
    NSMutableArray *_mutablePerformanceMetrics;
    NSMutableArray *_mutableMessages;
    NSMutableSet *_mutableFailureLocations;
}

@property(retain) NSMutableSet *mutableFailureLocations; // @synthesize mutableFailureLocations=_mutableFailureLocations;
@property(retain) NSMutableArray *mutableMessages; // @synthesize mutableMessages=_mutableMessages;
@property(retain) NSMutableArray *mutablePerformanceMetrics; // @synthesize mutablePerformanceMetrics=_mutablePerformanceMetrics;
@property double duration; // @synthesize duration=_duration;
@property(copy) NSDate *date; // @synthesize date=_date;
@property unsigned long long status; // @synthesize status=_status;
@property(readonly, copy) NSString *testName; // @synthesize testName=_testName;
@property(readonly, copy) IDETestIdentifier *identifier; // @synthesize identifier=_identifier;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)addFailureLocation:(id)arg1;
@property(readonly) NSSet *failureLocations;
- (void)addMessage:(id)arg1;
@property(readonly) NSArray *messages;
- (void)addPerformanceMetric:(id)arg1;
@property(readonly) NSArray *performanceMetrics;
- (id)initWithIdentifier:(id)arg1 testName:(id)arg2;
- (id)init;

@end

@interface IDEProvisioningRepairInfo : NSObject <IDERepairable>
{
    NSString *_repairableName;
    id <IDEProvisioningBasicTeam> _team;
    NSArray *_certificateTypes;
    NSArray *_devices;
    NSArray *_instigatingErrors;
    long long _provisioningStyle;
    id <IDEProvisioningBasicProfile> _profile;
    DVTPlatform *_platform;
    NSDictionary *_entitlements;
    NSString *_machineName;
    NSString *_machineID;
    NSString *_bundleID;
    DVTPortalProfileType *_profileType;
    DVTAppIDFeatures *_appIDFeatures;
    DVTSigningCertificate *_signingCertificate;
    NSError *_signingCertificateError;
}

+ (id)repairInfoWithProvisioningInputs:(id)arg1 instigatingErrors:(id)arg2;
+ (id)repairInfoWithRepairableName:(id)arg1 team:(id)arg2 provisioningStyle:(long long)arg3 certificateTypes:(id)arg4 devices:(id)arg5 bundleID:(id)arg6 profileType:(id)arg7 appIDFeatures:(id)arg8 platform:(id)arg9 profile:(id)arg10 signingCertificate:(id)arg11 signingCertificateError:(id)arg12 entitlements:(id)arg13 instigatingErrors:(id)arg14;
@property(readonly, nonatomic) NSError *signingCertificateError; // @synthesize signingCertificateError=_signingCertificateError;
@property(readonly, nonatomic) DVTSigningCertificate *signingCertificate; // @synthesize signingCertificate=_signingCertificate;
@property(readonly, nonatomic) DVTAppIDFeatures *appIDFeatures; // @synthesize appIDFeatures=_appIDFeatures;
@property(readonly, nonatomic) DVTPortalProfileType *profileType; // @synthesize profileType=_profileType;
@property(readonly, nonatomic) NSString *bundleID; // @synthesize bundleID=_bundleID;
@property(readonly, nonatomic) NSDictionary *entitlements; // @synthesize entitlements=_entitlements;
@property(readonly, nonatomic) DVTPlatform *platform; // @synthesize platform=_platform;
@property(readonly, nonatomic) id <IDEProvisioningBasicProfile> profile; // @synthesize profile=_profile;
@property(readonly, nonatomic) long long provisioningStyle; // @synthesize provisioningStyle=_provisioningStyle;
@property(readonly, nonatomic) NSArray *instigatingErrors; // @synthesize instigatingErrors=_instigatingErrors;
@property(readonly, nonatomic) NSArray *devices; // @synthesize devices=_devices;
@property(readonly, nonatomic) NSArray *certificateTypes; // @synthesize certificateTypes=_certificateTypes;
@property(readonly, nonatomic) id <IDEProvisioningBasicTeam> team; // @synthesize team=_team;
@property(readonly, nonatomic) NSString *repairableName; // @synthesize repairableName=_repairableName;
- (void).cxx_destruct;
@property(readonly) unsigned long long hash;
- (BOOL)isEqual:(id)arg1;
@property(readonly, nonatomic) BOOL wantsRepairStatusSuppressed;
@property(readonly, nonatomic) NSString *machineID; // @synthesize machineID=_machineID;
@property(readonly, nonatomic) NSString *machineName; // @synthesize machineName=_machineName;
- (id)instigatingErrorsDescription;
@property(readonly, copy) NSString *description;
- (id)profileQualificationWithProfile:(id)arg1;
- (BOOL)profileCharacteristicsWithContext:(id)arg1 profileCharacteristics:(id *)arg2 error:(id *)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) Class superclass;

@end

@interface IDEUpgradeContext : NSObject
{
}

@end

@interface IDEUpgradeSchemeContext : IDEUpgradeContext
{
    IDEScheme *_scheme;
}

@property(readonly) IDEScheme *scheme; // @synthesize scheme=_scheme;
- (void).cxx_destruct;
- (id)description;
- (id)initWithScheme:(id)arg1;

@end

@interface IDEUpgradeContainerContext : IDEUpgradeContext
{
    IDEContainer *_container;
}

@property(readonly) IDEContainer *container; // @synthesize container=_container;
- (void).cxx_destruct;
- (id)description;
- (id)initWithContainer:(id)arg1;

@end

@interface IDEUpgradeBlueprintContext : IDEUpgradeContext
{
    id <IDEBlueprint> _blueprint;
}

@property(readonly) id <IDEBlueprint> blueprint; // @synthesize blueprint=_blueprint;
- (void).cxx_destruct;
- (id)description;
- (id)initWithBlueprint:(id)arg1;

@end

@interface IDESourceKitProtocolSymbol : IDESourceKitContainerSymbol
{
}

- (BOOL)isKindOfClass:(Class)arg1;
- (id)allImplementingClasses;
- (id)implementingClasses;
- (id)subProtocols;
- (id)allSuperProtocols;
- (id)superProtocols;
- (id)properties;
- (id)instanceMethods;
- (id)classMethods;

@end

@interface IDELocalizationWorkSystemTask : IDELocalizationWorkContext
{
}

+ (id)contextWithParent:(id)arg1 launchPath:(id)arg2 arguments:(id)arg3;
- (id)signalStatus;
@property(readonly, copy) NSNumber *exitStatus;
@property(readonly, copy) NSArray *arguments;
@property(readonly, copy) DVTFilePath *launchPath;

@end

@interface IDEIndexableMainThreadProxy : NSObject <IDEIndexable>
{
    BOOL _respondsToSettingsForFiles;
    NSString *_cachedIdentifier;
    NSString *_cachedIndexName;
    NSDictionary *_cachedSettingsForFiles;
    id <IDEIndexable><DVTInvalidation> _indexableObject;
}

@property(retain) id <IDEIndexable><DVTInvalidation> indexableObject; // @synthesize indexableObject=_indexableObject;
- (void).cxx_destruct;
@property(readonly, getter=isUnitTest) BOOL unitTest;
@property(readonly, copy) NSString *productType;
- (id)productNameWithBuildSetting:(id)arg1 workspace:(id)arg2;
- (id)buildSettingsForMainFile:(id)arg1 workspace:(id)arg2;
@property(readonly, copy) NSString *localizedIndexableDescription;
- (void)languageOfMainFile:(id)arg1 workspace:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (void)clearCachedBuildSettings;
- (void)settingsForFilesInWorkspace:(id)arg1 shouldWriteAuxiliaryFiles:(BOOL)arg2 withCompletionBlock:(CDUnknownBlockType)arg3;
- (BOOL)writeProductHeaders:(id)arg1 toFile:(id)arg2 error:(id *)arg3;
- (void)productHeadersInWorkspace:(id)arg1 withCompletionBlock:(CDUnknownBlockType)arg2;
- (id)containerForIndexables:(id)arg1 rootPaths:(id)arg2;
@property(readonly, copy) NSArray *indexableFiles;
@property(readonly, copy) NSString *indexName;
@property(readonly, copy) NSString *identifier;
@property(readonly) BOOL requiresMainThread;
@property(readonly, copy) NSString *description;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithIndexable:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(nonatomic) __weak id <IDEIndexable> proxy;
@property(readonly) Class superclass;

@end

@interface IDEPseudoTerminal : NSObject
{
    int _masterFD;
    int _slaveFD;
    NSFileHandle *_masterFileHandle;
    NSString *_slaveName;
}

@property(readonly) int slaveFD; // @synthesize slaveFD=_slaveFD;
@property(readonly) NSString *slaveName; // @synthesize slaveName=_slaveName;
@property(readonly) NSFileHandle *masterFileHandle; // @synthesize masterFileHandle=_masterFileHandle;
- (void).cxx_destruct;
@property(readonly) NSFileHandle *slaveFileHandle;
- (int)_openSlaveCounterpart:(int)arg1 error:(id *)arg2;
- (BOOL)_openFirstAvailableMasterWithAccessMode:(int)arg1 error:(id *)arg2;
- (void)_closeMasterFD;
- (id)initWithAccessMode:(int)arg1 error:(id *)arg2;
- (id)initWithAccessMode:(int)arg1 ownsSlaveFileDescriptor:(BOOL)arg2 error:(id *)arg3;

@end

@interface IDEPlaygroundLoggerGap : NSObject <IDEPlaygroundLoggerLogEntry>
{
    NSString *_name;
}

@property(readonly, copy) NSString *name; // @synthesize name=_name;
- (void).cxx_destruct;
@property(readonly, copy) NSString *description;
@property(readonly, copy) NSString *summary;
- (id)initWithName:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IDESchemeBuildableReference : NSObject <DVTXMLUnarchiving, NSCopying>
{
    NSString *_buildableIdentifier;
    NSString *_blueprintIdentifier;
    NSString *_cachedBuildableName;
    NSString *_cachedBlueprintName;
    NSString *_legacyBuildableIdentifier;
    IDEContainer<IDEBlueprintProvider> *_referencedContainer;
    NSString *_lastArchivedReferencedContainerPath;
    IDEScheme *_scheme;
    id <IDEBlueprint> _cachedResolvedBlueprint;
    id <IDEBuildable> _cachedResolvedBuildable;
    DVTObservingToken *_referencedContainersObservingToken;
    DVTObservingToken *_schemeClosedToken;
    DVTObservingToken *_schemeValidToken;
    DVTObservingToken *_referencedContainerFilePathObservingToken;
    DVTObservingToken *_referencedContainerBlueprintsObservingToken;
    DVTObservingToken *_referencedContainerIsValidObservingToken;
    DVTObservingToken *_resolvedBuildableNameObservingToken;
    DVTObservingToken *_resolvedBlueprintNameObservingToken;
    BOOL _resolvingBlueprint;
    BOOL _willBeArchived;
}

+ (id)resolvedBuildableForLegacyIdentifier:(id)arg1 inContainer:(id)arg2;
+ (id)keyPathsForValuesAffectingBlueprintName;
+ (id)keyPathsForValuesAffectingBuildableName;
@property(readonly) BOOL willBeArchived; // @synthesize willBeArchived=_willBeArchived;
@property(copy) NSString *cachedBuildableName; // @synthesize cachedBuildableName=_cachedBuildableName;
@property(retain, nonatomic) IDEContainer<IDEBlueprintProvider> *referencedContainer; // @synthesize referencedContainer=_referencedContainer;
@property(retain, nonatomic) IDEScheme *scheme; // @synthesize scheme=_scheme;
- (void).cxx_destruct;
- (void)dvt_encodeRelationshipsWithXMLArchiver:(id)arg1 version:(id)arg2;
- (void)dvt_encodeAttributesWithXMLArchiver:(id)arg1 version:(id)arg2;
- (void)setReferencedContainerFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setBlueprintNameFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setBuildableNameFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setBlueprintIdentifierFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setBuildableIdentifierFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setBuildableProductIdentifierFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)loadLegacyBuildableWithResolutionContextContainer:(id)arg1;
- (void)resolveBuildableFromImport;
- (BOOL)referencesSameBuildableAsReference:(id)arg1;
- (id)currentReferencedContainerPath;
- (void)_markSchemeDirty;
- (id)referencedContainerFromSchemeForArchivedPath:(id)arg1;
- (id)referenceResolutionContext;
- (id)containerReferenceResolver;
@property(readonly) NSString *blueprintName;
@property(readonly) NSString *buildableName;
- (BOOL)updateCachedBuildableName;
- (BOOL)updateCachedBlueprintName;
@property(readonly) id <IDEBuildable> resolvedBuildable;
- (void)_invalidateResolvedBuildable;
@property(readonly) id <IDEBlueprint> resolvedBlueprint;
- (void)_invalidateResolvedBlueprint;
- (void)setBlueprintIdentifierWithoutInvalidatingResolvedBlueprint:(id)arg1;
@property(copy) NSString *blueprintIdentifier;
@property(copy) NSString *cachedBlueprintName;
@property(copy) NSString *buildableIdentifier;
@property(readonly, copy) NSString *description;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initFromXMLUnarchiver:(id)arg1 archiveVersion:(float)arg2;
- (id)initWithBuildable:(id)arg1 scheme:(id)arg2 willBeArchived:(BOOL)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IDESourceKitSymbol : IDESourceKitSymbolOccurrence <IDEAutoImportable>
{
    NSString *_name;
    NSString *_displayName;
    NSString *_qualifiedDisplayName;
    DVTSourceCodeSymbolKind *_symbolKind;
    DVTSourceCodeLanguage *_symbolLanguage;
    NSString *_resolution;
    _TtC13DVTFoundation9DVTSymbol *_identifier;
    BOOL _haveModelOccurrence;
    BOOL _isVirtual;
    BOOL _isInProject;
    BOOL _isSystem;
    NSString *_moduleName;
    NSString *_completionString;
    BOOL _lookedForContainerSymbol;
    IDESourceKitContainerSymbol *_containerSymbol;
}

+ (id)newSymbolOfKind:(id)arg1 language:(id)arg2 name:(id)arg3 displayName:(id)arg4 qualifiedDisplayName:(id)arg5 moduleName:(id)arg6 resolution:(id)arg7 isVirtual:(BOOL)arg8 isInProject:(BOOL)arg9 isSystem:(BOOL)arg10 role:(long long)arg11 location:(id)arg12 line:(long long)arg13 column:(long long)arg14 file:(id)arg15 moduleUrl:(id)arg16 completion:(id)arg17 forSourceKitWorkspace:(id)arg18;
+ (Class)classForSymbolKind:(id)arg1;
@property(copy, nonatomic) NSString *moduleName; // @synthesize moduleName=_moduleName;
@property(nonatomic) BOOL isSystem; // @synthesize isSystem=_isSystem;
@property(nonatomic) BOOL isInProject; // @synthesize isInProject=_isInProject;
@property(nonatomic) BOOL isVirtual; // @synthesize isVirtual=_isVirtual;
@property(readonly, nonatomic) DVTSourceCodeLanguage *symbolLanguage; // @synthesize symbolLanguage=_symbolLanguage;
@property(readonly, nonatomic) DVTSourceCodeSymbolKind *symbolKind; // @synthesize symbolKind=_symbolKind;
@property(readonly, nonatomic) NSString *resolution; // @synthesize resolution=_resolution;
@property(readonly, nonatomic) NSString *name; // @synthesize name=_name;
- (void).cxx_destruct;
- (BOOL)isKindOfClass:(Class)arg1;
- (id)gkInspectableProperties;
- (id)ibOutletCollectionProperties;
- (id)ibOutletCollectionVariables;
- (id)ibOutletCollections;
- (id)ibOutletProperties;
- (id)ibOutletVariables;
- (id)ibOutlets;
- (id)ibActionMethods;
- (id)properties;
- (id)instanceVariables;
- (id)classVariables;
- (id)instanceMethods;
- (id)classMethods;
@property(readonly, nonatomic, getter=isAutoImportable) BOOL autoImportable;
@property(readonly, nonatomic) DVTFilePath *filePathToHeaderToImport;
@property(readonly, nonatomic) NSString *completionString;
- (id)qualifiedDisplayName;
- (id)displayName;
- (id)ibRelationClass;
- (id)references;
- (id)referencingFiles;
- (id)containerSymbol;
- (id)containerSymbols;
@property(readonly, nonatomic) IDEIndexCollection *definitions;
- (id)declarations;
- (id)occurrences;
- (id)correspondingSymbol;
- (id)location;
- (id)file;
- (long long)column;
- (long long)lineNumber;
- (long long)role;
- (id)occurrence;
@property(readonly, nonatomic) BOOL hasOccurrence;
- (void)setModelOccurrence:(id)arg1;
- (id)modelOccurrence;
@property(readonly, nonatomic, getter=isInProject) BOOL inProject;
@property(readonly, nonatomic) BOOL navigationPrefersDefinition;
@property(readonly, nonatomic) _TtC13DVTFoundation9DVTSymbol *identifier;
- (BOOL)isEqual:(id)arg1;
@property(readonly) unsigned long long hash;
@property(readonly, copy) NSString *description;
- (void)resetWithKind:(id)arg1 language:(id)arg2 name:(id)arg3 displayName:(id)arg4 qualifiedDisplayName:(id)arg5 moduleName:(id)arg6 resolution:(id)arg7 isVirtual:(BOOL)arg8 isInProject:(BOOL)arg9 isSystem:(BOOL)arg10 completion:(id)arg11;
- (id)sourcekit_asRequest:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) Class superclass;

@end

@interface IDEFileReferenceContainerContentObserver : NSObject <DVTInvalidation>
{
    NSMutableDictionary *_observations;
    CDUnknownBlockType _consitencyValidatingObserver;
    IDEContainer *_container;
    IDEContainerQuery *_containerQuery;
    id <DVTCancellable> _containerQueryObservation;
    DVTTimeSlicedMainThreadWorkQueue *_processingQueue;
    NSMutableDictionary *_filePathsToFileDataTypeCandidates;
    NSMapTable *_fileReferenceRecords;
}

+ (id)observeContainer:(id)arg1 handler:(CDUnknownBlockType)arg2;
+ (void)initialize;
+ (id)observeContainer:(id)arg1 optionallyFilteredToTypes:(id)arg2 ignoreModifiedUpdateType:(BOOL)arg3 withBufferedHandler:(CDUnknownBlockType)arg4;
+ (id)observeContainer:(id)arg1 optionallyFilteredToTypes:(id)arg2 withBufferedHandler:(CDUnknownBlockType)arg3;
+ (id)observeContainer:(id)arg1 withBufferedHandler:(CDUnknownBlockType)arg2;
+ (id)observeContainer:(id)arg1 filteredToTypes:(id)arg2 withHandler:(CDUnknownBlockType)arg3;
- (void).cxx_destruct;
- (void)processResetFileReferences:(id)arg1;
- (void)processFilePathWithContentChange:(id)arg1;
- (void)processFileReference:(id)arg1 withNewLastKnownFileDataType:(id)arg2;
- (void)processFileReference:(id)arg1 withNewResolvedFilePath:(id)arg2;
- (void)processSubtractedFileReference:(id)arg1;
- (BOOL)isTrackedFileReference:(id)arg1;
- (BOOL)isTrackedFilePath:(id)arg1;
- (void)processUnionedFileReference:(id)arg1;
- (void)addReferenceToFilePath:(id)arg1 withFileDataType:(id)arg2;
- (void)removeReferenceToFilePath:(id)arg1 withFileDataType:(id)arg2;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)stopObservingFileReferenceIfNeeded:(id)arg1;
- (void)startObservingFileReference:(id)arg1;
- (void)deliverObservationForFilePath:(id)arg1 updateType:(long long)arg2;
- (void)enqueueUpdate:(CDUnknownBlockType)arg1;
- (void)enqueueUpdateForContainerQueryKVOChange:(id)arg1;
- (id)addObserver:(CDUnknownBlockType)arg1;
- (void)primitiveInvalidate;
- (id)initWithContainer:(id)arg1;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface IDEFileReferenceContainerContentObservationRecord : NSObject
{
    BOOL _observed;
    DVTFilePath *_previousResolvedFilePath;
    DVTFileDataType *_previousLastKnownFileDataType;
}

@property(retain) DVTFileDataType *previousLastKnownFileDataType; // @synthesize previousLastKnownFileDataType=_previousLastKnownFileDataType;
@property(retain) DVTFilePath *previousResolvedFilePath; // @synthesize previousResolvedFilePath=_previousResolvedFilePath;
@property BOOL observed; // @synthesize observed=_observed;
- (void).cxx_destruct;

@end

@interface IDERecordedThreadCollection : NSObject <IDEDebugNavigableModel, DVTInvalidation>
{
    NSMutableArray *_delayedInvalidationChildren;
    DVTDispatchLock *_delayedInvalidationChildrenLock;
    BOOL _usedInRuntimeIssue;
    IDEDebugProcess *_parentProcess;
    NSArray *_recordedThreads;
    NSString *_displayName;
}

+ (void)initialize;
@property BOOL usedInRuntimeIssue; // @synthesize usedInRuntimeIssue=_usedInRuntimeIssue;
@property(copy) NSString *displayName; // @synthesize displayName=_displayName;
@property(copy, nonatomic) NSArray *recordedThreads; // @synthesize recordedThreads=_recordedThreads;
@property(retain) IDEDebugProcess *parentProcess; // @synthesize parentProcess=_parentProcess;
- (void).cxx_destruct;
- (void)primitiveInvalidate;
@property(readonly) IDELaunchSession *launchSession;
@property(readonly, copy) NSString *associatedProcessUUID;
- (id)initWithProcess:(id)arg1;
- (id)init;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface IDEStreamWorkContext : NSObject
{
    NSDictionary *_values;
}

+ (id)contextWithValues:(id)arg1;
+ (void)initialize;
@property(retain) NSDictionary *values; // @synthesize values=_values;
- (void).cxx_destruct;
- (id)contextByReplacingValues:(id)arg1;

@end

@interface IDESDKInfoCommandLineVerb : IDECommandLineVerb
{
}

+ (int)_printVerboseInfoForSDK:(id)arg1 inEnvironment:(id)arg2 keysToEmit:(id)arg3;
+ (void)_enumerateAllPlatformsAlphabeticallyWithBlock:(CDUnknownBlockType)arg1;
+ (int)performWithEnvironment:(id)arg1;
+ (id)optionDefinitionsWithEnvironment:(id)arg1;

@end

@interface IDEIndexingEngine : NSObject <NSCopying>
{
    IDEIndex *_index;
    NSObject<OS_dispatch_queue> *_engine_queue;
    NSMutableArray *_waitingLoadJobs;
    NSMutableArray *_waitingFileJobs;
    NSMutableSet *_waitingDeferredJobs;
    NSMutableSet *_waitingHeldJobs;
    NSMutableDictionary *_registeredIndexables;
    NSMutableDictionary *_productInfos;
    NSMutableDictionary *_rootPaths;
    NSMutableSet *_registeredFiles;
    NSMutableDictionary *_missingFiles;
    NSMutableDictionary *_priorityFiles;
    IDEIndexImportSession *_session;
    DVTNotificationToken *_prebuildNotificationToken;
    double _timeIndexablesChanged;
    double _timeFilesChanged;
    double _timeFileJobsChanged;
    double _timeJobsEnded;
    int _suspended;
    int _nScheduledJobs;
    int _nWaitingModuleJobs;
    int _nScheduledModuleJobs;
    BOOL _wroteWorkspaceHeaderMap;
    BOOL _wroteAuxiliaryFiles;
    BOOL _purgedStaleData;
    BOOL _isActive;
    BOOL _isIndexing;
    BOOL _notified;
    BOOL _mightNotResume;
    BOOL _waitingForSessionToEnd;
    BOOL _aborted;
    BOOL _registeredFilesAdded;
    BOOL _waitingForMoreFiles;
    BOOL _waitingForMoreIndexables;
    BOOL _waitingForMoreFileJobs;
    BOOL _waitingToStartDeferredJob;
    BOOL _doingDeferredJobs;
    BOOL _dontDeferJobs;
    BOOL _lastLogWasDeferred;
    CDUnknownBlockType _abortCallback;
    DVTPerformanceMetric *_indexingMetric;
    long long _nCompleted;
    double _throttleFactor;
    NSDictionary *_notifiedDeferred;
    NSMutableArray *_filesReadyBlocks;
    double _autoQueryProgress;
}

+ (void)runDeferredJob:(id)arg1;
+ (void)runFileJob:(id)arg1;
+ (void)runLoadJob:(id)arg1;
+ (void)setClangOnly:(BOOL)arg1;
+ (id)auxDataSourceVersion;
+ (id)auxDataSource;
+ (void)initialize;
@property(nonatomic) double throttleFactor; // @synthesize throttleFactor=_throttleFactor;
@property(readonly, nonatomic) IDEIndex *index; // @synthesize index=_index;
- (void).cxx_destruct;
- (void)reset;
- (void)abort:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) BOOL hasHeldJobs;
@property(readonly, nonatomic) BOOL isLoading;
@property(readonly, nonatomic) BOOL isActive;
@property(readonly, nonatomic) BOOL isQuiescent;
- (void)_endActivity;
- (void)_endFileActivity;
- (void)_reportProgress;
- (void)_startFileActivity;
- (void)_startActivity;
- (void)_purgeStaleData;
- (void)_writeAuxiliaryFiles;
- (void)_writeWorkspaceHeaderMap;
- (void)_setRootPaths:(id)arg1 forIndexable:(id)arg2;
- (void)didForgetFiles:(id)arg1;
- (void)didEndImportSession:(id)arg1;
- (void)_scheduleJobs;
- (void)didCancelJob:(id)arg1;
- (void)didCompleteJob:(id)arg1;
- (BOOL)shouldRunJob:(id)arg1;
- (void)_deferJob:(id)arg1;
- (void)_cancelJobs;
- (void)_scheduleJob:(id)arg1;
- (void)prunePriorityFiles;
- (void)addPriorityFile:(id)arg1;
- (void)reportAutoQueryProgress:(double)arg1;
- (void)retryHeldJobs;
- (void)dontDeferJobForFile:(id)arg1 indexable:(id)arg2;
- (void)dontDeferJobs;
- (void)indexFile:(id)arg1 indexable:(id)arg2 dirtyFile:(id)arg3 settings:(id)arg4;
- (void)indexFile:(id)arg1 indexable:(id)arg2 dirtyFile:(id)arg3;
- (void)stopIndexing;
- (void)resumeIndexing;
- (void)suspendIndexing;
- (void)suspendIndexing:(BOOL)arg1;
- (void)clearHotFiles;
- (void)registerHotFile:(id)arg1;
- (void)doWhenFilesReady:(CDUnknownBlockType)arg1;
- (void)willRegisterMoreFiles:(BOOL)arg1;
- (void)unregisterFile:(id)arg1;
- (void)registerFile:(id)arg1;
- (void)unregisterIndexable:(id)arg1;
- (void)buildSettingsChanged:(id)arg1;
- (void)indexableChanged:(id)arg1 addOnly:(BOOL)arg2;
- (void)registerIndexable:(id)arg1;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithIndex:(id)arg1;

@end

@interface IDETestPerformanceMetricBaselineRecord : NSObject
{
    NSString *_baselineDisplayName;
    NSNumber *_average;
    NSNumber *_maxPercentRegression;
    NSNumber *_maxPercentImprovement;
    NSNumber *_maxPercentRelativeStandardDeviation;
    NSNumber *_maxRegression;
    NSNumber *_maxStandardDeviation;
}

+ (void)initialize;
@property(readonly) NSNumber *maxStandardDeviation; // @synthesize maxStandardDeviation=_maxStandardDeviation;
@property(readonly) NSNumber *maxRegression; // @synthesize maxRegression=_maxRegression;
@property(readonly) NSNumber *maxPercentRelativeStandardDeviation; // @synthesize maxPercentRelativeStandardDeviation=_maxPercentRelativeStandardDeviation;
@property(readonly) NSNumber *maxPercentImprovement; // @synthesize maxPercentImprovement=_maxPercentImprovement;
@property(readonly) NSNumber *maxPercentRegression; // @synthesize maxPercentRegression=_maxPercentRegression;
@property(readonly) NSNumber *average; // @synthesize average=_average;
@property(readonly) NSString *baselineDisplayName; // @synthesize baselineDisplayName=_baselineDisplayName;
- (void).cxx_destruct;
- (id)initWithBaselineDisplayName:(id)arg1 average:(id)arg2 maxPercentRegression:(id)arg3 maxPercentImprovement:(id)arg4 maxPercentRelativeStandardDeviation:(id)arg5 maxRegression:(id)arg6 maxStandardDeviation:(id)arg7;
- (id)init;

@end

@interface IDETestBaselineRecord : NSObject
{
    NSMutableDictionary *_performanceMetricIdentifiersDict;
    NSMutableDictionary *_classNamesDict;
}

+ (void)initialize;
- (void).cxx_destruct;
- (void)applyBaselineRecord:(id)arg1 usingBehavior:(unsigned long long)arg2;
- (void)applyBaselineRecord:(id)arg1 usingBehavior:(unsigned long long)arg2 testClassName:(id)arg3 testMethodName:(id)arg4;
- (void)unionWithDefaultsInBaselineRecord:(id)arg1;
- (void)removeBaselinesForTestClassName:(id)arg1 testMethodName:(id)arg2 performanceMetricIdentifier:(id)arg3;
- (void)removeBaselinesForTestClassName:(id)arg1 testMethodName:(id)arg2;
- (void)removeBaselinesForTestClassName:(id)arg1;
- (void)setBaselineForTestClassName:(id)arg1 testMethodName:(id)arg2 performanceMetricIdentifier:(id)arg3 maxPercentRegression:(id)arg4 maxPercentImprovement:(id)arg5 maxPercentRelativeStandardDeviation:(id)arg6 maxRegression:(id)arg7 maxStandardDeviation:(id)arg8;
- (void)setBaselineForTestClassName:(id)arg1 testMethodName:(id)arg2 performanceMetricIdentifier:(id)arg3 baselineDisplayName:(id)arg4 average:(id)arg5 maxPercentRegression:(id)arg6 maxPercentImprovement:(id)arg7 maxPercentRelativeStandardDeviation:(id)arg8 maxRegression:(id)arg9 maxStandardDeviation:(id)arg10;
- (void)_setBaselineForTestClassName:(id)arg1 testMethodName:(id)arg2 performanceMetricIdentifier:(id)arg3 baselineDisplayName:(id)arg4 average:(id)arg5 maxPercentRegression:(id)arg6 maxPercentImprovement:(id)arg7 maxPercentRelativeStandardDeviation:(id)arg8 maxRegression:(id)arg9 maxStandardDeviation:(id)arg10;
- (id)baselineForTestClassName:(id)arg1 testMethodName:(id)arg2 performanceMetricIdentifier:(id)arg3;
- (void)setDefaultBaselineForPerformanceMetricIdentifier:(id)arg1 maxPercentRegression:(id)arg2 maxPercentImprovement:(id)arg3 maxPercentRelativeStandardDeviation:(id)arg4 maxRegression:(id)arg5 maxStandardDeviation:(id)arg6;
- (id)defaultBaselineForPerformanceMetricIdentifier:(id)arg1;
- (id)performanceMetricIdentifiersWithDefaultBaseline;
- (id)performanceMetricIdentifiersForClassName:(id)arg1 testMethodName:(id)arg2;
- (id)testMethodNamesForClassName:(id)arg1;
- (id)testClassNames;
- (BOOL)writeToFilePath:(id)arg1 workspace:(id)arg2 versionedFileManager:(id)arg3 error:(id *)arg4;
- (id)_plistDataWithError:(id *)arg1;
- (id)initWithFilePath:(id)arg1 error:(id *)arg2;
- (BOOL)_validatePropertyList:(id)arg1 errorString:(id *)arg2;
- (BOOL)_validateClassNamesDictionary:(id)arg1 locationDescription:(id)arg2 errorString:(id *)arg3;
- (BOOL)_validatePerformanceMetricBaselinesByPerformanceMetricIdentifierDictionary:(id)arg1 locationDescription:(id)arg2 errorString:(id *)arg3;
- (id)init;

@end

@interface IDEProvisionableOverrides : NSObject
{
    NSString *_configuration;
    NSNumber *_profileSupport;
    NSNumber *_provisioningStyle;
    id <IDEProvisioningBasicTeam> _team;
    DVTPlatform *_platform;
    NSString *_profileSpecifier;
    NSString *_certificateIdentifier;
    NSString *_bundleIdentifier;
    NSString *_entitlementsFile;
    NSDictionary *_baseEntitlements;
    IDEProvisioningEntitlementsExpansion *_entitlementsExpansion;
    DVTAppIDFeatures *_appIDFeatures;
    NSNumber *_allowSigningWithoutTeamSelection;
    NSNumber *_signingRequired;
    NSNumber *_signingRequiresTeam;
}

+ (id)overridesWithConfiguration:(id)arg1 profileSupport:(id)arg2 provisioningStyle:(id)arg3 team:(id)arg4 platform:(id)arg5 profileSpecifier:(id)arg6 certificateIdentifier:(id)arg7 bundleIdentifier:(id)arg8 entitlementsFile:(id)arg9 baseEntitlements:(id)arg10 entitlementsExpansion:(id)arg11 allowSigningWithoutTeamSelection:(id)arg12 signingRequiresTeam:(id)arg13 appIDFeatures:(id)arg14;
+ (id)overridesWithConfiguration:(id)arg1 profileSupport:(id)arg2;
@property(readonly, nonatomic) NSNumber *signingRequiresTeam; // @synthesize signingRequiresTeam=_signingRequiresTeam;
@property(readonly, nonatomic) NSNumber *signingRequired; // @synthesize signingRequired=_signingRequired;
@property(readonly, nonatomic) NSNumber *allowSigningWithoutTeamSelection; // @synthesize allowSigningWithoutTeamSelection=_allowSigningWithoutTeamSelection;
@property(readonly, nonatomic) DVTAppIDFeatures *appIDFeatures; // @synthesize appIDFeatures=_appIDFeatures;
@property(readonly, nonatomic) IDEProvisioningEntitlementsExpansion *entitlementsExpansion; // @synthesize entitlementsExpansion=_entitlementsExpansion;
@property(readonly, nonatomic) NSDictionary *baseEntitlements; // @synthesize baseEntitlements=_baseEntitlements;
@property(readonly, nonatomic) NSString *entitlementsFile; // @synthesize entitlementsFile=_entitlementsFile;
@property(readonly, nonatomic) NSString *bundleIdentifier; // @synthesize bundleIdentifier=_bundleIdentifier;
@property(readonly, nonatomic) NSString *certificateIdentifier; // @synthesize certificateIdentifier=_certificateIdentifier;
@property(readonly, nonatomic) NSString *profileSpecifier; // @synthesize profileSpecifier=_profileSpecifier;
@property(readonly, nonatomic) DVTPlatform *platform; // @synthesize platform=_platform;
@property(readonly, nonatomic) id <IDEProvisioningBasicTeam> team; // @synthesize team=_team;
@property(readonly, nonatomic) NSNumber *provisioningStyle; // @synthesize provisioningStyle=_provisioningStyle;
@property(readonly, nonatomic) NSNumber *profileSupport; // @synthesize profileSupport=_profileSupport;
@property(readonly, nonatomic) NSString *configuration; // @synthesize configuration=_configuration;
- (void).cxx_destruct;

@end

@interface IDEProvisioningCreateTeamOwnedCertificateUserAction : IDEProvisioningUserAction
{
    DVTPortalCertificateType *_type;
}

+ (id)userActionWithType:(id)arg1 context:(id)arg2;
@property(readonly, nonatomic) DVTPortalCertificateType *type; // @synthesize type=_type;
- (void).cxx_destruct;
- (id)executionMessage;
- (id)userActionName;
- (id)userActionMessage;
- (id)userActionTitle;
- (id)initWithContext:(id)arg1 type:(id)arg2;

@end

@interface IDEBuildArbitrator : NSObject
{
    NSOperationQueue *_serializationQueue;
    NSMapTable *_fileProducingBuildTasksByFilePath;
    NSMapTable *_registeringBuildersByFilePath;
    NSMapTable *_registeredFilePathsByBuilder;
}

+ (id)sharedBuildArbitrator;
+ (void)initialize;
- (void).cxx_destruct;
- (void)unregisterAllBuildTasksForBuilder:(id)arg1;
- (void)unregisterBuildTaskWhichProducesFileAtPath:(id)arg1 forBuilder:(id)arg2;
- (id)registerBuildTask:(id)arg1 asProducerOfFileAtPath:(id)arg2 forBuilder:(id)arg3;
- (id)init;

@end

@interface IDEIssueGroup : NSObject
{
    NSMutableArray *_issueFileGroups;
    NSMapTable *_issueFileGroupsIndex;
    NSMutableArray *_issuesWithNoFile;
    NSMutableArray *_issueTypeGroups;
    NSMapTable *_issueTypeGroupsIndex;
    IDEIssueTypeGroup *_runtimeTopGroup;
    unsigned long long _testFailureCount;
    unsigned long long _errorCount;
    unsigned long long _warningCount;
    unsigned long long _noticeCount;
    unsigned long long _analyzerResultCount;
    unsigned long long _runtimeCount;
    IDEIssueProvider *_issueProvider;
    IDEContainer *_container;
    id <IDEBlueprint> _blueprint;
    id <IDEIssueRuntimeGroupingObject> _runtimeGroupingObject;
    unsigned long long _issueType;
}

@property unsigned long long issueType; // @synthesize issueType=_issueType;
@property(readonly) id <IDEIssueRuntimeGroupingObject> runtimeGroupingObject; // @synthesize runtimeGroupingObject=_runtimeGroupingObject;
@property(readonly) id <IDEBlueprint> blueprint; // @synthesize blueprint=_blueprint;
@property(readonly) IDEContainer *container; // @synthesize container=_container;
@property(readonly) IDEIssueProvider *issueProvider; // @synthesize issueProvider=_issueProvider;
@property(readonly, copy) NSArray *issueTypeGroups; // @synthesize issueTypeGroups=_issueTypeGroups;
@property(readonly, copy) NSArray *issuesWithNoFile; // @synthesize issuesWithNoFile=_issuesWithNoFile;
@property(readonly, copy) NSArray *issueFileGroups; // @synthesize issueFileGroups=_issueFileGroups;
- (void).cxx_destruct;
@property(readonly) NSSet *_allIssues;
- (void)_removeIssues:(id)arg1;
- (void)_addIssues:(id)arg1;
- (void)_createRuntimeGroupIfNecessary:(id)arg1;
- (void)_addNoFileIssues:(id)arg1;
- (void)_updateIssueType;
@property(readonly) unsigned long long issueCount;
- (id)_initWithIssueProvider:(id)arg1 container:(id)arg2 blueprint:(id)arg3 runtimeGroupingObject:(id)arg4;
- (id)init;

@end

@interface IDEDistributionCodesignStep : IDEDistributionItemProcessingStep
{
}

+ (_Bool)runsPerThinningVariant;
+ (_Bool)supportsDryRun;
- (_Bool)runWithError:(id *)arg1;
- (id)providedOutputContextPropertyNames;
- (id)requiredInputContextPropertyNames;
- (id)name;

@end

@interface IDERunContextManager : NSObject <DVTInvalidation>
{
    IDEWorkspace *_workspace;
    NSMutableSet *_customDataStores;
    NSMapTable *_storeToSpecifierMap;
    NSMapTable *_storeToUserDataMap;
    NSMutableArray *_runContexts;
    IDEScheme *_activeRunContext;
    IDERunDestination *_activeRunDestination;
    NSMutableArray *_ignoredChangesDevices;
    NSCountedSet *_schemeNameCounts;
    NSEvent *_schemeForcedSwitchEvent;
    BOOL _bulkChangingBlueprints;
    BOOL _blueprintChangedDuringBulkChanges;
}

+ (BOOL)automaticallyNotifiesObserversOfActiveRunDestination;
+ (BOOL)automaticallyNotifiesObserversOfActiveRunContext;
+ (void)initialize;
+ (unsigned long long)assertionBehaviorForKeyValueObservationsAtEndOfEvent;
@property(readonly) NSCountedSet *schemeNameCounts; // @synthesize schemeNameCounts=_schemeNameCounts;
@property(retain, nonatomic) IDERunDestination *activeRunDestination; // @synthesize activeRunDestination=_activeRunDestination;
@property(retain, nonatomic) IDEScheme *activeRunContext; // @synthesize activeRunContext=_activeRunContext;
@property(readonly) NSArray *runContexts; // @synthesize runContexts=_runContexts;
@property(readonly) IDEWorkspace *workspace; // @synthesize workspace=_workspace;
- (void).cxx_destruct;
- (void)setActiveRunContext:(id)arg1 andRunDestination:(id)arg2;
- (BOOL)validateActiveRunContext:(id *)arg1 error:(id *)arg2;
- (void)blueprintsDidBulkChange:(id)arg1;
- (void)blueprintsWillBulkChange:(id)arg1;
- (void)blueprintsDidChange:(id)arg1;
- (void)deviceUsabilityDidChange:(id)arg1;
- (id)_preferredDestinationForRunDestination:(id)arg1 inDestinations:(id)arg2;
- (void)_invalidateAvailableRunDestinations;
- (void)_invalidateAvailableRunDestinationsForSchemes:(id)arg1;
- (void)_invalidateActiveRunDestinationDueToDeviceAvailable;
- (void)_invalidateActiveRunDestination;
- (void)shouldIgnoreDeviceChangesDidEnd:(id)arg1;
- (void)shouldIgnoreDeviceChangesWillBegin:(id)arg1;
- (void)_updateOrderHint:(unsigned long long)arg1 forRunContext:(id)arg2;
- (void)_updateIsShown:(BOOL)arg1 forRunContext:(id)arg2;
- (id)runContextManagementDictionaryForStore:(id)arg1;
- (void)saveRunContextManagementDictionaryForStore:(id)arg1;
- (void)_lookupIsShown:(char *)arg1 orderHint:(unsigned long long *)arg2 forCustomDataStore:(id)arg3 specifier:(id)arg4;
- (id)_contextUserStateForCustomDataStore:(id)arg1 specifier:(id)arg2 createIfNeeded:(BOOL)arg3;
- (id)_contextUserStateDictForCustomDataStore:(id)arg1 createIfNeeded:(BOOL)arg2;
- (id)_contextUserStateKeyForSpecifier:(id)arg1;
- (void)moveRunContext:(id)arg1 toCustomDataStore:(id)arg2 customDataSpecifier:(id)arg3 completionQueue:(id)arg4 completionBlock:(CDUnknownBlockType)arg5;
- (void)deleteRunContexts:(id)arg1 completionQueue:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (id)importRunContextAtURL:(id)arg1 withCustomDataStore:(id)arg2 customDataSpecifier:(id)arg3 orderHint:(unsigned long long)arg4 completionQueue:(id)arg5 completionBlock:(CDUnknownBlockType)arg6;
- (id)duplicateRunContext:(id)arg1 withCustomDataSpecifier:(id)arg2 completionQueue:(id)arg3 completionBlock:(CDUnknownBlockType)arg4;
- (id)newTransientSchemeWithCustomDataStore:(id)arg1 customDataSpecifier:(id)arg2 orderHint:(unsigned long long)arg3;
- (id)newSchemeWithCustomDataStore:(id)arg1 customDataSpecifier:(id)arg2 orderHint:(unsigned long long)arg3;
- (id)_newSchemeWithCustomDataStore:(id)arg1 customDataSpecifier:(id)arg2 orderHint:(unsigned long long)arg3 schemeCreationBlock:(CDUnknownBlockType)arg4;
- (void)_addContext:(id)arg1 specifierToRunContextMap:(id)arg2;
- (id)_uniqueSpecifierForSpecifier:(id)arg1 inMap:(id)arg2;
- (void)_setAutocreationSuppressed:(BOOL)arg1 forBuildables:(id)arg2 returningStoresNeedingSave:(id *)arg3;
- (void)_setAutocreationSuppressed:(BOOL)arg1 forBuildables:(id)arg2;
- (void)allowAutocreationForBuildables:(id)arg1;
- (void)suppressAutocreationForBuildables:(id)arg1;
- (void)_customDataStoresDidUpdate;
- (void)_finishUpdatingRunContexts;
- (void)_startUpdatingRunContexts;
- (void)_ensureActiveRunContext;
- (void)_restoreActiveRunContextIfPossible;
- (void)_updateMap:(id)arg1 contextForCustomDataStore:(id)arg2 specifier:(id)arg3;
- (void)_addScheme:(id)arg1;
- (void)primitiveInvalidate;
- (id)initWithWorkspace:(id)arg1;
- (id)init;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface IDEDistributionAppThinningManifestStep : IDEDistributionProcessingStep
{
}

+ (_Bool)runsPerDistributionItem;
+ (_Bool)runsPerThinningVariant;
- (_Bool)runWithError:(id *)arg1;
- (id)providedOutputContextPropertyNames;
- (id)requiredInputContextPropertyNames;
- (id)name;

@end

@interface IDEProvisioningRegisterDeviceRepairStep : IDEProvisioningRepairStep
{
    id <DVTPortalDevice> _device;
    DVTPortalTeam *_team;
}

+ (id)createRegisterDeviceRepairStepWithDevice:(id)arg1 team:(id)arg2;
@property(readonly) DVTPortalTeam *team; // @synthesize team=_team;
@property(readonly) id <DVTPortalDevice> device; // @synthesize device=_device;
- (void).cxx_destruct;
- (BOOL)handleExecutionWithContext:(id)arg1 ledgerEntry:(id)arg2 error:(id *)arg3;
- (BOOL)preflightWithContext:(id)arg1 error:(id *)arg2;
- (id)activityDescription;
- (id)stepDescription;
- (id)initWithDevice:(id)arg1 team:(id)arg2;

@end

@interface IDELegacyBatchFindScopePredicate : NSObject
{
    NSString *_name;
    NSString *_uuid;
    NSPredicate *_predicate;
}

+ (id)readLocalPredicatesForWorkspace:(id)arg1;
+ (id)readGlobalPredicates;
+ (id)namedScopeFromLegacyPredicates:(id)arg1;
+ (id)namedScopeFromLegacyPredicate:(id)arg1;
+ (id)predicatesFromData:(id)arg1;
+ (id)archivedScopesFromData:(id)arg1;
@property(copy, nonatomic) NSPredicate *predicate; // @synthesize predicate=_predicate;
@property(copy, nonatomic) NSString *uuid; // @synthesize uuid=_uuid;
@property(copy, nonatomic) NSString *name; // @synthesize name=_name;
- (void).cxx_destruct;
- (void)setPredicateFromUTF8String:(const char *)arg1 fromXMLUnarchiver:(id)arg2;
- (id)initFromXMLUnarchiver:(id)arg1 archiveVersion:(float)arg2;

@end

@interface IDELegacyBatchFindScopeArchive : NSObject
{
    NSMutableArray *_unarchivedScopes;
}

@property(readonly) NSArray *unarchivedScopes; // @synthesize unarchivedScopes=_unarchivedScopes;
- (void).cxx_destruct;
- (void)addScope:(id)arg1 fromXMLUnarchiver:(id)arg2;

@end

@interface IDEIndexClangQueryProvider : IDEIndexGenericQueryProvider
{
    DVTDispatchLock *_clangLock;
    void *_cxIndex;
    // Error parsing type: A^{CXTranslationUnitImpl}, name: _cxTU
    long long _filePurgeCount;
    NSArray *_astArgs;
    NSString *_workingDirectory;
    struct {
        unsigned int _field1[4];
        void *_field2;
    } *_tokens;
    CDStruct_a94d320b *_cursors;
    DVTTextDocumentLocation *_processedLocation;
    DVTDispatchLock *_completionLock;
    CDUnknownBlockType _completionBlock;
    unsigned int _numTokens;
    BOOL _throwOutCache;
}

+ (BOOL)supportsSymbolColoring;
+ (void)initialize;
- (void).cxx_destruct;
- (id)impliedHeadersForModuleImportLocation:(id)arg1 withCurrentFileContentDictionary:(id)arg2 forIndex:(id)arg3;
- (id)importedFileAtDocumentLocation:(id)arg1 withCurrentFileContentDictionary:(id)arg2 forIndex:(id)arg3;
- (id)importedFilesAtDocument:(id)arg1 withCurrentFileContentDictionary:(id)arg2 forIndex:(id)arg3;
- (id)collectionElementTypeSymbolForSymbol:(id)arg1 withCurrentFileContentDictionary:(id)arg2 forIndex:(id)arg3;
- (id)typeSymbolForSymbol:(id)arg1 withCurrentFileContentDictionary:(id)arg2 forIndex:(id)arg3;
- (id)typeSymbolForCXType:(CDStruct_9b248d9b)arg1;
- (id)messageReceiverInContext:(id)arg1 withCurrentFileContentDictionary:(id)arg2 forIndex:(id)arg3;
- (id)referencesToSymbolMatchingName:(id)arg1 inContext:(id)arg2 withCurrentFileContentDictionary:(id)arg3 forIndex:(id)arg4;
- (id)referencesToSymbol:(id)arg1 inContext:(id)arg2 withCurrentFileContentDictionary:(id)arg3 forIndex:(id)arg4;
- (id)symbolsUsedInContext:(id)arg1 withCurrentFileContentDictionary:(id)arg2 forIndex:(id)arg3;
- (id)symbolsOccurrencesInContext:(id)arg1 withCurrentFileContentDictionary:(id)arg2 forIndex:(id)arg3;
- (BOOL)_setOccurrenceForCursor:(CDStruct_a94d320b)arg1 originalCursor:(CDStruct_a94d320b)arg2 symbol:(id)arg3 index:(id)arg4;
- (id)processedSymbolsInContext:(id)arg1 initFunction:(CDUnknownBlockType)arg2 visitorFunction:(CDUnknownBlockType)arg3 includeSymbolLocations:(BOOL)arg4 withCurrentFileContentDictionary:(id)arg5 forIndex:(id)arg6;
- (id)codeDiagnosticsAtLocation:(id)arg1 withCurrentFileContentDictionary:(id)arg2 forIndex:(id)arg3;
- (id)_parsedCodeCommentAtLocation:(id)arg1 withCurrentFileContentDictionary:(id)arg2 forIndex:(id)arg3 symbolKindOut:(id *)arg4 cursorKindOut:(long long *)arg5;
- (id)parsedCodeCommentAtLocation:(id)arg1 withCurrentFileContentDictionary:(id)arg2 forIndex:(id)arg3 symbolKindOut:(id *)arg4;
- (id)parsedCodeCommentAtLocation:(id)arg1 withCurrentFileContentDictionary:(id)arg2 forIndex:(id)arg3 cursorKindOut:(long long *)arg4;
- (id)parsedCodeCommentAtLocation:(id)arg1 withCurrentFileContentDictionary:(id)arg2 forIndex:(id)arg3;
- (id)_diagnosticItemsFromDiagnosticSet:(void *)arg1 parentDiagnostic:(void *)arg2 location:(id)arg3 forIndex:(id)arg4;
- (id)codeCompletionsAtLocation:(id)arg1 withCurrentFileContentDictionary:(id)arg2 completionContext:(id *)arg3 forIndex:(id)arg4;
- (id)symbolsMatchingName:(id)arg1 inContext:(id)arg2 withCurrentFileContentDictionary:(id)arg3 forIndex:(id)arg4;
- (id)_symbolsMatchingName:(id)arg1 inContext:(id)arg2 cxTU:(struct CXTranslationUnitImpl *)arg3 forIndex:(id)arg4;
- (id)symbolsMatchingName:(id)arg1 inContext:(id)arg2 forIndex:(id)arg3;
- (id)_resolutionForCursor:(CDStruct_a94d320b)arg1;
- (void)_createSharedTranslationUnitWithCurrentFileContentDictionary:(id)arg1 index:(id)arg2;
- (id)_canonicalPathForFile:(void *)arg1 index:(id)arg2;
- (id)_canonicalPathForPath:(id)arg1 index:(id)arg2;
- (void)_logClangInvocationWithArguments:(id)arg1;
- (id)pchFile;
- (id)pchFileAsPassedInArgs;
- (void)purgeCaches;
- (BOOL)hasAST;
- (void)dealloc;
- (void)disposeCIndexAndTU;
- (void)disposeTokensAndCursors;
- (void)performCompletion:(CDUnknownBlockType)arg1;
- (void)asyncPerformClang:(CDUnknownBlockType)arg1;
- (void)performClang:(CDUnknownBlockType)arg1;
- (void)processCompletions;
- (id)initWithSettings:(id)arg1 database:(id)arg2;

@end

@interface IDEProvisioningPermissionsFailureUserAction : IDEProvisioningUserAction
{
}

+ (id)permissionsFailureUserActionWithSteps:(id)arg1 context:(id)arg2;
- (id)userActionName;
- (id)userActionMessage;
- (id)userActionTitle;
- (BOOL)preflightWithError:(id *)arg1;

@end

@interface IDEWorkspaceSharedSettings : IDEWorkspaceSettings
{
}

- (void)saveSettings;
@property BOOL autocreateContextsIfNeeded;
- (id)settingsOwnership;

@end

@interface IDETextFragment : NSObject <NSCopying, NSCoding>
{
    DVTDocumentLocation *_fragmentLocation;
    NSString *_fragmentText;
    Class _textProviderClass;
}

@property(readonly) Class textProviderClass; // @synthesize textProviderClass=_textProviderClass;
@property(readonly) NSString *fragmentText; // @synthesize fragmentText=_fragmentText;
@property(readonly) DVTDocumentLocation *fragmentLocation; // @synthesize fragmentLocation=_fragmentLocation;
- (void).cxx_destruct;
- (id)description;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithFragmentLocation:(id)arg1 fragmentText:(id)arg2 textProviderClass:(Class)arg3;

@end

@interface IDEPIFGUID : NSObject
{
    NSString *_string;
    unsigned long long _hash;
}

+ (id)newFromStringRepresentation:(id)arg1;
- (void).cxx_destruct;
- (id)description;
@property(readonly) NSString *stringRepresentation;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)pifGuidByCombiningWithString:(id)arg1;
- (id)initFromStringRepresentation:(id)arg1;

@end

@interface IDEBuildSettingTable : DVTMacroDefinitionTable
{
}

+ (id)macroNameRegistry;

@end

@interface IDEProvisioningInstallProfileUserAction : IDEProvisioningUserAction
{
    id <DVTProvisioningProfile> _profile;
}

@property(readonly) id <DVTProvisioningProfile> profile; // @synthesize profile=_profile;
- (void).cxx_destruct;
- (BOOL)supportsBatchAuthorization;
- (id)userActionName;
- (id)userActionMessage;
- (id)userActionTitle;
- (id)initWithProfile:(id)arg1 context:(id)arg2;

@end

@interface IDEProvisioningDownloadProfileUserAction : IDEProvisioningInstallProfileUserAction
{
}

- (id)executionMessage;
- (id)userActionName;
- (id)userActionMessage;
- (id)userActionTitle;

@end

@interface IDEProvisioningUpdateProfileUserAction : IDEProvisioningInstallProfileUserAction
{
}

- (id)executionMessage;
- (id)userActionName;
- (id)userActionMessage;
- (id)userActionTitle;

@end

@interface IDETestableDataSource : NSObject <IDETestableDataSource, DVTInvalidation>
{
    IDEWorkspace *_workspace;
    // Error parsing type: AQ, name: _currentGeneration
    NSOperationQueue *_testSearchQueue;
    NSDictionary *_unprocessedIndexableIdsToTestableIdsToDefinitionLocations;
    NSDictionary *_indexableIdsToTestableIdsToDefinitionLocations;
    NSMapTable *_indexableIdsToTestableTokens;
    DVTNotificationToken *_indexDidIndexNotificationToken;
    DVTNotificationToken *_indexDidChangeStateNotificationToken;
    DVTNotificationToken *_indexDidChangeNotificationToken;
    BOOL _providesLiveUpdates;
    BOOL _needsUpdate;
}

+ (id)testableDataSourceForWorkspace:(id)arg1;
+ (id)testableDataSourceTokenForWorkspace:(id)arg1 indexableIdentifier:(id)arg2 callbackBlock:(CDUnknownBlockType)arg3;
+ (BOOL)automaticallyNotifiesObserversOfProvidesLiveUpdates;
+ (void)initialize;
- (void).cxx_destruct;
- (id)_aggregatedTestDataFromTestData:(id)arg1;
- (id)_computeIndexableIdsToLinkedTargetIndexableIds;
- (id)_indexableIdsToTestableIdsToDefinitionLocations;
- (void)_setIndexableIdsToTestableIdsToDefinitionLocations:(id)arg1;
- (void)searchForTestsForIndexableIdentifier:(id)arg1 callbackBlock:(CDUnknownBlockType)arg2;
- (void)_searchForTests;
- (BOOL)isCurrentGeneration:(unsigned long long)arg1;
- (unsigned long long)beginNewGeneration;
- (void)clearTestableTokenForIndexableIdentifier:(id)arg1;
- (void)setTestableToken:(id)arg1 indexableIdentifier:(id)arg2;
@property BOOL providesLiveUpdates; // @synthesize providesLiveUpdates=_providesLiveUpdates;
- (void)_indexDidUpdate:(id)arg1;
- (void)primitiveInvalidate;
- (id)_initWithWorkspace:(id)arg1;
- (id)init;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface IDETestableDataSourceToken : NSObject <DVTInvalidation>
{
    IDETestableDataSource *_dataSource;
    NSString *_indexableIdentifier;
    CDUnknownBlockType _callbackBlock;
}

+ (void)initialize;
- (void).cxx_destruct;
- (void)search;
- (void)primitiveInvalidate;
- (void)_clearDataSource;
- (void)_setIdentifiersToLocations:(id)arg1;
- (id)_initWithDataSource:(id)arg1 indexableIdentifier:(id)arg2 callbackBlock:(CDUnknownBlockType)arg3;
- (id)init;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface IDEContainerQuery : NSObject <DVTInvalidation>
{
    id <DVTModelObject><DVTInvalidation> _containerGraphObject;
    DVTObservingToken *_containerGraphObjectValidObservationToken;
    CDUnknownBlockType _skipSubgraphBlock;
    CDUnknownBlockType _predicateBlock;
    CDUnknownBlockType _visitorBlock;
    NSMutableSet *_matches;
    NSMutableSet *_visitedContainerGraphObjects;
    BOOL _isCancelled;
    BOOL _isLiveQuery;
    BOOL _inObjectsDidChangeNotification;
    BOOL _skipInvalidObjects;
}

+ (id)_invalidContainerObjectsRootedInContainerGraphObject:(id)arg1;
+ (BOOL)automaticallyNotifiesObserversOfMatches;
+ (id)containerQueryWithContainerGraphObject:(id)arg1 predicateBlock:(CDUnknownBlockType)arg2;
+ (void)traverseContainerGraphRootedInContainerGraphObject:(id)arg1 skipInvalidObjects:(BOOL)arg2 skipSubgraphBlock:(CDUnknownBlockType)arg3 visitorBlock:(CDUnknownBlockType)arg4;
+ (void)traverseContainerGraphRootedInContainerGraphObject:(id)arg1 skipSubgraphBlock:(CDUnknownBlockType)arg2 visitorBlock:(CDUnknownBlockType)arg3;
+ (void)initialize;
- (void).cxx_destruct;
- (void)_objectsDidChange:(id)arg1;
- (void)_updateWithInsertedMatches:(id)arg1 deletedMatches:(id)arg2;
- (void)_traverseContainerGraphObjects:(id)arg1 forDeletion:(BOOL)arg2 insertedMatches:(id)arg3 deletedMatches:(id)arg4;
- (BOOL)_isInterestedInContainerGraphObject:(id)arg1 forDeletion:(BOOL)arg2;
- (BOOL)_workspaceVerified_isTrackingContainerItem:(id)arg1 checkedContainers:(id)arg2;
- (BOOL)_isTrackingContainerItem:(id)arg1 checkedContainers:(id)arg2;
- (BOOL)_workspaceVerified_isTrackingContainer:(id)arg1 checkedContainers:(id)arg2;
- (BOOL)_isTrackingContainer:(id)arg1 checkedContainers:(id)arg2;
- (void)_traverseContainerGraphObject:(id)arg1 forDeletion:(BOOL)arg2 checkedContainers:(id)arg3 insertedMatches:(id)arg4 deletedMatches:(id)arg5;
- (void)_processContainerGraphObject:(id)arg1 insertedMatches:(id)arg2 deletedMatches:(id)arg3;
- (void)_removeContainerGraphObject:(id)arg1 deletedMatches:(id)arg2;
- (void)_addContainerGraphObject:(id)arg1 insertedMatches:(id)arg2;
@property(readonly) NSSet *matches;
- (void)primitiveInvalidate;
- (void)_cancelQueryIfNeeded;
- (id)_initWithContainerGraphObject:(id)arg1 skipSubgraphBlock:(CDUnknownBlockType)arg2 predicateBlock:(CDUnknownBlockType)arg3 visitorBlock:(CDUnknownBlockType)arg4 skipInvalidObjects:(BOOL)arg5;
- (id)init;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface IDERunDestinationSelectable : NSObject
{
    BOOL _targetDeviceIsConcrete;
    BOOL _targetDeviceIsWireless;
    BOOL _isEligible;
    NSURL *_targetDeviceLocation;
    NSString *_targetDeviceModelCode;
    NSString *_targetDeviceFamily;
    DVTSDK *_targetSDK;
    NSString *_targetArchitecture;
}

@property(readonly, nonatomic) BOOL isEligible; // @synthesize isEligible=_isEligible;
@property(readonly, nonatomic) NSString *targetArchitecture; // @synthesize targetArchitecture=_targetArchitecture;
@property(readonly, nonatomic) DVTSDK *targetSDK; // @synthesize targetSDK=_targetSDK;
@property(readonly, nonatomic) BOOL targetDeviceIsWireless; // @synthesize targetDeviceIsWireless=_targetDeviceIsWireless;
@property(readonly, nonatomic) BOOL targetDeviceIsConcrete; // @synthesize targetDeviceIsConcrete=_targetDeviceIsConcrete;
@property(readonly, nonatomic) NSString *targetDeviceFamily; // @synthesize targetDeviceFamily=_targetDeviceFamily;
@property(readonly, nonatomic) NSString *targetDeviceModelCode; // @synthesize targetDeviceModelCode=_targetDeviceModelCode;
@property(readonly, nonatomic) NSURL *targetDeviceLocation; // @synthesize targetDeviceLocation=_targetDeviceLocation;
- (void).cxx_destruct;
- (id)description;
- (BOOL)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)plistRepresentation;
- (id)initWithPlistRepresentation:(id)arg1;
- (id)initWithRunDestination:(id)arg1;
- (id)initWithTargetDeviceLocation:(id)arg1 targetDeviceFamily:(id)arg2 targetDeviceModelCode:(id)arg3 targetDeviceIsConcrete:(BOOL)arg4 targetDeviceIsWireless:(BOOL)arg5 targetSDK:(id)arg6 targetArchitecture:(id)arg7 isEligible:(BOOL)arg8;

@end

@interface IDERunDestinationFallbackSelector : NSObject
{
}

+ (id)bestDestinationSelectableWithPreviousDestinationSelectable:(id)arg1 availableDestinationSelectables:(id)arg2;
+ (id)bestDestinationWithPreviousDestinationSelectable:(id)arg1 scheme:(id)arg2;
+ (id)bestDestinationWithPreviousDestination:(id)arg1 scheme:(id)arg2;

@end

@interface _IDEFrameworkRootGroup : IDEGroup
{
}

- (BOOL)allowUserModificationOfSubitems;
- (BOOL)subitemsAreEditable;

@end

@interface IDEFramework : IDEFolder
{
}

+ (BOOL)isOnlyUsedForUserInteraction;
+ (id)containerTypeDisplayName;
+ (BOOL)_THREAD_shouldAddFileWithName:(id)arg1;
+ (void)initialize;
- (id)displayName;
- (BOOL)isEditable;
- (id)createRootGroup;
- (BOOL)textIndex_shouldSkipDescendantsForBatchFind;

@end

@interface IDEEnergyAddition : NSObject <IDEDebuggingAddition, DVTSysmonBridgeDelegate>
{
    int _selectedPID;
    IDEDataMatrix *_metricsOverTime;
    NSString *_identifier;
    IDELaunchSession *_launchSession;
    id _launchSessionObservationToken;
    id _launchSessionObservationToken2;
    DVTSysmonBridge *_sysmonBridge;
}

+ (void)initialize;
+ (BOOL)shouldInstantiateInLaunchSession:(id)arg1;
@property(readonly, nonatomic) int selectedPID; // @synthesize selectedPID=_selectedPID;
@property(retain, nonatomic) DVTSysmonBridge *sysmonBridge; // @synthesize sysmonBridge=_sysmonBridge;
@property(retain, nonatomic) id launchSessionObservationToken2; // @synthesize launchSessionObservationToken2=_launchSessionObservationToken2;
@property(retain, nonatomic) id launchSessionObservationToken; // @synthesize launchSessionObservationToken=_launchSessionObservationToken;
@property(retain, nonatomic) IDELaunchSession *launchSession; // @synthesize launchSession=_launchSession;
@property(retain, nonatomic) NSString *identifier; // @synthesize identifier=_identifier;
@property(retain, nonatomic) IDEDataMatrix *metricsOverTime; // @synthesize metricsOverTime=_metricsOverTime;
- (void).cxx_destruct;
- (void)primitiveInvalidate;
- (void)bridgeHasNewProcessInformation:(id)arg1;
- (void)_handlePIDChange:(int)arg1;
- (void)_sysmondControl:(int)arg1;
- (void)processFinalLaunchParameters:(id)arg1;
- (id)initInLaunchSession:(id)arg1 withAppDisplayName:(id)arg2 runDestination:(id)arg3 fromExtension:(id)arg4;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface IDEIndexCompletionArray : NSMutableArray
{
    NSMutableArray *_array;
    void *_completionResults;
}

- (void).cxx_destruct;
- (void)replaceObjectAtIndex:(unsigned long long)arg1 withObject:(id)arg2;
- (void)removeObjectAtIndex:(unsigned long long)arg1;
- (void)removeLastObject;
- (void)insertObject:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)addObject:(id)arg1;
- (id)objectAtIndex:(unsigned long long)arg1;
- (unsigned long long)count;
- (void)dealloc;
- (id)initWithCodeCompleteResults:(void *)arg1;

@end

@interface IDEMasterPtyFileHandle : NSFileHandle
{
    NSFileHandle *_masterFileHandle;
    BOOL _readObserverAdded;
    BOOL _isInGotData;
    NSFileHandle *_slaveFileHandle;
}

@property(readonly) NSFileHandle *slaveFileHandle; // @synthesize slaveFileHandle=_slaveFileHandle;
- (void).cxx_destruct;
- (int)fileDescriptor;
- (void)waitForDataInBackgroundAndNotify;
- (void)waitForDataInBackgroundAndNotifyForModes:(id)arg1;
- (void)acceptConnectionInBackgroundAndNotify;
- (void)acceptConnectionInBackgroundAndNotifyForModes:(id)arg1;
- (void)readToEndOfFileInBackgroundAndNotify;
- (void)readToEndOfFileInBackgroundAndNotifyForModes:(id)arg1;
- (void)readInBackgroundAndNotify;
- (void)_gotData:(id)arg1;
- (void)readInBackgroundAndNotifyForModes:(id)arg1;
- (void)closeFile;
- (void)synchronizeFile;
- (void)truncateFileAtOffset:(unsigned long long)arg1;
- (void)seekToFileOffset:(unsigned long long)arg1;
- (unsigned long long)seekToEndOfFile;
- (unsigned long long)offsetInFile;
- (void)writeData:(id)arg1;
- (id)readDataOfLength:(unsigned long long)arg1;
- (id)readDataToEndOfFile;
- (id)availableData;
- (void)dealloc;
- (id)initWithFileDescriptor:(int)arg1 slaveFileDescriptor:(int)arg2 ownsSlaveFileDescriptor:(BOOL)arg3;

@end

@interface IDEBuildPlan : NSObject
{
    NSString *_debugName;
    NSMutableArray *_bucketList;
    BOOL _isImmutable;
    NSSet *_productArtifactNodes;
}

@property(readonly) NSString *debugName; // @synthesize debugName=_debugName;
@property(copy) NSSet *productArtifactNodes; // @synthesize productArtifactNodes=_productArtifactNodes;
- (void).cxx_destruct;
- (void)writeDebugRepresentationToFileAtPath:(id)arg1 format:(long long)arg2 basePath:(id)arg3;
- (id)description;
- (void)makeImmutable;
- (BOOL)isImmutable;
- (void)addBucket:(id)arg1;
@property(readonly) NSArray *bucketList;
- (id)initWithDebugName:(id)arg1;

@end

@interface IDELocalizationRecordItem : NSObject
{
    BOOL _projectChange;
    NSString *_message;
}

@property(readonly, getter=isProjectChange) BOOL projectChange; // @synthesize projectChange=_projectChange;
@property(readonly, copy) NSString *message; // @synthesize message=_message;
- (void).cxx_destruct;
- (id)description;
- (id)initWithMessage:(id)arg1 projectChange:(BOOL)arg2;

@end

@interface IDELocalizationRecorder : NSObject
{
    NSMutableArray *_records;
}

+ (id)sharedLocalizationRecorder;
+ (void)initialize;
@property(readonly, copy) NSArray *records; // @synthesize records=_records;
- (void).cxx_destruct;
- (void)removeAllRecords;
- (void)willAddGroupWithName:(id)arg1 inDirectory:(id)arg2 toItem:(id)arg3 forLanguage:(id)arg4;
- (void)willAddReferenceWithPath:(id)arg1 toGroup:(id)arg2 forLanguage:(id)arg3;
- (id)init;

@end

@interface _IDELocalizedPlistAdaptorReadContext : IDELocalizationWorkReadStrings
{
}

+ (id)contextWithParent:(id)arg1 path:(id)arg2 adaptor:(id)arg3 language:(id)arg4;
- (id)language;
- (id)adaptor;

@end

@interface IDELocalizedPlistAdaptor : IDELocalizedResourceAdaptor
{
    IDEFileReference *_plistFileReference;
    NSDictionary *_baseStrings;
    NSMutableDictionary *_stringsCache;
}

+ (id)writeWorkForContext:(id)arg1 langauge:(id)arg2;
+ (id)readWorkForContext:(id)arg1;
- (void).cxx_destruct;
- (id)target;
- (id)expectedSuperitem;
- (id)expectedDirectoryPath;
- (id)expectedFileName;
- (id)filteredBaseStrings:(id)arg1;
- (id)localizedGroupIdentifier;
- (id)plistFileReference;
- (id)comments;
- (void)setStrings:(id)arg1 forLanguage:(id)arg2;
- (id)stringsForLanguage:(id)arg1;
- (void)primitiveInvalidate;
- (id)initWithLocalizedContainer:(id)arg1 localizedGroup:(id)arg2 plistFileReference:(id)arg3;

@end

@interface IDETemplateCommandLineVerb : IDECommandLineVerb
{
}

+ (int)performWithEnvironment:(id)arg1;
+ (id)optionDefinitionsWithEnvironment:(id)arg1;
+ (id)templateIdentifiersOfKind:(id)arg1 forPlatform:(id)arg2;
+ (id)templateDescriptionsOfKind:(id)arg1 forPlatform:(id)arg2;
+ (void)emitSimpleList:(id)arg1 withSeparator:(id)arg2 toFileHandle:(id)arg3;
+ (void)emitJSONForPropertyList:(id)arg1 toFileHandle:(id)arg2;
+ (id)platformForString:(id)arg1;
+ (id)shortIdentifierForPlatform:(id)arg1;
+ (id)templateKindForTemplateTypeString:(id)arg1;
- (id)findTemplateFromIdentifier:(id)arg1 ofKind:(id)arg2 requestedPlatform:(id *)arg3;

@end

@interface IDEDistributionItemProcessingResults : NSObject <NSCopying>
{
    BOOL _ignored;
    IDEDistributionItem *_item;
    NSDictionary *_entitlements;
    DVTFilePath *_path;
    NSString *_codesignCommandline;
}

+ (id)itemResultsForIgnoredItem:(id)arg1;
+ (id)itemResultsForItem:(id)arg1 entitlements:(id)arg2 destinationPath:(id)arg3 andCommandline:(id)arg4;
@property(readonly, nonatomic) NSString *codesignCommandline; // @synthesize codesignCommandline=_codesignCommandline;
@property(readonly, nonatomic) DVTFilePath *path; // @synthesize path=_path;
@property(readonly, nonatomic) NSDictionary *entitlements; // @synthesize entitlements=_entitlements;
@property(readonly, nonatomic) BOOL ignored; // @synthesize ignored=_ignored;
@property(readonly, nonatomic) IDEDistributionItem *item; // @synthesize item=_item;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface IDEProvisioningSessionManager : NSObject
{
    DVTDispatchLock *_lock;
    NSMapTable *_accountToSessionMap;
}

+ (id)sharedManager;
- (void).cxx_destruct;
- (void)invalidateSession:(id)arg1;
- (id)sessionForAccount:(id)arg1 error:(id *)arg2;
- (id)initWithLock:(id)arg1 accountsToSessionMap:(id)arg2;

@end

@interface IDEExecutionActionOperation : DVTOperation
{
    CDUnknownBlockType _environmentPopulationBlock;
}

@property(copy) CDUnknownBlockType environmentPopulationBlock; // @synthesize environmentPopulationBlock=_environmentPopulationBlock;
- (void).cxx_destruct;

@end

@interface IDEPlaygroundResourcesCompilerOperation : DVTOperation
{
    IDEPlaygroundCommonSharedContext *_context;
    DVTFilePath *_sourcesResourceFile;
    DVTTask *_compilerTask;
}

@property(retain) DVTTask *compilerTask; // @synthesize compilerTask=_compilerTask;
@property(readonly, copy) DVTFilePath *sourcesResourceFile; // @synthesize sourcesResourceFile=_sourcesResourceFile;
@property __weak IDEPlaygroundCommonSharedContext *context; // @synthesize context=_context;
- (void).cxx_destruct;
- (void)buildResourceForCoreML;
- (void)buildResourceForInterfaceBuilder;
- (void)main;
- (void)cancel;
- (void)makeHighestPriority;
- (void)makeDefaultPriority;
- (id)initWithContext:(id)arg1 resourceSourceFiles:(id)arg2;

@end

@interface IDEIndexSymbolOccurrence : NSObject
{
    long long _role;
    DVTDocumentLocation *_location;
    long long _objectId;
    long long _lineNumber;
    long long _column;
    DVTFilePath *_file;
    NSURL *_moduleURL;
    BOOL _lookedForCorrespondingSymbol;
    IDEIndexSymbol *_correspondingSymbol;
    NSObject<IDEIndexQueryProvider> *_queryProvider;
}

+ (id)newSymbolOccurrenceForSymbol:(id)arg1 role:(long long)arg2 location:(id)arg3 forQueryProvider:(id)arg4;
+ (id)newSymbolOccurrenceForSymbol:(id)arg1 objectId:(long long)arg2 role:(long long)arg3 lineNumber:(long long)arg4 column:(long long)arg5 file:(id)arg6 forQueryProvider:(id)arg7;
@property(readonly, nonatomic) NSObject<IDEIndexQueryProvider> *queryProvider; // @synthesize queryProvider=_queryProvider;
@property(readonly, nonatomic) long long column; // @synthesize column=_column;
@property(readonly, nonatomic) long long lineNumber; // @synthesize lineNumber=_lineNumber;
@property(readonly, nonatomic) long long role; // @synthesize role=_role;
@property(readonly, nonatomic) long long objectId; // @synthesize objectId=_objectId;
- (void).cxx_destruct;
- (id)callees;
@property(readonly, nonatomic) DVTDocumentLocation *location;
@property(readonly, nonatomic) NSURL *moduleURL;
@property(readonly, nonatomic) DVTFilePath *file;
- (id)occurrence;
- (id)containingSymbol;
- (id)description;
- (void)setOccurrence:(id)arg1;
- (void)setRole:(long long)arg1 location:(id)arg2;
- (void)setObjectId:(long long)arg1 role:(long long)arg2 lineNumber:(long long)arg3 column:(long long)arg4 file:(id)arg5 moduleURL:(id)arg6;
- (void)setObjectId:(long long)arg1 role:(long long)arg2 lineNumber:(long long)arg3 column:(long long)arg4 file:(id)arg5;
- (id)correspondingSymbol;
- (id)initWithCorrespondingSymbol:(id)arg1 forQueryProvider:(id)arg2;
- (void)describeFields:(CDUnknownBlockType)arg1;

@end

@interface IDETemplateFactory : NSObject
{
}

- (id)mainFileNameForContext:(id)arg1;
- (BOOL)shouldProcessPath:(id)arg1 forContext:(id)arg2 inTemplate:(id)arg3;
- (BOOL)_isHiddenFilePath:(id)arg1;
- (void)instantiateTemplateForContext:(id)arg1 options:(id)arg2 whenDone:(CDUnknownBlockType)arg3;
- (id)proposedFilePathsForContext:(id)arg1 options:(id)arg2 error:(id *)arg3;
- (BOOL)canInstantiateTemplateForContext:(id)arg1;

@end

@interface IDEBackgroundModesItemModel : IDEProjectItemModel
{
    id <IDEFlightChecking> _infoPlistFlightCheck;
    NSDictionary *_backgroundModesInfoPlistKeyToEnabledBackgroundModes;
}

+ (id)keyPathsForValuesAffectingWorkoutProcessing;
+ (id)keyPathsForValuesAffectingRemoteNotificationInitiatedFetch;
+ (id)keyPathsForValuesAffectingOpportunisticFetch;
+ (id)keyPathsForValuesAffectingBluetoothPeripheral;
+ (id)keyPathsForValuesAffectingBluetoothCentral;
+ (id)keyPathsForValuesAffectingExternalAccessory;
+ (id)keyPathsForValuesAffectingNewsstandContent;
+ (id)keyPathsForValuesAffectingLocation;
+ (id)keyPathsForValuesAffectingAudio;
@property(copy, nonatomic) NSDictionary *backgroundModesInfoPlistKeyToEnabledBackgroundModes; // @synthesize backgroundModesInfoPlistKeyToEnabledBackgroundModes=_backgroundModesInfoPlistKeyToEnabledBackgroundModes;
- (void).cxx_destruct;
- (BOOL)isEnabledUsingEducatedGuess;
- (id)flightChecks;
- (id)infoPlistFlightCheck;
- (id)backgroundModesInfoPlistKeyForWorkoutProcessing;
@property(nonatomic) BOOL workoutProcessing; // @dynamic workoutProcessing;
- (void)_setWorkoutProcessing:(BOOL)arg1 postAssignmentBlock:(CDUnknownBlockType)arg2;
- (id)backgroundModesInfoPlistKeyForRemoteNotificationInitiatedFetch;
@property(nonatomic) BOOL remoteNotificationInitiatedFetch; // @dynamic remoteNotificationInitiatedFetch;
- (void)_setRemoteNotificationInitiatedFetch:(BOOL)arg1 postAssignmentBlock:(CDUnknownBlockType)arg2;
- (id)backgroundModesInfoPlistKeyForOpportunisticFetch;
@property(nonatomic) BOOL opportunisticFetch; // @dynamic opportunisticFetch;
- (void)_setOpportunisticFetch:(BOOL)arg1 postAssignmentBlock:(CDUnknownBlockType)arg2;
- (id)backgroundModesInfoPlistKeyForBluetoothPeripheral;
@property(nonatomic) BOOL bluetoothPeripheral; // @dynamic bluetoothPeripheral;
- (void)_setBluetoothPeripheral:(BOOL)arg1 postAssignmentBlock:(CDUnknownBlockType)arg2;
- (id)backgroundModesInfoPlistKeyForBluetoothCentral;
@property(nonatomic) BOOL bluetoothCentral; // @dynamic bluetoothCentral;
- (void)_setBluetoothCentral:(BOOL)arg1 postAssignmentBlock:(CDUnknownBlockType)arg2;
- (id)backgroundModesInfoPlistKeyForExternalAccessory;
@property(nonatomic) BOOL externalAccessory; // @dynamic externalAccessory;
- (void)_setExternalAccessory:(BOOL)arg1 postAssignmentBlock:(CDUnknownBlockType)arg2;
- (id)backgroundModesInfoPlistKeyForNewsstandContent;
@property(nonatomic) BOOL newsstandContent; // @dynamic newsstandContent;
- (void)_setNewsstandContent:(BOOL)arg1 postAssignmentBlock:(CDUnknownBlockType)arg2;
- (id)backgroundModesInfoPlistKeyForLocation;
@property(nonatomic) BOOL location; // @dynamic location;
- (void)_setLocation:(BOOL)arg1 postAssignmentBlock:(CDUnknownBlockType)arg2;
- (id)backgroundModesInfoPlistKeyForAudio;
@property(nonatomic) BOOL audio; // @dynamic audio;
- (void)_setAudio:(BOOL)arg1 postAssignmentBlock:(CDUnknownBlockType)arg2;
- (void)removeEnabledBackgroundMode:(id)arg1 fromBackgroundModesInfoPlistKey:(id)arg2;
- (void)addEnabledBackgroundMode:(id)arg1 toBackgroundModesInfoPlistKey:(id)arg2;
- (BOOL)isBackgroundModeEnabled:(id)arg1 withUpperCaseName:(id)arg2;
- (void)setbackgroundModesInfoPlistKeyToEnabledBackgroundModes:(id)arg1;
- (void)_setbackgroundModesInfoPlistKeyToEnabledBackgroundModes:(id)arg1 postAssignmentBlock:(CDUnknownBlockType)arg2;
- (void)readValuesFromPlist;
- (void)publishStateWithContext:(id)arg1;
- (void)modelWasDisabled;
- (void)modelWasEnabledWithContext:(id)arg1;
- (id)initWithCapabilitiesContext:(id)arg1 item:(id)arg2;

// Remaining properties
@property(readonly) id infoPlistCoordinator; // @dynamic infoPlistCoordinator;

@end

@interface IDEIntegrateSchemeAction : IDESchemeAction
{
    BOOL _performsAnalyze;
    BOOL _performsTest;
    BOOL _performsArchive;
}

+ (id)keyPathsForValuesAffectingHasDefaultValues;
+ (id)keyPathsForValuesAffectingDoesNonActionWork;
+ (id)keyPathsForValuesAffectingSubtitle;
+ (BOOL)shouldAllowCustomPhaseActions;
@property(nonatomic) BOOL performsArchive; // @synthesize performsArchive=_performsArchive;
@property(nonatomic) BOOL performsTest; // @synthesize performsTest=_performsTest;
@property(nonatomic) BOOL performsAnalyze; // @synthesize performsAnalyze=_performsAnalyze;
- (void)setPerformsArchiveFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setPerformsTestFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setPerformsAnalyzeFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)dvt_encodeAttributesWithXMLArchiver:(id)arg1 version:(id)arg2;
- (void)dvt_awakeFromXMLUnarchiver:(id)arg1;
- (BOOL)hasDefaultValues;
- (BOOL)doesNonActionWork;
- (id)subtitle;
- (id)name;
- (id)mutablePostPhaseExecutionActions;
- (id)postPhaseExecutionActions;
- (id)mutablePrePhaseExecutionActions;
- (id)prePhaseExecutionActions;
- (void)_commonInit;
- (id)initFromXMLUnarchiver:(id)arg1 archiveVersion:(float)arg2;
- (id)init;

@end

@interface _IDEFoundationPrivateClassForFindingBundle : NSObject
{
}

@end

@interface IDETestReportDocumentLocation : DVTDocumentLocation
{
    NSString *_testClassName;
    NSString *_testMethodName;
}

@property(copy) NSString *testMethodName; // @synthesize testMethodName=_testMethodName;
@property(copy) NSString *testClassName; // @synthesize testClassName=_testClassName;
- (void).cxx_destruct;
- (BOOL)isEqual:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithDocumentURL:(id)arg1 timestamp:(id)arg2 testClassName:(id)arg3 testMethodName:(id)arg4;

@end

@interface IDEDistributionOption : NSObject
{
    NSString *_identifier;
    IDEDistributionContext *_context;
}

+ (id)propertyListForContext:(id)arg1;
+ (id)availableOptionsForPropertyList;
@property(retain, nonatomic) IDEDistributionContext *context; // @synthesize context=_context;
@property(readonly, nonatomic) NSString *identifier; // @synthesize identifier=_identifier;
- (void).cxx_destruct;
@property(readonly) NSSet *providedOutputContextPropertyNames;
@property(readonly) NSSet *requiredInputContextPropertyNames;
- (BOOL)loadFromPropertyList:(id)arg1 error:(id *)arg2;
- (id)initWithIdentifier:(id)arg1 context:(id)arg2;

@end

@interface IDEBatchFindScopeStore : NSObject
{
    id <DVTCustomDataStoring> _storage;
    NSArray *_scopes;
    CDUnknownBlockType _legacyImporter;
}

- (void).cxx_destruct;
@property(copy) NSArray *scopes;
- (void)writeScopes:(id)arg1;
- (id)loadScopes;
- (id)initWithStorage:(id)arg1 legacyImporter:(CDUnknownBlockType)arg2;

@end

@interface IDEPlaygroundCommonSharedContext : NSObject
{
    DVTStackBacktrace *_creationBacktrace;
    NSSet *_sourcesDirectorySwiftFiles;
    struct __FSEventStream *_stream;
    IDEPlaygroundCommonSharedContext *_parentContext;
    DVTFilePath *_filePath;
    DVTFilePath *_expectedSymlinkedSourcesLocation;
    IDEPlaygroundAuxiliarySourceFrameworkLocation *_expectedAuxiliarySourceFrameworkLocation;
    DVTFilePath *_expectedSymlinkedResourcesLocation;
    NSUUID *_UUID;
    NSHashTable *_referencingContainersTable;
}

+ (id)keyPathsForValuesAffectingResourceDirectoryFilePaths;
+ (id)keyPathsForValuesAffectingExpectedSymlinkedResourcesLocation;
+ (id)keyPathsForValuesAffectingExpectedAuxiliarySourceFrameworkLocation;
+ (id)keyPathsForValuesAffectingTimelineFilePath;
+ (id)keyPathsForValuesAffectingSwiftContentsFilePath;
+ (id)keyPathsForValuesAffectingSourcesDirectoryPath;
+ (id)keyPathsForValuesAffectingResourcesDirectoryPath;
+ (id)keyPathsForValuesAffectingName;
+ (Class)contextDeserializerClass;
+ (Class)contextSerializerClass;
+ (id)filePathExtension;
+ (id)UTI;
@property(readonly) NSHashTable *referencingContainersTable; // @synthesize referencingContainersTable=_referencingContainersTable;
@property(retain, nonatomic) NSUUID *UUID; // @synthesize UUID=_UUID;
@property(retain, nonatomic) DVTFilePath *expectedSymlinkedResourcesLocation; // @synthesize expectedSymlinkedResourcesLocation=_expectedSymlinkedResourcesLocation;
@property(retain, nonatomic) IDEPlaygroundAuxiliarySourceFrameworkLocation *expectedAuxiliarySourceFrameworkLocation; // @synthesize expectedAuxiliarySourceFrameworkLocation=_expectedAuxiliarySourceFrameworkLocation;
@property(readonly, nonatomic) DVTFilePath *expectedSymlinkedSourcesLocation; // @synthesize expectedSymlinkedSourcesLocation=_expectedSymlinkedSourcesLocation;
@property(retain, nonatomic) DVTFilePath *filePath; // @synthesize filePath=_filePath;
@property(readonly, nonatomic) __weak IDEPlaygroundCommonSharedContext *parentContext; // @synthesize parentContext=_parentContext;
- (void).cxx_destruct;
- (void)_workspaceRunContextsChanged;
- (void)enumerateReferencingContainersWithBlock:(CDUnknownBlockType)arg1;
- (BOOL)unregisterReferencingContainer:(id)arg1;
- (BOOL)registerReferencingContainer:(id)arg1;
- (void)_notifySourcesDirectoryChangedOnBackgroundQueue;
- (void)_notifyResourcesDirectoryChangedOnBackgroundQueue;
@property(readonly, nonatomic) NSArray *resourceDirectoryFilePaths;
- (id)sourcesDirectorySwiftFiles;
- (void)invalidateCachedSourcesDirectorySwiftFiles;
- (BOOL)_createSymlinksForSources:(id)arg1 error:(id *)arg2;
- (void)addSourcesDirectoryObserver;
- (void)removeSourcesDirectoryObserver;
- (void)addSymlinkedSourcesDirectoryObserver;
- (void)removeSymlinkedSourcesDirectoryObserver;
@property(readonly, nonatomic) BOOL implicit;
@property(readonly, nonatomic) NSString *_targetTripleForAuxiliarySource;
@property(readonly, nonatomic) DVTSDK *_sdkForAuxiliarySource;
- (id)_platformForFrameworkSearchPaths;
@property(readonly, nonatomic) NSArray *frameworkSearchPaths;
- (id)timelineFilePath;
@property(readonly, nonatomic) DVTFilePath *swiftContentsFilePath;
@property(readonly, nonatomic) DVTFilePath *sourcesDirectoryPath;
@property(readonly, nonatomic) DVTFilePath *resourcesDirectoryPath;
@property(readonly, nonatomic) NSString *filename;
@property(readonly, nonatomic) NSString *name;
- (void)_filePathDidChange;
- (void)_filePathWillChange;
- (id)description;
- (void)dealloc;
- (id)initWithFilePath:(id)arg1 parentContext:(id)arg2;
- (id)init;

@end

@interface IDESwiftMigrationTarget : IDEMigrationTarget
{
    NSString *_currentSwiftVersion;
    NSString *_alwaysEmbedSwiftLibraries;
    BOOL _enabled;
    BOOL _minimizeObjectiveCInference;
    NSString *_subTitle;
}

@property BOOL minimizeObjectiveCInference; // @synthesize minimizeObjectiveCInference=_minimizeObjectiveCInference;
@property BOOL enabled; // @synthesize enabled=_enabled;
@property(readonly, copy) NSString *subTitle; // @synthesize subTitle=_subTitle;
- (void).cxx_destruct;
- (id)warningMessage;
- (BOOL)shouldMigrate;
- (BOOL)canMigrate;
- (BOOL)alwaysEmbedSwiftLibraries;
- (id)currentSwiftVersion;
- (void)updateBuildSettings;
- (id)initWithBlueprint:(id)arg1 migrationContext:(id)arg2;

@end

@interface _IDEPlaygroundRootGroup : _IDEPlaygroundCommonRootGroup
{
}

- (BOOL)structureEditSortSubitemsAtIndexes:(id)arg1 byNameOrByType:(BOOL)arg2;
- (BOOL)canStructureEditSortSubitemsAtIndexes:(id)arg1 byNameOrByType:(BOOL)arg2;
- (id)structureEditInsertFileURLs:(id)arg1 atIndex:(unsigned long long)arg2 createGroupsForFolders:(BOOL)arg3;
- (BOOL)canStructureEditInsertFileURLs:(id)arg1 atIndex:(unsigned long long)arg2;
- (BOOL)canStructureEditRemoveSubitemsAtIndexes:(id)arg1;
- (id)structureEditInsertSubitems:(id)arg1 atIndex:(unsigned long long)arg2;
- (BOOL)canStructureEditInsertSubitems:(id)arg1 atIndex:(unsigned long long)arg2;
- (id)allowedFileTypesOfChildItems;
- (BOOL)handlesStructureEditing;
- (BOOL)allowUserModificationOfSubitems;
- (id)_insertSubitems:(id)arg1 orURLs:(id)arg2 atIndex:(unsigned long long)arg3;

@end

@interface IDEPlayground : IDEPlaygroundCommon <IDECustomDataStoring>
{
    DVTNotificationToken *_customDataStoreWillCloseNotificationToken;
    IDEPlaygroundSharedContext *_playgroundContext;
    IDEDirectoryBasedCustomDataStore *_customDataStore;
}

+ (BOOL)isSourcesDirectorySubPath:(id)arg1;
+ (id)containerTypeDisplayName;
+ (id)containerFileDataType;
@property(retain, nonatomic) IDEDirectoryBasedCustomDataStore *customDataStore; // @synthesize customDataStore=_customDataStore;
@property(retain, nonatomic) IDEPlaygroundSharedContext *playgroundContext; // @synthesize playgroundContext=_playgroundContext;
- (void).cxx_destruct;
- (void)_removePlaygroundDirectoriesObservation;
- (void)_addPlaygroundDirectoriesObservation;
- (void)_customDataStoreContainerClosing:(id)arg1;
- (BOOL)supportsCustomDataForOwnership:(id)arg1;
- (void)moveCustomDataWithSpecifier:(id)arg1 toSpecifier:(id)arg2 completionQueue:(id)arg3 completionBlock:(CDUnknownBlockType)arg4;
- (void)removeCustomDataWithSpecifier:(id)arg1 completionQueue:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (void)writeCustomData:(id)arg1 withSpecifier:(id)arg2 forceOverwrite:(BOOL)arg3 completionQueue:(id)arg4 completionBlock:(CDUnknownBlockType)arg5;
- (id)readCustomDataWithSpecifier:(id)arg1 error:(id *)arg2;
- (id)customDataOwnershipsForGrouping:(id)arg1;
- (id)customDataSpecifiersForGrouping:(id)arg1 ownership:(id)arg2;
- (void)addSpecifier:(id)arg1 inWorkspace:(id)arg2 toSCMWithCompletionBlock:(CDUnknownBlockType)arg3;
- (void)scmStatusForSpecifier:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (id)computedChildItemSubpathsFixed;
- (id)computedChildItemSubpathsEditable;
- (id)context;
- (void)_didChangeContainerFilePath:(id)arg1 inContext:(id)arg2;
- (void)_willChangeContainerFilePath:(id)arg1 inContext:(id)arg2;
- (id)createRootGroup;
- (void)primitiveInvalidate;
- (id)initWithFilePath:(id)arg1 extension:(id)arg2 workspace:(id)arg3 options:(id)arg4 error:(id *)arg5;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) NSString *displayName;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IDEProvisioningCreateProfileRepairStep : IDEProvisioningRepairStep
{
    DVTPortalProfileCharacteristics *_characteristics;
}

+ (id)createProfileRepairStepWithCharacteristics:(id)arg1;
@property(readonly, nonatomic) DVTPortalProfileCharacteristics *characteristics; // @synthesize characteristics=_characteristics;
- (void).cxx_destruct;
- (BOOL)_installPortalProfile:(id)arg1 profileManager:(id)arg2 error:(id *)arg3;
- (BOOL)handleExecutionWithContext:(id)arg1 ledgerEntry:(id)arg2 error:(id *)arg3;
- (BOOL)preflightWithContext:(id)arg1 error:(id *)arg2;
- (id)activityDescription;
- (id)stepDescription;
- (id)initWithCharacteristics:(id)arg1;

@end

@interface IDEIndexingPrebuildController : NSObject
{
    IDEWorkspace *_workspace;
    NSObject<OS_dispatch_queue> *_queue;
    BOOL _hasInitiatedPrebuild;
    BOOL _hasPerformedPrebuild;
}

@property BOOL hasPerformedPrebuild; // @synthesize hasPerformedPrebuild=_hasPerformedPrebuild;
- (void).cxx_destruct;
- (void)cancelAnyPrebuild;
- (void)needsPrebuild;
- (void)initiatePrebuild;
- (id)initWithWorkspace:(id)arg1;

@end

@interface IDEContainerContentProductionSpecifier : NSObject <NSCopying>
{
    IDEContainer *_container;
    NSSet *_types;
    id <IDEContainerContentProducer> _producer;
}

@property(readonly) id <IDEContainerContentProducer> producer; // @synthesize producer=_producer;
@property(readonly) NSSet *types; // @synthesize types=_types;
@property(readonly) IDEContainer *container; // @synthesize container=_container;
- (void).cxx_destruct;
- (BOOL)isEqual:(id)arg1;
- (BOOL)isEqualToContentProductionSpecifier:(id)arg1;
- (unsigned long long)hash;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)description;
- (id)initWithContainer:(id)arg1 types:(id)arg2 producer:(id)arg3;

@end

@interface IDEContainerContentProductionCoordinator : NSObject <DVTInvalidation>
{
    id <DVTInvalidation> _filePathObservationToken;
    NSMutableDictionary *_deliveredResults;
    NSMutableDictionary *_pendingProducedValues;
    NSMutableSet *_pendingRemoves;
    NSObject<OS_dispatch_queue> *_productionQueue;
    NSMutableDictionary *_observers;
    IDEContainerContentProductionSpecifier *_specifier;
    DVTDelayedInvocation *_observationInvocation;
    id <IDEContainerContentProducer> _producer;
}

+ (id)observeContentProductionSpecifier:(id)arg1 handler:(CDUnknownBlockType)arg2;
+ (void)initialize;
- (void).cxx_destruct;
- (void)deliverPendingResults:(id)arg1;
- (void)scheduleRemoveOfFilePath:(id)arg1;
- (void)scheduleUpdateOrAddToFilePath:(id)arg1 withDataType:(id)arg2;
- (void)scheduleUpdateToFilePath:(id)arg1 withDataType:(id)arg2 updateType:(long long)arg3;
- (id)addObserver:(CDUnknownBlockType)arg1;
- (void)primitiveInvalidate;
- (id)initWithContentProductionSpecifier:(id)arg1;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface IDEDistributionSigningAssetsStep : IDEDistributionStep
{
}

+ (id)propertyListForContext:(id)arg1;
+ (id)availableOptionsForPropertyList;
- (id)_wrappedErrors;
- (BOOL)populateProvisioningEvaluationtWithError:(id *)arg1;
- (id)providedOutputContextPropertyNames;
- (id)requiredInputContextPropertyNames;
- (BOOL)loadFromPropertyList:(id)arg1 error:(id *)arg2;
- (id)_loadSigningAssetMapFromPropertyList:(id)arg1 error:(id *)arg2;

@end

@interface IDEAnalysisTool : NSObject
{
    int _type;
    NSString *_identifier;
    NSString *_displayName;
}

@property(readonly) NSString *displayName; // @synthesize displayName=_displayName;
@property(readonly) NSString *identifier; // @synthesize identifier=_identifier;
@property(readonly) int type; // @synthesize type=_type;
- (void).cxx_destruct;
- (void)dvt_encodeAttributesWithXMLArchiver:(id)arg1 version:(id)arg2;
- (id)description;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
- (long long)displayNameCompare:(id)arg1;
- (id)initWithType:(int)arg1 identifer:(id)arg2 displayName:(id)arg3;

@end

@interface IDEPlaygroundContextSerializer : IDEPlaygroundContextSerializerCommon
{
}

+ (BOOL)_playgroundContextRequiresUpgrade:(id)arg1;
+ (id)_discreteSourceCodeFileSectionElementForFileReference:(id)arg1 error:(id *)arg2;
+ (id)_discreteDocumentationFileSectionElementForFileReference:(id)arg1 context:(id)arg2 error:(id *)arg3;
+ (id)_discreteFileSectionElementForContext:(id)arg1 error:(id *)arg2;
+ (id)_pageElementNameForPageSuffix:(id)arg1 context:(id)arg2;
+ (id)_pagesElementForContext:(id)arg1 error:(id *)arg2;
+ (id)_timelineFileElementForContext:(id)arg1 error:(id *)arg2;
+ (id)_organizationNameAttributeForContext:(id)arg1 error:(id *)arg2;
+ (id)_lastMigrationAttributeForContext:(id)arg1 error:(id *)arg2;
+ (id)_timelineScrubberEnabledAttributeForContext:(id)arg1 error:(id *)arg2;
+ (id)_executeOnSourceChangeAttributeForContext:(id)arg1 error:(id *)arg2;
+ (id)_displayModeToggleAttributeForContext:(id)arg1 error:(id *)arg2;
+ (id)_autoTerminationDelayAttributeForContext:(id)arg1 error:(id *)arg2;
+ (id)_allowsResetAttributeForContext:(id)arg1 error:(id *)arg2;
+ (id)_targetPlatformIdentifierAttributeForContext:(id)arg1 error:(id *)arg2;
+ (id)versionAttributeForContext:(id)arg1 error:(id *)arg2;
+ (id)rootXMLElementFromContext:(id)arg1 error:(id *)arg2;
+ (id)fileWrapperForContext:(id)arg1 error:(id *)arg2;

@end

@interface IDEPlaygroundContextDeserializer : IDEPlaygroundContextDeserializerCommon
{
}

+ (BOOL)_assertLegacyResourcesElement:(id)arg1 error:(id *)arg2;
+ (id)_sectionFileReferenceFromSectionElement:(id)arg1 forFilePath:(id)arg2 error:(id *)arg3;
+ (id)_readDiscreteFileSectionsFromElement:(id)arg1 forFilePath:(id)arg2 error:(id *)arg3;
+ (id)_readOrganizationNameFromElement:(id)arg1 error:(id *)arg2;
+ (id)_suffixForPageElement:(id)arg1;
+ (id)_readPageFilenamesFromElement:(id)arg1 error:(id *)arg2;
+ (id)_readLastMigrationFromElement:(id)arg1 error:(id *)arg2;
+ (BOOL)_readBooleanValueForAttributeName:(id)arg1 fromElement:(id)arg2 defaultValue:(BOOL)arg3 error:(id *)arg4;
+ (BOOL)_readBooleanValueForAttributeName:(id)arg1 fromElement:(id)arg2 error:(id *)arg3;
+ (id)_readNumberValueForAttributeName:(id)arg1 fromElement:(id)arg2 error:(id *)arg3;
+ (long long)_readDisplayModeFromElement:(id)arg1 error:(id *)arg2;
+ (id)_readTargetPlatformIdentifierFromElement:(id)arg1 forPlaygroundVersion:(id)arg2 error:(id *)arg3;
+ (id)_readPlaygroundVersionFromElement:(id)arg1 error:(id *)arg2;
+ (id)contextFromFilePath:(id)arg1 parentContext:(id)arg2 error:(id *)arg3;
+ (id)rootElementName;

@end

@interface IDEProfileSchemeAction : IDESchemeAction <DVTXMLUnarchiving>
{
    NSMutableArray *_commandLineArgumentEntries;
    NSMutableArray *_environmentVariableEntries;
    id <IDEAnalysisToolService> _analysisToolService;
    IDESchemeBuildableReference *_profileBuildableReferenceToUseForMacroExpansion;
    DVTNotificationToken *_buildablesToken;
    BOOL _debugDocumentVersioning;
    BOOL _ignoresPersistentStateOnLaunch;
    BOOL _shouldUseLaunchSchemeArgsEnv;
    BOOL _useCustomWorkingDirectory;
    BOOL _enableTestabilityWhenProfilingTests;
    NSString *_customWorkingDirectory;
    NSString *_resolvedCustomWorkingDirectory;
    NSString *_savedToolIdentifier;
    unsigned long long _launchAutomaticallySubstyle;
    Class _analysisToolServiceClass;
}

+ (id)keyPathsForValuesAffectingBuildableReferenceToUseForMacroExpansion;
+ (BOOL)automaticallyNotifiesObserversOfAnalysisToolService;
+ (id)keyPathsForValuesAffectingDoesNonActionWork;
+ (id)keyPathsForValuesAffectingSubtitle;
+ (void)initialize;
@property(retain) Class analysisToolServiceClass; // @synthesize analysisToolServiceClass=_analysisToolServiceClass;
@property BOOL enableTestabilityWhenProfilingTests; // @synthesize enableTestabilityWhenProfilingTests=_enableTestabilityWhenProfilingTests;
@property(nonatomic) unsigned long long launchAutomaticallySubstyle; // @synthesize launchAutomaticallySubstyle=_launchAutomaticallySubstyle;
@property BOOL useCustomWorkingDirectory; // @synthesize useCustomWorkingDirectory=_useCustomWorkingDirectory;
@property(nonatomic) BOOL shouldUseLaunchSchemeArgsEnv; // @synthesize shouldUseLaunchSchemeArgsEnv=_shouldUseLaunchSchemeArgsEnv;
@property(retain, nonatomic) NSString *savedToolIdentifier; // @synthesize savedToolIdentifier=_savedToolIdentifier;
@property BOOL ignoresPersistentStateOnLaunch; // @synthesize ignoresPersistentStateOnLaunch=_ignoresPersistentStateOnLaunch;
@property BOOL debugDocumentVersioning; // @synthesize debugDocumentVersioning=_debugDocumentVersioning;
@property(copy, nonatomic) NSString *customWorkingDirectory; // @synthesize customWorkingDirectory=_customWorkingDirectory;
- (void).cxx_destruct;
- (void)addMacroExpansion:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)addEnvironmentVariables:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)addCommandLineArguments:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)dvt_encodeRelationshipsWithXMLArchiver:(id)arg1 version:(id)arg2;
- (void)setDebugDocumentVersioningFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setIgnoresPersistentStateOnLaunchFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setSavedToolIdentifierFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setShouldUseLaunchSchemeArgsEnvFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setEnableTestabilityWhenProfilingTestsFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setUseCustomWorkingDirectoryFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setLaunchAutomaticallySubstyleFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setAskForAppToLaunchFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setNotificationPayloadFileFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)dvt_encodeAttributesWithXMLArchiver:(id)arg1 version:(id)arg2;
- (void)dvt_awakeFromXMLUnarchiver:(id)arg1;
- (id)intentQueryString;
@property BOOL askForAppToLaunch;
@property BOOL launchWithNotification;
@property BOOL launchWithComplication;
@property BOOL launchWithGlance;
@property BOOL staticNotificationSelected;
- (void)_setLaunchOption:(unsigned long long)arg1 enabled:(BOOL)arg2;
- (BOOL)_launchOptionIsSet:(unsigned long long)arg1;
- (id)_expandMacrosInString:(id)arg1 forBuildParameters:(id)arg2;
- (id)_expandMacrosInString:(id)arg1;
- (void)setBuildableReferenceToUseForMacroExpansion:(id)arg1;
- (id)buildableReferenceToUseForMacroExpansion;
@property(readonly) NSString *resolvedCustomWorkingDirectory; // @synthesize resolvedCustomWorkingDirectory=_resolvedCustomWorkingDirectory;
- (id)environmentVariablesForBuildParameters:(id)arg1;
@property(readonly) NSMutableArray *mutableEnvironmentVariableEntries; // @dynamic mutableEnvironmentVariableEntries;
@property(copy) NSArray *environmentVariableEntries; // @dynamic environmentVariableEntries;
- (id)commandLineArgumentsForDevice:(id)arg1 forBuildParameters:(id)arg2;
@property(readonly) NSMutableArray *mutableCommandLineArgumentEntries; // @dynamic mutableCommandLineArgumentEntries;
@property(copy) NSArray *commandLineArgumentEntries; // @dynamic commandLineArgumentEntries;
- (id)_profileOperationForSchemeOperationParameters:(id)arg1 withBuildOperation:(id)arg2 buildParameters:(id)arg3 buildableProductDirectories:(id)arg4 overridingTestingSpecifiers:(id)arg5 schemeActionRecord:(id)arg6 environmentVariables:(id)arg7 commandLineArguments:(id)arg8 outError:(id *)arg9;
- (id)_UITestOperationForSchemeOperationParameters:(id)arg1 withBuildOperation:(id)arg2 buildParameters:(id)arg3 buildableProductDirectories:(id)arg4 overridingTestingSpecifiers:(id)arg5 schemeActionRecord:(id)arg6 environmentVariables:(id)arg7 commandLineArguments:(id)arg8 testManager:(id)arg9 outError:(id *)arg10;
- (id)_operationGroupWithSchemeOperationParameters:(id)arg1 withBuildOperation:(id)arg2 buildParameters:(id)arg3 buildableProductDirectories:(id)arg4 testManager:(id)arg5 overridingTestingSpecifiers:(id)arg6 schemeActionRecord:(id)arg7 environmentVariables:(id)arg8 commandLineArguments:(id)arg9 outError:(id *)arg10 actionCallbackBlock:(CDUnknownBlockType)arg11;
- (id)profileOperationWithSchemeOperationParameters:(id)arg1 withBuildOperation:(id)arg2 buildParameters:(id)arg3 buildableProductDirectories:(id)arg4 schemeActionRecord:(id)arg5 outError:(id *)arg6 actionCallbackBlock:(CDUnknownBlockType)arg7;
- (id)profileOperationWithSchemeOperationParameters:(id)arg1 testManager:(id)arg2 withBuildOperation:(id)arg3 buildParameters:(id)arg4 buildableProductDirectories:(id)arg5 overridingTestingSpecifiers:(id)arg6 schemeActionRecord:(id)arg7 outError:(id *)arg8 actionCallbackBlock:(CDUnknownBlockType)arg9;
- (void)setSelectedAnalysisToolIdentifier:(id)arg1 forPlatformIdentifier:(id)arg2;
- (id)primitiveProfileOperationForRunnableType:(id)arg1 runDestination:(id)arg2 launchParameters:(id)arg3 workspaceFilePath:(id)arg4 projectFilePath:(id)arg5 outError:(id *)arg6;
- (void)_updateProfileActionBuildableToUseForMacroExpansion;
- (void)updateBuildableForChangeInRunnable;
- (void)setRunContext:(id)arg1;
- (BOOL)doesNonActionWork;
- (id)subtitle;
- (id)name;
- (void)primitiveInvalidate;
- (void)_commonInit;
- (id)initFromXMLUnarchiver:(id)arg1 archiveVersion:(float)arg2;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IDEUITestingPermissionManager : NSObject
{
    int _availabilityToken;
    int _tccAllowedToken;
}

+ (id)sharedManager;
@property int tccAllowedToken; // @synthesize tccAllowedToken=_tccAllowedToken;
@property int availabilityToken; // @synthesize availabilityToken=_availabilityToken;
- (BOOL)setXcodeUITestingAgentAsResponsibleProcessForPID:(int)arg1 errorString:(id *)arg2;
- (id)_newInstanceOfXcodeHelper:(id *)arg1;
@property(readonly, copy) NSRunningApplication *runningApplicationForXcodeHelper;
- (id)_URLForXcodeHelper;
- (void)checkUITestingPermissionForXcodeUITestingAgentWithPrompt:(BOOL)arg1 reply:(CDUnknownBlockType)arg2;
- (BOOL)shouldUseTCC;
- (BOOL)_checkPermissionsWithPrompt:(BOOL)arg1 error:(id *)arg2;
- (BOOL)_waitForXcodeHelperToBeAvailable:(id *)arg1;
- (BOOL)_needToLaunchXcodeHelper;
- (id)init;

@end

@interface IDEBatchFindScopeDataTypePredicate : IDEBatchFindScopeAbstractOperatorOperandPredicate
{
}

+ (id)propertyListIdentifier;
+ (id)operatorToString:(long long)arg1;
+ (long long)operatorFromString:(id)arg1;
- (CDUnknownBlockType)matcherBoundToWorkspace:(id)arg1;
@property(readonly) NSString *fileDataTypeIdentifier;
@property(readonly) long long dataTypeOperator;
- (id)initWithOperator:(long long)arg1 operand:(id)arg2;

@end

@interface IDEDistributionPackagingStep : IDEDistributionStep
{
}

+ (id)propertyListForContext:(id)arg1;
+ (id)availableOptionsForPropertyList;
- (id)itemToProcessingResultsMapFromPipeline:(id)arg1;
- (id)pipeline;
- (id)providedOutputContextPropertyNames;
- (id)requiredInputContextPropertyNames;
- (BOOL)loadFromPropertyList:(id)arg1 error:(id *)arg2;

@end

@interface IDESourceKitResponseMainFilesForFile : IDESourceKitVariantDictionaryWrapper
{
}

@property(readonly) NSDictionary *result;

@end

@interface IDESourceKitResponseAnyBuildSettingsForFile : IDESourceKitVariantDictionaryWrapper
{
}

@property(readonly) NSDictionary *result;

@end

@interface IDESourceKitResponseIsQuiescent : IDESourceKitVariantDictionaryWrapper
{
}

@property(readonly) BOOL result;

@end

@interface IDESourceKitResponseJumpToImportedFile : IDESourceKitVariantDictionaryWrapper
{
}

@property(readonly) DVTFilePath *filePath;

@end

@interface IDESourceKitResponseCallersForSymbol : IDESourceKitVariantDictionaryWrapper
{
}

@property(readonly) IDESourceKitResponseArray *results;

@end

@interface IDESourceKitResponseSymbolQualifiedDisplayName : IDESourceKitVariantDictionaryWrapper
{
}

@property(readonly) NSString *name;

@end

@interface IDESourceKitResponseCountOfSymbolsMatchingKind : IDESourceKitVariantDictionaryWrapper
{
}

@property(readonly) long long result;

@end

@interface IDESourceKitResponseAllSymbolNames : IDESourceKitVariantDictionaryWrapper
{
}

@property(readonly) IDESourceKitResponseStringArray *results;

@end

@interface IDESourceKitResponseUnitTestMethodsStructure : IDESourceKitVariantDictionaryWrapper
{
}

@property(readonly) IDESourceKitResponseArray *results;

@end

@interface IDESourceKitResponseCodeComplete : IDESourceKitVariantDictionaryWrapper
{
}

@property(readonly) IDESourceKitResponseArray *results;

@end

@interface IDESourceKitResponseCodeDiagnosticsAtDocument : IDESourceKitVariantDictionaryWrapper
{
}

@property(readonly) IDESourceKitResponseArray *diagnostics;

@end

@interface IDESourceKitResponseParsedCodeCommentAtDocument : IDESourceKitVariantDictionaryWrapper
{
}

@property(readonly) NSString *result;

@end

@interface IDESourceKitResponseGeniusCallersCalleesAtDocument : IDESourceKitVariantDictionaryWrapper
{
}

@property(readonly) IDESourceKitResponseSymbolCollection *callees;
@property(readonly) IDESourceKitResponseArray *testCallers;
@property(readonly) IDESourceKitResponseArray *callers;

@end

@interface IDESourceKitResponseFindRenameRangesAtLocation : IDESourceKitVariantDictionaryWrapper
{
}

@property(readonly) long long refactoringActionToken;

@end

@interface IDESourceKitResponseRenameAtLocation : IDESourceKitVariantDictionaryWrapper
{
}

@property(readonly) long long refactoringActionToken;

@end

@interface IDESourceKitResponseLocalRefactoring : IDESourceKitVariantDictionaryWrapper
{
}

@property(readonly) long long refactoringActionToken;

@end

@interface IDESourceKitResponseAvailableRefactorings : IDESourceKitVariantDictionaryWrapper
{
}

@property(readonly) IDESourceKitResponseArray *results;

@end

@interface IDESourceKitResponseTestFilesContainingWord : IDESourceKitVariantDictionaryWrapper
{
}

@property(readonly) IDESourceKitResponseStringArray *fileURLs;
@property(readonly) BOOL isSupported;

@end

@interface IDESourceKitNotificationOnWillIndexWorkspace : IDESourceKitVariantDictionaryWrapper
{
}

@property(readonly) BOOL onWillIndexWorkspaceDeferredReindexing;

@end

@interface IDESourceKitNotificationOnIsIndexingWorkspace : IDESourceKitVariantDictionaryWrapper
{
}

@property(readonly) NSDictionary *onIsIndexingWorkspaceUserInfo;

@end

@interface IDESourceKitNotificationOnIndexIsPopulatingDatabase : IDESourceKitVariantDictionaryWrapper
{
}

@property(readonly) NSDictionary *notificationUserInfo;

@end

@interface IDESourceKitNotificationOnIndexIsFastScanning : IDESourceKitVariantDictionaryWrapper
{
}

@property(readonly) NSDictionary *notificationUserInfo;

@end

@interface IDESourceKitCallbackOnWriteHeaderMap : IDESourceKitVariantDictionaryWrapper
{
}

@property(readonly) NSDictionary *indexableRootPaths;

@end

@interface IDESourceKitCallbackOnGatherProductHeaders : IDESourceKitVariantDictionaryWrapper
{
}

@property(readonly) NSString *indexableIdentifier;

@end

@interface IDESourceKitCallbackOnSettingsForIndexable : IDESourceKitVariantDictionaryWrapper
{
}

@property(readonly) NSString *indexableIdentifier;

@end

@interface IDESourceKitCallbackFilesContainingWord : IDESourceKitVariantDictionaryWrapper
{
}

@property(readonly) NSString *searchString;
@property(readonly) long long findFilesToken;

@end

@interface IDESourceKitWorkspaceNotification : IDESourceKitVariantDictionaryWrapper
{
}

- (void)invokeOnDelegate:(id)arg1;
@property(readonly) long long indexerToken;

@end

@interface IDESourceKitWorkspaceCallback : IDESourceKitVariantDictionaryWrapper
{
}

- (void)invokeOnDelegate:(id)arg1 reply:(id)arg2;
@property(readonly) long long indexerToken;

@end

@interface IDESourceKitNotificationRefactoringStateChanged : IDESourceKitVariantDictionaryWrapper
{
}

@property(readonly) struct _sourcekit_uid_s *newState;

@end

@interface IDESourceKitNotificationRefactoringProgressUpdated : IDESourceKitVariantDictionaryWrapper
{
}

@property(readonly) IDESourceKitResponseArray *diagnostics;
@property(readonly) IDESourceKitResponseArray *edits;
@property(readonly) double percentCompleted;
@property(readonly) NSString *message;

@end

@interface IDESourceKitNotificationRefactoringRenameRangesFound : IDESourceKitVariantDictionaryWrapper
{
}

@property(readonly) IDESourceKitResponseArray *diagnostics;
@property(readonly) IDESourceKitResponseArray *ranges;
@property(readonly) double percentCompleted;
@property(readonly) NSString *message;

@end

@interface IDESourceKitNotificationRefactoringUnhandledURLs : IDESourceKitVariantDictionaryWrapper
{
}

@property(readonly) IDESourceKitResponseStringArray *URLs;
@property(readonly) IDESourceKitResponseArray *symbols;

@end

@interface IDESourceKitRefactoringNotification : IDESourceKitVariantDictionaryWrapper
{
}

- (void)invokeOnDelegate:(id)arg1;
@property(readonly) long long indexerToken;
@property(readonly) long long refactoringActionToken;

@end

@interface IDESourcePackageRequirement : NSObject <NSCopying>
{
    long long _kind;
    NSObject<NSCopying> *_value;
}

+ (id)requirementWithRevision:(id)arg1;
+ (id)requirementWithBranchName:(id)arg1;
+ (id)requirementWithMinimumVersion:(id)arg1 upToMaximumVersion:(id)arg2;
+ (id)requirementWithExactVersion:(id)arg1;
+ (id)requirementWithMinimumVersionUpToNextMinorVersion:(id)arg1;
+ (id)requirementWithMinimumVersionUpToNextMajorVersion:(id)arg1;
@property(readonly) NSObject<NSCopying> *value; // @synthesize value=_value;
@property(readonly) long long kind; // @synthesize kind=_kind;
- (void).cxx_destruct;
@property(readonly) NSString *revision;
@property(readonly) NSString *branchName;
@property(readonly) DVTVersion *exactVersion;
@property(readonly) DVTVersion *maximumVersion;
@property(readonly) DVTVersion *minimumVersion;
- (BOOL)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithKind:(long long)arg1 value:(id)arg2;
- (id)init;

@end

@interface IDESourcePackageVersionRange : NSObject <NSCopying>
{
    DVTVersion *_minimumVersion;
    DVTVersion *_maximumVersion;
}

@property(readonly) DVTVersion *maximumVersion; // @synthesize maximumVersion=_maximumVersion;
@property(readonly) DVTVersion *minimumVersion; // @synthesize minimumVersion=_minimumVersion;
- (void).cxx_destruct;
- (BOOL)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithMinimumVersion:(id)arg1 maximumVersion:(id)arg2;

@end

@interface IDEPlaygroundPlatformSupport : NSObject
{
}

+ (id)_sdkForSupportedPlatformExtension:(id)arg1;
+ (id)_supportedPlatformsExtensionPoint;
+ (id)_availableSDKs;
+ (id)legacySDKIdentifierForTargetPlatformIdentifier:(id)arg1;
+ (id)targetPlatformIdentifierForLegacySDKIdentifier:(id)arg1;
+ (id)targetDeviceIdentifierForSDK:(id)arg1;
+ (id)targetPlatformIdentifierForSDK:(id)arg1;
+ (id)sdkForTargetPlatformIdentifier:(id)arg1;
+ (id)targetableSDKSortedByPlatformFamilyName;
+ (id)targetableSDKs;

@end

@interface IDEPortalToolDevice : NSObject <DVTPortalDevice>
{
    NSString *_name;
    DVTPlatform *_platform;
    NSString *_identifier;
}

@property(readonly, copy, nonatomic) NSString *identifier; // @synthesize identifier=_identifier;
@property(readonly, nonatomic) DVTPlatform *platform; // @synthesize platform=_platform;
@property(readonly, copy, nonatomic) NSString *name; // @synthesize name=_name;
- (void).cxx_destruct;
- (id)initWithIdentifier:(id)arg1 platform:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IDEPortalTool : NSObject
{
    NSString *_name;
    NSArray *_arguments;
    NSFileHandle *_standardInput;
    NSFileHandle *_standardOutput;
    NSFileHandle *_standardError;
    NSString *_inputUser;
    NSString *_inputTeamID;
    NSString *_inputUDID;
    NSString *_inputPlatformIdentifier;
    NSString *_inputBundleIdentifier;
    NSString *_inputProfileTypeIdentifier;
    NSString *_inputCertificateTypeIdentifier;
    NSString *_inputKeychainPassword;
    NSString *_inputKeychainPath;
    NSString *_inputProfilePath;
    NSArray *_inputManualStyleProfileUDIDs;
    NSString *_inputManualStyleProfileName;
    NSArray *_inputFeatureIdentifiers;
    NSArray *_inputFeatureValues;
    NSArray *_inputContainerIdentifiers;
    NSString *_inputMachineName;
    NSString *_inputMachineID;
    NSString *_inputSerialNumber;
    long long _command;
    DVTServicesSession *_session;
    DVTPortalTeam *_team;
}

+ (id)portalTool;
@property(retain, nonatomic) DVTPortalTeam *team; // @synthesize team=_team;
@property(retain, nonatomic) DVTServicesSession *session; // @synthesize session=_session;
@property(nonatomic) long long command; // @synthesize command=_command;
@property(retain, nonatomic) NSString *inputSerialNumber; // @synthesize inputSerialNumber=_inputSerialNumber;
@property(retain, nonatomic) NSString *inputMachineID; // @synthesize inputMachineID=_inputMachineID;
@property(retain, nonatomic) NSString *inputMachineName; // @synthesize inputMachineName=_inputMachineName;
@property(retain, nonatomic) NSArray *inputContainerIdentifiers; // @synthesize inputContainerIdentifiers=_inputContainerIdentifiers;
@property(retain, nonatomic) NSArray *inputFeatureValues; // @synthesize inputFeatureValues=_inputFeatureValues;
@property(retain, nonatomic) NSArray *inputFeatureIdentifiers; // @synthesize inputFeatureIdentifiers=_inputFeatureIdentifiers;
@property(retain, nonatomic) NSString *inputManualStyleProfileName; // @synthesize inputManualStyleProfileName=_inputManualStyleProfileName;
@property(retain, nonatomic) NSArray *inputManualStyleProfileUDIDs; // @synthesize inputManualStyleProfileUDIDs=_inputManualStyleProfileUDIDs;
@property(retain, nonatomic) NSString *inputProfilePath; // @synthesize inputProfilePath=_inputProfilePath;
@property(retain, nonatomic) NSString *inputKeychainPath; // @synthesize inputKeychainPath=_inputKeychainPath;
@property(retain, nonatomic) NSString *inputKeychainPassword; // @synthesize inputKeychainPassword=_inputKeychainPassword;
@property(retain, nonatomic) NSString *inputCertificateTypeIdentifier; // @synthesize inputCertificateTypeIdentifier=_inputCertificateTypeIdentifier;
@property(retain, nonatomic) NSString *inputProfileTypeIdentifier; // @synthesize inputProfileTypeIdentifier=_inputProfileTypeIdentifier;
@property(retain, nonatomic) NSString *inputBundleIdentifier; // @synthesize inputBundleIdentifier=_inputBundleIdentifier;
@property(retain, nonatomic) NSString *inputPlatformIdentifier; // @synthesize inputPlatformIdentifier=_inputPlatformIdentifier;
@property(retain, nonatomic) NSString *inputUDID; // @synthesize inputUDID=_inputUDID;
@property(retain, nonatomic) NSString *inputTeamID; // @synthesize inputTeamID=_inputTeamID;
@property(retain, nonatomic) NSString *inputUser; // @synthesize inputUser=_inputUser;
@property(copy, nonatomic) NSFileHandle *standardError; // @synthesize standardError=_standardError;
@property(copy, nonatomic) NSFileHandle *standardOutput; // @synthesize standardOutput=_standardOutput;
@property(copy, nonatomic) NSFileHandle *standardInput; // @synthesize standardInput=_standardInput;
@property(copy, nonatomic) NSArray *arguments; // @synthesize arguments=_arguments;
@property(copy, nonatomic) NSString *name; // @synthesize name=_name;
- (void).cxx_destruct;
- (long long)_commandFromString:(id)arg1 error:(id *)arg2;
- (BOOL)_parseArgumentsWithError:(id *)arg1;
- (id)_pathRequiredError;
- (id)_platformRequiredError;
- (BOOL)_ensureRequiredArgumentsWithError:(id *)arg1;
- (BOOL)revokeIdentityWithError:(id *)arg1;
- (BOOL)downloadIdentityWithError:(id *)arg1;
- (BOOL)downloadProfileWithError:(id *)arg1;
- (BOOL)addDeviceWithError:(id *)arg1;
- (BOOL)purgeDeveloperAccountWithError:(id *)arg1;
- (id)_containerTypesToValues:(id *)arg1;
- (id)_featuresToValues:(id *)arg1;
- (id)_portalDevicesForManualStyleProfile:(id *)arg1;
- (id)_certificateTypeWithError:(id *)arg1;
- (id)_programWithError:(id *)arg1;
- (id)_platformWithError:(id *)arg1;
- (id)_profileTypeWithError:(id *)arg1;
- (id)_sessionWithError:(id *)arg1;
- (id)_teamWithError:(id *)arg1;
- (id)_developerAccountWithError:(id *)arg1;
- (void)_setupUserDefaults;
- (BOOL)runWithError:(id *)arg1;

@end

@interface IDELocalizationWorkWriteData : IDELocalizationWorkContext
{
}

+ (id)contextWithParent:(id)arg1 data:(id)arg2 url:(id)arg3;
@property(readonly, copy) NSURL *url;
@property(readonly, copy) NSData *data;

@end

@interface IDEBreakpointManager : NSObject <IDEBreakpointDelegate, DVTInvalidation>
{
    DVTObservingToken *_workspaceReferencedContainersToken;
    DVTObservingToken *_currentDebugSessionStateObserverToken;
    NSMapTable *_bucketsToObserverTokens;
    NSMutableArray *_userProjectBuckets;
    IDEBreakpointBucket *_watchpointBucket;
    NSMutableArray *_sharedProjectBuckets;
    NSMapTable *_userToSharedBuckets;
    NSMapTable *_sharedToUserBuckets;
    NSMutableArray *_breakpoints;
    DVTDispatchLock *_registrationLock;
    unsigned long long _registrationNumber;
    NSMutableArray *_breakpointsToBeInvalidated;
    NSMutableSet *_breakpointObservers;
    BOOL _breakpointsActivated;
    IDEBreakpointBucket *_defaultBucket;
    IDEBreakpointBucket *_userWorkspaceBucket;
    IDEBreakpointBucket *_userGlobalBucket;
    IDEBreakpointBucket *_sharedWorkspaceBucket;
    IDEWorkspace *_workspace;
}

+ (BOOL)_isBreakpointAtLocation:(id)arg1 location:(id)arg2;
+ (void)initialize;
@property(readonly) IDEWorkspace *workspace; // @synthesize workspace=_workspace;
@property(nonatomic) BOOL breakpointsActivated; // @synthesize breakpointsActivated=_breakpointsActivated;
@property(retain) IDEBreakpointBucket *sharedWorkspaceBucket; // @synthesize sharedWorkspaceBucket=_sharedWorkspaceBucket;
@property(readonly) IDEBreakpointBucket *userGlobalBucket; // @synthesize userGlobalBucket=_userGlobalBucket;
@property(retain) IDEBreakpointBucket *userWorkspaceBucket; // @synthesize userWorkspaceBucket=_userWorkspaceBucket;
@property(retain, nonatomic) IDEBreakpointBucket *defaultBucket; // @synthesize defaultBucket=_defaultBucket;
- (void).cxx_destruct;
- (void)primitiveInvalidate;
- (void)breakpointLocationsAdded:(id)arg1 removed:(id)arg2;
- (BOOL)breakpointShouldBeActivated:(id)arg1;
- (void)breakpointEnablementChanged:(id)arg1;
- (void)_notifyObserversOfActivationStateChange;
- (void)removeBreakpointObserver:(id)arg1;
- (void)addBreakpointObserver:(id)arg1;
- (void)_handleBreakpointsChanged:(id)arg1;
- (void)_addListenerToBucketsBreakpointList:(id)arg1;
- (void)_removeListenerFromBucketsBreakpointList:(id)arg1;
- (BOOL)_canSetBreakpointAtURL:(id)arg1;
- (void)setBreakpointShared:(id)arg1 shared:(BOOL)arg2;
- (id)fileBreakpointAtDocumentLocation:(id)arg1;
- (void)registerDoingWorkOnBreakpoint:(id)arg1 block:(CDUnknownBlockType)arg2;
- (void)removeWatchpoint:(id)arg1;
- (void)removeBreakpoint:(id)arg1;
- (BOOL)_managesBucket:(id)arg1;
- (void)_addBreakpoint:(id)arg1 toBucket:(id)arg2;
- (void)addWatchpoint:(id)arg1;
- (void)addBreakpoint:(id)arg1;
- (id)createWatchpoint:(id)arg1 variableName:(id)arg2;
- (id)_createAddressBreakpointFrom:(id)arg1 usingLineOfDisassembly:(id)arg2;
- (id)createAddressBreakpoint:(id)arg1;
- (id)createFileBreakpointAtDocumentLocation:(id)arg1;
- (id)createBreakpointAtDocumentLocation:(id)arg1 usingStringAtLine:(id)arg2;
- (void)_handleWorkspaceContainerRemoved:(id)arg1;
- (void)_handleWorkspaceContainerInserted:(id)arg1;
- (void)_handleWorkspaceContainersChanges:(id)arg1;
- (void)_handleCurrentDebugSessionStateChanged:(id)arg1;
- (id)initWithWorkspace:(id)arg1 error:(id *)arg2;

// Remaining properties
@property(copy) NSArray *breakpoints; // @dynamic breakpoints;
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) NSMutableArray *mutableBreakpoints; // @dynamic mutableBreakpoints;
@property(readonly) NSMutableArray *mutableSharedProjectBuckets; // @dynamic mutableSharedProjectBuckets;
@property(readonly) NSMutableArray *mutableUserProjectBuckets; // @dynamic mutableUserProjectBuckets;
@property(retain) NSArray *sharedProjectBuckets; // @dynamic sharedProjectBuckets;
@property(readonly) Class superclass;
@property(retain) NSArray *userProjectBuckets; // @dynamic userProjectBuckets;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface IDEIPAProcessorDevice : NSObject
{
    NSString *_modelIdentifier;
    NSString *_displayName;
}

@property(readonly) NSString *displayName; // @synthesize displayName=_displayName;
@property(readonly) NSString *modelIdentifier; // @synthesize modelIdentifier=_modelIdentifier;
- (void).cxx_destruct;
- (id)description;
- (long long)compare:(id)arg1;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
- (id)initWithModelIdentifier:(id)arg1 displayName:(id)arg2;

@end

@interface IDEIPAProcessorDeviceFamily : NSObject
{
    IDEIPAProcessorDevice *_idiomaticDevice;
    NSSet *_devices;
    NSString *_displayName;
    unsigned long long _sortOrder;
    struct NSDictionary *_traits;
}

@property(readonly) NSDictionary *traits; // @synthesize traits=_traits;
@property(readonly) unsigned long long sortOrder; // @synthesize sortOrder=_sortOrder;
@property(readonly) NSString *displayName; // @synthesize displayName=_displayName;
@property(readonly) NSSet *devices; // @synthesize devices=_devices;
@property(readonly) IDEIPAProcessorDevice *idiomaticDevice; // @synthesize idiomaticDevice=_idiomaticDevice;
- (void).cxx_destruct;
- (id)description;
- (long long)compare:(id)arg1;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
- (id)initWithIdiomaticDevice:(id)arg1 devices:(id)arg2 displayName:(id)arg3 sortOrder:(unsigned long long)arg4 traits:(struct NSDictionary *)arg5;

@end

@interface IDEIPAProcessor : NSObject
{
}

+ (id)sharedInstance;
- (BOOL)compileBitcodeForPayloadAppAtPath:(id)arg1 toPath:(id)arg2 logAspect:(id)arg3 error:(id *)arg4;
- (BOOL)optimizePayloadAppAtPath:(id)arg1 toPath:(id)arg2 forDeviceFamily:(id)arg3 logAspect:(id)arg4 error:(id *)arg5;
- (id)consolidateDeviceFamiliesWithEquivalentTraits:(id)arg1;
- (id)applicableDeviceFamiliesForPayloadAtPath:(id)arg1 logAspect:(id)arg2 error:(id *)arg3;
- (BOOL)enumerateSupportedDeviceSetInfosForPayloadAppAtPath:(id)arg1 logAspect:(id)arg2 error:(id *)arg3 usingBlock:(CDUnknownBlockType)arg4;
- (id)runIPAToolWithInputPath:(id)arg1 outputPath:(id)arg2 arguments:(id)arg3 logAspect:(id)arg4 outError:(id *)arg5;
- (id)binSearchPathForIPATool;

@end

@interface IDEHealthKitItemModel : IDEProjectItemModel
{
    id <IDEFlightChecking> _linkedFrameworksFlightCheck;
    id <IDEFlightChecking> _entitlementsFlightCheck;
    id <IDEFlightChecking> _portalFlightCheck;
    id <IDEFlightChecking> _infoPlistFlightCheck;
}

- (void).cxx_destruct;
- (BOOL)isEnabledUsingEducatedGuess;
- (id)flightChecks;
- (id)infoPlistFlightCheck;
- (id)linkedFrameworksFlightCheck;
- (id)entitlementsFlightCheck;

@end

@interface IDERefactoringKeyValueAccessorMethodDescriptor : NSObject
{
    NSString *_methodName;
    int _keyStyle;
    unsigned long long _indexOfKey;
}

@property(readonly) unsigned long long indexOfKey; // @synthesize indexOfKey=_indexOfKey;
@property(readonly) int keyStyle; // @synthesize keyStyle=_keyStyle;
@property(readonly) NSString *methodName; // @synthesize methodName=_methodName;
- (void).cxx_destruct;
- (id)description;
- (id)initWithMethodName:(const char *)arg1 keyStyle:(int)arg2 indexOfKey:(unsigned long long)arg3;

@end

@interface IDESourceKitRequestObjectWrapper : NSObject
{
    struct _sourcekit_object_s *_obj;
}

- (id)description;
- (struct _sourcekit_object_s *)sourceKitObject;
- (void)dealloc;
- (id)init;
- (id)initWithSourceKitObject:(struct _sourcekit_object_s *)arg1;

@end

@interface IDESourceKitRequestDictionary : IDESourceKitRequestObjectWrapper
{
}

+ (id)createFromYAML:(id)arg1 connection:(id)arg2 error:(id *)arg3;
- (void)setData:(id)arg1 forKey:(struct _sourcekit_uid_s *)arg2;
- (void)setArray:(id)arg1 forKey:(struct _sourcekit_uid_s *)arg2;
- (void)setDictionary:(id)arg1 forKey:(struct _sourcekit_uid_s *)arg2;
- (void)setUID:(struct _sourcekit_uid_s *)arg1 forKey:(struct _sourcekit_uid_s *)arg2;
- (void)setDouble:(double)arg1 forKey:(struct _sourcekit_uid_s *)arg2;
- (void)setBool:(BOOL)arg1 forKey:(struct _sourcekit_uid_s *)arg2;
- (void)setInt:(long long)arg1 forKey:(struct _sourcekit_uid_s *)arg2;
- (void)setString:(id)arg1 forKey:(struct _sourcekit_uid_s *)arg2;
- (id)init;
- (void)setFilePath:(id)arg1 forKey:(struct _sourcekit_uid_s *)arg2;
- (void)setNSDictionary:(id)arg1 forKey:(struct _sourcekit_uid_s *)arg2;

@end

@interface IDESourceKitRequestArray : IDESourceKitRequestObjectWrapper
{
}

- (void)appendArray:(id)arg1;
- (void)appendDictionary:(id)arg1;
- (void)appendUID:(struct _sourcekit_uid_s *)arg1;
- (void)appendInt:(long long)arg1;
- (void)appendString:(id)arg1;
- (id)init;

@end

@interface IDESourceKitRequestArrayType : NSObject
{
    IDESourceKitRequestArray *_arr;
}

- (void).cxx_destruct;
- (id)description;
- (void)append:(id)arg1;
- (id)internalArray;
- (id)init;

@end

@interface IDESourceKitRequestStringArray : NSObject
{
    IDESourceKitRequestArray *_arr;
}

- (void).cxx_destruct;
- (id)description;
- (void)append:(id)arg1;
- (id)internalArray;
- (id)init;

@end

@interface IDESourceKitRequestFilePathArray : NSObject
{
    IDESourceKitRequestArray *_arr;
}

+ (id)filePathArrayFromEnumeration:(id)arg1;
- (void).cxx_destruct;
- (id)description;
- (void)append:(id)arg1;
- (id)internalArray;
- (id)init;

@end

@interface IDESourceKitCallbackReplyDictionary : IDESourceKitRequestDictionary
{
    IDESourceKitLowLevelConnection *_conn;
}

- (void).cxx_destruct;
- (void)dealloc;
- (id)init;
- (id)initWithConnection:(id)arg1 sourceKitObject:(struct _sourcekit_object_s *)arg2;

@end

@interface IDEAppleScriptBreakpointAction : IDEBreakpointAction
{
    NSString *_script;
}

+ (id)propertiesAffectingPersistenceState;
@property(copy, nonatomic) NSString *script; // @synthesize script=_script;
- (void).cxx_destruct;
- (void)dvt_encodeAttributesWithXMLArchiver:(id)arg1 version:(id)arg2;
- (void)setScriptFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (id)initFromXMLUnarchiver:(id)arg1 archiveVersion:(float)arg2;
- (void)performActionUsingContext:(id)arg1 andBreakpoint:(id)arg2;
- (void)_appleScriptActionCommonInit;
- (id)init;

@end

@interface IDESchemeActionsInvocationRecord : NSObject
{
    NSMutableArray *_actions;
    NSMutableArray *_warningSummaries;
    NSMutableArray *_errorSummaries;
    NSMutableArray *_analyzerWarningSummaries;
    NSMutableArray *_testFailureSummaries;
    NSMutableArray *_testableSummaries;
    NSMapTable *_strongActionRecordsToStatusObservers;
    IDESchemeActionCodeCoverage *_coverageReport;
    BOOL _running;
    BOOL _archiveFetchable;
    BOOL _productFetchable;
    BOOL _shouldClearExistingFileOnSave;
    BOOL _remoteTestSummaryNeedsFetch;
    BOOL _remoteCodeCoverageNeedsFetch;
    DVTFilePath *_archivePath;
    NSString *_archiveName;
    unsigned long long _archiveSize;
    DVTFilePath *_productPath;
    NSString *_productName;
    unsigned long long _productSize;
    unsigned long long _warningCount;
    unsigned long long _errorCount;
    unsigned long long _analyzerWarningCount;
    unsigned long long _testsCount;
    unsigned long long _testsFailedCount;
    DVTFilePath *_creatingWorkspaceFilePath;
    id _remoteTestSummaryIdentifier;
    id _remoteCodeCoverageIdentifier;
    NSMutableArray *_performanceSignpostEvents;
    id _performanceSignpostNotificationToken;
    NSString *_archiveGUID;
    NSString *_productGUID;
    DVTFilePath *_filePath;
    id <IDESchemeActionsInvocationRecordUpdateDelegate> _updateDelegate;
}

+ (id)keyPathsForValuesAffectingSimpleOperationStatus;
+ (id)keyPathsForValuesAffectingStatus;
+ (BOOL)updateSummariesFromDictionaryRepresentations:(id)arg1 withSummaryOwner:(id)arg2 summaryPropertyName:(id)arg3 summaryiVarArrayRef:(id *)arg4 summariesAreTestFailures:(BOOL)arg5;
+ (BOOL)automaticallyNotifiesObserversOfActions;
+ (void)invocationRecordWithLocalActionResultFilePath:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
@property(readonly, nonatomic) id <IDESchemeActionsInvocationRecordUpdateDelegate> updateDelegate; // @synthesize updateDelegate=_updateDelegate;
@property(retain, nonatomic) DVTFilePath *filePath; // @synthesize filePath=_filePath;
@property(retain, nonatomic) NSString *productGUID; // @synthesize productGUID=_productGUID;
@property(retain, nonatomic) NSString *archiveGUID; // @synthesize archiveGUID=_archiveGUID;
@property(retain) id performanceSignpostNotificationToken; // @synthesize performanceSignpostNotificationToken=_performanceSignpostNotificationToken;
@property(retain) NSMutableArray *performanceSignpostEvents; // @synthesize performanceSignpostEvents=_performanceSignpostEvents;
@property(nonatomic) BOOL remoteCodeCoverageNeedsFetch; // @synthesize remoteCodeCoverageNeedsFetch=_remoteCodeCoverageNeedsFetch;
@property(copy, nonatomic) id remoteCodeCoverageIdentifier; // @synthesize remoteCodeCoverageIdentifier=_remoteCodeCoverageIdentifier;
@property(nonatomic) BOOL remoteTestSummaryNeedsFetch; // @synthesize remoteTestSummaryNeedsFetch=_remoteTestSummaryNeedsFetch;
@property(copy, nonatomic) id remoteTestSummaryIdentifier; // @synthesize remoteTestSummaryIdentifier=_remoteTestSummaryIdentifier;
@property(nonatomic) BOOL shouldClearExistingFileOnSave; // @synthesize shouldClearExistingFileOnSave=_shouldClearExistingFileOnSave;
@property(retain, nonatomic) DVTFilePath *creatingWorkspaceFilePath; // @synthesize creatingWorkspaceFilePath=_creatingWorkspaceFilePath;
@property(retain, nonatomic) NSArray *testableSummaries; // @synthesize testableSummaries=_testableSummaries;
@property(retain, nonatomic) NSMutableArray *testFailureSummaries; // @synthesize testFailureSummaries=_testFailureSummaries;
@property(retain, nonatomic) NSMutableArray *analyzerWarningSummaries; // @synthesize analyzerWarningSummaries=_analyzerWarningSummaries;
@property(retain, nonatomic) NSMutableArray *errorSummaries; // @synthesize errorSummaries=_errorSummaries;
@property(retain, nonatomic) NSMutableArray *warningSummaries; // @synthesize warningSummaries=_warningSummaries;
@property(nonatomic) unsigned long long testsFailedCount; // @synthesize testsFailedCount=_testsFailedCount;
@property(nonatomic) unsigned long long testsCount; // @synthesize testsCount=_testsCount;
@property(nonatomic) unsigned long long analyzerWarningCount; // @synthesize analyzerWarningCount=_analyzerWarningCount;
@property(nonatomic) unsigned long long errorCount; // @synthesize errorCount=_errorCount;
@property(nonatomic) unsigned long long warningCount; // @synthesize warningCount=_warningCount;
@property(nonatomic) unsigned long long productSize; // @synthesize productSize=_productSize;
@property(retain, nonatomic) NSString *productName; // @synthesize productName=_productName;
@property(retain, nonatomic) DVTFilePath *productPath; // @synthesize productPath=_productPath;
@property(nonatomic, getter=isProductFetchable) BOOL productFetchable; // @synthesize productFetchable=_productFetchable;
@property(nonatomic, getter=isArchiveFetchable) BOOL archiveFetchable; // @synthesize archiveFetchable=_archiveFetchable;
@property(nonatomic) unsigned long long archiveSize; // @synthesize archiveSize=_archiveSize;
@property(retain, nonatomic) NSString *archiveName; // @synthesize archiveName=_archiveName;
@property(retain, nonatomic) DVTFilePath *archivePath; // @synthesize archivePath=_archivePath;
@property(retain, nonatomic) NSMutableArray *actions; // @synthesize actions=_actions;
@property(nonatomic, getter=isRunning) BOOL running; // @synthesize running=_running;
- (void).cxx_destruct;
- (void)fetchCodeCoverageAndUpdateRecordWithCompletionBlock:(CDUnknownBlockType)arg1;
- (void)fetchTestSummariesAndUpdateRecordWithCompletionBlock:(CDUnknownBlockType)arg1;
- (void)fetchLogsAndUpdateRecordWithCompletionBlock:(CDUnknownBlockType)arg1;
- (void)updateRecordWithCompletionBlock:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) long long simpleOperationStatus;
@property(readonly, nonatomic) long long status;
@property(readonly, nonatomic) IDESchemeActionCodeCoverage *aggregateCoverageReport;
- (BOOL)updateLocalTestSummaryWithRemoteTestSummary:(id)arg1 error:(id *)arg2;
- (BOOL)saveTestSummariesWithError:(id *)arg1;
- (id)testSummaryFormatVersionString;
- (id)localTestSummaryFilePath;
- (void)_updateTestableSummaries;
- (void)_updateSummaries;
- (void)tearDownObserversForSchemeActionRecord:(id)arg1;
- (void)setUpObserversForSchemeActionRecord:(id)arg1;
- (void)updateAllSchemeActionRecordDirectoryFilePaths;
- (id)filePathForSchemeActionRecordDirectoryWithSchemeCommand:(id)arg1 atIndex:(unsigned long long)arg2;
- (id)makeActionRecordWithSchemeCommand:(id)arg1 schemeTask:(long long)arg2 runDestination:(id)arg3;
- (id)description;
- (void)close;
- (BOOL)updateWithDictionaryRepresentation:(id)arg1;
- (id)dictionaryRepresentation;
- (void)updateWithArchiveData:(id)arg1 withCompletionBlock:(CDUnknownBlockType)arg2;
- (void)updateWithProductData:(id)arg1 withCompletionBlock:(CDUnknownBlockType)arg2;
- (void)saveWithCompletionBlock:(CDUnknownBlockType)arg1;
- (void)_stopCollectingPerformanceSignposts;
- (void)_startCollectingPerformanceSignposts;
- (void)dealloc;
- (id)initWithFilePath:(id)arg1 updateDelegate:(id)arg2 error:(id *)arg3;
- (id)initLocalRecordWithWorkspace:(id)arg1;
- (id)init;
- (id)_init;

@end

@interface IDETemplateTester : NSObject
{
    BOOL _crossPlatformOnly;
    BOOL _permuteTestOptions;
    NSString *_outputPath;
    DVTPlatform *_platform;
    NSMutableDictionary *_usedTemplateNamesByPlatform;
    unsigned long long _testProjectCounter;
    IDEProvisioningTeamManager *_teamManager;
    DVTFuture *_teamsLoadingFuture;
    DVTPromise *_teamsLoadingPromise;
    id <IDEProvisioningBasicTeam> _team;
}

+ (id)platformForString:(id)arg1;
@property(retain) id <IDEProvisioningBasicTeam> team; // @synthesize team=_team;
@property(retain) DVTPromise *teamsLoadingPromise; // @synthesize teamsLoadingPromise=_teamsLoadingPromise;
@property(retain) DVTFuture *teamsLoadingFuture; // @synthesize teamsLoadingFuture=_teamsLoadingFuture;
@property(retain) IDEProvisioningTeamManager *teamManager; // @synthesize teamManager=_teamManager;
@property unsigned long long testProjectCounter; // @synthesize testProjectCounter=_testProjectCounter;
@property(retain) NSMutableDictionary *usedTemplateNamesByPlatform; // @synthesize usedTemplateNamesByPlatform=_usedTemplateNamesByPlatform;
@property BOOL permuteTestOptions; // @synthesize permuteTestOptions=_permuteTestOptions;
@property BOOL crossPlatformOnly; // @synthesize crossPlatformOnly=_crossPlatformOnly;
@property(retain) DVTPlatform *platform; // @synthesize platform=_platform;
@property(copy) NSString *outputPath; // @synthesize outputPath=_outputPath;
- (void).cxx_destruct;
- (id)_templateNamed:(id)arg1 forPlatform:(id)arg2;
- (void)runTemplateTests;
- (void)runCreateNewProjectWithTemplateNamed:(id)arg1 platform:(id)arg2 options:(id)arg3;
- (void)doProjectTemplate:(id)arg1;
- (id)platformFolderName;
- (id)platformFolderNameForPlatform:(id)arg1;
- (void)permuteOptions:(id)arg1 inProjectTemplate:(id)arg2 withPlatformName:(id)arg3 withFolderName:(id)arg4;
- (void)createSingleProjectFromTemplate:(id)arg1 withOptionValues:(id)arg2 atPath:(id)arg3;
- (id)uniqueTemplateNameForName:(id)arg1 platformName:(id)arg2;
- (id)init;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (id)initWithOutputPath:(id)arg1 teamID:(id)arg2;

@end

@interface IDEBatchFindAbstractWorkspacePerFileQuery : IDEBatchFindAbstractQuery
{
}

+ (BOOL)supportsQueryAction:(long long)arg1;
- (void)execute;
- (BOOL)trimsIndexAfterCompletion;
- (id)uniqueFilePaths:(id)arg1 andApplyingPredicate:(CDUnknownBlockType)arg2;
- (void)continueProcessingFilePaths:(id)arg1 fromIndex:(long long)arg2 withFragmentIndex:(id)arg3 stride:(long long)arg4 strideOffset:(long long)arg5 progressNotifier:(id)arg6 completionHandler:(CDUnknownBlockType)arg7;
- (void)checkCancelStatusAndConitionallyProcessFilePath:(id)arg1 withIndex:(id)arg2 progressNotifier:(id)arg3 resultOrder:(long long)arg4 completionHandler:(CDUnknownBlockType)arg5;
- (void)processFilePath:(id)arg1 withIndex:(id)arg2 progressNotifier:(id)arg3 resultOrder:(long long)arg4 completionHandler:(CDUnknownBlockType)arg5;
- (id)resultForRange:(struct _NSRange)arg1 ofFragment:(id)arg2 parent:(id)arg3;
- (id)makeRootResult;

@end

@interface IDESchemeActionCodeCoverage : NSObject <NSCoding>
{
    NSNumber *_lineCoverage;
    NSNumber *_functionCoverage;
    NSMutableDictionary *_cachedSourceFiles;
    NSArray *_codeCoverageTargets;
    NSString *_fullDescription;
    NSString *_filePath;
}

+ (id)coverageReportForPath:(id)arg1 error:(id *)arg2;
@property(copy) NSString *filePath; // @synthesize filePath=_filePath;
@property(retain, nonatomic) NSString *fullDescription; // @synthesize fullDescription=_fullDescription;
@property(retain, nonatomic) NSArray *codeCoverageTargets; // @synthesize codeCoverageTargets=_codeCoverageTargets;
- (void).cxx_destruct;
@property(readonly, nonatomic) NSNumber *functionCoverage;
@property(readonly, nonatomic) NSNumber *lineCoverage;
- (id)functions;
- (id)lines;
- (id)wrappedContainer;
- (id)aggregateWithCoverageReport:(id)arg1;
- (BOOL)writeToPath:(id)arg1 error:(id *)arg2;
- (id)sourceFileCoverageDataForDocumentWithURL:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithCodeCoverageTargets:(id)arg1;
- (id)init;

@end

@interface IDESchemeActionCodeCoverageTarget : DVTCoverageDataContainer
{
    NSNumber *_lineCoverage;
    NSNumber *_functionCoverage;
    NSString *_buildableIdentifier;
    NSArray *_sourceFiles;
    NSString *_productPath;
    NSString *_fullDescription;
}

@property(retain, nonatomic) NSString *fullDescription; // @synthesize fullDescription=_fullDescription;
@property(retain, nonatomic) NSString *productPath; // @synthesize productPath=_productPath;
@property(readonly, nonatomic) NSArray *sourceFiles; // @synthesize sourceFiles=_sourceFiles;
@property(retain, nonatomic) NSString *buildableIdentifier; // @synthesize buildableIdentifier=_buildableIdentifier;
- (void).cxx_destruct;
- (id)description;
@property(readonly, nonatomic) NSNumber *functionCoverage;
- (id)lineCoverage;
- (id)functions;
- (id)lines;
- (id)aggregateWithCodeCoverageTarget:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithBuildableIdentifier:(id)arg1 name:(id)arg2 productPath:(id)arg3 sourceFiles:(id)arg4;

@end

@interface IDESchemeActionCodeCoverageFunction : DVTCoverageDataContainer
{
    int _executionCount;
    int _lineNumber;
    DVTSourceCodeSymbolKind *_symbolKind;
    IDESchemeActionCodeCoverageFile *_sourceFile;
}

@property(nonatomic) __weak IDESchemeActionCodeCoverageFile *sourceFile; // @synthesize sourceFile=_sourceFile;
@property(readonly, nonatomic) DVTSourceCodeSymbolKind *symbolKind; // @synthesize symbolKind=_symbolKind;
@property(readonly, nonatomic) int lineNumber; // @synthesize lineNumber=_lineNumber;
@property(readonly, nonatomic) int executionCount; // @synthesize executionCount=_executionCount;
- (void).cxx_destruct;
- (id)description;
- (id)wrappedContainer;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithName:(id)arg1 symbolKind:(id)arg2 lineNumber:(int)arg3 executionCount:(int)arg4 lineCoverage:(id)arg5;

@end

@interface IDESchemeActionCodeCoverageFile : DVTCoverageDataContainer
{
    NSString *_documentLocation;
    NSArray *_functions;
    NSArray *_lines;
    NSNumber *_functionCoverage;
}

@property(readonly, nonatomic) NSNumber *functionCoverage; // @synthesize functionCoverage=_functionCoverage;
@property(readonly, nonatomic) NSArray *lines; // @synthesize lines=_lines;
@property(readonly, nonatomic) NSArray *functions; // @synthesize functions=_functions;
@property(readonly, nonatomic) NSString *documentLocation; // @synthesize documentLocation=_documentLocation;
- (void).cxx_destruct;
- (id)wrappedContainer;
- (id)aggregateWithCodeCoverageFile:(id)arg1;
- (id)mergeLines:(id)arg1;
- (id)description;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithDocumentLocation:(id)arg1 lines:(id)arg2 functions:(id)arg3 lineCoverage:(id)arg4 functionCoverage:(id)arg5;

@end

@interface IDEProjectItemModelFlightCheck : NSObject <IDEFlightChecking, DVTInvalidation>
{
    NSObject<OS_dispatch_queue> *_activityQueue;
    BOOL _requiresAccountAndTeamSelection;
    BOOL _longRunning;
    BOOL _failed;
    int _status;
    CDUnknownBlockType _backgroundResolutionBlock;
    CDUnknownBlockType _backgroundUnresolutionBlock;
    CDUnknownBlockType _backgroundValidityCheckBlock;
    NSString *_title;
    NSString *_resolvingTitle;
    NSString *_pastTitle;
    NSError *_resolutionError;
}

+ (void)initialize;
@property(nonatomic) BOOL failed; // @synthesize failed=_failed;
@property(retain, nonatomic) NSError *resolutionError; // @synthesize resolutionError=_resolutionError;
@property(nonatomic) int status; // @synthesize status=_status;
@property(readonly, copy, nonatomic) NSString *pastTitle; // @synthesize pastTitle=_pastTitle;
@property(readonly, copy, nonatomic) NSString *resolvingTitle; // @synthesize resolvingTitle=_resolvingTitle;
@property(readonly, copy, nonatomic) NSString *title; // @synthesize title=_title;
@property(readonly, copy, nonatomic) CDUnknownBlockType backgroundValidityCheckBlock; // @synthesize backgroundValidityCheckBlock=_backgroundValidityCheckBlock;
@property(readonly, copy, nonatomic) CDUnknownBlockType backgroundUnresolutionBlock; // @synthesize backgroundUnresolutionBlock=_backgroundUnresolutionBlock;
@property(readonly, copy, nonatomic) CDUnknownBlockType backgroundResolutionBlock; // @synthesize backgroundResolutionBlock=_backgroundResolutionBlock;
@property(readonly, nonatomic, getter=isLongRunning) BOOL longRunning; // @synthesize longRunning=_longRunning;
@property(readonly, nonatomic) BOOL requiresAccountAndTeamSelection; // @synthesize requiresAccountAndTeamSelection=_requiresAccountAndTeamSelection;
- (void).cxx_destruct;
@property(readonly, nonatomic, getter=isAutomaticallyResolvable) BOOL automaticallyResolvable;
- (void)revert;
- (void)unresolveWithContext:(id)arg1;
- (void)resolveWithContext:(id)arg1;
- (void)validate;
- (void)primitiveInvalidate;
- (id)initForFrameworksWithBackgroundResolutionBlock:(CDUnknownBlockType)arg1 backgroundUnresolutionBlock:(CDUnknownBlockType)arg2 backgroundValidityCheckBlock:(CDUnknownBlockType)arg3 framework:(id)arg4;
- (id)initForBuildSettingsWithBackgroundResolutionBlock:(CDUnknownBlockType)arg1 backgroundUnresolutionBlock:(CDUnknownBlockType)arg2 backgroundValidityCheckBlock:(CDUnknownBlockType)arg3 buildSetting:(id)arg4;
- (id)initForInfoPlistWithBackgroundResolutionBlock:(CDUnknownBlockType)arg1 backgroundUnresolutionBlock:(CDUnknownBlockType)arg2 backgroundValidityCheckBlock:(CDUnknownBlockType)arg3 plistKey:(id)arg4;
- (id)initForEntitlementsWithBackgroundResolutionBlock:(CDUnknownBlockType)arg1 backgroundUnresolutionBlock:(CDUnknownBlockType)arg2 backgroundValidityCheckBlock:(CDUnknownBlockType)arg3 entitlement:(id)arg4;
- (id)initWithBackgroundResolutionBlock:(CDUnknownBlockType)arg1 backgroundUnresolutionBlock:(CDUnknownBlockType)arg2 backgroundValidityCheckBlock:(CDUnknownBlockType)arg3 title:(id)arg4 resolvingTitle:(id)arg5 pastTitle:(id)arg6;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface IDEGroup : IDEContainerItem <IDEStructureEditing>
{
    NSString *_name;
    IDEContainer *_container;
    DVTFilePath *_resolvedFilePath;
    DVTCopyOnWriteMutableArray *_subitems;
    BOOL _subitemsAreValid;
    BOOL _pendingAsynchronousUpdate;
    int _sourceControlLocalStatus;
    int _sourceControlServerStatus;
    unsigned long long _conflictStateForUpdateOrMerge;
}

+ (Class)_groupClassForGroup:(id)arg1;
+ (Class)_fileReferenceClassForFileReference:(id)arg1;
+ (Class)_groupClassForSubitems;
+ (Class)_fileReferenceClassForSubitems;
+ (id)_groupForFolderURL:(id)arg1 targetGroup:(id)arg2;
+ (id)_fileReferenceWithFileURL:(id)arg1 targetGroup:(id)arg2;
+ (BOOL)_shouldCreateContainerItemForFileURL:(id)arg1 isFolder:(char *)arg2;
+ (BOOL)automaticallyNotifiesObserversOfConflictStateForUpdateOrMerge;
+ (BOOL)automaticallyNotifiesObserversOfSourceControlServerStatus;
+ (BOOL)automaticallyNotifiesObserversOfSourceControlLocalStatus;
+ (BOOL)automaticallyNotifiesObserversOfSubitems;
+ (id)keyPathsForValuesAffectingOwnsFileSystemDirectory;
+ (unsigned long long)assertionBehaviorForKeyValueObservationsAtEndOfEvent;
+ (id)keyPathsForValuesAffectingConflictStateForUpdateOrMerge;
+ (id)keyPathsForValuesAffectingSourceControlServerStatus;
+ (id)keyPathsForValuesAffectingSourceControlLocalStatus;
@property(copy, nonatomic) NSString *name; // @synthesize name=_name;
- (void).cxx_destruct;
- (BOOL)_structureEditRemoveSubitemsShouldCloseDocumentsUnderPathWithoutSaving;
@property(readonly, getter=isLocationKnown) BOOL locationKnown;
- (BOOL)createNewSubgroupAtIndex:(unsigned long long)arg1 createDirectory:(BOOL)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (id)_availableNameBasedOn:(id)arg1;
- (id)_subgroupNamed:(id)arg1;
- (BOOL)structureEditSetName:(id)arg1 inContext:(id)arg2;
- (BOOL)canStructureEditName;
- (BOOL)structureEditRemoveSubitemsAtIndexes:(id)arg1 error:(id *)arg2;
- (BOOL)structureEditRemoveSubitemsPreflightForIndexes:(id)arg1 error:(id *)arg2;
- (BOOL)canStructureEditRemoveSubitemsAtIndexes:(id)arg1;
- (BOOL)structureEditSortSubitemsAtIndexes:(id)arg1 byNameOrByType:(BOOL)arg2;
- (BOOL)canStructureEditSortSubitemsAtIndexes:(id)arg1 byNameOrByType:(BOOL)arg2;
- (id)structureEditInsertFileURLs:(id)arg1 atIndex:(unsigned long long)arg2 createGroupsForFolders:(BOOL)arg3;
- (BOOL)canStructureEditInsertFileURLs:(id)arg1 atIndex:(unsigned long long)arg2;
- (id)structureEditInsertSubitems:(id)arg1 atIndex:(unsigned long long)arg2;
- (BOOL)canStructureEditInsertSubitems:(id)arg1 atIndex:(unsigned long long)arg2;
- (BOOL)allowUserModificationOfSubitems;
- (BOOL)_acceptsItem:(id)arg1;
- (BOOL)_isSubitemOfItem:(id)arg1;
- (BOOL)allowRemovingContainerGroup;
- (id)allowedFileTypesOfChildItems;
- (void)_takeConfigurationFromGroup:(id)arg1;
- (void)_copyAndInsertSubitems:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)primitiveInvalidate;
- (void)debugPrintInnerStructure;
- (void)_invalidateComputedSourceControlStatus;
- (void)_setConflictStateForUpdateOrMergeNeedsUpdate;
- (void)_setSourceControlServerStatusNeedsUpdate;
- (void)_setSourceControlLocalStatusNeedsUpdate;
- (void)_setConflictStateForUpdateOrMerge:(unsigned long long)arg1;
- (void)_setSourceControlServerStatus:(int)arg1;
- (void)_setSourceControlLocalStatus:(int)arg1;
- (long long)progress;
- (id)issueLog;
- (unsigned long long)aggregateSourceControlConflictStatus;
- (int)aggregateSourceControlServerStatus;
- (int)aggregateSourceControlLocalStatus;
- (unsigned long long)conflictStateForUpdateOrMerge;
- (int)sourceControlServerStatus;
- (int)sourceControlLocalStatus;
- (void)invalidateComputedSubitems;
- (id)computedSubitemsWithOldSubitems:(id)arg1;
- (void)insertObject:(id)arg1 inGroupSubitemsAtIndex:(unsigned long long)arg2;
- (void)removeObjectFromGroupSubitemsAtIndex:(unsigned long long)arg1;
- (void)insertGroupSubitems:(id)arg1 atIndexes:(id)arg2;
- (void)removeGroupSubitemsAtIndexes:(id)arg1;
- (unsigned long long)countOfGroupSubitems;
- (id)objectInGroupSubitemsAtIndex:(unsigned long long)arg1;
@property(readonly) NSMutableArray *mutableSubitems;
- (void)_setSubitems:(id)arg1;
@property(readonly) NSArray *subitems;
- (id)_subitems;
@property(readonly) BOOL subitemsAreComputed;
@property(readonly) BOOL subitemsAreEditable;
@property(readonly, nonatomic) BOOL ownsFileSystemDirectory;
- (id)resolvedFilePath;
- (void)_invalidateResolvedFilePath;
- (void)changePath:(id)arg1 resolutionStrategies:(id)arg2;
- (void)_didSetContainer;
- (void)_setContainer:(id)arg1;
- (BOOL)_willSetContainer:(id)arg1;
- (id)container;
- (id)initWithPath:(id)arg1 resolutionStrategies:(id)arg2;
- (id)initWithName:(id)arg1;
- (id)init;
- (void)dvt_encodeRelationshipsWithXMLArchiver:(id)arg1 version:(id)arg2;
- (void)dvt_encodeAttributesWithXMLArchiver:(id)arg1 version:(id)arg2;
- (void)dvt_awakeFromXMLUnarchiver:(id)arg1;
- (void)dvt_addObject:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setNameFromUTF8String:(const char *)arg1 fromXMLUnarchiver:(id)arg2;
- (id)ideFindScope_groupForGroupPath:(id)arg1;
- (id)ideFindScope_componentForGroupPath;
- (void)ideFindScope_accumulateFilePaths:(id)arg1 andVisitedContainers:(id)arg2;
- (id)ideModelObjectTypeIdentifier;
- (id)structureEditingCopyOperationTo:(id)arg1 insertionHelper:(CDUnknownBlockType)arg2 errorHandlingBlock:(CDUnknownBlockType)arg3;
- (id)structureEditingMoveOperationTo:(id)arg1 insertionHelper:(CDUnknownBlockType)arg2 errorHandlingBlock:(CDUnknownBlockType)arg3;
@property(nonatomic, readonly) BOOL handlesStructureEditing;

@end

@interface IDETestRunSession : NSObject <IDETestsActivityLogBuilderDelegate, IDETestRunnerEvents, IDETestsInTestableObserver, DVTProgressReporting, DVTInvalidation>
{
    NSMutableSet *_unitTestsObservers;
    NSMutableArray *_errors;
    unsigned long long _lastReportedMax;
    IDETestManager *_testManager;
    NSCountedSet *_runningTests;
    DVTOneShotBlock *_systemSleepToken;
    DVTOneShotBlock *_displaySleepToken;
    DVTOneShotBlock *_screenSaverSuppressionToken;
    DVTOneShotBlock *_touchBarSimulatorLifecycleToken;
    DVTOneShotBlock *_restoreSystemAfterTestingBlock;
    DVTOneShotBlock *_cleanupTestRunSessionBlock;
    DTXConnection *_keepAliveServiceHubConnection;
    BOOL _isUITestingSession;
    BOOL _targetIsMacDevice;
    BOOL _hasFinished;
    BOOL _didCancel;
    DVTFilePath *_temporaryDirectoryPath;
    IDETestRunner *_currentTestRunner;
    IDETestIdentifier *_currentTestIdentifier;
    NSArray *_testRunners;
    NSDictionary *_testRunnersByTestableName;
    unsigned long long _totalNumberOfTests;
    unsigned long long _currentTestNumber;
    unsigned long long _sessionGenerationCount;
    DVTDisallowFinishToken *_testOperationDisallowFinishToken;
    DVTDisallowFinishToken *_finishWritingLogsToken;
    IDETestsActivityLogBuilder *_activityLogBuilder;
}

+ (id)keyPathsForValuesAffectingProgress;
+ (void)initialize;
@property(retain) IDETestsActivityLogBuilder *activityLogBuilder; // @synthesize activityLogBuilder=_activityLogBuilder;
@property(retain) DVTDisallowFinishToken *finishWritingLogsToken; // @synthesize finishWritingLogsToken=_finishWritingLogsToken;
@property(retain) DVTDisallowFinishToken *testOperationDisallowFinishToken; // @synthesize testOperationDisallowFinishToken=_testOperationDisallowFinishToken;
@property(retain) DVTOneShotBlock *touchBarSimulatorLifecycleToken; // @synthesize touchBarSimulatorLifecycleToken=_touchBarSimulatorLifecycleToken;
@property(retain) DVTOneShotBlock *screenSaverSuppressionToken; // @synthesize screenSaverSuppressionToken=_screenSaverSuppressionToken;
@property(retain) DVTOneShotBlock *displaySleepToken; // @synthesize displaySleepToken=_displaySleepToken;
@property(retain) DVTOneShotBlock *systemSleepToken; // @synthesize systemSleepToken=_systemSleepToken;
@property(readonly) unsigned long long sessionGenerationCount; // @synthesize sessionGenerationCount=_sessionGenerationCount;
@property(nonatomic) unsigned long long currentTestNumber; // @synthesize currentTestNumber=_currentTestNumber;
@property(nonatomic) unsigned long long totalNumberOfTests; // @synthesize totalNumberOfTests=_totalNumberOfTests;
@property(retain) NSDictionary *testRunnersByTestableName; // @synthesize testRunnersByTestableName=_testRunnersByTestableName;
@property(retain) NSArray *testRunners; // @synthesize testRunners=_testRunners;
@property(retain) IDETestIdentifier *currentTestIdentifier; // @synthesize currentTestIdentifier=_currentTestIdentifier;
@property(retain) IDETestRunner *currentTestRunner; // @synthesize currentTestRunner=_currentTestRunner;
@property BOOL didCancel; // @synthesize didCancel=_didCancel;
@property BOOL hasFinished; // @synthesize hasFinished=_hasFinished;
@property(readonly) BOOL targetIsMacDevice; // @synthesize targetIsMacDevice=_targetIsMacDevice;
@property(readonly) BOOL isUITestingSession; // @synthesize isUITestingSession=_isUITestingSession;
@property(readonly) DVTFilePath *temporaryDirectoryPath; // @synthesize temporaryDirectoryPath=_temporaryDirectoryPath;
- (void).cxx_destruct;
- (void)allTestablesChanged;
- (void)testsChanged:(id)arg1;
- (void)testablesChanged:(id)arg1;
- (id)fileURLForTestIdentifier:(id)arg1;
- (unsigned long long)_calculateTestsReported;
- (void)_updateStatisticsForTestable:(id)arg1;
- (BOOL)testableIsPendingRun:(id)arg1;
- (BOOL)testIsPendingRun:(id)arg1;
@property(readonly) long long progress;
- (void)testRunner:(id)arg1 didFinishTestWithIdentifier:(id)arg2 withTestResult:(id)arg3 rawOutput:(id)arg4;
- (void)_removeRunningTest:(id)arg1;
- (void)testRunner:(id)arg1 didFailTestWithIdentifier:(id)arg2 withTestResultMessage:(id)arg3 rawOutput:(id)arg4;
- (void)testRunner:(id)arg1 testWithIdentifier:(id)arg2 didMeasurePerformanceMetric:(id)arg3 rawOutput:(id)arg4;
- (void)testRunner:(id)arg1 didOutput:(id)arg2;
- (void)testRunner:(id)arg1 testWithIdentifier:(id)arg2 didFinishActivity:(id)arg3;
- (void)testRunner:(id)arg1 testWithIdentifier:(id)arg2 willStartActivity:(id)arg3;
- (void)testRunner:(id)arg1 didStartTestWithIdentifier:(id)arg2 rawOutput:(id)arg3;
- (void)_addRunningTest:(id)arg1;
- (void)testSuiteDidFinish:(unsigned long long)arg1 withFailures:(unsigned long long)arg2 unexpected:(unsigned long long)arg3 testDuration:(double)arg4 totalDuration:(double)arg5 rawOutput:(id)arg6;
- (void)testSuite:(id)arg1 willFinishAt:(id)arg2 rawOutput:(id)arg3;
- (void)testSuite:(id)arg1 didStartAt:(id)arg2 rawOutput:(id)arg3;
- (void)testRunner:(id)arg1 willFinishWithError:(id)arg2 didCancel:(BOOL)arg3;
- (void)_considerFinishingWithCancellationFlag:(BOOL)arg1;
- (void)testRunner:(id)arg1 didLaunchTestSessionForScheme:(id)arg2 withDisplayName:(id)arg3 diagnosticLogPath:(id)arg4;
- (void)testRunnerDidStartRunningTests:(id)arg1;
- (void)_stopMonitoringTestables;
- (void)_startMonitoringTestables;
- (void)_stopServiceHubConnection;
- (void)_startServiceHubConnectionForTestRunners:(id)arg1;
- (void)_disableTouchBarSimulator;
- (void)_enableTouchBarSimulator;
- (void)_endSystemActivity;
- (BOOL)_beginSystemActivity:(id *)arg1;
- (id)testOperationForTestRunSpecifications:(id)arg1 executionEnvironment:(id)arg2 withBuildOperation:(id)arg3 runDestination:(id)arg4 actionRecord:(id)arg5 schemeIdentifier:(id)arg6 outSchemeActionResultOperation:(id *)arg7 launchParametersBlock:(CDUnknownBlockType)arg8 actionCallbackBlock:(CDUnknownBlockType)arg9 error:(id *)arg10;
- (BOOL)_prepareSystemForTesting:(id *)arg1;
- (void)_addObserversWithActionResult:(id)arg1 workspaceArena:(id)arg2 activityLogSection:(id)arg3;
- (id)runningTests;
- (void)_addUnitTestsObserver:(id)arg1;
@property(readonly) IDETest *currentTest;
- (void)primitiveInvalidate;
- (id)initWithTestManager:(id)arg1 sessionGenerationCount:(unsigned long long)arg2;
- (id)init;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface IDEStandardTestable : NSObject <IDETestable, DVTInvalidation>
{
    NSMutableSet *_subtests;
    NSMutableArray *_cachedArrangedSubtests;
    BOOL _isSearchingForTests;
    IDETestableDataSourceToken *_testableDataSourceToken;
    NSMutableDictionary *_testIDsByURL;
    NSMutableDictionary *_testsByID;
}

+ (id)_blueprintNameForTestingSpecifier:(id)arg1;
+ (id)_blueprintProviderRelativePathForTestingSpecifier:(id)arg1;
+ (void)initialize;
@property(readonly, copy) NSMutableDictionary *testsByID; // @synthesize testsByID=_testsByID;
@property(readonly, copy) NSMutableDictionary *testIDsByURL; // @synthesize testIDsByURL=_testIDsByURL;
@property(retain) IDETestableDataSourceToken *testableDataSourceToken; // @synthesize testableDataSourceToken=_testableDataSourceToken;
@property BOOL isSearchingForTests; // @synthesize isSearchingForTests=_isSearchingForTests;
- (void).cxx_destruct;
@property(readonly, copy) NSArray *arrangedSubtests; // @dynamic arrangedSubtests;
- (void)removeSubtest:(id)arg1;
- (void)_recursiveUnregisteringOfSubtest:(id)arg1;
- (void)_primitiveRemoveSubtest:(id)arg1;
- (void)_addSubtest:(id)arg1;
- (void)_primitiveAddSubtest:(id)arg1;
@property(readonly) BOOL canHaveSubtests;
- (BOOL)canHaveSubtestsForTestWithIdentifier:(id)arg1;
- (id)supertestForTestWithIdentifier:(id)arg1;
- (id)supertestForTestWithIdentifier:(id)arg1 createIfNeeded:(BOOL)arg2;
- (id)nameForTestWithIdentifier:(id)arg1;
- (id)testForIdentifier:(id)arg1 location:(id)arg2 createIfNeeded:(BOOL)arg3;
- (id)testForIdentifier:(id)arg1 createIfNeeded:(BOOL)arg2;
- (id)testForIdentifier:(id)arg1;
- (void)_removeTestIDFromURL:(id)arg1 testID:(id)arg2;
- (void)_updateLocationOfTest:(id)arg1 oldLocation:(id)arg2;
@property(readonly) NSSet *testFiles;
- (id)testsInFile:(id)arg1;
- (void)_updateExistingTests:(id)arg1 toMatchNewIdentifiersAndLocations:(id)arg2;
- (void)_setupTestDiscoveryWithWorkspace:(id)arg1 indexable:(id)arg2;
- (void)searchForTestsInWorkspace:(id)arg1;
- (id)targetApplicationBuildableForWorkspace:(id)arg1 withBuildParameters:(id)arg2;
- (id)parentBuildableInWorkspace:(id)arg1;
- (id)testHostBuildableInWorkspace:(id)arg1;
- (id)testRunSpecificationWithTestingSpecifier:(id)arg1 buildParameters:(id)arg2 buildables:(id)arg3 error:(id *)arg4;
@property(readonly) BOOL isUITest;
@property(readonly) id <IDEBuildable> primaryBuildable;
@property(readonly) NSString *name;
@property(readonly) id <IDETestableProvider> testableProvider;
@property(readonly, copy) NSString *description;
- (void)cancelTestDiscovery;
- (void)primitiveInvalidate;
- (id)initWithWorkspace:(id)arg1 indexable:(id)arg2;
- (id)init;
- (void)_initializeInstanceVariables;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly, copy) NSMutableSet *mutableSubtests; // @dynamic mutableSubtests;
@property(readonly, copy) NSSet *subtests; // @dynamic subtests;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface IDEiCloudEntitlementsProcessor : IDEEntitlementsProcessor
{
}

+ (id)propertyListForContext:(id)arg1;
+ (id)availableOptionsForPropertyList;
- (BOOL)runWithError:(id *)arg1;
- (BOOL)loadFromPropertyList:(id)arg1 error:(id *)arg2;
@property(copy, nonatomic) NSString *selectedEnvironment;
@property(readonly, nonatomic) NSArray *availableEnvironments;
- (BOOL)isApplicable;
- (BOOL)needsInteraction;

@end

@interface IDELaunchSessionEventSource : NSObject <DVTInvalidation>
{
    DVTObservingToken *_launchSessionStartObserverToken;
    DVTObservingToken *_launchSessionHasCrashedObserverToken;
    DVTObservingToken *_launchSessionsConsoleAdaptorsObserverToken;
    DVTObservingToken *_launchSessionAlertErrorObserverToken;
    DVTObservingToken *_launchSessionPIDObserverToken;
    id <IDELaunchSessionEventSourceEvents> _delegate;
}

+ (void)initialize;
@property(retain) id <IDELaunchSessionEventSourceEvents> delegate; // @synthesize delegate=_delegate;
@property(retain) DVTObservingToken *launchSessionPIDObserverToken; // @synthesize launchSessionPIDObserverToken=_launchSessionPIDObserverToken;
@property(retain) DVTObservingToken *launchSessionAlertErrorObserverToken; // @synthesize launchSessionAlertErrorObserverToken=_launchSessionAlertErrorObserverToken;
@property(retain) DVTObservingToken *launchSessionsConsoleAdaptorsObserverToken; // @synthesize launchSessionsConsoleAdaptorsObserverToken=_launchSessionsConsoleAdaptorsObserverToken;
@property(retain) DVTObservingToken *launchSessionHasCrashedObserverToken; // @synthesize launchSessionHasCrashedObserverToken=_launchSessionHasCrashedObserverToken;
@property(retain) DVTObservingToken *launchSessionStartObserverToken; // @synthesize launchSessionStartObserverToken=_launchSessionStartObserverToken;
- (void).cxx_destruct;
- (void)_observeRunnablePIDForLaunchSession:(id)arg1;
- (void)_observeCrashForLaunchSession:(id)arg1;
- (void)_observeLaunchSessionConsoleAdaptors:(id)arg1;
- (void)_observeStartForLaunchSession:(id)arg1;
- (void)_observeAlertsForLaunchSession:(id)arg1;
- (void)primitiveInvalidate;
- (id)initWithDelegate:(id)arg1 launchSession:(id)arg2;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface IDELocationSimulator : NSObject <DVTInvalidation>
{
    IDELaunchSession *_launchSession;
    IDESimulateLocationService *_service;
    int _state;
    IDELocationScenario *_scenario;
    DVTObservingToken *_debugSessionStateObserver;
    BOOL _playingBack;
    NSTimer *_playbackTimer;
    unsigned long long _currentPlaybackIndex;
    double _lastUpdateTime;
    NSOperationQueue *_playbackQueue;
    IDELocation *_currentSimulatedLocation;
}

+ (void)initialize;
+ (id)locationSimulatorLogAspect;
@property(retain) IDELocation *currentSimulatedLocation; // @synthesize currentSimulatedLocation=_currentSimulatedLocation;
@property(retain) IDESimulateLocationService *service; // @synthesize service=_service;
@property(retain, nonatomic) IDELocationScenario *scenario; // @synthesize scenario=_scenario;
@property(readonly) int state; // @synthesize state=_state;
@property(readonly) IDELaunchSession *launchSession; // @synthesize launchSession=_launchSession;
- (void).cxx_destruct;
- (void)_playbackTimerFired:(id)arg1;
- (void)_startOrResumePlayback;
- (void)_pausePlayback;
- (void)_stopPlayback;
- (void)_debugSessionStateChanged;
- (void)_setState:(int)arg1;
- (void)_updateScenarioSimulation;
- (int)_locationSimulatorStateForDebugSessionState:(int)arg1;
- (void)_updateLocationScenario;
- (void)_updateService;
- (id)_simulateLocationCapability;
- (void)stopSimulating;
- (void)primitiveInvalidate;
- (id)initWithLaunchSession:(id)arg1;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface _IDEDeferredInitializationInvocation : NSObject
{
    Class _initializerClass;
    int _options;
    DVTExtension *_extension;
}

- (void).cxx_destruct;
- (void)invokeWithFailureHandler:(CDUnknownBlockType)arg1;
- (id)initWithInitalizerClass:(Class)arg1 options:(int)arg2 extension:(id)arg3;

@end

@interface IDEPlaygroundResourceResolver : NSObject
{
}

+ (id)resolvedResourcePathsForContext:(id)arg1 error:(id *)arg2;

@end

@interface IDEBatchFindScopePredicate : NSObject <NSCopying>
{
}

+ (id)propertyListIdentifier;
+ (id)predicateWithPropertyListRepresentation:(id)arg1;
- (BOOL)isEqual:(id)arg1;
- (BOOL)isEqualToScopePredicate:(id)arg1;
- (BOOL)isEqualToScopePredicateWithIdenticalClass:(id)arg1;
- (unsigned long long)hash;
- (BOOL)isWorkspaceSpecific;
- (id)description;
- (id)propertyListRepresentation;
- (CDUnknownBlockType)matcherBoundToWorkspace:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface IDERunOperation : DVTOperation <IDEExecutingOperationTrackable>
{
    NSMutableArray *_trackerObserverTokens;
    DVTDisallowFinishToken *_finishToken;
    BOOL _workaroundIsCancelled;
    IDERunOperationWorker *_worker;
    NSMutableArray *_trackers;
}

+ (id)keyPathsForValuesAffectingLaunchSession;
+ (id)keyPathsForValuesAffectingIsCancelled;
@property(retain) NSMutableArray *trackers; // @synthesize trackers=_trackers;
@property(retain) IDERunOperationWorker *worker; // @synthesize worker=_worker;
@property BOOL workaroundIsCancelled; // @synthesize workaroundIsCancelled=_workaroundIsCancelled;
- (void).cxx_destruct;
- (id)notFinishedReasonWithDepth:(unsigned long long)arg1;
- (void)registerTracker:(id)arg1;
- (void)_runningTrackerFinished:(id)arg1;
- (void)runningDidFinish;
@property(readonly) IDELaunchSession *launchSession;
- (void)cancel;
- (BOOL)isCancelled;
- (void)main;
- (id)initWithWorker:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IDEIndexDBFactory : NSObject <DVTInvalidation>
{
    IDEIndexDBTransaction *_dbTransaction;
    NSString *_tableName;
    NSString *_columnNames;
    NSString *_values;
    NSString *_insertionSQL;
    struct sqlite3_stmt *_dbStatement;
    long long *_objectIdMap;
    long long _objectIdCount;
    long long _objectCount;
    NSString *_tempTableName;
    NSString *_insertionSQL2;
    struct sqlite3_stmt *_dbStatement2;
}

+ (unsigned long long)assertionBehaviorForKeyValueObservationsAtEndOfEvent;
+ (unsigned long long)assertionBehaviorAfterEndOfEventForSelector:(SEL)arg1;
+ (void)initialize;
@property(readonly, nonatomic) long long objectCount; // @synthesize objectCount=_objectCount;
@property(readonly, nonatomic) IDEIndexDBTransaction *dbTransaction; // @synthesize dbTransaction=_dbTransaction;
- (void).cxx_destruct;
- (void)dealloc;
- (void)primitiveInvalidate;
- (void)close;
- (long long)realObjectIdForId:(long long)arg1;
- (void)addObjectId:(long long *)arg1 withBindings:(CDUnknownBlockType)arg2;
- (id)initWithTransaction:(id)arg1 table:(id)arg2 columns:(id)arg3;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface IDEDistributionCreatePKGStep : IDEDistributionProcessingPackagingStep
{
    NSString *name;
}

+ (id)packagePathExtension;
+ (_Bool)supportsDryRun;
+ (BOOL)wantsPayloadDir;
@property(copy) NSString *name; // @synthesize name;
- (void).cxx_destruct;
- (_Bool)runWithError:(id *)arg1;
- (id)providedOutputContextPropertyNames;
- (id)requiredInputContextPropertyNames;

@end

@interface IDEBatchFindQueryTerm : NSObject
{
    long long _termType;
    NSString *_symbolResolution;
    NSString *_text;
    NSArray *_pattern;
    NSString *_explicitDisplayString;
}

@property(readonly) NSString *explicitDisplayString; // @synthesize explicitDisplayString=_explicitDisplayString;
@property(readonly) NSArray *pattern; // @synthesize pattern=_pattern;
@property(readonly) NSString *text; // @synthesize text=_text;
@property(readonly) NSString *symbolResolution; // @synthesize symbolResolution=_symbolResolution;
@property(readonly) long long termType; // @synthesize termType=_termType;
- (void).cxx_destruct;
- (BOOL)isEqual:(id)arg1;
- (BOOL)isEqualToQueryTerm:(id)arg1;
- (BOOL)isEmpty;
- (unsigned long long)hash;
@property(readonly) NSString *displayString;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithText:(id)arg1;
- (id)initWithIndexSymbol:(id)arg1;
- (id)initWithPattern:(id)arg1;

@end

@interface IDEIndexDBTransaction : IDEIndexDBSQLStream
{
    NSMutableArray *_runQueue;
    IDEIndexDBSQLStream *_parent;
    NSMutableArray *_dbFactories;
}

@property(retain, nonatomic) IDEIndexDBSQLStream *parent; // @synthesize parent=_parent;
- (void).cxx_destruct;
- (void)submit;
- (void)closeFactories;
- (id)newFactoryForTable:(id)arg1 columns:(id)arg2;
- (void)doBlock:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) unsigned long long queueSize;
- (id)dbConnection;
- (id)init;

@end

@interface IDESourceKitRequestToolchainInfo : NSObject <IDESourceKitRequestDictionaryWrapper>
{
    IDESourceKitRequestDictionary *_dict;
}

- (void).cxx_destruct;
- (id)internalDictionary;
- (id)initWithUIDSet:(id)arg1 identifier:(id)arg2 name:(id)arg3 filePath:(id)arg4 isDefault:(BOOL)arg5;

@end

@interface IDESourceKitRequestIndexable : NSObject <IDESourceKitRequestDictionaryWrapper>
{
    IDESourceKitRequestDictionary *_dict;
}

- (void).cxx_destruct;
- (id)internalDictionary;
- (id)initWithUIDSet:(id)arg1 indexableIdentifier:(id)arg2 fileURLs:(id)arg3 indexableIsUnitTest:(id)arg4;

@end

@interface IDESourceKitRequestDocumentLocation : NSObject <IDESourceKitRequestDictionaryWrapper>
{
    IDESourceKitRequestDictionary *_dict;
}

- (void).cxx_destruct;
- (id)internalDictionary;
- (id)initWithUIDSet:(id)arg1 url:(id)arg2 startLine:(long long)arg3 startCol:(long long)arg4 endLine:(long long)arg5 endCol:(long long)arg6 rangeLoc:(long long)arg7 rangeCount:(long long)arg8 timeStamp:(id)arg9 encoding:(long long)arg10;

@end

@interface IDESourceKitRequestSymbol : NSObject <IDESourceKitRequestDictionaryWrapper>
{
    IDESourceKitRequestDictionary *_dict;
}

- (void).cxx_destruct;
- (id)internalDictionary;
- (id)initWithUIDSet:(id)arg1 symbolName:(id)arg2 symbolKind:(id)arg3 language:(id)arg4 resolution:(id)arg5;

@end

@interface IDESourceKitResponseDocumentLocation : IDESourceKitVariantDictionaryWrapper
{
}

@property(readonly) long long encoding;
@property(readonly) NSNumber *timeStamp;
@property(readonly) long long rangeCount;
@property(readonly) long long rangeLoc;
@property(readonly) long long endCol;
@property(readonly) long long endLine;
@property(readonly) long long startCol;
@property(readonly) long long startLine;
@property(readonly) NSString *url;
@property(readonly) DVTTextDocumentLocation *ide_documentLocationWithDocumentURLAndLineRange;
@property(readonly) DVTTextDocumentLocation *ide_documentLocation;

@end

@interface IDESourceKitResponseEdit : IDESourceKitVariantDictionaryWrapper <IDESourceKitRefactoringEdit>
{
}

@property(readonly) NSString *sourceText;
@property(readonly) long long endColumn;
@property(readonly) long long endLine;
@property(readonly) long long column;
@property(readonly) long long line;
@property(readonly) struct _sourcekit_uid_s *rawKind;

@end

@interface IDESourceKitResponseFileEdits : IDESourceKitVariantDictionaryWrapper <IDESourceKitRefactoringFileEdits>
{
}

@property(readonly) IDESourceKitResponseArray *rawEdits;
@property(readonly) NSString *newName;
@property(readonly) NSString *filePath;
@property(readonly) NSArray *edits;

@end

@interface IDESourceKitResponseRenameRange : IDESourceKitVariantDictionaryWrapper <IDESourceKitRenameRange>
{
}

@property(readonly) NSNumber *argIndex;
@property(readonly) struct _sourcekit_uid_s *rawKind;
@property(readonly) long long endColumn;
@property(readonly) long long endLine;
@property(readonly) long long column;
@property(readonly) long long line;
@property(readonly) unsigned long long kind;

@end

@interface IDESourceKitResponseRenameRangeGroup : IDESourceKitVariantDictionaryWrapper <IDESourceKitRenameRangeGroup>
{
}

@property(readonly) IDESourceKitResponseArray *rawRanges;
@property(readonly) struct _sourcekit_uid_s *rawCategory;
@property(readonly) NSArray *ranges;
@property(readonly) unsigned long long category;

@end

@interface IDESourceKitResponseFileRenameRanges : IDESourceKitVariantDictionaryWrapper <IDESourceKitRefactoringFileRenameRanges>
{
}

@property(readonly) IDESourceKitResponseArray *rawRanges;
@property(readonly) NSNumber *renameFile;
@property(readonly) NSString *filePath;
@property(readonly) NSArray *categorizedRanges;
@property(readonly) BOOL shouldRenameFile;

@end

@interface IDESourceKitResponseAvailableRefactoring : IDESourceKitVariantDictionaryWrapper
{
}

@property(readonly) NSString *description;
@property(readonly) struct _sourcekit_uid_s *identifier;
@property(readonly) struct _sourcekit_uid_s *kind;

@end

@interface IDESourceKitResponseSymbol : IDESourceKitVariantDictionaryWrapper
{
}

@property(readonly) NSString *resolution;
@property(readonly) NSString *language;
@property(readonly) NSString *symbolKind;
@property(readonly) NSString *symbolName;

@end

@interface IDESourceKitResponseSymbolOccurrence : IDESourceKitVariantDictionaryWrapper
{
}

@property(readonly) BOOL symbolIsSystem;
@property(readonly) BOOL isVirtual;
@property(readonly) BOOL isInProject;
@property(readonly) NSString *symbolModuleName;
@property(readonly) NSString *displayName;
@property(readonly) IDESourceKitResponseSymbol *symbol;
@property(readonly) NSString *moduleUrlOpt;
@property(readonly) DVTFilePath *file;
@property(readonly) long long indexerColumn;
@property(readonly) long long lineNumber;
@property(readonly) IDESourceKitResponseDocumentLocation *location;
@property(readonly) long long role;
- (id)ide_collectionItem:(id)arg1;

@end

@interface IDESourceKitResponseRenamedSymbolInfo : IDESourceKitVariantDictionaryWrapper
{
}

@property(readonly) IDESourceKitResponseSymbolOccurrence *symbol;
@property(readonly) NSString *newName;
@property(readonly) NSString *oldName;

@end

@interface IDESourceKitResponseUnitTestMethod : IDESourceKitVariantDictionaryWrapper
{
}

@property(readonly) IDESourceKitResponseDocumentLocation *location;
@property(readonly) NSString *symbolName;

@end

@interface IDESourceKitResponseUnitTestTarget : IDESourceKitVariantDictionaryWrapper
{
}

@property(readonly) IDESourceKitResponseArray *symbolLocation;
@property(readonly) NSString *targetName;

@end

@interface IDESourceKitResponseCodeCompletionResult : IDESourceKitVariantDictionaryWrapper
{
}

@property(readonly) BOOL notRecommended;
@property(readonly) long long priority;
@property(readonly) NSString *parent;
@property(readonly) NSString *docBrief;
@property(readonly) NSString *typeName;
@property(readonly) NSString *description;
@property(readonly) NSString *sourceText;
@property(readonly) NSString *name;
@property(readonly) struct _sourcekit_uid_s *kind;

@end

@interface IDESourceKitResponseDiagnosticFixItItem : IDESourceKitVariantDictionaryWrapper
{
}

@property(readonly) IDESourceKitResponseDocumentLocation *range;
@property(readonly) NSString *sourceText;

@end

@interface IDESourceKitResponseDiagnostic : IDESourceKitVariantDictionaryWrapper
{
}

@property(readonly) IDESourceKitResponseArray *diagnosticNotes;
@property(readonly) IDESourceKitResponseArray *fixits;
@property(readonly) IDESourceKitResponseArray *ranges;
@property(readonly) IDESourceKitResponseDocumentLocation *docLocation;
@property(readonly) long long severity;
@property(readonly) NSString *categoryName;
@property(readonly) NSString *description;
- (id)ide_collectionItem:(id)arg1;

@end

@interface IDESourceKitResponseSymbolCollection : IDESourceKitVariantDictionaryWrapper
{
}

@property(readonly) IDESourceKitResponseArray *symbols;
- (id)ide_collection:(id)arg1;

@end

@interface IDESourceKitResponseFilePathCollection : IDESourceKitVariantDictionaryWrapper
{
}

@property(readonly) IDESourceKitResponseFilePathArray *filePaths;
- (id)ide_collection;

@end

@interface IDESourceKitResponseSymbolOccurrenceResult : IDESourceKitVariantDictionaryWrapper
{
}

@property(readonly) IDESourceKitResponseSymbolOccurrence *symbolOccurrence;

@end

@interface IDESourceKitResponseCallerOccurrence : IDESourceKitVariantDictionaryWrapper
{
}

@property(readonly) IDESourceKitResponseSymbolOccurrence *containingSymbol;
@property(readonly) IDESourceKitResponseSymbolOccurrence *symbolOccurrence;
- (id)ide_collectionItem:(id)arg1;

@end

@interface IDESourceKitResponseTestMe : IDESourceKitVariantDictionaryWrapper
{
}

@property(readonly) BOOL notRecommended;
@property(readonly) NSString *outputName;

@end

@interface IDESourceKitResponseSetLoggingSettings : IDESourceKitVariantDictionaryWrapper
{
}

@property(readonly) long long previousLogLevel;

@end

@interface IDESourceKitResponseDumpIndexData : IDESourceKitVariantDictionaryWrapper
{
}

@property(readonly) NSString *indexDataDump;

@end

@interface IDESourceKitResponseOpenIndex : IDESourceKitVariantDictionaryWrapper
{
}

@property(readonly) long long indexerToken;

@end

@interface IDESourceKitNotificationOnLogOutput : IDESourceKitVariantDictionaryWrapper
{
}

@property(readonly) NSString *message;

@end

@interface IDESourceKitConnectionNotification : IDESourceKitVariantDictionaryWrapper
{
}

- (BOOL)invokeOnDelegate:(id)arg1;

@end

@interface _IDEPlaygroundCommonFixedSubFolderFileReference : IDEFileReference
{
    BOOL _editable;
}

- (id)navigableItem_conformanceString;
- (BOOL)_filePathExists;
- (BOOL)isEditable;
- (id)_initWithPath:(id)arg1;

@end

@interface _IDEPlaygroundCommonRootGroup : IDEFolderRootGroup
{
}

- (BOOL)canStructureEditRemoveSubitemsAtIndexes:(id)arg1;
- (id)_indexesOfSubitemsThatExistAtIndexes:(id)arg1;
- (BOOL)canStructureEditInsertFileURLs:(id)arg1 atIndex:(unsigned long long)arg2;
- (BOOL)canStructureEditInsertSubitems:(id)arg1 atIndex:(unsigned long long)arg2;
- (id)allowedFileTypesOfChildItems;
- (BOOL)allowUserModificationOfSubitems;
- (id)computedSubitemsWithOldSubitems:(id)arg1;
- (BOOL)subitemsAreEditable;
- (BOOL)subitemsAreComputed;

@end

@interface IDEPlaygroundCommon : IDEContainer
{
    DVTObservingToken *_workspaceFinishedLoadingObservingToken;
    DVTObservingToken *_workspaceRunContextsObservingToken;
}

+ (BOOL)isSourcesDirectorySubPath:(id)arg1;
+ (BOOL)isOnlyUsedForUserInteraction;
- (void).cxx_destruct;
- (void)_workspaceRunContextsChanged;
- (void)_registerReferenceWithContexts;
- (void)_unregisterReferenceWithContexts;
- (void)_removeDirectoryPathObservationForPath:(id)arg1;
- (void)_addDirectoryPathObservationForPath:(id)arg1 block:(CDUnknownBlockType)arg2;
- (void)_removePlaygroundDirectoriesObservation;
- (void)_addPlaygroundDirectoriesObservation;
- (id)_sourcesDirectoryPath;
- (BOOL)_shouldRespondToFileChangeOnDisk;
- (id)createRootGroup;
@property(readonly, nonatomic) IDEPlaygroundSharedContext *playgroundContext;
@property(readonly, nonatomic) IDEPlaygroundCommonSharedContext *context;
- (id)computedChildItemSubpathsFixed;
- (id)computedChildItemSubpathsEditable;
- (void)_didChangeContainerFilePath:(id)arg1 inContext:(id)arg2;
- (void)_willChangeContainerFilePath:(id)arg1 inContext:(id)arg2;
- (void)_changeContainerFilePath:(id)arg1 inContext:(id)arg2;
- (void)primitiveInvalidate;
- (id)initWithFilePath:(id)arg1 extension:(id)arg2 workspace:(id)arg3 options:(id)arg4 error:(id *)arg5;

@end

@interface IDESchemeAction : NSObject <DVTXMLUnarchiving, DVTInvalidation>
{
    BOOL _hasAwoken;
    NSMutableArray *_prePhaseExecutionActions;
    NSMutableArray *_postPhaseExecutionActions;
    DVTNotificationToken *_buildSettingsDidChangeNotificationObservingToken;
    DVTObservingToken *_activeRunDestinationObservingToken;
    int _internalDebuggerToolchainSelectionMode;
    int _toolchainState;
    IDEScheme *_runContext;
    IDERunnable *_runnable;
    IDESchemeBuildableReference *_buildableReferenceToUseForMacroExpansion;
    NSString *_buildConfiguration;
    IDEFileReference *_notificationPayloadFile;
    IDEProfileOptimizationActionController *_pgoController;
    NSString *_selectedInternalDebuggerToolchainIdentifier;
    DVTToolchain *_lldbToolchain;
    NSString *_intentQueryString;
}

+ (id)commandLineArgumentsForLanguage:(id)arg1 andRegion:(id)arg2;
+ (id)bundleIdentifierFromBuildableProduct:(id)arg1 withBuildParameters:(id)arg2;
+ (void)setupMainThreadCheckerInEnvironmentVariables:(id)arg1 dylibPath:(id)arg2;
+ (BOOL)addUBSanitizerEnvironmentVariables:(id)arg1 buildParameters:(id)arg2 buildable:(id)arg3 debugAppExtensions:(BOOL)arg4 debugging:(BOOL)arg5 testingSpecifier:(id)arg6 error:(id *)arg7;
+ (BOOL)addThreadSanitizerEnvironmentVariables:(id)arg1 buildParameters:(id)arg2 buildable:(id)arg3 debugAppExtensions:(BOOL)arg4 debugging:(BOOL)arg5 testingSpecifier:(id)arg6 error:(id *)arg7;
+ (BOOL)addAddressSanitizerEnvironmentVariables:(id)arg1 buildParameters:(id)arg2 buildable:(id)arg3 debugAppExtensions:(BOOL)arg4 debugging:(BOOL)arg5 testingSpecifier:(id)arg6 error:(id *)arg7;
+ (BOOL)_addSanitizer:(unsigned long long)arg1 environmentVariables:(id)arg2 buildParameters:(id)arg3 buildable:(id)arg4 debugAppExtensions:(BOOL)arg5 debugging:(BOOL)arg6 testingSpecifier:(id)arg7 error:(id *)arg8;
+ (id)keyPathsForValuesAffectingRunnable;
+ (BOOL)shouldAllowCustomPhaseActions;
+ (void)forceUBSanitizerEnabledTo:(BOOL)arg1;
+ (_Bool)schemeActionIsSupportedForDevice:(id)arg1 schemeCommand:(id)arg2 outError:(id *)arg3;
+ (void)forceThreadSanitizerEnabledTo:(BOOL)arg1;
+ (void)forceAddressSanitizerEnabledTo:(BOOL)arg1;
+ (void)initialize;
@property(retain) NSString *intentQueryString; // @synthesize intentQueryString=_intentQueryString;
@property(retain) DVTToolchain *lldbToolchain; // @synthesize lldbToolchain=_lldbToolchain;
@property int toolchainState; // @synthesize toolchainState=_toolchainState;
@property(retain) NSString *selectedInternalDebuggerToolchainIdentifier; // @synthesize selectedInternalDebuggerToolchainIdentifier=_selectedInternalDebuggerToolchainIdentifier;
@property(nonatomic) int internalDebuggerToolchainSelectionMode; // @synthesize internalDebuggerToolchainSelectionMode=_internalDebuggerToolchainSelectionMode;
@property(retain) IDEProfileOptimizationActionController *pgoController; // @synthesize pgoController=_pgoController;
@property(retain) IDEFileReference *notificationPayloadFile; // @synthesize notificationPayloadFile=_notificationPayloadFile;
@property(retain) IDESchemeBuildableReference *buildableReferenceToUseForMacroExpansion; // @synthesize buildableReferenceToUseForMacroExpansion=_buildableReferenceToUseForMacroExpansion;
@property(readonly) IDEScheme *runContext; // @synthesize runContext=_runContext;
- (void).cxx_destruct;
@property(readonly, copy) NSString *description;
- (id)swiftVersionOfRunnableForSchemeCommand:(id)arg1;
- (id)bestLLDBToolchainForSchemeCommand:(id)arg1 preferBuildProductToolchain:(BOOL)arg2;
- (id)swiftLLDBToolchainForSchemeCommand:(id)arg1 buildable:(id)arg2 performanceMetric:(id)arg3;
- (id)productTypesToIgnoreForSwiftDebuggerToolchain;
- (id)_automaticSwiftLLDBToolchainForSchemeCommand:(id)arg1 buildable:(id)arg2 performanceMetric:(id)arg3;
- (BOOL)useInternalDebuggerToolchainSelectionLogic;
- (BOOL)runnableUsesInternalSDK;
- (id)_buildProductToolchainIdentifiersForSchemeCommand:(id)arg1;
- (id)_resolvedRunnableBuildableForToolchainDetection;
- (BOOL)isDeprecatedOption:(id)arg1;
- (void)updateSearchPathSettingsInEnvironment:(id)arg1 withBuildProducts:(id)arg2 runDestination:(id)arg3;
- (void)addBuildableProductRunnable:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)addPathRunnable:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)addRemoteRunnable:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)addPostActions:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)addPreActions:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setNotificationPayloadFileFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)dvt_encodeRelationshipsWithXMLArchiver:(id)arg1 version:(id)arg2;
- (void)dvt_encodeAttributesWithXMLArchiver:(id)arg1 version:(id)arg2;
- (void)dvt_awakeFromXMLUnarchiver:(id)arg1;
- (void)modifyEnvironmentForLogging:(id)arg1 buildParameters:(id)arg2;
- (void)_addIDEDisabledOSActivityDTMode:(id)arg1;
@property(readonly) NSArray *_postPhaseExecutionActionsProxies;
@property(readonly) NSArray *_prePhaseExecutionActionsProxies;
- (void)schemeObjectGraphSetupComplete;
@property(readonly) BOOL hasAwoken;
- (void)replacePostPhaseExecutionActionsAtIndexes:(id)arg1 withPostPhaseExecutionActions:(id)arg2;
- (void)replaceObjectInPostPhaseExecutionActionsAtIndex:(unsigned long long)arg1 withObject:(id)arg2;
- (void)removePostPhaseExecutionActionsAtIndexes:(id)arg1;
- (void)insertPostPhaseExecutionActions:(id)arg1 atIndexes:(id)arg2;
- (void)removeObjectFromPostPhaseExecutionActionsAtIndex:(unsigned long long)arg1;
- (void)insertObject:(id)arg1 inPostPhaseExecutionActionsAtIndex:(unsigned long long)arg2;
@property(copy) NSArray *postPhaseExecutionActions; // @dynamic postPhaseExecutionActions;
- (void)replacePrePhaseExecutionActionsAtIndexes:(id)arg1 withObjects:(id)arg2;
- (void)replaceObjectInPrePhaseExecutionActionsAtIndex:(unsigned long long)arg1 withObject:(id)arg2;
- (void)removePrePhaseExecutionActionsAtIndexes:(id)arg1;
- (void)insertPrePhaseExecutionActions:(id)arg1 atIndexes:(id)arg2;
- (void)removeObjectFromPrePhaseExecutionActionsAtIndex:(unsigned long long)arg1;
- (void)insertObject:(id)arg1 inPrePhaseExecutionActionsAtIndex:(unsigned long long)arg2;
@property(copy) NSArray *prePhaseExecutionActions; // @dynamic prePhaseExecutionActions;
- (void)primitiveInvalidate;
- (id)bundleIdentifierWithRunnablePath:(id)arg1;
- (id)absolutePathOfBuildSetting:(id)arg1 forSchemeCommand:(id)arg2;
- (id)expandMacrosInString:(id)arg1 forSchemeCommand:(id)arg2 buildParameters:(id)arg3;
- (id)expandMacrosInString:(id)arg1 forSchemeCommand:(id)arg2;
- (id)stringListForBuildSettings:(id)arg1 forSchemeCommand:(id)arg2;
- (id)stringListForBuildSettings:(id)arg1 forSchemeCommand:(id)arg2 buildable:(id)arg3;
- (id)adjustedBuildParametersForMacroExpansionBuildableWithBaselineParamters:(id)arg1;
- (BOOL)mallocStackLightAllowedForRunDestination:(id)arg1;
- (BOOL)UBSanitizerAllowedForRunDestination:(id)arg1;
- (BOOL)threadSanitizerAllowedForRunDestination:(id)arg1;
- (BOOL)_runDestinationIsX86_64:(id)arg1;
- (BOOL)sanitizersAllowedForSwiftVersionForSchemeCommand:(id)arg1;
- (BOOL)mainThreadCheckerEnabledForSchemeCommand:(id)arg1 runDestination:(id)arg2;
- (BOOL)UBSanitizerEnabledForSchemeCommand:(id)arg1 runDestination:(id)arg2;
- (BOOL)threadSanitizerEnabledForSchemeCommand:(id)arg1 runDestination:(id)arg2;
- (BOOL)addressSanitizerEnabledForSchemeCommand:(id)arg1;
- (id)_sanitizerSchemeActionForSchemeCommand:(id)arg1;
- (id)setUpActionDependenciesForCorePhaseOperation:(id)arg1 shouldRunPostActionsBlock:(CDUnknownBlockType)arg2 prePhaseEnvironmentPopulationBlock:(CDUnknownBlockType)arg3 postPhaseEnvironmentPopulationBlock:(CDUnknownBlockType)arg4 buildParameters:(id)arg5 schemeActionResultOperation:(id)arg6 error:(id *)arg7;
- (id)realAppNameForRunnablePath:(id)arg1;
- (void)updateExtensionInfosOfLaunchParmeters:(id)arg1;
- (id)filePathsForContainersAndExtensionsForBuildParameters:(id)arg1 runnableProductType:(id)arg2 schemeCommand:(id)arg3;
- (id)extensionInfosForExtensionBuildables:(id)arg1 schemeCommand:(id)arg2;
- (id)extensionInfosForExtensions:(id)arg1;
- (void)updateBuildableForChangeInRunnable;
@property(readonly, nonatomic) BOOL debugAppExtensions;
- (void)_resetToolchainStatusHard:(BOOL)arg1;
@property(copy) NSString *buildConfiguration; // @synthesize buildConfiguration=_buildConfiguration;
@property(retain, nonatomic) IDERunnable *runnable; // @synthesize runnable=_runnable;
- (void)setRunContext:(id)arg1;
@property(readonly) BOOL doesNonActionWork;
@property(readonly) NSString *subtitle;
@property(readonly) NSString *name;
- (void)setupObservers;
- (id)initFromXMLUnarchiver:(id)arg1 archiveVersion:(float)arg2;
- (id)init;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) NSMutableArray *mutablePostPhaseExecutionActions; // @dynamic mutablePostPhaseExecutionActions;
@property(readonly) NSMutableArray *mutablePrePhaseExecutionActions; // @dynamic mutablePrePhaseExecutionActions;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface IDEInstallLocalMacService : IDERunDeviceService
{
}

+ (id)capability;
- (id)operationWorkerWithLaunchSession:(id)arg1 error:(id *)arg2;

@end

@interface IDEInstallLocalMacWorker : IDERunOperationWorker
{
}

- (void)terminate;
- (void)performWorkerAction;

@end

@interface IDEDistributionAssetPackManifestIndexingStep : IDEDistributionItemProcessingStep
{
}

+ (_Bool)processDistributionItem:(id)arg1 context:(id)arg2 error:(id *)arg3;
+ (void)addAssetPackBundleKey:(id)arg1 toDistributionItem:(id)arg2 inContext:(id)arg3;
- (_Bool)runWithError:(id *)arg1;
- (id)providedOutputContextPropertyNames;
- (id)requiredInputContextPropertyNames;
- (id)name;

@end

@interface IDEWorkspaceUserSettings : IDEWorkspaceSettings
{
}

+ (BOOL)automaticallyNotifiesObserversForShouldUseLegacyBuildSystem;
+ (BOOL)automaticallyNotifiesObserversForIssueFilterStyle;
+ (BOOL)automaticallyNotifiesObserversForLiveSourceIssuesEnabled;
+ (BOOL)automaticallyNotifiesObserversForHasAskedToTakeAutomaticSnapshotBeforeSignificantChanges;
+ (BOOL)automaticallyNotifiesObserversForTakeSnapshotsBeforeSignificantChanges;
+ (BOOL)automaticallyNotifiesObserversForSnapshotCustomLocation;
+ (BOOL)automaticallyNotifiesObserversForSnapshotLocationStyle;
+ (BOOL)automaticallyNotifiesObserversForEnabledFullIndexStoreVisibility;
+ (BOOL)automaticallyNotifiesObserversForCustomIndexStorePath;
+ (BOOL)automaticallyNotifiesObserversForCustomBuildIntermediatesPath;
+ (BOOL)automaticallyNotifiesObserversForCustomBuildProductsPath;
+ (BOOL)automaticallyNotifiesObserversForSharedBuildFolderName;
+ (BOOL)automaticallyNotifiesObserversForCustomBuildLocationType;
+ (BOOL)automaticallyNotifiesObserversForBuildLocationStyle;
+ (BOOL)automaticallyNotifiesObserversForDerivedDataCustomLocation;
+ (BOOL)automaticallyNotifiesObserversForDerivedDataLocationStyle;
+ (id)shouldUseLegacyBuildSystemOverride;
+ (void)setShouldUseLegacyBuildSystemOverride:(id)arg1;
- (BOOL)shouldUseLegacyBuildSystem;
- (void)loadSettings;
- (void)saveSettings;
@property int issueFilterStyle;
@property BOOL liveSourceIssuesEnabled;
@property BOOL hasAskedToTakeAutomaticSnapshotBeforeSignificantChanges;
@property BOOL takeSnapshotsBeforeSignificantChanges;
@property(retain) NSString *snapshotCustomLocation;
@property int snapshotLocationStyle;
@property BOOL enabledFullIndexStoreVisibility;
@property(retain) NSString *customIndexStorePath;
@property(retain) NSString *customBuildIntermediatesPath;
@property(retain) NSString *customBuildProductsPath;
@property(retain) NSString *sharedBuildFolderName;
@property int customBuildLocationType;
@property int buildLocationStyle;
@property(retain) NSString *derivedDataCustomLocation;
@property int derivedDataLocationStyle;
- (id)settingsOwnership;

@end

@interface IDELocalizationStringsFileElement : NSObject <NSCopying>
{
    NSString *_key;
    NSString *_value;
    NSString *_comment;
}

@property(readonly, copy, nonatomic) NSString *comment; // @synthesize comment=_comment;
@property(readonly, copy, nonatomic) NSString *value; // @synthesize value=_value;
@property(readonly, copy, nonatomic) NSString *key; // @synthesize key=_key;
- (void).cxx_destruct;
- (id)stringsFileRpresentation;
- (long long)compare:(id)arg1;
- (BOOL)isEqualToLocalizationStringsFileElement:(id)arg1;
- (BOOL)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)init;
- (id)initWithKey:(id)arg1 value:(id)arg2 comment:(id)arg3;

@end

@interface IDEExecutionActionType : NSObject
{
    NSString *_identifier;
}

+ (id)actionTypeWithIdentifier:(id)arg1 error:(id *)arg2;
+ (BOOL)point:(id)arg1 isSubpointOfPoint:(id)arg2;
+ (id)actionTypePoint;
@property(readonly) NSString *identifier; // @synthesize identifier=_identifier;
- (void).cxx_destruct;

@end

@interface IDEGaugeDataQuery : NSObject <DVTInvalidation>
{
    NSString *_requiredAttribute;
    BOOL _isSuspended;
    BOOL _useProxiedDevice;
    IDEGaugeDataQueryCoordinator *_queryCoordinator;
    NSSet *_observedAttributes;
    CDUnknownBlockType _resultDictHandler;
}

+ (void)initialize;
@property(readonly, nonatomic) BOOL useProxiedDevice; // @synthesize useProxiedDevice=_useProxiedDevice;
@property(nonatomic) BOOL isSuspended; // @synthesize isSuspended=_isSuspended;
@property(copy, nonatomic) CDUnknownBlockType resultDictHandler; // @synthesize resultDictHandler=_resultDictHandler;
@property(copy, nonatomic) NSSet *observedAttributes; // @synthesize observedAttributes=_observedAttributes;
@property(retain, nonatomic) IDEGaugeDataQueryCoordinator *queryCoordinator; // @synthesize queryCoordinator=_queryCoordinator;
- (void).cxx_destruct;
- (void)handleResultDict:(id)arg1;
- (void)setObservedAttributes:(id)arg1 requiredAttribute:(id)arg2;
- (void)primitiveInvalidate;
- (id)initForProcessWithPID:(id)arg1 onDevice:(id)arg2 useProxiedDevice:(BOOL)arg3;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface IDEProfileLocator : NSObject
{
    id <IDEProvisioningBasicTeam> _team;
    NSSet *_profiles;
    NSString *_bundleID;
    long long _style;
    DVTPlatform *_platform;
    IDEProfileSpecifier *_profileSpecifier;
    NSSet *_signingCertificates;
    long long _automaticLocationStyle;
    DVTPortalProfileType *_profileType;
}

@property(retain, nonatomic) DVTPortalProfileType *profileType; // @synthesize profileType=_profileType;
@property(nonatomic) long long automaticLocationStyle; // @synthesize automaticLocationStyle=_automaticLocationStyle;
@property(retain, nonatomic) NSSet *signingCertificates; // @synthesize signingCertificates=_signingCertificates;
@property(retain, nonatomic) IDEProfileSpecifier *profileSpecifier; // @synthesize profileSpecifier=_profileSpecifier;
@property(readonly, nonatomic) DVTPlatform *platform; // @synthesize platform=_platform;
@property(readonly, nonatomic) long long style; // @synthesize style=_style;
@property(readonly, nonatomic) NSString *bundleID; // @synthesize bundleID=_bundleID;
@property(readonly, nonatomic) NSSet *profiles; // @synthesize profiles=_profiles;
@property(readonly, nonatomic) id <IDEProvisioningBasicTeam> team; // @synthesize team=_team;
- (void).cxx_destruct;
- (id)_errorForManualWithAllowsAutomaticSelectionOfAllProfiles;
- (id)_errorForXcodeManagedNoMatchingProfiles;
- (id)_errorForManualWithNoMatchingProfile:(id)arg1;
- (id)_errorForManualWithNoProfileSpecifier:(id)arg1;
- (id)_errorForXcodeManagedWithManualSpecifier;
- (id)_errorForNoTeam;
- (id)_profileMatchingName:(id)arg1 teamID:(id)arg2;
- (id)_profileMatchingSpecifier:(id)arg1;
- (id)_manualProvisioningProfileWithError:(id *)arg1;
- (id)_qualifiedProfilesForXcodeManaged;
- (id)_xcodeManagedProvisioningProfileWithError:(id *)arg1;
- (id)_logAspect;
- (id)profilesForManualProvisioning;
- (id)profileWithError:(id *)arg1;
- (id)initWithProfiles:(id)arg1 team:(id)arg2 bundleID:(id)arg3 style:(long long)arg4 platform:(id)arg5;

@end

@interface IDEBuildSchemeAction : IDESchemeAction
{
    NSMutableArray *_legacyBuildableReferences;
    BOOL _parallelizeBuildables;
    BOOL _buildImplicitDependencies;
    BOOL _enableAddressSanitizer;
    NSString *_legacyBuildConfiguration;
    NSMutableArray *_buildActionEntries;
    IDEBuildActionEntry *_launchRunnableEntry;
    IDEBuildActionEntry *_profileRunnableEntry;
    NSMutableArray *_testBuildableEntries;
    BOOL _buildablesDidChangeNotificationEnabled;
    BOOL _isBuildablesDidChangeNotificationPending;
    DVTObservingToken *_launchActionRunnableObservingToken;
    DVTObservingToken *_profileActionRunnableObservingToken;
    DVTObservingToken *_testBuildableReferencesObservingToken;
    DVTObservingToken *_testHostBuildableReferencesObservingToken;
    NSMapTable *_overridingBuildPropertiesForBuildable;
}

+ (id)_uniquedBuildablesForBuildables:(id)arg1 includingDependencies:(BOOL)arg2;
+ (id)buildablesForTestingSpecifiers:(id)arg1 includingDependencies:(BOOL)arg2;
+ (id)keyPathsForValuesAffectingAvailableBuildConfigurations;
+ (id)keyPathsForValuesAffectingSubtitle;
+ (void)initialize;
@property(readonly) NSMapTable *overridingBuildPropertiesForBuildable; // @synthesize overridingBuildPropertiesForBuildable=_overridingBuildPropertiesForBuildable;
@property(nonatomic, getter=isBuildablesDidChangeNotificationEnabled) BOOL buildablesDidChangeNotificationEnabled; // @synthesize buildablesDidChangeNotificationEnabled=_buildablesDidChangeNotificationEnabled;
@property BOOL buildImplicitDependencies; // @synthesize buildImplicitDependencies=_buildImplicitDependencies;
@property BOOL parallelizeBuildables; // @synthesize parallelizeBuildables=_parallelizeBuildables;
- (void).cxx_destruct;
- (void)setBuildConfigurationFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)addBuildRoles:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)addBuildActionEntries:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)addBuildableProductReferences:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setBuildImplicitDependenciesFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setParallelizeBuildablesFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)dvt_encodeRelationshipsWithXMLArchiver:(id)arg1 version:(id)arg2;
- (void)dvt_encodeAttributesWithXMLArchiver:(id)arg1 version:(id)arg2;
- (void)dvt_awakeFromXMLUnarchiver:(id)arg1;
- (void)setOverridingBuildProperties:(id)arg1 forBuildable:(id)arg2;
- (void)postBuildablesDidChangeNotification;
- (CDUnknownBlockType)_matcherBlockForCommand:(id)arg1;
- (id)buildablesByConfiguration;
- (id)buildableReferencesForSchemeCommand:(id)arg1;
- (id)buildableReferences;
- (id)extensionTypesOfBuildablesForSchemeCommand:(id)arg1 includingDependencies:(BOOL)arg2;
- (id)buildablesForSchemeCommand:(id)arg1 includingDependencies:(BOOL)arg2;
- (id)buildablesForSchemeCommand:(id)arg1 testingSpecifiers:(id)arg2 includingDependencies:(BOOL)arg3;
- (id)buildablesForAllSchemeCommandsIncludingDependencies:(BOOL)arg1;
- (id)buildablesForShowingIssues;
- (id)_buildablesIncludingDependencies:(BOOL)arg1 restrictToSchemeCommand:(id)arg2;
- (id)buildableReferenceForBuildable:(id)arg1;
@property(readonly) NSArray *availableBuildConfigurations;
- (id)buildDirectoryPathsForBuildParameters:(id)arg1 schemeCommand:(id)arg2;
- (void)moveBuildActionEntriesAtIndexes:(id)arg1 toIndex:(unsigned long long)arg2;
- (id)addBuildActionEntryForBuildableReference:(id)arg1;
- (void)removeBuildActionEntries:(id)arg1;
- (void)removeBuildActionEntryAtIndex:(unsigned long long)arg1;
- (void)forceOffBuildForProfilingForBuildActionEntry:(id)arg1;
- (void)forceOffBuildForTestingForBuildActionEntry:(id)arg1;
- (void)forceOffBuildForRunningForBuildActionEntry:(id)arg1;
- (void)_setupImplicitBuildActionEntries;
- (BOOL)doesNonActionWork;
- (id)subtitle;
- (id)name;
- (id)buildFolderPathForCodeCoverage;
- (id)buildFolderPathForPGO;
- (void)setRunContext:(id)arg1;
- (void)primitiveInvalidate;
- (id)initFromXMLUnarchiver:(id)arg1 archiveVersion:(float)arg2;
- (id)init;
- (void)_commonInit;

// Remaining properties
@property(readonly) NSArray *buildActionEntries; // @dynamic buildActionEntries;
@property(readonly) NSMutableArray *mutableBuildActionEntries; // @dynamic mutableBuildActionEntries;

@end

@interface IDEBuildActionEntry : NSObject <DVTXMLUnarchiving>
{
    BOOL _isExplicitEntry;
    BOOL _shouldBuildForTesting;
    BOOL _mustBuildForTesting;
    BOOL _shouldBuildForRunning;
    BOOL _mustBuildForRunning;
    BOOL _shouldBuildForProfiling;
    BOOL _mustBuildForProfiling;
    BOOL _shouldBuildForArchiving;
    BOOL _shouldBuildForAnalyzing;
    BOOL _shouldHideIssues;
    IDESchemeBuildableReference *_buildableReference;
    IDEBuildSchemeAction *_buildAction;
}

+ (id)keyPathsForValuesAffectingCanRemoveEntry;
+ (id)keyPathsForValuesAffectingShouldBuildForProfiling;
+ (id)keyPathsForValuesAffectingShouldBuildForRunning;
+ (id)keyPathsForValuesAffectingShouldBuildForTesting;
@property(retain) IDEBuildSchemeAction *buildAction; // @synthesize buildAction=_buildAction;
@property(readonly) IDESchemeBuildableReference *buildableReference; // @synthesize buildableReference=_buildableReference;
@property(nonatomic) BOOL mustBuildForProfiling; // @synthesize mustBuildForProfiling=_mustBuildForProfiling;
@property(nonatomic) BOOL mustBuildForRunning; // @synthesize mustBuildForRunning=_mustBuildForRunning;
@property(nonatomic) BOOL mustBuildForTesting; // @synthesize mustBuildForTesting=_mustBuildForTesting;
@property(readonly) BOOL isExplicitEntry; // @synthesize isExplicitEntry=_isExplicitEntry;
- (void).cxx_destruct;
- (void)addBuildableReference:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setHideIssuesFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setBuildForAnalyzingFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setBuildForArchivingFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setBuildForProfilingFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setBuildForRunningFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setBuildForTestingFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)dvt_encodeRelationshipsWithXMLArchiver:(id)arg1 version:(id)arg2;
- (void)dvt_encodeAttributesWithXMLArchiver:(id)arg1 version:(id)arg2;
- (void)enableBuildEntry;
- (void)disableBuildEntry;
@property(readonly) BOOL canRemoveEntry;
@property BOOL shouldHideIssues;
@property BOOL shouldBuildForAnalyzing;
@property BOOL shouldBuildForArchiving;
@property BOOL shouldBuildForProfiling;
@property BOOL shouldBuildForRunning;
@property BOOL shouldBuildForTesting;
- (void)_makeExplicit;
- (void)dvt_awakeFromXMLUnarchiver:(id)arg1;
- (id)initFromXMLUnarchiver:(id)arg1 archiveVersion:(float)arg2;
- (id)initWithBuildableReference:(id)arg1 buildAction:(id)arg2 explicityManaged:(BOOL)arg3;
@property(readonly, copy) NSString *description;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IDEDeveloperPaths : DVTDeveloperPaths
{
    DVTFilePath *_distributionArchivesLocation;
    id _distributionArchivesLocationNotificatonToken;
    id _distributionArchivesSourceTreesNotificationToken;
    DVTFilePath *_snapshotsDirectory;
    id _snapshotsDirectoryNotificatonToken;
    id _snapshotsDirectorySourceTreesNotificationToken;
}

- (void).cxx_destruct;
- (id)templateSearchPath;
- (id)defaultXcodeServerDataLocation;
- (id)defaultWorkspaceDerivedDataLocation;
- (id)defaultDistributionArchivesLocation;
- (id)distributionArchivesLocation;
- (id)defaultSnapshotsDirectory;
- (id)snapshotsDirectory;
- (id)corePlugInSearchPathForPlatform:(id)arg1;

@end

@interface IDEBuildStatisticsSection : NSObject <IDEBuildStatisticsData>
{
    NSMutableDictionary *_statisticsSectionList;
    NSMutableArray *_statisticsDataList;
    unsigned long long _ordinalGenerator;
    double _elapsedUserTime;
    double _elapsedSystemTime;
    long long _numberOfVMPageins;
    long long _numberOfVMPageouts;
    DVTDispatchLock *_dispatchLock;
    NSString *_title;
    DVTSystemStatisticsMeasurement *_startSystemStats;
    DVTSystemStatisticsMeasurement *_endSystemStats;
    unsigned long long _ordinal;
    CDUnknownBlockType _contentsEmissionBlock;
}

@property(copy) CDUnknownBlockType contentsEmissionBlock; // @synthesize contentsEmissionBlock=_contentsEmissionBlock;
@property unsigned long long ordinal; // @synthesize ordinal=_ordinal;
@property(retain) DVTSystemStatisticsMeasurement *endSystemStats; // @synthesize endSystemStats=_endSystemStats;
@property(retain) DVTSystemStatisticsMeasurement *startSystemStats; // @synthesize startSystemStats=_startSystemStats;
@property(copy) NSString *title; // @synthesize title=_title;
- (void).cxx_destruct;
- (id)description;
- (void)emitContentsForAspect:(id)arg1 logLevel:(int)arg2 indentLevel:(unsigned long long)arg3 withBlock:(CDUnknownBlockType)arg4;
- (id)defaultEmissionStringWithIndentLevel:(unsigned long long)arg1;
@property(readonly) long long numberOfVMPageouts;
@property(readonly) long long numberOfVMPageins;
@property(readonly) double elapsedSystemTime;
@property(readonly) double elapsedUserTime;
@property(readonly) double elapsedWallClockTime;
@property(readonly) double endWallClockTime;
@property(readonly) double startWallClockTime;
- (void)recordEndSystemStats;
- (void)recordStartSystemStats;
- (id)children;
- (id)dataObjects;
- (id)subsections;
- (void)addBuildStatisticsData:(id)arg1;
- (void)addBuildStatisticsSection:(id)arg1;
- (void)addNewBuildStatisticsDataWithTitle:(id)arg1 commandString:(id)arg2 startSystemStatisticsMeasurement:(id)arg3 endSystemStatisticsMeasurement:(id)arg4 elapsedUserTime:(double)arg5 elapsedSystemTime:(double)arg6;
- (id)buildStatisticsSectionWithTitleFormat:(id)arg1;
- (unsigned long long)_newOrdinal;
- (id)initWithTitle:(id)arg1;
- (id)initWithTitle:(id)arg1 ordinal:(unsigned long long)arg2;

@end

@interface IDEConstraintErrorBreakpoint : IDEBreakpoint
{
}

- (id)accessibilityDescription;
- (id)symbolNames;
- (id)displayName;
- (id)init;

@end

@interface IDETestingPlatformSupport : NSObject
{
}

+ (id)sharedTouchBarManager;

@end

@interface IDESourceControlRequest : NSObject <DVTInvalidation>
{
    IDESourceControlTree *_sourceTree;
    IDESourceControlWorkingCopyConfiguration *_wcc;
    IDESourceControlRepository *_remote;
    int _type;
    NSString *_startingRevision;
    NSString *_endingRevision;
    NSString *_destination;
    NSArray *_files;
    NSDictionary *_options;
    NSString *_shortTitle;
    NSString *_longTitle;
    NSString *_workspaceName;
    IDESourceControlExtension *_sourceControlExtension;
    NSString *_message;
    IDESourceControlOperation *_operation;
    BOOL _stopAllActivityWhenCanceled;
    BOOL _cancelable;
    CDUnknownBlockType _progressBlock;
}

+ (unsigned long long)assertionBehaviorAfterEndOfEventForSelector:(SEL)arg1;
+ (void)initialize;
@property(copy) CDUnknownBlockType progressBlock; // @synthesize progressBlock=_progressBlock;
@property(retain) IDESourceControlWorkingCopyConfiguration *wcc; // @synthesize wcc=_wcc;
@property IDESourceControlOperation *operation; // @synthesize operation=_operation;
@property BOOL cancelable; // @synthesize cancelable=_cancelable;
@property(readonly, copy) NSString *workspaceName; // @synthesize workspaceName=_workspaceName;
@property BOOL stopAllActivityWhenCanceled; // @synthesize stopAllActivityWhenCanceled=_stopAllActivityWhenCanceled;
@property(copy) NSDictionary *options; // @synthesize options=_options;
@property(copy) NSArray *files; // @synthesize files=_files;
@property(copy) NSString *destination; // @synthesize destination=_destination;
@property(copy) NSString *message; // @synthesize message=_message;
@property(copy) NSString *endingRevision; // @synthesize endingRevision=_endingRevision;
@property(copy) NSString *startingRevision; // @synthesize startingRevision=_startingRevision;
@property int type; // @synthesize type=_type;
@property(retain) IDESourceControlRepository *remote; // @synthesize remote=_remote;
@property(retain) IDESourceControlTree *sourceTree; // @synthesize sourceTree=_sourceTree;
- (void).cxx_destruct;
- (void)primitiveInvalidate;
- (void)cancelOperation;
@property(readonly, copy) NSString *longTitle; // @synthesize longTitle=_longTitle;
@property(readonly, copy) NSString *shortTitle; // @synthesize shortTitle=_shortTitle;
- (BOOL)isRequestBlacklistedFromLogging;
@property(readonly, copy) NSString *description;
@property(readonly) IDESourceControlRepository *repositoryToAuthenticate;
@property(retain) IDESourceControlExtension *sourceControlExtension; // @synthesize sourceControlExtension=_sourceControlExtension;
- (id)initWithType:(int)arg1 startingRevision:(id)arg2 destination:(id)arg3 options:(id)arg4;
- (id)initWithType:(int)arg1 sourceTree:(id)arg2 files:(id)arg3 options:(id)arg4;
- (id)initWithType:(int)arg1 sourceTree:(id)arg2 destination:(id)arg3 files:(id)arg4 options:(id)arg5;
- (id)initWithType:(int)arg1 sourceTree:(id)arg2 destination:(id)arg3 startingRevision:(id)arg4 endingRevision:(id)arg5 files:(id)arg6 options:(id)arg7;
- (id)initWithType:(int)arg1 sourceTree:(id)arg2 startingRevision:(id)arg3 endingRevision:(id)arg4 files:(id)arg5 options:(id)arg6;
- (id)initWithType:(int)arg1 sourceTree:(id)arg2 message:(id)arg3 files:(id)arg4 options:(id)arg5;
- (id)initWithType:(int)arg1 workingCopyConfiguration:(id)arg2 destination:(id)arg3 files:(id)arg4 options:(id)arg5;
- (id)initWithType:(int)arg1 sourceTree:(id)arg2 files:(id)arg3;
- (id)initWithType:(int)arg1 sourceTree:(id)arg2;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface IDESchemeActionResultOperation : DVTOperation
{
    BOOL _isObservingIsExecuting;
    BOOL _isFinished;
    BOOL _isExecuting;
    DVTOperation *_trackingOperation;
    IDESchemeActionRecord *_schemeActionRecord;
    CDUnknownBlockType _actionCallbackBlock;
    CDUnknownBlockType _schemeActionResultComputationBlock;
}

+ (id)schemeActionResultOperationWithSchemeActionRecord:(id)arg1 trackingExecutionOfOperation:(id)arg2 actionCallbackBlock:(CDUnknownBlockType)arg3 schemeActionResultComputationBlock:(CDUnknownBlockType)arg4;
@property(nonatomic) BOOL isExecuting; // @synthesize isExecuting=_isExecuting;
@property(nonatomic) BOOL isFinished; // @synthesize isFinished=_isFinished;
@property BOOL isObservingIsExecuting; // @synthesize isObservingIsExecuting=_isObservingIsExecuting;
@property(copy) CDUnknownBlockType schemeActionResultComputationBlock; // @synthesize schemeActionResultComputationBlock=_schemeActionResultComputationBlock;
@property(copy) CDUnknownBlockType actionCallbackBlock; // @synthesize actionCallbackBlock=_actionCallbackBlock;
@property(retain) IDESchemeActionRecord *schemeActionRecord; // @synthesize schemeActionRecord=_schemeActionRecord;
@property(retain) DVTOperation *trackingOperation; // @synthesize trackingOperation=_trackingOperation;
- (void).cxx_destruct;
- (void)_doCancellationCleanup;
- (void)main;
- (void)start;
- (BOOL)isConcurrent;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)dealloc;

@end

@interface IDEXBSBuildParameters : NSObject <NSCopying>
{
    NSString *_projectName;
    NSString *_updateName;
    NSString *_sourceVersion;
    NSNumber *_buildNumber;
    NSString *_buildRecordPath;
    unsigned long long _hash;
}

@property(readonly, copy) NSString *buildRecordPath; // @synthesize buildRecordPath=_buildRecordPath;
@property(readonly, copy) NSNumber *buildNumber; // @synthesize buildNumber=_buildNumber;
@property(readonly, copy) NSString *sourceVersion; // @synthesize sourceVersion=_sourceVersion;
@property(readonly, copy) NSString *updateName; // @synthesize updateName=_updateName;
@property(readonly, copy) NSString *projectName; // @synthesize projectName=_projectName;
- (void).cxx_destruct;
- (id)dvt_detailedDebugDescription;
- (id)description;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initForProject:(id)arg1 fromUpdate:(id)arg2 sourceVersion:(id)arg3 buildNumber:(id)arg4 buildRecordPath:(id)arg5;

@end

@interface IDETextFragmentIndexQuickRejectionFilterProbe : NSObject
{
    long long _numberOfHashValues;
    unsigned long long *_hashes;
}

- (void)withHashValues:(CDUnknownBlockType)arg1;
- (void)dealloc;
- (id)initWithTerm:(id)arg1;
- (id)initWithTerms:(id)arg1;

@end

@interface IDETextFragmentIndexQuickRejectionFilter : NSObject <NSCoding>
{
    struct {
        long long _field1;
        unsigned char _field2[0];
    } *_bits;
}

- (long long)containmentResultForProbe:(id)arg1;
- (void)dealloc;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithContent:(id)arg1;

@end

@interface IDEIndexSymbolOccurrenceWithSymbolCollection : IDEIndexSymbolOccurrenceCollection
{
}

- (id)instantiateRow:(struct sqlite3_stmt *)arg1;
- (id)tempTableSchema;

@end

@interface IDESourceKitUIDSet : NSObject
{
    struct UIDContainer _UID;
    struct unordered_map<_sourcekit_uid_s *, DVTSourceCodeSymbolKind *, std::__1::hash<_sourcekit_uid_s *>, std::__1::equal_to<_sourcekit_uid_s *>, std::__1::allocator<std::__1::pair<_sourcekit_uid_s *const, DVTSourceCodeSymbolKind *>>> _symbolKinds;
    IDESourceKitLowLevelConnection *_conn;
}

- (id).cxx_construct;
- (void).cxx_destruct;
- (void)_initSymbolKindMap;
- (id)symbolKindForUID:(struct _sourcekit_uid_s *)arg1;
- (struct IDESourceKitUIDValues *)value;
- (struct IDESourceKitUIDRequests *)request;
- (struct IDESourceKitUIDKeys *)key;
- (id)init;
- (id)initWithConnection:(id)arg1;

@end

@interface IDELogDocumentLocation : DVTDocumentLocation
{
    NSIndexPath *_indexPath;
    BOOL _expandTranscript;
    struct _NSRange _characterRange;
}

@property(readonly) struct _NSRange characterRange; // @synthesize characterRange=_characterRange;
@property(readonly) BOOL expandTranscript; // @synthesize expandTranscript=_expandTranscript;
@property(readonly) NSIndexPath *indexPath; // @synthesize indexPath=_indexPath;
- (void).cxx_destruct;
- (BOOL)isEqual:(id)arg1;
- (long long)compare:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithDocumentURL:(id)arg1 timestamp:(id)arg2 indexPath:(id)arg3 expandTranscript:(BOOL)arg4;
- (id)initWithDocumentURL:(id)arg1 timestamp:(id)arg2 indexPath:(id)arg3 characterRange:(struct _NSRange)arg4;
- (id)_initWithDocumentURL:(id)arg1 timestamp:(id)arg2 indexPath:(id)arg3 expandTranscript:(BOOL)arg4 characterRange:(struct _NSRange)arg5;

@end

@interface IDEProfileQualification : NSObject
{
    NSSet *_passed;
    NSSet *_failed;
    NSArray *_qualifiers;
    NSSet *_signingCertificates;
    NSError *_signingCertificatesCodesignResolverError;
    DVTAppIDFeatures *_features;
    NSDictionary *_entitlements;
    NSArray *_devices;
    DVTPortalProfileType *_profileType;
    DVTSigningCertificateManager *_signingCertificateManager;
    id <DVTProvisioningProfile> _profile;
    id <IDEProvisioningBasicTeam> _team;
    NSString *_bundleID;
    DVTPlatform *_platform;
    IDEQualifiableProfileQualification *_portalProfileQualification;
}

+ (id)keyPathsForValuesAffectingAllowTeamProfiles;
@property(retain, nonatomic) IDEQualifiableProfileQualification *portalProfileQualification; // @synthesize portalProfileQualification=_portalProfileQualification;
@property(readonly, nonatomic) DVTPlatform *platform; // @synthesize platform=_platform;
@property(readonly, nonatomic) NSString *bundleID; // @synthesize bundleID=_bundleID;
@property(readonly, nonatomic) id <IDEProvisioningBasicTeam> team; // @synthesize team=_team;
@property(readonly, nonatomic) id <DVTProvisioningProfile> profile; // @synthesize profile=_profile;
@property(retain, nonatomic) DVTSigningCertificateManager *signingCertificateManager; // @synthesize signingCertificateManager=_signingCertificateManager;
@property(retain, nonatomic) DVTPortalProfileType *profileType; // @synthesize profileType=_profileType;
@property(copy, nonatomic) NSArray *devices; // @synthesize devices=_devices;
@property(copy, nonatomic) NSDictionary *entitlements; // @synthesize entitlements=_entitlements;
@property(copy, nonatomic) DVTAppIDFeatures *features; // @synthesize features=_features;
@property(retain, nonatomic) NSError *signingCertificatesCodesignResolverError; // @synthesize signingCertificatesCodesignResolverError=_signingCertificatesCodesignResolverError;
@property(retain, nonatomic) NSSet *signingCertificates; // @synthesize signingCertificates=_signingCertificates;
@property(copy, nonatomic) NSArray *qualifiers; // @synthesize qualifiers=_qualifiers;
@property(copy, nonatomic) NSSet *failed; // @synthesize failed=_failed;
@property(copy, nonatomic) NSSet *passed; // @synthesize passed=_passed;
- (void).cxx_destruct;
- (id)_profileTypeQualifier;
- (id)_xcodeManagedQualifier;
- (id)_devicesQualifier;
- (id)_entitlementsQualifier;
- (id)_containerQualifierWithContainerName:(id)arg1 fetchBlock:(CDUnknownBlockType)arg2;
- (id)_featuresQualifier;
- (id)_signingCertificateInclusionQualifier:(BOOL)arg1;
- (id)signingCertificatesCodesignResolverErrorQualifierSubtitle;
- (id)_manualQualifiers;
- (id)_xcodeManagedQualifiers:(BOOL)arg1;
@property(readonly, nonatomic) NSArray *qualificationErrors;
- (id)_qualifiers;
@property(nonatomic) BOOL allowTeamProfiles;
- (BOOL)isQualified;
- (BOOL)_qualifyWithQualifiers:(id)arg1;
- (BOOL)qualifyForManuallyManaged;
- (BOOL)qualifyForUseLocalAssets;
- (BOOL)qualifyForXcodeManaged;
- (BOOL)qualify;
- (id)initWithProfile:(id)arg1 team:(id)arg2 bundleID:(id)arg3 platform:(id)arg4;

@end

@interface IDEProvisioningInstallProfileRepairStep : IDEProvisioningRepairStep
{
    id <DVTProvisioningProfile> _profile;
}

+ (id)stepWithProfile:(id)arg1;
@property(readonly) id <DVTProvisioningProfile> profile; // @synthesize profile=_profile;
- (void).cxx_destruct;
- (BOOL)handleExecutionWithContext:(id)arg1 ledgerEntry:(id)arg2 error:(id *)arg3;
- (BOOL)preflightWithContext:(id)arg1 error:(id *)arg2;
- (id)activityDescription;
- (id)stepDescription;
- (id)initWithProfile:(id)arg1;

@end

@interface IDEBatchFindAbstractWorkspacePerFileTextualQuery : IDEBatchFindAbstractWorkspacePerFileQuery
{
    IDETextFragmentIndexQuickRejectionFilterProbe *_filterProbe;
    NSRegularExpression *_regularExpression;
    NSString *_queryText;
    NSLocale *_locale;
}

- (void).cxx_destruct;
- (void)processFilePath:(id)arg1 withIndex:(id)arg2 progressNotifier:(id)arg3 resultOrder:(long long)arg4 completionHandler:(CDUnknownBlockType)arg5;
- (void)generateFileMatchIfNeeded:(id *)arg1 populatingResults:(id *)arg2 forFilePath:(id)arg3 resultOrder:(long long)arg4 progressNotifier:(id)arg5;
- (BOOL)requiresEditorDocumentsToSaveBeforeSearching;
- (BOOL)treatsTextAsRegularExpression;
- (id)initWithSpecification:(id)arg1 initialNumberOfLinesCalculator:(CDUnknownBlockType)arg2 initialLineWrappingParameters:(id)arg3 workspace:(id)arg4 andDelegate:(id)arg5 error:(id *)arg6;

@end

@interface IDEProvisioningLedgerLogger : DVTLogger
{
}

- (void)logMessage:(id)arg1 forAspect:(id)arg2 logLevel:(int)arg3;

@end

@interface IDEWorkspaceUpgradeTasksController : NSObject
{
    IDEWorkspace *_workspace;
}

@property(readonly) IDEWorkspace *workspace; // @synthesize workspace=_workspace;
- (void).cxx_destruct;
- (void)processUpgradeTasks;
- (id)initWithWorkspace:(id)arg1;

@end

@interface IDEDistributionOptionUploadBitcodeState : NSObject
{
    BOOL _uploadBitcode;
    BOOL _bitcodeBalanced;
    unsigned long long _bitcodeLevel;
    NSSet *_platformsWantingAsk;
}

@property(retain) NSSet *platformsWantingAsk; // @synthesize platformsWantingAsk=_platformsWantingAsk;
@property BOOL bitcodeBalanced; // @synthesize bitcodeBalanced=_bitcodeBalanced;
@property unsigned long long bitcodeLevel; // @synthesize bitcodeLevel=_bitcodeLevel;
@property BOOL uploadBitcode; // @synthesize uploadBitcode=_uploadBitcode;
- (void).cxx_destruct;

@end

@interface IDEDistributionOptionUploadBitcode : IDEDistributionOption
{
}

+ (id)propertyListForContext:(id)arg1;
+ (id)_platformsRequiringBitcodeWithAppStoreSubmissionConfiguration:(id)arg1 flattenedDistributionItems:(id)arg2 error:(id *)arg3;
+ (id)_distributionItemsWithoutBitcodeForPlatforms:(id)arg1 flattenedDistributionItems:(id)arg2 archive:(id)arg3 withError:(id *)arg4;
+ (id)_platformsWantingBitcodeAskWithAppStoreSubmissionConfiguration:(id)arg1 flattenedDistributionItems:(id)arg2 archive:(id)arg3 error:(id *)arg4;
+ (id)_isAllAppleProvidedContentWithFlattenedDistributionItems:(id)arg1 archive:(id)arg2 error:(id *)arg3;
+ (id)availableOptionsForPropertyList;
- (id)providedOutputContextPropertyNames;
- (id)requiredInputContextPropertyNames;
- (id)distributionItemsWithoutBitcodeForPlatforms:(id)arg1 withError:(id *)arg2;
- (id)platformsWantingBitcodeAskWithError:(id *)arg1;
- (id)isAllAppleProvidedContentWithError:(id *)arg1;
- (BOOL)requiresBitcode;
- (BOOL)loadFromPropertyList:(id)arg1 error:(id *)arg2;
- (id)bitcodeStateWithError:(id *)arg1;

@end

@interface IDEIndexNewSymbol : NSObject
{
    IDEIndexNewFile *_file;
    long long _lineNumber;
    long long _column;
    long long _symbolId;
    unsigned long long _containerSeq;
    BOOL _hasBody;
}

@property(readonly, nonatomic) BOOL hasBody; // @synthesize hasBody=_hasBody;
@property(nonatomic) unsigned long long containerSeq; // @synthesize containerSeq=_containerSeq;
@property(nonatomic) long long symbolId; // @synthesize symbolId=_symbolId;
@property(readonly, nonatomic) long long column; // @synthesize column=_column;
@property(readonly, nonatomic) long long lineNumber; // @synthesize lineNumber=_lineNumber;
@property(readonly, nonatomic) __weak IDEIndexNewFile *file; // @synthesize file=_file;
- (void).cxx_destruct;
- (void)didAddBody;
@property(readonly, nonatomic) long long realSymbolId;
- (id)initWithFile:(id)arg1 lineNumber:(long long)arg2 column:(long long)arg3;

@end

@interface IDEDistributionItemRemovalStep : IDEDistributionItemProcessingStep
{
}

- (_Bool)runWithError:(id *)arg1;
- (id)providedOutputContextPropertyNames;
- (id)requiredInputContextPropertyNames;
- (id)name;

@end

@interface IDEProvisioningCreateCertificateRepairStep : IDEProvisioningRepairStep
{
    DVTPortalCertificateType *_type;
}

+ (id)createCertificateRepairStepWithCertificateType:(id)arg1;
@property(readonly, nonatomic) DVTPortalCertificateType *type; // @synthesize type=_type;
- (void).cxx_destruct;
- (BOOL)handleExecutionWithContext:(id)arg1 ledgerEntry:(id)arg2 error:(id *)arg3;
- (BOOL)preflightWithContext:(id)arg1 error:(id *)arg2;
- (id)activityDescription;
- (id)stepDescription;
- (id)initWithType:(id)arg1;

@end

@interface IDEIndexSymbolWithModelOccurrenceCollection : IDEIndexSymbolCollection
{
}

- (id)instantiateRow:(struct sqlite3_stmt *)arg1;
- (id)tempTableSchema;

@end

@interface IDESourceControlBranch : NSObject
{
    NSString *_name;
    IDESourceControlWorkingCopyConfiguration *_wcc;
    IDESourceControlRepository *_remote;
    BOOL _isMainBranch;
    BOOL _orphaned;
    BOOL _isNewBranch;
    IDESourceControlRevision *_currentRevision;
}

@property(retain) IDESourceControlRevision *currentRevision; // @synthesize currentRevision=_currentRevision;
@property(readonly) BOOL isNewBranch; // @synthesize isNewBranch=_isNewBranch;
@property BOOL orphaned; // @synthesize orphaned=_orphaned;
@property(readonly) BOOL isMainBranch; // @synthesize isMainBranch=_isMainBranch;
@property(retain) IDESourceControlRepository *remote; // @synthesize remote=_remote;
@property(readonly) IDESourceControlWorkingCopyConfiguration *wcc; // @synthesize wcc=_wcc;
@property(readonly) NSString *name; // @synthesize name=_name;
- (void).cxx_destruct;
- (BOOL)isEqual:(id)arg1;
- (id)repository:(id)arg1 currentRevisionWithCompletionBlock:(CDUnknownBlockType)arg2;
@property(readonly) NSString *repositoryURLString;
- (id)description;
- (id)ideModelObjectTypeIdentifier;
- (id)initWithNewBranchName:(id)arg1;
- (id)initWithName:(id)arg1 workingCopyConfiguration:(id)arg2 isMainBranch:(BOOL)arg3;

@end

@interface IDEContainerItemCore : NSObject <IDEContainerItemCore>
{
    id <IDEGroupCore> _parentGroup;
    NSString *_path;
}

@property(copy) NSString *path; // @synthesize path=_path;
@property(retain) id <IDEGroupCore> parentGroup; // @synthesize parentGroup=_parentGroup;
- (void).cxx_destruct;
@property(readonly) id <IDEContainerCore> parentContainer;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IDETemplate : NSObject <IDETemplateOptionParent>
{
    BOOL _chooserOnly;
    BOOL _hiddenFromLibrary;
    BOOL _hiddenFromChooser;
    NSString *_defaultCompletionName;
    NSString *_mainTemplateFile;
    NSArray *_allowedTypes;
    NSDictionary *_templateInfo;
    DVTFilePath *_filePath;
    IDETemplateKind *_templateKind;
    NSString *_templateName;
    NSString *_templateSummary;
    NSString *_templateDescription;
    NSString *_templateCategory;
    NSArray *_templatePlatforms;
    NSArray *_templateOptions;
    NSString *_buildableType;
    long long _sortOrder;
    IDEWorkspace *_workspace;
    IDETemplateOption *_optionWithMainTemplateFiles;
    IDETemplateOption *_optionWithAllowedTypes;
}

+ (id)availableTemplatesOfTemplateKind:(id)arg1;
+ (id)additionalAvailableTemplatesOfTemplateKind:(id)arg1;
+ (void)_processChildrenOfFilePath:(id)arg1 enumerator:(CDUnknownBlockType)arg2;
+ (void)initialize;
+ (id)_templateInfoForTemplateAtURL:(id)arg1 error:(id *)arg2;
@property(retain) IDETemplateOption *optionWithAllowedTypes; // @synthesize optionWithAllowedTypes=_optionWithAllowedTypes;
@property(retain) IDETemplateOption *optionWithMainTemplateFiles; // @synthesize optionWithMainTemplateFiles=_optionWithMainTemplateFiles;
@property(retain, nonatomic) IDEWorkspace *workspace; // @synthesize workspace=_workspace;
@property long long sortOrder; // @synthesize sortOrder=_sortOrder;
@property(readonly, copy) NSString *buildableType; // @synthesize buildableType=_buildableType;
@property(readonly) BOOL hiddenFromChooser; // @synthesize hiddenFromChooser=_hiddenFromChooser;
@property(readonly) BOOL hiddenFromLibrary; // @synthesize hiddenFromLibrary=_hiddenFromLibrary;
@property(readonly) BOOL chooserOnly; // @synthesize chooserOnly=_chooserOnly;
@property(readonly, copy) NSArray *templateOptions; // @synthesize templateOptions=_templateOptions;
@property(readonly) NSArray *templatePlatforms; // @synthesize templatePlatforms=_templatePlatforms;
@property(readonly, copy) NSString *templateCategory; // @synthesize templateCategory=_templateCategory;
@property(copy) NSString *templateDescription; // @synthesize templateDescription=_templateDescription;
@property(readonly, copy) NSString *templateSummary; // @synthesize templateSummary=_templateSummary;
@property(readonly, copy) NSString *templateName; // @synthesize templateName=_templateName;
@property(retain) IDETemplateKind *templateKind; // @synthesize templateKind=_templateKind;
@property(readonly) DVTFilePath *filePath; // @synthesize filePath=_filePath;
@property(readonly, copy) NSDictionary *templateInfo; // @synthesize templateInfo=_templateInfo;
- (void).cxx_destruct;
@property(readonly, copy) NSArray *allowedTypes; // @synthesize allowedTypes=_allowedTypes;
@property(readonly, copy) NSString *mainTemplateFile; // @synthesize mainTemplateFile=_mainTemplateFile;
- (void)valueDidChangeForOption:(id)arg1;
- (id)currentOptionsIdentifierValue;
- (id)productNameOption;
- (id)currentCompletionName;
@property(readonly, copy) NSString *defaultCompletionName; // @synthesize defaultCompletionName=_defaultCompletionName;
- (long long)templateCompare:(id)arg1;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
- (BOOL)isEqual:(id)arg1;
- (id)identifier;
- (Class)templateOptionClass;
- (id)initWithTemplateInfo:(id)arg1 filePath:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) Class superclass;

@end

@interface IDEActivityLogUnitTestSectionRecorder : IDEActivityLogSectionRecorder
{
    BOOL _canFinish;
}

@property BOOL canFinish; // @synthesize canFinish=_canFinish;
- (id)section;

@end

@interface IDEBreakpointActionArchivingProxy : NSObject
{
    NSString *_actionExtensionID;
    BOOL _wasSuccessfullyUnarchived;
    IDEBreakpointAction *_proxiedAction;
}

+ (id)_breakpointActionExtensions;
+ (id)_extensionIDForAction:(id)arg1;
+ (id)actionProxyForAction:(id)arg1;
@property(readonly) BOOL wasSuccessfullyUnarchived; // @synthesize wasSuccessfullyUnarchived=_wasSuccessfullyUnarchived;
@property(readonly) IDEBreakpointAction *proxiedAction; // @synthesize proxiedAction=_proxiedAction;
- (void).cxx_destruct;
- (void)addActionContent:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setActionExtensionIDFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)dvt_encodeRelationshipsWithXMLArchiver:(id)arg1 version:(id)arg2;
- (void)dvt_encodeAttributesWithXMLArchiver:(id)arg1 version:(id)arg2;

@end

@interface IDEProjectItemModel : NSObject <DVTInvalidation>
{
    NSArray *_flightChecks;
    BOOL _needToPublish;
    id <IDEFlightChecking> _appIDFeatureFlightCheck;
    IDECapabilitiesContext *_targetCapabilitiesContext;
    id <IDEProjectItem> _item;
    DVTDelayedInvocation *_delayedUpdateInvocation;
}

+ (void)initialize;
+ (Class)projectItemModelFlightCheckContextProviderClass;
@property BOOL needToPublish; // @synthesize needToPublish=_needToPublish;
@property(readonly) DVTDelayedInvocation *delayedUpdateInvocation; // @synthesize delayedUpdateInvocation=_delayedUpdateInvocation;
@property(readonly) id <IDEProjectItem> item; // @synthesize item=_item;
@property(readonly) IDECapabilitiesContext *targetCapabilitiesContext; // @synthesize targetCapabilitiesContext=_targetCapabilitiesContext;
@property(readonly, nonatomic) NSArray *flightChecks; // @synthesize flightChecks=_flightChecks;
- (void).cxx_destruct;
- (BOOL)entitlementsContainsEntitlementKey;
@property(readonly) Xcode3TargetInfoPlistCoordinator *infoPlistCoordinator;
@property(readonly) Xcode3TargetLinkedFrameworksCoordinator *linkedFrameworksCoordinator;
@property(readonly) IDEAppIDFeatureCoordinator *appIDFeatureCoordinator;
@property(readonly) Xcode3TargetEntitlementsCoordinator<IDEProjectItemModelEntitlementsCoordinator> *entitlementsCoordinator;
@property(readonly) Xcode3TargetBuildSettingsCoordinator *buildSettingsCoordinator;
- (void)runFlightChecks;
@property(readonly) BOOL requiresAccountAndTeamSelection;
@property(readonly) BOOL isEnabledUsingEducatedGuess;
- (void)setEnabled:(BOOL)arg1 flightCheckContext:(id)arg2;
- (BOOL)isEnabledWithoutEducatedGuess;
@property(readonly, getter=isEnabled) BOOL enabled;
- (void)publishStateWithContext:(id)arg1;
- (void)modelWasDisabled;
- (void)modelWasEnabledWithContext:(id)arg1;
- (void)updateWithContext:(id)arg1;
- (void)targetCoordinatorsChanged:(id)arg1;
@property(readonly, nonatomic) id <IDEFlightChecking> appIDFeatureFlightCheck; // @synthesize appIDFeatureFlightCheck=_appIDFeatureFlightCheck;
- (void)primitiveInvalidate;
- (id)init;
- (id)initWithCapabilitiesContext:(id)arg1 item:(id)arg2;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface IDEAddressBreakpoint : IDESymbolicBreakpoint
{
    NSString *_hexAddress;
}

+ (id)_createSymbolNameFromAddress:(id)arg1;
- (void).cxx_destruct;
- (id)displayName;
@property(copy) NSString *hexAddress;
- (id)initWithAddress:(id)arg1;

@end

@interface IDETestLogProvider : IDELogProvider
{
}

+ (id)keyPathsForValuesAffectingLogRecords;
- (id)domainIdentifier;
- (id)ideModelObjectTypeIdentifier;
- (id)logRecords;
- (id)initWithDomainItem:(id)arg1;

@end

@interface IDERenameableXcode3ProjectItem : NSObject
{
    id _associatedObject;
    NSString *_nameContext;
}

@property(copy) NSString *nameContext; // @synthesize nameContext=_nameContext;
@property(retain) id associatedObject; // @synthesize associatedObject=_associatedObject;
- (void).cxx_destruct;

@end

@interface IDEMemoryData : IDERecordedThreadCollection
{
    BOOL _shouldAutoUpdate;
    BOOL _memoryFaulted;
    BOOL _showsAsMemoryFaulted;
    unsigned long long _startingAddress;
    NSString *_expression;
    unsigned long long _numberOfBytes;
    NSData *_rawMemoryData;
    NSData *_shadowMemoryData;
    NSString *_uuid;
    NSURL *_url;
}

@property(retain) NSURL *url; // @synthesize url=_url;
@property(readonly) NSString *uuid; // @synthesize uuid=_uuid;
@property BOOL showsAsMemoryFaulted; // @synthesize showsAsMemoryFaulted=_showsAsMemoryFaulted;
@property(nonatomic, getter=isMemoryFaulted) BOOL memoryFaulted; // @synthesize memoryFaulted=_memoryFaulted;
@property BOOL shouldAutoUpdate; // @synthesize shouldAutoUpdate=_shouldAutoUpdate;
@property(copy) NSData *shadowMemoryData; // @synthesize shadowMemoryData=_shadowMemoryData;
@property(copy) NSData *rawMemoryData; // @synthesize rawMemoryData=_rawMemoryData;
@property unsigned long long numberOfBytes; // @synthesize numberOfBytes=_numberOfBytes;
@property(copy) NSString *expression; // @synthesize expression=_expression;
@property unsigned long long startingAddress; // @synthesize startingAddress=_startingAddress;
- (void).cxx_destruct;
- (void)gatherAdditionalInformationForAddress:(unsigned long long)arg1 numberOfBytes:(unsigned long long)arg2;
- (void)primitiveInvalidate;
- (void)_updateUsingExpression:(id)arg1 numberOfBytes:(unsigned long long)arg2;
- (void)updateNumberOfBytes:(unsigned long long)arg1;
- (void)updateUsingExpression:(id)arg1;
- (void)update;
- (void)autoUpdate;
- (id)initWithExpression:(id)arg1 numberOfBytes:(unsigned long long)arg2 process:(id)arg3;
- (id)generateNewURL;

@end

@interface IDEMemoryDataURLParts : NSObject
{
    int _processID;
    NSString *_memoryDataUUID;
}

+ (id)urlParts:(id)arg1;
+ (BOOL)isMemoryDataURL:(id)arg1;
@property(readonly) NSString *memoryDataUUID; // @synthesize memoryDataUUID=_memoryDataUUID;
@property(readonly) int processID; // @synthesize processID=_processID;
- (void).cxx_destruct;
- (id)_initWithProcessID:(int)arg1 memoryDataUUID:(id)arg2;

@end

@interface IDEBreakpoint : NSObject <DVTXMLUnarchiving, NSCopying, DVTInvalidation>
{
    NSMutableArray *_actions;
    NSMutableArray *_locations;
    NSMapTable *_actionsToSetsOfObservers;
    DVTObservingToken *_actionsExpressionsObserverToken;
    BOOL _shouldBeEnabled;
    BOOL _continueAfterRunningActions;
    BOOL _textInFilterableTextFieldModified;
    int _breakpointStackSelectionBehavior;
    NSString *_displayName;
    IDEBreakpointBucket *_bucket;
    id <IDEBreakpointDelegate> _delegate;
    unsigned long long _ignoreCount;
    unsigned long long _hitCount;
    NSString *_condition;
    NSString *_customStopReasonString;
}

+ (id)keyPathsForValuesAffectingModifiedDescription;
+ (id)keyPathsForValuesAffectingModified;
+ (id)propertiesAffectingPersistenceState;
+ (BOOL)supportsInvalidationPrevention;
+ (void)initialize;
@property(retain) NSString *customStopReasonString; // @synthesize customStopReasonString=_customStopReasonString;
@property int breakpointStackSelectionBehavior; // @synthesize breakpointStackSelectionBehavior=_breakpointStackSelectionBehavior;
@property BOOL textInFilterableTextFieldModified; // @synthesize textInFilterableTextFieldModified=_textInFilterableTextFieldModified;
@property BOOL continueAfterRunningActions; // @synthesize continueAfterRunningActions=_continueAfterRunningActions;
@property(copy, nonatomic) NSString *condition; // @synthesize condition=_condition;
@property unsigned long long hitCount; // @synthesize hitCount=_hitCount;
@property unsigned long long ignoreCount; // @synthesize ignoreCount=_ignoreCount;
@property(nonatomic) BOOL shouldBeEnabled; // @synthesize shouldBeEnabled=_shouldBeEnabled;
@property __weak id <IDEBreakpointDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain) IDEBreakpointBucket *bucket; // @synthesize bucket=_bucket;
@property(copy) NSString *displayName; // @synthesize displayName=_displayName;
- (void).cxx_destruct;
- (void)primitiveInvalidate;
- (void)addLocations:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)addActions:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (id)_actionArchivingProxiesArray;
- (void)dvt_encodeRelationshipsWithXMLArchiver:(id)arg1 version:(id)arg2;
- (void)setBreakpointStackSelectionBehaviorFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setContinueAfterRunningActionsFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setConditionFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setShouldBeEnabledFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (BOOL)_booleanValueFromUTF8String:(char *)arg1;
- (void)dvt_encodeAttributesWithXMLArchiver:(id)arg1 version:(id)arg2;
- (id)initFromXMLUnarchiver:(id)arg1 archiveVersion:(float)arg2;
- (void)_handleActionsChanged:(id)arg1;
- (void)resetActionExpressionResults;
@property(readonly, nonatomic) NSString *accessibilityDescription;
@property(readonly, nonatomic) NSString *modifiedDescription;
@property(readonly, nonatomic) BOOL modified;
- (void)locationWasRemoved:(id)arg1;
- (void)_updateLocation:(id)arg1 fromLocation:(id)arg2;
- (void)_locationWasResolved:(id)arg1;
- (unsigned long long)_indexOfSimilarBreakpointLocationMatching:(id)arg1 inLocations:(id)arg2;
- (void)locationWasResolved:(id)arg1;
- (void)setInitialResolvedLocations:(id)arg1;
@property(readonly) BOOL locationsProvideAdditionalInformation;
- (void)toggleShouldBeEnabled;
- (void)_notifyPersistencyStateChanged;
- (void)primitiveSetBucket:(id)arg1;
@property(readonly, copy) NSString *description;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)init;
- (void)_dvt_commonInit;

// Remaining properties
@property(copy) NSArray *actions; // @dynamic actions;
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) NSArray *locations; // @dynamic locations;
@property(readonly) NSMutableArray *mutableActions; // @dynamic mutableActions;
@property(readonly) NSMutableArray *mutableLocations; // @dynamic mutableLocations;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface IDEPlaygroundPageSharedContext : IDEPlaygroundCommonSharedContext
{
    IDEPlaygroundSharedContext *_playgroundContext;
}

+ (id)keyPathsForValuesAffectingSwiftContentsFilePath;
+ (id)keyPathsForValuesAffectingImplicit;
+ (Class)contextDeserializerClass;
+ (Class)contextSerializerClass;
+ (id)filePathExtension;
+ (id)UTI;
@property(readonly, nonatomic) __weak IDEPlaygroundSharedContext *playgroundContext; // @synthesize playgroundContext=_playgroundContext;
- (void).cxx_destruct;
- (BOOL)unregisterReferencingContainer:(id)arg1;
- (BOOL)registerReferencingContainer:(id)arg1;
@property(readonly, nonatomic) DVTFilePath *swiftContentsFilePath;
- (id)_targetTripleForAuxiliarySource;
- (id)_sdkForAuxiliarySource;
- (id)_platformForFrameworkSearchPaths;
- (id)frameworkSearchPaths;
- (id)sourcesDirectoryPath;
- (id)resourcesDirectoryPath;
- (id)name;
- (id)description;
- (void)dealloc;

// Remaining properties
@property(readonly, nonatomic) DVTFilePath *timelineFilePath; // @dynamic timelineFilePath;

@end

@interface IDEIndexDatabaseQueryProvider : NSObject <IDEIndexQueryProvider>
{
    IDEIndexDatabase *_database;
    NSDictionary *_settings;
    DVTDispatchLock *_cacheLock;
    NSMutableDictionary *_symbolCountsByKind;
}

+ (BOOL)supportsSymbolColoring;
+ (id)locationForURL:(id)arg1 locator:(id)arg2;
@property(readonly, nonatomic) NSDictionary *settings; // @synthesize settings=_settings;
@property(readonly, nonatomic) IDEIndexDatabase *database; // @synthesize database=_database;
- (void).cxx_destruct;
- (id)allAutoImportCompletionItemsMatchingKind:(id)arg1 symbolLanguage:(id)arg2 forIndex:(id)arg3;
- (id)allAutoImportCompletionItemsMatchingKind:(id)arg1 forIndex:(id)arg2;
- (id)completionStringForSymbol:(id)arg1;
- (BOOL)isProjectSymbol:(id)arg1;
- (id)timestampForFile:(id)arg1;
- (id)symbolDumpForFile:(id)arg1;
- (id)calleesForSymbolOccurrence:(id)arg1;
- (id)locationForSymbolOccurrence:(id)arg1;
- (id)containingSymbolForOccurrence:(id)arg1;
- (id)correspondingSymbolForOccurrence:(id)arg1;
- (id)relatedClassForCategory:(id)arg1;
- (id)propertiesForCategory:(id)arg1;
- (id)instanceVariablesForCategory:(id)arg1;
- (id)instanceMethodsForCategory:(id)arg1;
- (id)classMethodsForCategory:(id)arg1;
- (id)allImplementingClassesForProtocol:(id)arg1;
- (id)implementingClassesForProtocol:(id)arg1;
- (id)subProtocolsForProtocol:(id)arg1;
- (id)allSuperProtocolsForProtocol:(id)arg1;
- (id)superProtocolsForProtocol:(id)arg1;
- (id)propertiesForProtocol:(id)arg1;
- (id)instanceMethodsForProtocol:(id)arg1;
- (id)classMethodsForProtocol:(id)arg1;
- (id)allInterfacesForClass:(id)arg1;
- (id)interfacesForClass:(id)arg1;
- (id)interfacesForClass:(id)arg1 andSuperclasses:(BOOL)arg2;
- (id)allProtocolsForClass:(id)arg1;
- (id)protocolsForClass:(id)arg1;
- (id)allOccurrencesOfMembers:(id)arg1 forClass:(id)arg2;
- (id)allSubClassesForClass:(id)arg1;
- (id)subClassesForClass:(id)arg1;
- (id)allSuperClassesForClass:(id)arg1;
- (id)allSuperClassesForClass:(id)arg1 cancelWhen:(CDUnknownBlockType)arg2;
- (id)superClassesForClass:(id)arg1;
- (id)categoriesForClass:(id)arg1;
- (id)gkInspectablePropertiesForClass:(id)arg1;
- (id)ibOutletCollectionPropertiesForClass:(id)arg1;
- (id)ibOutletCollectionVariablesForClass:(id)arg1;
- (id)ibOutletCollectionsForClass:(id)arg1;
- (id)ibOutletPropertiesForClass:(id)arg1;
- (id)ibOutletVariablesForClass:(id)arg1;
- (id)ibOutletsForClass:(id)arg1;
- (id)ibActionMethodsForClass:(id)arg1;
- (id)propertiesForClass:(id)arg1;
- (id)instanceVariablesForClass:(id)arg1;
- (id)classVariablesForClass:(id)arg1;
- (id)instanceMethodsForClass:(id)arg1;
- (id)classMethodsForClass:(id)arg1;
- (id)childrenForContainer:(id)arg1;
- (id)getterForProperty:(id)arg1;
- (id)setterForProperty:(id)arg1;
- (id)callsForCallable:(id)arg1 cancelWhen:(CDUnknownBlockType)arg2;
- (id)_allSubClassesForClass:(id)arg1 stoppingAt:(id)arg2 cancelWhen:(CDUnknownBlockType)arg3;
- (id)typeOfArgument:(unsigned long long)arg1 forCallable:(id)arg2;
- (unsigned long long)numArgumentsForCallable:(id)arg1;
- (id)returnTypeForCallable:(id)arg1;
- (id)propertyForCallable:(id)arg1;
- (id)overridingSymbolsForCallable:(id)arg1;
- (id)overriddenSymbolsForCallable:(id)arg1;
- (id)overriddenSymbolsForCallable:(id)arg1 cancelWhen:(CDUnknownBlockType)arg2;
- (id)referencesForSymbol:(id)arg1;
- (id)referencingFilesForSymbol:(id)arg1;
- (id)containerSymbolForSymbol:(id)arg1;
- (id)containerSymbolsForSymbol:(id)arg1;
- (id)definitionsForSymbolWithResolutionOffset:(long long)arg1;
- (id)definitionsForSymbol:(id)arg1;
- (id)declarationsForSymbol:(id)arg1;
- (id)occurrencesForSymbol:(id)arg1;
- (id)modelOccurrenceForSymbol:(id)arg1;
- (id)filesWithSymbolOccurrencesMatchingName:(id)arg1 kind:(id)arg2 forIndex:(id)arg3;
- (id)classesWithReferencesToSymbols:(id)arg1 forIndex:(id)arg2;
- (id)allClassesWithMembers:(id)arg1 forIndex:(id)arg2;
- (id)classesWithMembers:(id)arg1 forIndex:(id)arg2;
- (id)classesWithMembers:(id)arg1 andSubclasses:(BOOL)arg2 cancelWhen:(CDUnknownBlockType)arg3;
- (id)allMethodsMatchingMethod:(id)arg1 forReceiver:(id)arg2 forIndex:(id)arg3;
- (id)membersMatchingName:(id)arg1 kinds:(id)arg2 forInterfaces:(id)arg3 forIndex:(id)arg4;
- (id)membersMatchingKinds:(id)arg1 forInterfaces:(id)arg2 forIndex:(id)arg3;
- (id)tempTableForSymbolOccurrences:(id)arg1 shouldDrop:(char *)arg2;
- (id)tempTableForSymbols:(id)arg1 shouldDrop:(char *)arg2;
- (id)kindsStringForKinds:(id)arg1;
- (id)symbolsForResolutions:(id)arg1 forIndex:(id)arg2;
- (id)parsedCodeCommentAtLocation:(id)arg1 withCurrentFileContentDictionary:(id)arg2 forIndex:(id)arg3;
- (id)parsedCodeCommentAtLocation:(id)arg1 withCurrentFileContentDictionary:(id)arg2 forIndex:(id)arg3 cursorKindOut:(long long *)arg4;
- (id)parsedCodeCommentAtLocation:(id)arg1 withCurrentFileContentDictionary:(id)arg2 forIndex:(id)arg3 symbolKindOut:(id *)arg4;
- (id)impliedHeadersForModuleImportLocation:(id)arg1 withCurrentFileContentDictionary:(id)arg2 forIndex:(id)arg3;
- (id)importedFileAtDocumentLocation:(id)arg1 withCurrentFileContentDictionary:(id)arg2 forIndex:(id)arg3;
- (id)importedFilesAtDocument:(id)arg1 withCurrentFileContentDictionary:(id)arg2 forIndex:(id)arg3;
- (id)collectionElementTypeSymbolForSymbol:(id)arg1 withCurrentFileContentDictionary:(id)arg2 forIndex:(id)arg3;
- (id)typeSymbolForSymbol:(id)arg1 withCurrentFileContentDictionary:(id)arg2 forIndex:(id)arg3;
- (id)messageReceiverInContext:(id)arg1 withCurrentFileContentDictionary:(id)arg2 forIndex:(id)arg3;
- (id)referencesToSymbolMatchingName:(id)arg1 inContext:(id)arg2 withCurrentFileContentDictionary:(id)arg3 forIndex:(id)arg4;
- (id)referencesToSymbol:(id)arg1 inContext:(id)arg2 withCurrentFileContentDictionary:(id)arg3 forIndex:(id)arg4;
- (id)symbolsUsedInContext:(id)arg1 withCurrentFileContentDictionary:(id)arg2 forIndex:(id)arg3;
- (id)symbolsOccurrencesInContext:(id)arg1 withCurrentFileContentDictionary:(id)arg2 forIndex:(id)arg3;
- (id)codeDiagnosticsAtLocation:(id)arg1 withCurrentFileContentDictionary:(id)arg2 forIndex:(id)arg3;
- (id)codeCompletionsAtLocation:(id)arg1 withCurrentFileContentDictionary:(id)arg2 completionContext:(id *)arg3 forIndex:(id)arg4;
- (id)allParentsOfSymbols:(id)arg1 cancelWhen:(CDUnknownBlockType)arg2 forIndex:(id)arg3;
- (id)topLevelSymbolsInFile:(id)arg1 forIndex:(id)arg2;
- (id)testMethodsForClasses:(id)arg1 forIndex:(id)arg2;
- (id)allSubClassesForClasses:(id)arg1 forIndex:(id)arg2;
- (id)allSymbolsMatchingNames:(id)arg1 kind:(id)arg2 forIndex:(id)arg3;
- (id)allSymbolsMatchingName:(id)arg1 kind:(id)arg2 forIndex:(id)arg3;
- (id)allSymbolsMatchingName:(id)arg1 kind:(id)arg2 cancelWhen:(CDUnknownBlockType)arg3 forIndex:(id)arg4;
- (unsigned long long)countOfSymbolsMatchingKind:(id)arg1 workspaceOnly:(BOOL)arg2 forIndex:(id)arg3;
- (id)allSymbolsMatchingKind:(id)arg1 workspaceOnly:(BOOL)arg2 cancelWhen:(CDUnknownBlockType)arg3 forIndex:(id)arg4;
- (id)allProtocolsMatchingName:(id)arg1 forIndex:(id)arg2;
- (id)allClassesMatchingName:(id)arg1 forIndex:(id)arg2;
- (id)symbolsMatchingName:(id)arg1 inContext:(id)arg2 withCurrentFileContentDictionary:(id)arg3 forIndex:(id)arg4;
- (id)symbolsMatchingName:(id)arg1 inContext:(id)arg2 forIndex:(id)arg3;
- (id)symbolsContaining:(id)arg1 anchorStart:(BOOL)arg2 anchorEnd:(BOOL)arg3 subsequence:(BOOL)arg4 ignoreCase:(BOOL)arg5 cancelWhen:(CDUnknownBlockType)arg6 forIndex:(id)arg7;
- (id)topLevelProtocolsWorkspaceOnly:(BOOL)arg1 cancelWhen:(CDUnknownBlockType)arg2 forIndex:(id)arg3;
- (id)topLevelClassesWorkspaceOnly:(BOOL)arg1 cancelWhen:(CDUnknownBlockType)arg2 forIndex:(id)arg3;
- (id)topLevelSymbolsMatchingKind:(id)arg1 workspaceOnly:(BOOL)arg2 cancelWhen:(CDUnknownBlockType)arg3 forIndex:(id)arg4;
- (id)filesContaining:(id)arg1 anchorStart:(BOOL)arg2 anchorEnd:(BOOL)arg3 subsequence:(BOOL)arg4 ignoreCase:(BOOL)arg5 cancelWhen:(CDUnknownBlockType)arg6 forIndex:(id)arg7;
- (id)filesIncludedByFile:(id)arg1 forIndex:(id)arg2;
- (id)filesIncludingFile:(id)arg1 forIndex:(id)arg2;
- (void)didSave;
- (void)purgeCaches;
- (id)initWithSettings:(id)arg1 database:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IDESourceKitCategorySymbol : IDESourceKitContainerSymbol
{
}

- (BOOL)isKindOfClass:(Class)arg1;
- (id)relatedClass;
- (id)properties;
- (id)instanceVariables;
- (id)instanceMethods;
- (id)classMethods;

@end

@interface IDEIndexDBTempTable : NSObject
{
    IDEIndexDBConnection *_dbConnection;
    NSString *_tableName;
    BOOL _readOnly;
    long long _count;
}

@property(readonly, nonatomic) IDEIndexDBConnection *dbConnection; // @synthesize dbConnection=_dbConnection;
- (void).cxx_destruct;
- (void)enumerateFromOffset:(long long)arg1 limit:(long long)arg2 forEachRow:(CDUnknownBlockType)arg3;
- (long long)count;
- (void)connectionDidClose;
- (void)drop;
- (int)insertSQLChanges:(id)arg1 withBindings:(CDUnknownBlockType)arg2;
- (void)dumpContents;
@property(readonly, nonatomic) IDEIndexDatabase *database;
- (id)description;
- (id)initWithConnection:(id)arg1 name:(id)arg2 schema:(id)arg3;

@end

@interface IDEConcreteTestingSpecifier : NSObject <IDETestingSpecifier>
{
    id <IDETestable> _testable;
    NSMutableArray *_mutableSkippedTests;
    IDEDeviceAppDataReference *_deviceAppDataReference;
    IDELocationScenarioReference *_locationScenarioReference;
    DVTObservingToken *_buildableValidityObservingToken;
    NSSet *_adHocTests;
    BOOL _skipped;
    IDEScheme *_scheme;
}

@property(readonly) IDEScheme *scheme; // @synthesize scheme=_scheme;
- (void).cxx_destruct;
@property(copy) NSSet *adHocTests;
- (void)disableTest:(id)arg1;
- (void)enableTest:(id)arg1;
@property(copy) NSArray *skippedTests;
@property BOOL skipped;
@property(retain) IDELocationScenarioReference *locationScenarioReference;
@property(retain) IDEDeviceAppDataReference *deviceAppDataReference;
- (id)testable;
- (id)initWithTestable:(id)arg1 scheme:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IDETextFragmentProviderLookupEntry : NSObject
{
    Class _textProviderClass;
    NSArray *_fileDataTypes;
}

@property(readonly) NSArray *fileDataTypes; // @synthesize fileDataTypes=_fileDataTypes;
@property(readonly) Class textProviderClass; // @synthesize textProviderClass=_textProviderClass;
- (void).cxx_destruct;
- (id)description;
- (id)initWithTextProviderClass:(Class)arg1 fileDataTypes:(id)arg2;

@end

@interface IDENullTextFragmentProvider : IDETextFragmentProvider
{
}

- (void)generateTextFragmentsForFilePath:(id)arg1 modificationDate:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;

@end

@interface IDETextFragmentProvider : NSObject
{
}

+ (id)documentLocationForTextFragment:(id)arg1 range:(struct _NSRange)arg2;
+ (Class)textProviderClassForFilePath:(id)arg1;
+ (void)faultProviderClasses;
+ (id)textFragmentProviderLookupEntriesInPriorityOrder;
- (BOOL)retainsFragments;
- (void)generateTextFragmentsForFilePath:(id)arg1 modificationDate:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;

@end

@interface IDEProvisioningDevice : NSObject <IDEProvisioningDevice>
{
    NSString *_name;
    NSString *_UDID;
    NSString *_deviceClass;
}

@property(readonly) NSString *deviceClass; // @synthesize deviceClass=_deviceClass;
@property(readonly) NSString *UDID; // @synthesize UDID=_UDID;
@property(readonly) NSString *name; // @synthesize name=_name;
- (void).cxx_destruct;
@property(readonly) unsigned long long hash;
- (BOOL)isEqual:(id)arg1;
- (id)initWithPortalDevice:(id)arg1;
- (id)initWithName:(id)arg1 UDID:(id)arg2 deviceClass:(id)arg3;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;

@end

@interface IDEDistributionFileLogger : DVTFileLogger
{
    int _exclusiveLogLevel;
}

@property(readonly) int exclusiveLogLevel; // @synthesize exclusiveLogLevel=_exclusiveLogLevel;
- (void)logMessage:(id)arg1 forAspect:(id)arg2 logLevel:(int)arg3;
- (id)initWithURL:(id)arg1 append:(BOOL)arg2 exclusiveLogLevel:(int)arg3;

@end

@interface IDETestSchemeBaselineRecord : NSObject
{
    NSMutableDictionary *_infoDict;
    NSMutableDictionary *_bundleBaselinesByTestBundleUUIDDict;
}

+ (id)_bundleBaselineRecordFilePathInSchemeBaselineWithFilePath:(id)arg1 withTestBundleName:(id)arg2 error:(id *)arg3;
- (void).cxx_destruct;
- (void)unionWithSchemeBaselineRecord:(id)arg1;
- (void)setBundleBaselineRecord:(id)arg1 forTestBundleName:(id)arg2;
- (id)bundleBaselineRecordForTestBundleName:(id)arg1;
- (id)testBundleNames;
- (BOOL)writeToFilePath:(id)arg1 workspace:(id)arg2 error:(id *)arg3;
- (id)initWithFilePath:(id)arg1 error:(id *)arg2;
- (id)init;

@end

@interface IDEDebuggerExpression : NSObject
{
    NSString *_expressionString;
    NSString *_result;
}

@property(copy) NSString *result; // @synthesize result=_result;
@property(copy) NSString *expressionString; // @synthesize expressionString=_expressionString;
- (void).cxx_destruct;
- (void)resetResult;
- (BOOL)hasBeenEvaluated;
- (id)initWithExpressionString:(id)arg1;

@end

@interface IDEPlaygroundContextSerializerCommon : NSObject
{
}

+ (id)stringAttributeForValue:(id)arg1 name:(id)arg2 allowEmptyValue:(BOOL)arg3 error:(id *)arg4;
+ (id)filename;
+ (id)rootXMLElementFromContext:(id)arg1 error:(id *)arg2;
+ (id)fileWrapperForContext:(id)arg1 error:(id *)arg2;

@end

@interface IDEPlaygroundContextDeserializerCommon : NSObject
{
}

+ (id)stringAttributeForName:(id)arg1 fromElement:(id)arg2 error:(id *)arg3;
+ (id)rootElementName;
+ (id)filename;
+ (id)contextRootElementFromFilePath:(id)arg1 error:(id *)arg2;
+ (id)contextFromFilePath:(id)arg1 parentContext:(id)arg2 error:(id *)arg3;

@end

@interface IDETestApplicationDependencyMapper : NSObject
{
}

+ (id)bundleIdentifierForBundleAtURL:(id)arg1;
+ (id)_bundleIdentifierMapForApplicationsAtURLs:(id)arg1 error:(id *)arg2;
+ (id)_applicationsInDirectories:(id)arg1 error:(id *)arg2;
+ (id)bundleIdentifierMapWithDependentProductPaths:(id)arg1 searchDirectories:(id)arg2 error:(id *)arg3;

@end

@interface IDEProvisioningRepairExecutionContext : NSObject
{
    IDEProvisioningRepairContext *_repairContext;
    IDEProvisioningLedgerEntry *_repairLedgerEntry;
}

@property(readonly, nonatomic) IDEProvisioningLedgerEntry *repairLedgerEntry; // @synthesize repairLedgerEntry=_repairLedgerEntry;
- (void).cxx_destruct;
@property(readonly, nonatomic) unsigned long long successiveRepairCount;
@property(readonly, nonatomic) id <IDEProvisioningRepairPortal> portal;
@property(readonly, nonatomic) DVTProvisioningProfileManager *provisioningProfileManager;
@property(readonly, nonatomic) DVTSigningCertificateManager *signingCertificateManager;
@property(readonly, nonatomic) DVTPortalTeam *team;
@property(readonly, nonatomic) id <IDERepairable> repairable;
- (id)sessionWithLedgerEntry:(id)arg1 error:(id *)arg2;
- (id)initWithRepairContext:(id)arg1 repairLedgerEntry:(id)arg2;

@end

@interface IDERunDestinationManager : NSObject
{
    NSMapTable *_runDestinationsByDeviceCache;
    NSMutableSet *_availableRunDestinations;
    DVTObservingToken *_deviceManagerObservation;
    IDERunDestination *_fallbackRunDestination;
}

+ (id)sharedRunDestinationManager;
+ (void)initialize;
@property(readonly) IDERunDestination *fallbackRunDestination; // @synthesize fallbackRunDestination=_fallbackRunDestination;
- (void).cxx_destruct;
- (id)genericRunDestinationForRunDestination:(id)arg1 scheme:(id)arg2 schemeCommands:(id)arg3 executionEnvironment:(id)arg4 requiresSupportsArchiving:(BOOL)arg5 requiresDeploymentPlatformMatches:(BOOL)arg6 allowMultipleRunDestinationMatches:(BOOL)arg7 allowNoRunDestinationMatches:(BOOL)arg8 error:(id *)arg9;
- (id)genericBuildDestinationsForRunDestinations:(id)arg1 scheme:(id)arg2 schemeCommands:(id)arg3 executionEnvironment:(id)arg4 allowNoRunDestinationMatches:(BOOL)arg5 error:(id *)arg6;
- (id)genericDeploymentRunDestinationForRunDestination:(id)arg1 scheme:(id)arg2 schemeCommands:(id)arg3 executionEnvironment:(id)arg4;
- (id)validRunDestinationsForBuildables:(id)arg1 executionEnvironment:(id)arg2;
- (id)validRunDestinationsForScheme:(id)arg1 schemeCommands:(id)arg2 executionEnvironment:(id)arg3;
- (id)validRunDestinationsForScheme:(id)arg1 executionEnvironment:(id)arg2;
- (id)visibleRunDestinationsForScheme:(id)arg1 schemeCommands:(id)arg2 executionEnvironment:(id)arg3;
- (id)visibleRunDestinationsForScheme:(id)arg1 executionEnvironment:(id)arg2;
- (id)_validRunDestinationsForScheme:(id)arg1 schemeCommands:(id)arg2 executionEnvironment:(id)arg3 forPresentation:(BOOL)arg4;
- (id)_validRunDestinationsForScheme:(id)arg1 executionEnvironment:(id)arg2 forPresentation:(BOOL)arg3;
- (id)defaultRunDestinationForScheme:(id)arg1 fromRunDestinations:(id)arg2 preferGenericDestination:(BOOL)arg3 supportingSDK:(id)arg4;
- (id)defaultRunDestinationForScheme:(id)arg1 fromRunDestinations:(id)arg2 preferGenericDestination:(BOOL)arg3;
- (id)runDestinationWithIneligibleTargetDevice:(id)arg1 architecture:(id)arg2 SDK:(id)arg3 deviceIneligibilityError:(id)arg4;
- (id)runDestinationWithTargetDevice:(id)arg1 architecture:(id)arg2 SDK:(id)arg3;
- (void)_uncacheRunDestinationsForDevice:(id)arg1;
- (id)_cachedRunDestinationForDevice:(id)arg1 architecture:(id)arg2 SDK:(id)arg3;
- (void)_cacheRunDestination:(id)arg1;
- (id)init;
- (void)_startWatchingDeviceManager;
- (id)_deviceManager;
- (void)_adjustKnownRunDestinationsForChangeKind:(unsigned long long)arg1 addedObjects:(id)arg2 removedObjects:(id)arg3;
- (void)_removeRunDestinationsForDevice:(id)arg1;
- (void)_addRunDestinationsForDevice:(id)arg1;
- (void)_setUpFallbackRunDestination;
- (id)_fallbackSDK;
- (id)_fallbackDevice;

// Remaining properties
@property(copy) NSSet *availableRunDestinations; // @dynamic availableRunDestinations;
@property(readonly, copy) NSMutableSet *mutableAvailableRunDestinations; // @dynamic mutableAvailableRunDestinations;

@end

@interface IDEReadOnlyItemsManager : NSObject
{
}

+ (id)readOnlyItemsManagerAspect;
+ (id)localizedRecoveryMessageForFailedUnlockingAttemptWithStatus:(int)arg1;
+ (id)localizedDescriptionForReadOnlyStatus:(int)arg1 itemName:(id)arg2 pluralized:(BOOL)arg3;
+ (BOOL)shouldShowLockedIndicatorForStatus:(int)arg1;
+ (BOOL)tryToMakeFilePathWritable:(id)arg1 error:(id *)arg2;
+ (BOOL)_addUserWritePermissionToFilePath:(id)arg1 error:(id *)arg2;
+ (int)readOnlyStatusOfFilePath:(id)arg1;

@end

@interface IDETestingSystemActivityManager : NSObject
{
    unsigned int _systemSleepAssertion;
    unsigned int _displaySleepAssertion;
    unsigned int _systemSleepAssertionCount;
    unsigned int _displaySleepAssertionCount;
    unsigned int _screenSaverAssertionCount;
}

+ (BOOL)_setScreenSaverSuppressed:(BOOL)arg1 error:(id *)arg2;
+ (unsigned int)_acquireDisplaySleepAssertionWithDescription:(id)arg1 error:(id *)arg2;
+ (unsigned int)_acquireSystemSleepAssertionWithDescription:(id)arg1 error:(id *)arg2;
+ (id)sharedManager;
+ (void)initialize;
- (void)_allowScreenSaver;
- (id)disallowScreenSaver:(id *)arg1;
- (void)_allowDisplaySleep;
- (id)disallowDisplaySleepWithDescription:(id)arg1 error:(id *)arg2;
- (void)_allowSystemSleep;
- (id)disallowSystemSleepWithDescription:(id)arg1 error:(id *)arg2;
- (id)init;

@end

@interface IDESourceControlExtension : NSObject
{
    id <IDESourceControlProtocol> _delegate;
    NSString *_identifier;
    NSString *_title;
    NSString *_directoryIdentifier;
    Class _delegateClass;
    NSArray *_supportedProtocols;
    BOOL _distributed;
    BOOL _requiresUsernameInURL;
    BOOL _commitMessageRequired;
    BOOL _supportsLocalBlame;
    BOOL _supportsFineGrainedCheckouts;
    BOOL _repositoryLayoutNeeded;
    BOOL _supportsRemotes;
}

@property(readonly) BOOL supportsRemotes; // @synthesize supportsRemotes=_supportsRemotes;
@property(readonly) BOOL repositoryLayoutNeeded; // @synthesize repositoryLayoutNeeded=_repositoryLayoutNeeded;
@property(readonly) BOOL supportsFineGrainedCheckouts; // @synthesize supportsFineGrainedCheckouts=_supportsFineGrainedCheckouts;
@property(readonly) BOOL supportsLocalBlame; // @synthesize supportsLocalBlame=_supportsLocalBlame;
@property(readonly) BOOL commitMessageRequired; // @synthesize commitMessageRequired=_commitMessageRequired;
@property(readonly) BOOL requiresUsernameInURL; // @synthesize requiresUsernameInURL=_requiresUsernameInURL;
@property(readonly) BOOL distributed; // @synthesize distributed=_distributed;
@property(readonly) NSArray *supportedProtocols; // @synthesize supportedProtocols=_supportedProtocols;
@property(readonly) Class delegateClass; // @synthesize delegateClass=_delegateClass;
@property(readonly) NSString *directoryIdentifier; // @synthesize directoryIdentifier=_directoryIdentifier;
@property(readonly) NSString *title; // @synthesize title=_title;
@property(readonly) NSString *identifier; // @synthesize identifier=_identifier;
- (void).cxx_destruct;
@property(readonly) NSString *Xcode3Title;
@property(readonly) id <IDESourceControlProtocol> delegate; // @synthesize delegate=_delegate;
- (id)initWithDVTExtension:(id)arg1;

@end

@interface IDEProvisioningRepairContext : NSObject
{
    BOOL _runningInIDE;
    IDEProvisioningRepairStepGenerator *_repairStepGenerator;
    DVTLogAspect *_logAspect;
    id <IDERepairable> _repairable;
    DVTPortalTeam *_team;
    DVTSigningCertificateManager *_signingCertificateManager;
    DVTProvisioningProfileManager *_provisioningProfileManager;
    IDEProvisioningLedger *_provisioningLedger;
    id <IDEProvisioningTeamAccountPairProvider> _teamAccountPairProvider;
    unsigned long long _successiveRepairCount;
}

@property(nonatomic) unsigned long long successiveRepairCount; // @synthesize successiveRepairCount=_successiveRepairCount;
@property(nonatomic) BOOL runningInIDE; // @synthesize runningInIDE=_runningInIDE;
@property(readonly, nonatomic) id <IDEProvisioningTeamAccountPairProvider> teamAccountPairProvider; // @synthesize teamAccountPairProvider=_teamAccountPairProvider;
@property(readonly, nonatomic) IDEProvisioningLedger *provisioningLedger; // @synthesize provisioningLedger=_provisioningLedger;
@property(readonly, nonatomic) DVTProvisioningProfileManager *provisioningProfileManager; // @synthesize provisioningProfileManager=_provisioningProfileManager;
@property(readonly, nonatomic) DVTSigningCertificateManager *signingCertificateManager; // @synthesize signingCertificateManager=_signingCertificateManager;
@property(retain, nonatomic) DVTPortalTeam *team; // @synthesize team=_team;
@property(readonly, nonatomic) id <IDERepairable> repairable; // @synthesize repairable=_repairable;
@property(readonly, nonatomic) DVTLogAspect *logAspect; // @synthesize logAspect=_logAspect;
- (void).cxx_destruct;
@property(readonly, nonatomic) id <IDEProvisioningRepairPortal> portal;
@property(readonly, nonatomic) IDEProvisioningRepairStepGenerator *repairStepGenerator; // @synthesize repairStepGenerator=_repairStepGenerator;
- (id)sessionWithError:(id *)arg1;
- (id)initWithRepairable:(id)arg1 signingCertificateManager:(id)arg2 provisioningProfileManager:(id)arg3 provisioningLedger:(id)arg4 teamAccountPairProvider:(id)arg5;

@end

@interface IDEContainerReferenceResolutionStrategy : DVTReferenceResolutionStrategy
{
}

+ (id)currentSDKRelativeContainerResolutionStrategy;
+ (id)developerDirectoryRelativeContainerResolutionStrategy;
+ (id)buildProductsRelativeContainerResolutionStrategy;
+ (id)pathRelativeContainerResolutionStrategy;
+ (id)containerItselfContainerResolutionStrategy;
+ (id)containerRelativeContainerResolutionStrategy;
+ (id)groupRelativeContainerResolutionStrategy;
+ (id)absoluteContainerResolutionStrategy;
- (id)resolveInput:(id)arg1 forContainer:(id)arg2 group:(id)arg3 inContext:(id)arg4 usingSnapshot:(id)arg5 error:(id *)arg6;
- (id)resolveInput:(id)arg1 inContext:(id)arg2 usingSnapshot:(id)arg3 error:(id *)arg4;
- (BOOL)canResolveInputInBackground;

@end

@interface IDEContainerAbsolutePathReferenceResolutionStrategy : IDEContainerReferenceResolutionStrategy
{
}

- (id)resolveInput:(id)arg1 forContainer:(id)arg2 group:(id)arg3 inContext:(id)arg4 usingSnapshot:(id)arg5 error:(id *)arg6;

@end

@interface IDEContainerGroupRelativeReferenceResolutionStrategy : IDEContainerReferenceResolutionStrategy
{
}

- (id)resolveInput:(id)arg1 forContainer:(id)arg2 group:(id)arg3 inContext:(id)arg4 usingSnapshot:(id)arg5 error:(id *)arg6;

@end

@interface IDEContainerContainerRelativeReferenceResolutionStrategy : IDEContainerReferenceResolutionStrategy
{
}

- (id)displayNameInContext:(id)arg1;
- (id)resolveInput:(id)arg1 forContainer:(id)arg2 group:(id)arg3 inContext:(id)arg4 usingSnapshot:(id)arg5 error:(id *)arg6;

@end

@interface IDEContainerContainerItselfReferenceResolutionStrategy : IDEContainerReferenceResolutionStrategy
{
}

- (id)resolveInput:(id)arg1 forContainer:(id)arg2 group:(id)arg3 inContext:(id)arg4 usingSnapshot:(id)arg5 error:(id *)arg6;

@end

@interface IDEContainerPathRelativeReferenceResolutionStrategy : IDEContainerReferenceResolutionStrategy
{
}

- (id)resolveInput:(id)arg1 forContainer:(id)arg2 group:(id)arg3 inContext:(id)arg4 usingSnapshot:(id)arg5 error:(id *)arg6;

@end

@interface IDEContainerBuildProductsRelativeReferenceResolutionStrategy : IDEContainerPathRelativeReferenceResolutionStrategy
{
}

- (id)resolveInput:(id)arg1 forContainer:(id)arg2 group:(id)arg3 inContext:(id)arg4 usingSnapshot:(id)arg5 error:(id *)arg6;

@end

@interface IDEContainerDeveloperDirectoryRelativeReferenceResolutionStrategy : IDEContainerPathRelativeReferenceResolutionStrategy
{
}

- (id)resolveInput:(id)arg1 forContainer:(id)arg2 group:(id)arg3 inContext:(id)arg4 usingSnapshot:(id)arg5 error:(id *)arg6;

@end

@interface IDEContainerCurrentSDKRelativeReferenceResolutionStrategy : IDEContainerPathRelativeReferenceResolutionStrategy
{
}

- (id)resolveInput:(id)arg1 forContainer:(id)arg2 group:(id)arg3 inContext:(id)arg4 usingSnapshot:(id)arg5 error:(id *)arg6;

@end

@interface IDEDistributionItemSummaryNode : NSObject
{
    IDEDistributionContext *_context;
    DVTLogAspect *_logAspect;
    NSArray *_childItems;
    NSDictionary *_summary;
    IDEDistributionItem *_item;
    id <DVTProvisioningProfile> _profile;
}

+ (id)rootNodeWithTopLevelItems:(id)arg1 context:(id)arg2 logAspect:(id)arg3;
+ (id)nodeWithItem:(id)arg1 context:(id)arg2 logAspect:(id)arg3;
@property(readonly, nonatomic) id <DVTProvisioningProfile> profile; // @synthesize profile=_profile;
@property(readonly, nonatomic) IDEDistributionItem *item; // @synthesize item=_item;
- (void).cxx_destruct;
@property(readonly, nonatomic) NSDictionary *summary; // @synthesize summary=_summary;
@property(readonly, nonatomic) NSArray *childNodes;
@property(readonly, nonatomic) NSString *name;

@end

@interface IDEPlaygroundResourcesMonitor : NSObject <DVTInvalidation>
{
    IDEPlaygroundCommonSharedContext *_context;
    IDEPlaygroundResourcesMonitor *_dependency;
    NSDate *_lastModificationDate;
    NSSet *_resourcesDirectoryResourceFiles;
    DVTFilePath *__monitoredResourcesDirectory;
    DVTObservingToken *__resourcesDirectoryObserverToken;
    DVTObservingToken *__dependencyModificationObserverToken;
}

+ (void)initialize;
@property(retain, nonatomic) DVTObservingToken *_dependencyModificationObserverToken; // @synthesize _dependencyModificationObserverToken=__dependencyModificationObserverToken;
@property(retain, nonatomic) DVTObservingToken *_resourcesDirectoryObserverToken; // @synthesize _resourcesDirectoryObserverToken=__resourcesDirectoryObserverToken;
@property(retain, nonatomic, setter=_setMonitoredResourcesDirectory:) DVTFilePath *_monitoredResourcesDirectory; // @synthesize _monitoredResourcesDirectory=__monitoredResourcesDirectory;
@property(copy, nonatomic) NSSet *resourcesDirectoryResourceFiles; // @synthesize resourcesDirectoryResourceFiles=_resourcesDirectoryResourceFiles;
@property(retain, nonatomic) NSDate *lastModificationDate; // @synthesize lastModificationDate=_lastModificationDate;
@property(readonly) __weak IDEPlaygroundResourcesMonitor *dependency; // @synthesize dependency=_dependency;
@property(readonly, nonatomic) IDEPlaygroundCommonSharedContext *context; // @synthesize context=_context;
- (void).cxx_destruct;
- (id)_generateResourcesDirectoryResourceFilePaths;
- (void)primitiveInvalidate;
- (id)initWithPlaygroundContext:(id)arg1 dependency:(id)arg2;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface IDEProvisioningRevokeCertificateRepairStep : IDEProvisioningRepairStep
{
    DVTPortalCertificate *_certificate;
}

+ (id)revokeCertificateRepairStepWithCertificate:(id)arg1;
@property(readonly, nonatomic) DVTPortalCertificate *certificate; // @synthesize certificate=_certificate;
- (void).cxx_destruct;
- (BOOL)handleExecutionWithContext:(id)arg1 ledgerEntry:(id)arg2 error:(id *)arg3;
- (BOOL)preflightWithContext:(id)arg1 error:(id *)arg2;
- (id)activityDescription;
- (id)stepDescription;
- (id)initWithCertificate:(id)arg1;

@end

@interface IDEProfileQualifierResult : NSObject
{
    BOOL _success;
    NSError *_error;
    NSAttributedString *_title;
    NSAttributedString *_subtitle;
}

+ (id)failingResultWithTitle:(id)arg1 subtitle:(id)arg2 error:(id)arg3;
+ (id)successfulResultWithTitle:(id)arg1 subtitle:(id)arg2;
@property(readonly, nonatomic) NSAttributedString *subtitle; // @synthesize subtitle=_subtitle;
@property(readonly, nonatomic) NSAttributedString *title; // @synthesize title=_title;
@property(readonly, nonatomic) NSError *error; // @synthesize error=_error;
@property(readonly, nonatomic) BOOL success; // @synthesize success=_success;
- (void).cxx_destruct;
- (id)initWithSuccess:(BOOL)arg1 title:(id)arg2 subtitle:(id)arg3 error:(id)arg4;

@end

@interface _IDETestOperationValidator : NSObject
{
    int _type;
    NSString *_identifier;
}

+ (id)errorDescriptionForEvent:(int)arg1;
+ (id)validatorWithType:(int)arg1 andIdentifier:(id)arg2;
@property(retain) NSString *identifier; // @synthesize identifier=_identifier;
@property int type; // @synthesize type=_type;
- (void).cxx_destruct;
- (id)description;
- (BOOL)validateEvent:(int)arg1;

@end

@interface IDETestOperationCoordinator : NSObject <IDEConsoleAdaptorDelegateProtocol, IDETestingDiagnosticLogWriter, IDETestOperationStateMachineDelegate, IDELaunchSessionEventSourceEvents, IDETestOperationEventSourceEvents, XCTDaemonControlSessionDelegate, XCTTestRunnerSessionDelegate, XCTDebugLogDelegate, DVTInvalidation>
{
    BOOL _finished;
    BOOL _hasFailed;
    BOOL _hasStartedTests;
    BOOL _targetIsiOSSimulator;
    BOOL _testingIsFinished;
    int _testProcessPID;
    IDERunOperation *_operation;
    NSString *_diagnosticLogPath;
    DVTOperation *_testRunnerSessionStartupOperation;
    id <IDETestOperationCoordinatorEvents> _delegate;
    IDETestRunner *_testRunner;
    DVTDevice *_targetDevice;
    NSMutableArray *_validatorsStack;
    NSUUID *_sessionIdentifier;
    XCTTestRunnerSession *_testRunnerSession;
    XCTDaemonControlSession *_daemonControlSession;
    IDELaunchSessionEventSource *_launchSessionEventSource;
    IDETestOperationEventSource *_testOperationEventSource;
    id _iPhoneConnectLogHandlerToken;
    id _iPhoneSimulatorLogHandlerToken;
    DVTDisallowFinishToken *_disallowFinishToken;
    NSTimer *_startupTimeoutTimer;
    IDETestOutputProcessor *_outputProcessor;
    NSMutableArray *_consoleChunkQueue;
    NSMutableArray *_delegateBlockQueue;
    IDEConsoleAdaptor *_consoleAdaptor;
    NSOutputStream *_statusStream;
    NSObject<OS_dispatch_queue> *_statusStreamQueue;
    IDETestingDiagnosticLogArbiter *_logArbiter;
    NSDateFormatter *_loggingDateFormatter;
    NSTimer *_delegateBlockQueueTimeoutTimer;
    NSArray *_OSXCrashReportObservers;
    IDETestOperationStateMachine *_stateMachine;
    DVTObservingToken *_debuggerPausedObserverToken;
    NSFileHandle *_standardOutputAndStandardErrorFromTests;
    NSMutableDictionary *_testTokensToExecutionTrackers;
    NSMutableDictionary *_testTokensToOperations;
    NSMutableDictionary *_testTokensToErrors;
    NSMutableSet *_launchedApplicationTokens;
    NSMutableSet *_executionTrackerObservationTokens;
    NSMutableSet *_displayNamesOfLaunchedProcesses;
}

+ (id)nextLaunchSessionToken;
+ (BOOL)supportsInvalidationPrevention;
+ (void)logDebugMessage:(id)arg1;
+ (void)initialize;
@property(retain) NSMutableSet *displayNamesOfLaunchedProcesses; // @synthesize displayNamesOfLaunchedProcesses=_displayNamesOfLaunchedProcesses;
@property(retain) NSMutableSet *executionTrackerObservationTokens; // @synthesize executionTrackerObservationTokens=_executionTrackerObservationTokens;
@property(retain) NSMutableSet *launchedApplicationTokens; // @synthesize launchedApplicationTokens=_launchedApplicationTokens;
@property(retain) NSMutableDictionary *testTokensToErrors; // @synthesize testTokensToErrors=_testTokensToErrors;
@property(retain) NSMutableDictionary *testTokensToOperations; // @synthesize testTokensToOperations=_testTokensToOperations;
@property(retain) NSMutableDictionary *testTokensToExecutionTrackers; // @synthesize testTokensToExecutionTrackers=_testTokensToExecutionTrackers;
@property(retain) NSFileHandle *standardOutputAndStandardErrorFromTests; // @synthesize standardOutputAndStandardErrorFromTests=_standardOutputAndStandardErrorFromTests;
@property(retain) DVTObservingToken *debuggerPausedObserverToken; // @synthesize debuggerPausedObserverToken=_debuggerPausedObserverToken;
@property(retain) IDETestOperationStateMachine *stateMachine; // @synthesize stateMachine=_stateMachine;
@property(retain) NSArray *OSXCrashReportObservers; // @synthesize OSXCrashReportObservers=_OSXCrashReportObservers;
@property BOOL testingIsFinished; // @synthesize testingIsFinished=_testingIsFinished;
@property(retain, nonatomic) NSTimer *delegateBlockQueueTimeoutTimer; // @synthesize delegateBlockQueueTimeoutTimer=_delegateBlockQueueTimeoutTimer;
@property BOOL targetIsiOSSimulator; // @synthesize targetIsiOSSimulator=_targetIsiOSSimulator;
@property(retain) NSDateFormatter *loggingDateFormatter; // @synthesize loggingDateFormatter=_loggingDateFormatter;
@property(retain) IDETestingDiagnosticLogArbiter *logArbiter; // @synthesize logArbiter=_logArbiter;
@property(retain) NSObject<OS_dispatch_queue> *statusStreamQueue; // @synthesize statusStreamQueue=_statusStreamQueue;
@property(retain) NSOutputStream *statusStream; // @synthesize statusStream=_statusStream;
@property(retain, nonatomic) IDEConsoleAdaptor *consoleAdaptor; // @synthesize consoleAdaptor=_consoleAdaptor;
@property(retain) NSMutableArray *delegateBlockQueue; // @synthesize delegateBlockQueue=_delegateBlockQueue;
@property(retain) NSMutableArray *consoleChunkQueue; // @synthesize consoleChunkQueue=_consoleChunkQueue;
@property(retain) IDETestOutputProcessor *outputProcessor; // @synthesize outputProcessor=_outputProcessor;
@property int testProcessPID; // @synthesize testProcessPID=_testProcessPID;
@property(retain) NSTimer *startupTimeoutTimer; // @synthesize startupTimeoutTimer=_startupTimeoutTimer;
@property(retain) DVTDisallowFinishToken *disallowFinishToken; // @synthesize disallowFinishToken=_disallowFinishToken;
@property BOOL hasStartedTests; // @synthesize hasStartedTests=_hasStartedTests;
@property BOOL hasFailed; // @synthesize hasFailed=_hasFailed;
@property(retain) id iPhoneSimulatorLogHandlerToken; // @synthesize iPhoneSimulatorLogHandlerToken=_iPhoneSimulatorLogHandlerToken;
@property(retain) id iPhoneConnectLogHandlerToken; // @synthesize iPhoneConnectLogHandlerToken=_iPhoneConnectLogHandlerToken;
@property(retain) IDETestOperationEventSource *testOperationEventSource; // @synthesize testOperationEventSource=_testOperationEventSource;
@property(retain) IDELaunchSessionEventSource *launchSessionEventSource; // @synthesize launchSessionEventSource=_launchSessionEventSource;
@property(retain) XCTDaemonControlSession *daemonControlSession; // @synthesize daemonControlSession=_daemonControlSession;
@property(retain) XCTTestRunnerSession *testRunnerSession; // @synthesize testRunnerSession=_testRunnerSession;
@property(retain) NSUUID *sessionIdentifier; // @synthesize sessionIdentifier=_sessionIdentifier;
@property BOOL finished; // @synthesize finished=_finished;
@property(retain) NSMutableArray *validatorsStack; // @synthesize validatorsStack=_validatorsStack;
@property(retain) DVTDevice *targetDevice; // @synthesize targetDevice=_targetDevice;
@property(retain) IDETestRunner *testRunner; // @synthesize testRunner=_testRunner;
@property(retain) id <IDETestOperationCoordinatorEvents> delegate; // @synthesize delegate=_delegate;
@property(retain) DVTOperation *testRunnerSessionStartupOperation; // @synthesize testRunnerSessionStartupOperation=_testRunnerSessionStartupOperation;
@property(retain) NSString *diagnosticLogPath; // @synthesize diagnosticLogPath=_diagnosticLogPath;
@property(readonly) IDERunOperation *operation; // @synthesize operation=_operation;
- (void).cxx_destruct;
- (void)cancelExecutionTrackersAndWaitUntilFinished;
- (BOOL)terminateProcessWithToken:(id)arg1 error:(id *)arg2;
- (id)progressForLaunchWithToken:(id)arg1 error:(id *)arg2;
- (void)launchProcessWithParameters:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)_executeOperation:(id)arg1 withPath:(id)arg2 bundleID:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)_observeExitOfLaunchSession:(id)arg1 withToken:(id)arg2;
- (void)_observeCompletionOfTracker:(id)arg1 withToken:(id)arg2 path:(id)arg3 bundleID:(id)arg4;
- (id)_launchParametersForProcessWithPath:(id)arg1 bundleID:(id)arg2 arguments:(id)arg3 environmentVariables:(id)arg4;
- (id)_addMainThreadCheckerToEnvironmentVariables:(id)arg1;
- (id)_addTargetBootstrapInjectionToEnvironmentVariables:(id)arg1;
- (void)testRunnerSession:(id)arg1 didReceiveDebugLogMessage:(id)arg2;
- (void)testRunnerSession:(id)arg1 didReceiveLogMessage:(id)arg2;
- (id)testRunnerSession:(id)arg1 progressForLaunchWithToken:(id)arg2 error:(id *)arg3;
- (BOOL)testRunnerSession:(id)arg1 terminateProcessWithToken:(id)arg2 error:(id *)arg3;
- (void)testRunnerSession:(id)arg1 launchProcessWithParameters:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)testRunnerSession:(id)arg1 testCase:(id)arg2 method:(id)arg3 didMeasureMetric:(id)arg4 sourceLocation:(id)arg5;
- (void)testRunnerSession:(id)arg1 testCase:(id)arg2 method:(id)arg3 didFinishActivity:(id)arg4;
- (void)testRunnerSession:(id)arg1 testCase:(id)arg2 method:(id)arg3 willStartActivity:(id)arg4;
- (void)testRunnerSession:(id)arg1 testCase:(id)arg2 method:(id)arg3 didStallOnMainThreadAtSourceLocation:(id)arg4;
- (void)testRunnerSession:(id)arg1 testCaseDidFinishForTestClass:(id)arg2 method:(id)arg3 status:(id)arg4 duration:(double)arg5;
- (void)testRunnerSession:(id)arg1 testCaseDidFailForTestClass:(id)arg2 method:(id)arg3 failureMessage:(id)arg4 sourceLocation:(id)arg5;
- (void)testRunnerSession:(id)arg1 testCaseDidStartForTestClass:(id)arg2 method:(id)arg3;
- (void)testRunnerSession:(id)arg1 testSuite:(id)arg2 didFinishAt:(id)arg3 runCount:(unsigned long long)arg4 failureCount:(unsigned long long)arg5 unexpectedFailureCount:(unsigned long long)arg6 testDuration:(double)arg7 totalDuration:(double)arg8;
- (void)testRunnerSession:(id)arg1 testSuite:(id)arg2 didStartAt:(id)arg3;
- (void)testRunnerSession:(id)arg1 initializationForUITestingDidFailWithError:(id)arg2;
- (void)testRunnerSessionDidStartInitializingForUITesting:(id)arg1;
- (void)testRunnerSessionDidFinishExecutingTests:(id)arg1;
- (void)testRunnerSessionDidStartExecutingTests:(id)arg1;
- (void)testRunnerSessionDidDisconnect:(id)arg1;
- (void)testRunnerSession:(id)arg1 didFailInitializationWithError:(id)arg2;
- (void)testRunnerSessionDidBecomeReady:(id)arg1;
- (void)testRunnerSessionDidAcquireConnection:(id)arg1;
- (void)daemonControlSession:(id)arg1 didReceiveDebugLogMessage:(id)arg2;
- (void)daemonControlSession:(id)arg1 didReceiveCrashReportData:(id)arg2 fileName:(id)arg3;
- (void)daemonSessionDidDisconnect:(id)arg1;
- (void)logDebugMessage:(id)arg1;
- (void)_handleSymbolicatedCrashLog:(id)arg1;
- (void)_handleDemangledCrashLog:(id)arg1;
- (void)_handleCrashReportData:(id)arg1 fromFileWithName:(id)arg2;
- (BOOL)validateEvent:(int)arg1;
- (void)_enqueueDelegateBlock:(CDUnknownBlockType)arg1;
- (void)_executeDelegateBlockWithNextConsoleChunk:(CDUnknownBlockType)arg1;
- (void)_considerDispatchingDelegateBlock;
- (void)_enqueueConsoleChunk:(id)arg1;
- (void)_flushDelegateBlockQueue;
- (void)_delegateBlockQueueTimeoutTimerFired;
- (void)_considerFlushingDelegateBlockQueue;
- (id)parseConsoleOutputFromOriginalOutput:(id)arg1;
- (void)_reportFinishToRunnerWithError:(id)arg1;
- (id)_finalErrorFromError:(id)arg1;
- (void)_tearDownLoggingWithCompletion:(CDUnknownBlockType)arg1;
- (void)_detectAndMessageTrace_r17733855_fromError:(id)arg1;
- (void)_reallyFinishWithError:(id)arg1;
- (void)_finishWithError:(id)arg1;
- (void)_logAtLevel:(int)arg1 message:(id)arg2;
- (void)_logMessage:(id)arg1 needsPrefix:(BOOL)arg2;
- (id)_logMessagePrefix;
- (BOOL)_logMessageWantsWriteToStdout;
- (void)writeLogStatus:(id)arg1;
- (void)writeLogData:(id)arg1;
- (void)_reportStartupFailure:(id)arg1 errorCode:(unsigned long long)arg2;
- (void)_reportStartupProgress:(id)arg1 withTimeoutInterval:(double)arg2;
- (void)_startupTimedOut:(id)arg1;
- (void)_waitForLaunch;
- (double)_defaultTimeoutInterval;
- (void)_requestCrashReportCollection;
- (void)_updateCrashObserverWithCompletion:(CDUnknownBlockType)arg1;
- (void)_handleOSXCrashReportAtPath:(id)arg1;
- (void)_checkUITestingPermissionsInBackgroundForPID:(int)arg1;
- (void)_checkUITestingPermissionsForPID:(int)arg1;
- (void)_handleUITestingPermissionsResponseForPID:(int)arg1 isPermitted:(BOOL)arg2 error:(id)arg3;
- (void)_setXcodeUITestingAgentAsResponsibleProcessForPID:(int)arg1;
- (void)_whitelistTestProcessIDForUITestingWithCompletion:(CDUnknownBlockType)arg1;
- (void)waitForTestProcessToConnect;
- (void)launchSessionDidFinalizeWithDescription:(id)arg1 userInfo:(id)arg2;
- (void)launchSessionExitedWithCode:(int)arg1 hasCrashed:(BOOL)arg2;
- (void)launchSessionGotPID:(int)arg1;
- (void)launchSessionCompletedInitialIntensiveFileIO;
- (void)launchSessionExpired;
- (void)launchSessionAddedConsoleAdaptor:(id)arg1;
- (void)launchSessionEncounteredAlertError:(id)arg1;
- (void)launchSessionStarted;
- (void)testOperationEncounteredError:(id)arg1;
- (void)testOperationCancelledWithError:(id)arg1;
- (void)_observeDebuggerPauseForLaunchSession:(id)arg1;
- (void)_handleDebugSessionStateChange:(id)arg1;
- (void)_notifyTestProcessThatDebugSessionPaused:(id)arg1;
- (void)_registerHandlersForOtherLogAspects;
- (void)_prepareDiagnosticLoggingStream;
- (id)_validatedPathForFilenameWithPrefix:(id)arg1;
- (id)initWithTestRunOperation:(id)arg1 forTestRunner:(id)arg2;
- (id)initWithDelegate:(id)arg1 forTestRunner:(id)arg2;
- (void)primitiveInvalidate;
- (BOOL)validateEvent:(int)arg1 error:(id *)arg2;
- (void)initializeValidatorsStack;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface IDEDistributionDriver : NSObject
{
    IDEDistributionContext *_initialContext;
    NSDictionary *_exportOptionsPlist;
}

+ (id)distributionDriverWithArchive:(id)arg1 optionsPlist:(id)arg2;
@property(readonly, copy) NSDictionary *exportOptionsPlist; // @synthesize exportOptionsPlist=_exportOptionsPlist;
@property(retain) IDEDistributionContext *initialContext; // @synthesize initialContext=_initialContext;
- (void).cxx_destruct;
- (_Bool)runWithDestinationPath:(id)arg1 error:(id *)arg2;

@end

@interface IDEDistributionStreamingZipItemStep : IDEDistributionItemProcessingStep
{
}

+ (_Bool)runsPerThinningVariant;
+ (BOOL)extractSourcePath:(id)arg1 destinationPath:(id)arg2 error:(id *)arg3;
+ (BOOL)archiveSourcePath:(id)arg1 destinationPath:(id)arg2 error:(id *)arg3;
- (_Bool)runWithError:(id *)arg1;
- (_Bool)shouldSkip;
- (id)providedOutputContextPropertyNames;
- (id)requiredInputContextPropertyNames;
- (id)name;

@end

@interface IDEObjCModernizationContext : IDEMigrationContext
{
}

+ (Class)migrationTargetSublass;

@end

@interface IDEIndexImporter : NSObject <DVTInvalidation>
{
    IDEIndexDatabase *_database;
    NSObject<OS_dispatch_queue> *_project_queue;
    NSObject<OS_dispatch_queue> *_autoQuery_queue;
    NSObject<OS_dispatch_queue> *_import_queue;
    int _isClosing;
    IDEIndexDBConnection *_dbConnection;
    NSDictionary *_providers;
    IDEIndexDBTransaction *_dbTransaction;
    NSMutableSet *_pendingMainFiles;
    IDEIndexDBFactory *_fileFactory;
    IDEIndexDBFactory *_unitFactory;
    IDEIndexDBFactory *_groupFactory;
    IDEIndexDBFactory *_contextFactory;
    NSMutableDictionary *_permanentFileCache;
    NSMutableDictionary *_fileCache;
    NSMutableDictionary *_unitCache;
    NSMutableDictionary *_permanentGroupCache;
    NSMutableSet *_staleGroups;
    NSMutableDictionary *_groupCache;
    long long _symbolCount;
    int _filesWaiting;
    NSSet *_projectFiles;
    IDEIndexUniqueStringMap *_uniqueStrings;
    NSMutableDictionary *_fileDates;
    NSMutableDictionary *_filesByMainFileByTarget;
    NSMutableDictionary *_mainFilesByTargetByFile;
    NSMutableDictionary *_outOfDateFilesByTarget;
    BOOL _isReady;
    NSMutableDictionary *_spliceTable;
    int _totalDeferredJobs;
    int _changedDeferredJobs;
    NSMutableSet *_hotFiles;
    BOOL _didIndexHotFile;
}

+ (unsigned long long)assertionBehaviorForKeyValueObservationsAtEndOfEvent;
+ (unsigned long long)assertionBehaviorAfterEndOfEventForSelector:(SEL)arg1;
+ (BOOL)supportsInvalidationPrevention;
+ (void)initialize;
@property(readonly, nonatomic) BOOL isReady; // @synthesize isReady=_isReady;
@property(readonly, nonatomic) IDEIndexDatabase *database; // @synthesize database=_database;
- (void).cxx_destruct;
- (void)purgeStaleFilesUsingTransaction:(id)arg1;
- (void)purgeStaleGroupsUsingTransaction:(id)arg1;
- (void)purgeStaleData:(id)arg1;
- (void)submitTransaction;
- (void)endSession:(id)arg1;
- (void)didSave;
- (void)removeFile:(id)arg1 mainFile:(id)arg2 target:(id)arg3;
- (void)addFile:(id)arg1 mainFile:(id)arg2 target:(id)arg3;
- (void)submitMainFile:(id)arg1;
- (void)resetSpliceTable;
- (void)updateSpliceTableForDirtyFile:(id)arg1 oldGroupId:(long long)arg2 oldModified:(double)arg3;
- (BOOL)spliceChanges:(id)arg1 toMainFile:(id)arg2 target:(id)arg3;
- (long long)existingFileIdForPath:(id)arg1;
- (long long)fileIdForPath:(id)arg1 moduleURL:(id)arg2;
- (long long)realGroupIdForId:(long long)arg1;
- (long long)realUnitIdForId:(long long)arg1;
- (long long)realFileIdForId:(long long)arg1;
- (void)dealloc;
- (void)primitiveInvalidate;
- (void)close;
- (void)logStatistics;
- (void)forgetOutOfDateMainFile:(id)arg1 forTarget:(id)arg2;
- (void)noteOutOfDateMainFile:(id)arg1 file:(id)arg2 forTarget:(id)arg3;
- (void)noteOutOfDateFile:(id)arg1;
- (id)storeTimestamp:(id)arg1 modtime:(double)arg2 forFile:(id)arg3 mainFile:(id)arg4 target:(id)arg5 spliced:(BOOL)arg6;
- (BOOL)shouldIgnoreOutOfDateFile:(id)arg1;
- (void)registerHotFile:(id)arg1;
- (void)unregisterTarget:(id)arg1 dirtyFiles:(id)arg2;
- (void)registerTarget:(id)arg1 byCaller:(id)arg2 outOfDateCallback:(CDUnknownBlockType)arg3;
- (id)auxiliaryFiles:(id)arg1 mainFile:(id)arg2;
- (long long)numberOfKnownFiles;
- (id)timestampForFile:(id)arg1;
- (BOOL)isKnownFile:(id)arg1 makeKnown:(BOOL)arg2;
- (id)mainFilesForFile:(id)arg1;
- (id)mainFilesForFile:(id)arg1 followPCH:(BOOL)arg2;
- (id)mainFilesForTarget:(id)arg1;
- (id)filesForMainFile:(id)arg1 target:(id)arg2 followPCH:(BOOL)arg3;
- (BOOL)isProjectFile:(id)arg1;
- (void)finishLoading;
- (id)initWithDatabase:(id)arg1;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface IDEBatchFindCallHierarchyResult : IDEBatchFindAbstractResult
{
    BOOL _recursive;
    IDEIndexSymbol *_symbol;
}

@property(readonly, getter=isRecursive) BOOL recursive; // @synthesize recursive=_recursive;
@property(readonly) IDEIndexSymbol *symbol; // @synthesize symbol=_symbol;
- (void).cxx_destruct;
- (id)textRepresentationForPasteboard;
- (BOOL)allowsSummarization;
- (BOOL)contributesToResultCount;
- (BOOL)contributesToFileResultCount;
- (id)initWithDocumentLocation:(id)arg1 parent:(id)arg2 symbol:(id)arg3;
- (BOOL)recursivelyReferences:(id)arg1;

@end

@interface IDEBatchFindCallHierarchyQuery : IDEBatchFindAbstractQuery
{
    NSObject<OS_dispatch_queue> *_queue;
    IDEBatchFindQueryProgressNotifier *_progressNotifier;
    NSMapTable *_faultedChildrenByParent;
}

+ (id)queryTermPlaceholderText;
+ (id)displayName;
+ (BOOL)supportsCaseMatching;
+ (BOOL)supportsAnchorning;
- (void).cxx_destruct;
- (void)execute;
- (id)customContextMenuID;
- (BOOL)requiresEditorDocumentsToSaveBeforeSearching;
- (void)userIsAttemptingToViewFaultedChildrenOfItem:(id)arg1;
- (void)faultChildrenForResult:(id)arg1 prefetchDepth:(long long)arg2;
- (BOOL)lazilyFaultsChildren;
- (id)makeRootResult;
- (id)initWithSpecification:(id)arg1 initialNumberOfLinesCalculator:(CDUnknownBlockType)arg2 initialLineWrappingParameters:(id)arg3 workspace:(id)arg4 andDelegate:(id)arg5 error:(id *)arg6;

@end

@interface IDEProvisioningTeamAccountPairManager : NSObject <DVTInvalidation, IDEProvisioningTeamAccountPairProvider>
{
    DVTDispatchLock *_lock;
    DVTNotificationToken *_accountsToken;
    NSMutableDictionary *_teamIDToPairMap;
    DVTDeveloperAccountManager *_accountManager;
    IDEProvisioningSessionManager *_sessionManager;
    IDEProvisioningPortal *_portal;
}

+ (void)initialize;
+ (id)sharedManager;
@property(retain, nonatomic) IDEProvisioningPortal *portal; // @synthesize portal=_portal;
@property(retain, nonatomic) IDEProvisioningSessionManager *sessionManager; // @synthesize sessionManager=_sessionManager;
@property(readonly, nonatomic) DVTDeveloperAccountManager *accountManager; // @synthesize accountManager=_accountManager;
- (void).cxx_destruct;
- (id)_teamIDToPairMapForTesting;
- (id)_pairForTeam:(id)arg1 error:(id *)arg2;
- (id)pairForTeam:(id)arg1 error:(id *)arg2;
- (void)invalidateCachedPairMap;
- (id)accounts;
- (void)primitiveInvalidate;
- (id)initWithAccountManager:(id)arg1;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface IDETestFileChangeBroker : NSObject <IDETestsInTestableObserver, DVTInvalidation>
{
    IDETestManager *_testManager;
    NSURL *_url;
    NSMutableSet *_fileObservers;
}

+ (void)initialize;
- (void).cxx_destruct;
- (void)notifyAllTestablesChanged;
- (void)_notifyObserversTestsInFileUpdated;
- (void)allTestablesChanged;
- (void)testablesChanged:(id)arg1;
- (void)testsChanged:(id)arg1;
- (void)updateObservation;
- (void)removeTestFileObserver:(id)arg1;
- (void)addTestFileObserver:(id)arg1;
- (BOOL)hasObservers;
@property(readonly, copy) NSString *description;
- (void)primitiveInvalidate;
- (id)initWithURL:(id)arg1 testManager:(id)arg2;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface IDEProvisioningPortal : NSObject
{
    DVTSigningCertificateManager *_signingCertificateManager;
    DVTProvisioningProfileManager *_provisioningProfileManager;
}

+ (id)_errorForNoContainerTypeWithPortalKey:(id)arg1;
+ (id)_errorForUnknownFeatureWithPortalKey:(id)arg1;
+ (id)_errorForLackOfMatchingCertificateWithSerialNumber:(id)arg1;
+ (id)_errorForNoCertificateTypeWithOID:(id)arg1;
+ (id)_errorForNoMatchingTeam:(id)arg1;
+ (id)concurrentQueue;
+ (id)portalWithSigningCertificateManager:(id)arg1 provisioningProfileManager:(id)arg2;
+ (id)defaultPortal;
@property(retain) DVTProvisioningProfileManager *provisioningProfileManager; // @synthesize provisioningProfileManager=_provisioningProfileManager;
@property(retain) DVTSigningCertificateManager *signingCertificateManager; // @synthesize signingCertificateManager=_signingCertificateManager;
- (void).cxx_destruct;
- (id)_portalSubPlatformForDVTPlatformIdentifier:(id)arg1;
- (id)_portalPlatformForDVTPlatformIdentifier:(id)arg1;
- (id)errorForMissingProfileData;
- (id)listTeamsAndRolesWithSession:(id)arg1 account:(id)arg2 error:(id *)arg3;
- (id)nameOfTeamWithTeamID:(id)arg1 account:(id)arg2 error:(id *)arg3;
- (id)provisioningDevicesForTeamWithID:(id)arg1 program:(id)arg2 session:(id)arg3 error:(id *)arg4;
- (id)portalTeamForTeam:(id)arg1 session:(id)arg2 error:(id *)arg3;
- (id)devicesForPrograms:(id)arg1 session:(id)arg2 team:(id)arg3 error:(id *)arg4;
- (BOOL)installProfile:(id)arg1 error:(id *)arg2;
- (id)_containerTypeFromPortalKey:(id)arg1 error:(id *)arg2;
- (id)_featureTypeFromPortalKey:(id)arg1 error:(id *)arg2;
- (id)containerTypesToValuesFromLegacyRequiredFeatures:(id)arg1 error:(id *)arg2;
- (id)featuresToValuesFromLegacyRequiredFeatures:(id)arg1 error:(id *)arg2;
- (BOOL)_addDevices:(id)arg1 session:(id)arg2 team:(id)arg3 error:(id *)arg4;
- (id)profilesWithSession:(id)arg1 team:(id)arg2 platform:(id)arg3 error:(id *)arg4;
- (id)inMemoryProfileForPortalProfile:(id)arg1 session:(id)arg2 error:(id *)arg3;
- (id)portalProfilesWithSession:(id)arg1 team:(id)arg2 platform:(id)arg3 nameOrUUID:(id)arg4 error:(id *)arg5;
- (id)portalCertificatesWithSession:(id)arg1 team:(id)arg2 type:(id)arg3 memberSpecificCertificates:(id *)arg4 error:(id *)arg5;
- (BOOL)_installIdentity:(id)arg1 error:(id *)arg2;
- (id)createAndInstallCertificateWithSession:(id)arg1 team:(id)arg2 type:(id)arg3 error:(id *)arg4;
- (BOOL)_performSessionWithAccount:(id)arg1 teamID:(id)arg2 certificateOID:(id)arg3 logAspect:(id)arg4 error:(id *)arg5 block:(CDUnknownBlockType)arg6;
- (id)initWithSigningCertificateManager:(id)arg1 provisioningProfileManager:(id)arg2;
- (id)init;

@end

@interface IDEIndexUnknownDataSource : IDEIndexDataSource
{
}

+ (id)dataSourceVersion;
- (BOOL)generateDataForJob:(id)arg1;

@end

@interface IDECommandLineBuildLog : IDEActivityLogSection
{
    NSFileHandle *_standardOutput;
    NSFileHandle *_standardError;
    NSMutableArray *_failedSections;
    long long _verbosity;
    NSMutableArray *_sectionsWithAnalyzerIssues;
}

+ (Class)logRecorderClass;
@property(retain) NSMutableArray *sectionsWithAnalyzerIssues; // @synthesize sectionsWithAnalyzerIssues=_sectionsWithAnalyzerIssues;
@property(retain) NSMutableArray *failedSections; // @synthesize failedSections=_failedSections;
@property long long verbosity; // @synthesize verbosity=_verbosity;
@property(retain) NSFileHandle *standardError; // @synthesize standardError=_standardError;
@property(retain) NSFileHandle *standardOutput; // @synthesize standardOutput=_standardOutput;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initLogWithTitle:(id)arg1 standardOutput:(id)arg2 standardError:(id)arg3 verbosity:(long long)arg4;
- (id)initLogWithTitle:(id)arg1;

@end

@interface IDEArchivedApplication : IDEArchivedContent
{
}

+ (id)keyPathsForValuesAffectingIconPath;
+ (id)keyPathsForValuesAffectingApplicationPath;
+ (id)_codesigningIdentityFromApplicationPath:(id)arg1;
+ (id)archivedContentPathPlistKey;
+ (id)archivedContentPropertiesPlistKey;
+ (BOOL)fillInfoDictionary:(id)arg1 forContentAtPath:(id)arg2 inArchiveProductsDirectory:(id)arg3;
+ (id)soleArchivedContentRelativePathInDirectory:(id)arg1;
@property(readonly) DVTPlatform *platform;
- (long long)autodetectedFormatForPackaging;
- (BOOL)supportsPackagingAsFormat:(long long)arg1;
- (id)platformName;
@property(readonly) DVTFilePath *applicationPath;
@property(readonly) NSString *signingIdentity;

@end

@interface IDETestOutputProcessorResult : NSObject
{
    NSString *_finalOutput;
    NSArray *_consoleChunks;
}

@property(retain) NSArray *consoleChunks; // @synthesize consoleChunks=_consoleChunks;
@property(retain) NSString *finalOutput; // @synthesize finalOutput=_finalOutput;
- (void).cxx_destruct;

@end

@interface IDETestOutputProcessor : NSObject
{
    NSString *_barrierString;
    NSCharacterSet *_safeCharacterSet;
    NSObject<OS_dispatch_queue> *_consoleProcessingQueue;
    NSString *_partialConsoleChunkFromLastOutput;
    NSString *_unconsumedOutputPossiblyTerminatedByToken;
    NSMutableString *_unconsumedOutputNotTerminatedByToken;
    NSString *_unprintedConsoleOutput;
    NSOutputStream *_rawOutputStream;
}

@property(retain) NSOutputStream *rawOutputStream; // @synthesize rawOutputStream=_rawOutputStream;
@property(retain) NSString *unprintedConsoleOutput; // @synthesize unprintedConsoleOutput=_unprintedConsoleOutput;
@property(retain) NSMutableString *unconsumedOutputNotTerminatedByToken; // @synthesize unconsumedOutputNotTerminatedByToken=_unconsumedOutputNotTerminatedByToken;
@property(retain) NSString *unconsumedOutputPossiblyTerminatedByToken; // @synthesize unconsumedOutputPossiblyTerminatedByToken=_unconsumedOutputPossiblyTerminatedByToken;
@property(retain) NSString *partialConsoleChunkFromLastOutput; // @synthesize partialConsoleChunkFromLastOutput=_partialConsoleChunkFromLastOutput;
@property(retain) NSObject<OS_dispatch_queue> *consoleProcessingQueue; // @synthesize consoleProcessingQueue=_consoleProcessingQueue;
@property(retain) NSCharacterSet *safeCharacterSet; // @synthesize safeCharacterSet=_safeCharacterSet;
@property(retain) NSString *barrierString; // @synthesize barrierString=_barrierString;
- (void).cxx_destruct;
- (id)_subStringToLastCharacterInSet:(id)arg1 ofString:(id *)arg2;
- (BOOL)_isString:(id)arg1 possiblyTerminatedByToken:(id)arg2;
- (id)outputResultForRawOutput:(id)arg1;
- (id)remainingUnprocessedOutput;
- (void)logRawOutputToFileAtPath:(id)arg1;
- (void)dealloc;
- (id)initWithBarrierString:(id)arg1;

@end

@interface IDEProvisionableOnDemandEvaluator : NSObject <IDEProvisioningManagerRepairObserver, DVTInvalidation>
{
    BOOL _shouldRepair;
    IDEProvisionableStatusEvalutorInputs *_evaluationInputs;
    NSString *_configuration;
    IDEProvisioningManager *_provisioningManager;
    IDEProvisionableStatusEvaluator *_statusEvaluator;
    DVTSemaphore *_semaphore;
    IDEProvisionableStatusEvaluation *_evaluation;
    NSError *_repairError;
    IDEProvisioningUserAction *_repairUserAction;
}

+ (id)evaluatorWithEvaluationInputs:(id)arg1 configuration:(id)arg2 shouldRepair:(BOOL)arg3 provisioningManager:(id)arg4;
+ (void)initialize;
@property(retain) IDEProvisioningUserAction *repairUserAction; // @synthesize repairUserAction=_repairUserAction;
@property(retain) NSError *repairError; // @synthesize repairError=_repairError;
@property(retain) IDEProvisionableStatusEvaluation *evaluation; // @synthesize evaluation=_evaluation;
@property(retain) DVTSemaphore *semaphore; // @synthesize semaphore=_semaphore;
@property(retain) IDEProvisionableStatusEvaluator *statusEvaluator; // @synthesize statusEvaluator=_statusEvaluator;
@property(retain) IDEProvisioningManager *provisioningManager; // @synthesize provisioningManager=_provisioningManager;
@property BOOL shouldRepair; // @synthesize shouldRepair=_shouldRepair;
@property(retain) NSString *configuration; // @synthesize configuration=_configuration;
@property(retain) IDEProvisionableStatusEvalutorInputs *evaluationInputs; // @synthesize evaluationInputs=_evaluationInputs;
- (void).cxx_destruct;
@property(readonly) BOOL requiresImmediateUserActionResolution;
- (BOOL)_actuallyShouldRepair;
- (void)_waitForEvaluationWithForcedAssetRefresh:(BOOL)arg1;
- (id)evaluate;
- (void)primitiveInvalidate;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface IDELocalizationWorkReadStrings : IDELocalizationWorkContext <IDELocalizationWorkProvider>
{
}

+ (id)contextWithParent:(id)arg1 path:(id)arg2;
- (id)work;
@property(readonly) NSDictionary *comments;
@property(readonly) NSDictionary *strings;
- (id)path;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IDEDataProvider_Energy : IDEDataProvider
{
}

+ (id)categoryTitles;
+ (id)sharedDataProvider;
- (id)captureAttributes:(id)arg1 forPIDs:(id)arg2;
- (BOOL)captureAttributes:(id)arg1 toDictionary:(id)arg2 forPID:(id)arg3;
- (id)supportedAttributes;

@end

@interface IDEDistributionCodeSlimmingStep : IDEDistributionItemProcessingStep
{
    DVTLogAspect *_logAspect;
}

+ (id)machODestinationFilePathForDistributionItem:(id)arg1 distributionItemDestinationParent:(id)arg2;
+ (id)requiresBitcodeAppStoreSubmission:(id)arg1 platformsWithRequiredBitcode:(id)arg2 error:(id *)arg3;
+ (id)wantsBitcodeAskForItem:(id)arg1 platformsWithOptionalBitcode:(id)arg2 archive:(id)arg3 error:(id *)arg4;
+ (BOOL)stripMachOAtPath:(id)arg1 strippingOptions:(unsigned long long)arg2 logAspect:(id)arg3 error:(id *)arg4;
@property(retain, nonatomic) DVTLogAspect *logAspect; // @synthesize logAspect=_logAspect;
- (void).cxx_destruct;
- (_Bool)runWithError:(id *)arg1;
- (id)strippingOptionsWithContext:(id)arg1 andError:(id *)arg2;
- (id)providedOutputContextPropertyNames;
- (id)requiredInputContextPropertyNames;
- (id)name;

@end

@interface IDEIndexClangDataSource : IDEIndexDataSource
{
    IDEIndexingJob *_job;
    NSMutableDictionary *_sourcesToNewFiles;
    IDEIndexNewMainFile *_topLevelFile;
    IDEIndexNewFile *_topLevelSourceFile;
    NSArray *_astArgs;
    NSString *_workingDirectory;
    BOOL _hasCpp;
    BOOL _isModuleFile;
    IDEIndexClangTranslationUnit *_translationUnit;
}

+ (id)translationUnitForPCHFile:(id)arg1 arguments:(id)arg2 session:(id)arg3 create:(BOOL)arg4;
+ (void)logPCHFailure:(id)arg1;
+ (id)processArguments:(id)arg1;
+ (id)appendNewArguments:(id)arg1 inArray:(id)arg2;
+ (id)appendNewArgument:(id)arg1 inArray:(id)arg2;
+ (id)substituteNewArgument:(id)arg1 forOldArgument:(id)arg2 inArray:(id)arg3;
+ (id)addHeaderMapInclude:(id)arg1 forBuildProductsDir:(id)arg2 useSpellChecking:(BOOL)arg3 toArguments:(id)arg4;
+ (id)canonicalPathForPath:(id)arg1 index:(id)arg2 arguments:(id)arg3 workingDirectory:(id *)arg4;
+ (id)workingDirFromArgs:(id)arg1;
+ (void)logMemoryUsage:(struct CXTranslationUnitImpl *)arg1 forFile:(id)arg2;
+ (BOOL)loggingMemoryUsage;
+ (id)resolutionForName:(id)arg1 kind:(id)arg2 containerName:(id)arg3;
+ (id)dataSourceVersion;
+ (BOOL)displayDiagnostics;
+ (long long)timingMode;
+ (void)initialize;
@property(retain, nonatomic) IDEIndexClangTranslationUnit *translationUnit; // @synthesize translationUnit=_translationUnit;
@property(readonly, nonatomic) BOOL hasCpp; // @synthesize hasCpp=_hasCpp;
@property(readonly, nonatomic) IDEIndexNewFile *topLevelSourceFile; // @synthesize topLevelSourceFile=_topLevelSourceFile;
@property(readonly, nonatomic) IDEIndexNewMainFile *topLevelFile; // @synthesize topLevelFile=_topLevelFile;
@property(readonly, nonatomic) NSMutableDictionary *sourcesToNewFiles; // @synthesize sourcesToNewFiles=_sourcesToNewFiles;
@property(readonly, nonatomic) IDEIndexingJob *job; // @synthesize job=_job;
- (void).cxx_destruct;
- (int)indexOptionFlags;
- (CDStruct_9b0a347d *)indexerCallbacks;
- (BOOL)generateDataForJob:(id)arg1;
- (BOOL)_addTopLevelFile:(id)arg1 includePath:(id)arg2;
- (id)_canonicalPathForPath:(id)arg1;
- (id)initWithSource:(id)arg1;

@end

@interface IDETestableReference : NSObject <IDETestingSpecifier, DVTXMLUnarchiving>
{
    id <IDETestable> _testable;
    DVTObservingToken *_testableObservingToken;
    IDESchemeBuildableReference *_buildableReference;
    NSMutableArray *_mutableSkippedTests;
    IDEDeviceAppDataReference *_deviceAppDataReference;
    IDELocationScenarioReference *_locationScenarioReference;
    BOOL _skipped;
}

+ (id)keyPathsForValuesAffectingScheme;
+ (id)_testableForBuildableReference:(id)arg1;
@property(retain) IDELocationScenarioReference *locationScenarioReference; // @synthesize locationScenarioReference=_locationScenarioReference;
@property(retain) IDEDeviceAppDataReference *deviceAppDataReference; // @synthesize deviceAppDataReference=_deviceAppDataReference;
@property BOOL skipped; // @synthesize skipped=_skipped;
@property(readonly) IDESchemeBuildableReference *buildableReference; // @synthesize buildableReference=_buildableReference;
- (void).cxx_destruct;
@property(readonly, copy) NSSet *adHocTests;
- (void)disableTest:(id)arg1;
- (void)enableTest:(id)arg1;
@property(readonly, copy) NSArray *skippedTests;
- (void)setSkippedFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)addLocationScenarioReference:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)addDeviceAppData:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)addBuildableReference:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)addSkippedTests:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)dvt_encodeRelationshipsWithXMLArchiver:(id)arg1 version:(id)arg2;
- (void)dvt_encodeAttributesWithXMLArchiver:(id)arg1 version:(id)arg2;
- (id)initFromXMLUnarchiver:(id)arg1 archiveVersion:(float)arg2;
@property(retain) IDEScheme *scheme;
- (void)resolveBuildableFromImport;
- (id)testableName;
- (id)testable;
@property(readonly, copy) NSString *description;
- (id)init;
- (id)initWithTestable:(id)arg1 scheme:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface _IDETestableReferenceTestIdentifier : NSObject <DVTXMLUnarchiving>
{
    NSString *_identifier;
}

@property(copy) NSString *identifier; // @synthesize identifier=_identifier;
- (void).cxx_destruct;
- (void)setIdentifierFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)dvt_encodeAttributesWithXMLArchiver:(id)arg1 version:(id)arg2;
- (id)initFromXMLUnarchiver:(id)arg1 archiveVersion:(float)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IDETextFragmentIndexRecordStorage : NSObject
{
    NSObject<OS_dispatch_queue> *_locks[32];
    NSMutableDictionary *_entriesByFilePath[32];
}

- (void).cxx_destruct;
- (void)trimToEntriesForFilePaths:(id)arg1;
- (id)snapshotOfEntries;
- (void)resetToEntries:(id)arg1;
- (void)removeAllEntries;
- (void)removeAllEntriesWithAllLocksAlreadyHeld;
- (void)withAllLocks:(CDUnknownBlockType)arg1;
- (void)withAllLocksBeginingAt:(long long)arg1 invoke:(CDUnknownBlockType)arg2;
- (void)removeEntryForFilePath:(id)arg1;
- (void)addEntry:(id)arg1;
- (id)entryForFilePath:(id)arg1;
- (void)withAcessToStorageForFilePath:(id)arg1 storage:(CDUnknownBlockType)arg2;
- (id)init;

@end

@interface IDEStackFrame : NSObject <IDEDebugNavigableModel, DVTInvalidation>
{
    DVTObservingToken *_debugSessionStateObserver;
    BOOL _hasSymbols;
    BOOL _recorded;
    BOOL _causedCrash;
    BOOL _returnValueIsValid;
    BOOL _settingDisassembly;
    NSString *_associatedProcessUUID;
    NSString *_displayName;
    NSString *_filePath;
    id <DVTInvalidation><IDEDataValue> _returnValue;
    IDEThread *_parentThread;
    NSString *_name;
    NSNumber *_frameNumber;
    NSNumber *_framePointer;
    NSURL *_fileURL;
    NSNumber *_lineNumber;
    IDECodeModule *_module;
    NSString *_instructionPointerAddressString;
    NSArray *_locals;
    NSArray *_arguments;
    NSArray *_fileStatics;
    NSArray *_globals;
    NSArray *_registers;
    NSString *_disassemblyString;
}

+ (unsigned long long)assertionBehaviorForKeyValueObservationsAtEndOfEvent;
+ (unsigned long long)assertionBehaviorAfterEndOfEventForSelector:(SEL)arg1;
+ (id)keyPathsForValuesAffectingDisplayName;
+ (id)stackFrameForDisassemblyURL:(id)arg1;
+ (id)disassemblyURLForStackFrame:(id)arg1 inDebugSession:(id)arg2;
+ (id)compressedStackFrames:(id)arg1 usingCompressionValue:(long long)arg2;
+ (void)initialize;
@property BOOL settingDisassembly; // @synthesize settingDisassembly=_settingDisassembly;
@property(copy, nonatomic) NSString *disassemblyString; // @synthesize disassemblyString=_disassemblyString;
@property(nonatomic) BOOL returnValueIsValid; // @synthesize returnValueIsValid=_returnValueIsValid;
@property(readonly, nonatomic) NSArray *registers; // @synthesize registers=_registers;
@property(readonly, nonatomic) NSArray *globals; // @synthesize globals=_globals;
@property(readonly, nonatomic) NSArray *fileStatics; // @synthesize fileStatics=_fileStatics;
@property(readonly, nonatomic) NSArray *arguments; // @synthesize arguments=_arguments;
@property(readonly, nonatomic) NSArray *locals; // @synthesize locals=_locals;
@property(copy, nonatomic) NSString *instructionPointerAddressString; // @synthesize instructionPointerAddressString=_instructionPointerAddressString;
@property(nonatomic, getter=hasCausedCrash) BOOL causedCrash; // @synthesize causedCrash=_causedCrash;
@property(nonatomic, getter=isRecorded) BOOL recorded; // @synthesize recorded=_recorded;
@property(retain, nonatomic) IDECodeModule *module; // @synthesize module=_module;
@property(copy, nonatomic) NSNumber *lineNumber; // @synthesize lineNumber=_lineNumber;
@property(copy, nonatomic) NSURL *fileURL; // @synthesize fileURL=_fileURL;
@property(nonatomic) BOOL hasSymbols; // @synthesize hasSymbols=_hasSymbols;
@property(readonly, nonatomic) NSNumber *framePointer; // @synthesize framePointer=_framePointer;
@property(copy, nonatomic) NSNumber *frameNumber; // @synthesize frameNumber=_frameNumber;
@property(copy, nonatomic) NSString *name; // @synthesize name=_name;
@property(retain, nonatomic) IDEThread *parentThread; // @synthesize parentThread=_parentThread;
@property(readonly, copy) NSString *associatedProcessUUID; // @synthesize associatedProcessUUID=_associatedProcessUUID;
- (void).cxx_destruct;
- (void)primitiveInvalidate;
- (id)expressionWithSubstitutedTypesForExpression:(id)arg1;
- (void)evaluateExpression:(id)arg1 options:(id)arg2 withResultBlock:(CDUnknownBlockType)arg3;
- (void)evaluateExpression:(id)arg1 withResultBlock:(CDUnknownBlockType)arg2;
- (void)requestDataValueForSymbol:(id)arg1 symbolKind:(id)arg2 atLocation:(id)arg3 onQueue:(id)arg4 withResultBlock:(CDUnknownBlockType)arg5;
@property(readonly) NSString *descriptionForPasteboard;
@property(retain, nonatomic) id <DVTInvalidation><IDEDataValue> returnValue; // @synthesize returnValue=_returnValue;
- (BOOL)hasSameDisassemblyURL:(id)arg1;
@property(readonly, nonatomic) NSString *filePath; // @synthesize filePath=_filePath;
@property(readonly, nonatomic) NSString *displayName; // @synthesize displayName=_displayName;
@property(readonly) IDELaunchSession *launchSession;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
- (BOOL)isEqual:(id)arg1;
- (id)init;
- (id)initWithParentThread:(id)arg1 frameNumber:(id)arg2 framePointer:(id)arg3 name:(id)arg4;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface IDEDebugExpressionOptions : NSObject
{
    BOOL _autoHandleExceptions;
    NSObject<OS_dispatch_queue> *_callbackQueue;
    unsigned long long _timeoutInMicroSeconds;
    long long _language;
    NSString *_dataValueName;
}

@property(copy) NSString *dataValueName; // @synthesize dataValueName=_dataValueName;
@property long long language; // @synthesize language=_language;
@property BOOL autoHandleExceptions; // @synthesize autoHandleExceptions=_autoHandleExceptions;
@property unsigned long long timeoutInMicroSeconds; // @synthesize timeoutInMicroSeconds=_timeoutInMicroSeconds;
@property(retain) NSObject<OS_dispatch_queue> *callbackQueue; // @synthesize callbackQueue=_callbackQueue;
- (void).cxx_destruct;
- (id)initWithTimeout:(unsigned long long)arg1;
- (id)initWithCallbackQueue:(id)arg1;
- (id)init;

@end

@interface IDEIndexingJobScheduler : NSObject
{
    NSObject<OS_dispatch_queue> *_control_queue;
    long long _width;
    long long _lastThrottledWidth;
    BOOL _onBatteryPower;
    NSString *_buildCommandRunning;
    double _timeBatteryChecked;
    double _timeBuildCommandsChecked;
    NSMutableArray *_engines;
    NSMutableDictionary *_hotFilesByEngine;
    NSMutableDictionary *_hotFileIndicesByEngine;
    NSMutableDictionary *_priorityIndicesByEngine;
    NSMutableDictionary *_waitingJobsByEngine;
    NSMutableArray *_runningJobs;
    id _buildNotifications[2];
    long long _nBuildOperations;
}

+ (id)sharedInstance;
+ (void)initialize;
@property(readonly, nonatomic) long long width; // @synthesize width=_width;
- (void).cxx_destruct;
- (void)_scheduleJobs;
- (long long)_throttledWidth;
- (long long)_adjustThrottledWidth:(long long)arg1;
- (void)_checkBuildCommands;
- (void)ping;
- (void)cancelJobsForEngine:(id)arg1;
- (void)scheduleJob:(id)arg1;
- (void)clearHotFilesForEngine:(id)arg1;
- (void)addHotFile:(id)arg1 forEngine:(id)arg2;
- (void)dealloc;
- (void)reportThrottledWidth:(CDUnknownBlockType)arg1 forEngine:(id)arg2;
- (id)init;

@end

@interface IDEIndexDBSQLStream : NSObject
{
}

- (void)willSubmitTransaction:(id)arg1;
- (id)newTransaction;
- (void)doSQL1:(id)arg1 withBindings:(CDUnknownBlockType)arg2;
- (void)doSQL:(id)arg1;
- (void)doBlock:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) IDEIndexDBConnection *dbConnection;
@property(readonly, nonatomic) IDEIndexDatabase *database;

@end

@interface IDEVersionedFileManager : NSObject
{
}

+ (id)_errorWithUnderlyingErrors:(id)arg1 type:(int)arg2;
+ (id)_errorDescriptionForType:(int)arg1;
+ (void)_callCompletionBlockWithResult:(BOOL)arg1 error:(id)arg2 queue:(id)arg3 completionBlock:(CDUnknownBlockType)arg4;
+ (void)_delegatePerformBlock:(CDUnknownBlockType)arg1;
+ (void)setDelegate:(id)arg1 withDispatchQueue:(id)arg2;
+ (void)initialize;
- (void)moveItemsAtFilePaths:(id)arg1 toFilePaths:(id)arg2 inContext:(id)arg3 completionBlockDispatchQueue:(id)arg4 completionBlock:(CDUnknownBlockType)arg5;
- (void)copyItemsAtFilePaths:(id)arg1 toFilePaths:(id)arg2 completionBlockDispatchQueue:(id)arg3 completionBlock:(CDUnknownBlockType)arg4;
- (void)addItemsAtFilePaths:(id)arg1 workspace:(id)arg2 force:(BOOL)arg3 completionBlockDispatchQueue:(id)arg4 completionBlock:(CDUnknownBlockType)arg5;
- (void)_addItemsAtFilePaths:(id)arg1 workspace:(id)arg2 force:(BOOL)arg3;
- (void)_addPathStrings:(id)arg1 toWorkingCopy:(id)arg2;
- (void)removeItemsAtFilePaths:(id)arg1 moveToTrash:(BOOL)arg2 completionBlockDispatchQueue:(id)arg3 completionBlock:(CDUnknownBlockType)arg4;
- (void)createDirectoryAtFilePath:(id)arg1 withIntermediateDirectories:(BOOL)arg2 attributes:(id)arg3 completionBlockDispatchQueue:(id)arg4 completionBlock:(CDUnknownBlockType)arg5;
- (void)endBatchEdits;
- (void)startBatchEdits;

@end

@interface IDEIndexCategorySymbol : IDEIndexContainerSymbol
{
}

- (id)relatedClass;
- (id)properties;
- (id)instanceVariables;
- (id)instanceMethods;
- (id)classMethods;

@end

@interface IDEProvisioningCompoundProfile : NSObject <NSCopying>
{
    BOOL _wantsInstallCancelled;
    NSString *_name;
    long long _state;
    NSError *_error;
    IDEProvisioningCompoundProfileIdentifier *_identifier;
    DVTPortalProfile *_portalProfile;
    id <DVTProvisioningProfile> _provisioningProfile;
    id <DVTProvisioningProfile> _outDatedProfile;
    id <DVTProvisioningProfile> _previewProfile;
}

+ (id)keyPathsForValuesAffectingAllowDownloadingPreview;
+ (id)keyPathsForValuesAffectingIsLocalProfileOutDated;
+ (id)keyPathsForValuesAffectingHasProfileInstalled;
+ (id)keyPathsForValuesAffectingProfile;
@property(nonatomic) BOOL wantsInstallCancelled; // @synthesize wantsInstallCancelled=_wantsInstallCancelled;
@property(copy, nonatomic) id <DVTProvisioningProfile> previewProfile; // @synthesize previewProfile=_previewProfile;
@property(copy, nonatomic) id <DVTProvisioningProfile> outDatedProfile; // @synthesize outDatedProfile=_outDatedProfile;
@property(copy, nonatomic) id <DVTProvisioningProfile> provisioningProfile; // @synthesize provisioningProfile=_provisioningProfile;
@property(copy, nonatomic) DVTPortalProfile *portalProfile; // @synthesize portalProfile=_portalProfile;
@property(retain, nonatomic) IDEProvisioningCompoundProfileIdentifier *identifier; // @synthesize identifier=_identifier;
@property(retain, nonatomic) NSError *error; // @synthesize error=_error;
@property(nonatomic) long long state; // @synthesize state=_state;
@property(readonly) NSString *name; // @synthesize name=_name;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
- (id)description;
@property(readonly) BOOL allowDownloadingPreview;
@property(readonly) BOOL isLocalProfileOutDated;
@property(readonly) BOOL hasProfileInstalled;
@property(readonly) id <DVTProvisioningProfile> profile;
- (void)verifyIdentifierOfProfile:(id)arg1;
- (id)initWithPortalProfile:(id)arg1;

@end

@interface IDEBuildOperationDescription : NSObject
{
    NSString *_objectToBuildName;
    NSString *_actionName;
    NSString *_actionInProgress;
}

@property(readonly, copy) NSString *actionInProgress; // @synthesize actionInProgress=_actionInProgress;
@property(readonly, copy) NSString *actionName; // @synthesize actionName=_actionName;
@property(readonly, copy) NSString *objectToBuildName; // @synthesize objectToBuildName=_objectToBuildName;
- (void).cxx_destruct;
- (id)initWithObjectToBuildName:(id)arg1 actionName:(id)arg2 actionInProgress:(id)arg3;

@end

@interface _IDELegacyUserDefaultsImporter : NSObject <IDEInitialization>
{
}

+ (BOOL)ide_initializeWithOptions:(int)arg1 error:(id *)arg2;

@end

@interface IDEDistributionOptionCompileBitcode : IDEDistributionOption
{
}

+ (id)propertyListForContext:(id)arg1;
+ (id)availableOptionsForPropertyList;
- (id)providedOutputContextPropertyNames;
- (id)requiredInputContextPropertyNames;
@property(readonly, nonatomic) BOOL wantsCompileBitcodeAsk;
- (BOOL)loadFromPropertyList:(id)arg1 error:(id *)arg2;
- (id)initWithIdentifier:(id)arg1 context:(id)arg2;

@end

@interface IDEBatchFindScopeWorkspaceLocationPredicate : IDEBatchFindScopePredicate
{
    NSArray *_pathComponents;
}

+ (id)propertyListIdentifier;
+ (id)predicateWithPropertyListRepresentation:(id)arg1;
+ (id)componentForGroupPathForContainerItem:(id)arg1;
@property(readonly) NSArray *pathComponents; // @synthesize pathComponents=_pathComponents;
- (void).cxx_destruct;
- (BOOL)isWorkspaceSpecific;
- (id)propertyListRepresentation;
- (CDUnknownBlockType)matcherBoundToWorkspace:(id)arg1;
- (BOOL)isEqualToScopePredicateWithIdenticalClass:(id)arg1;
- (unsigned long long)hash;
- (id)initWithPathComponents:(id)arg1;

@end

@interface IDEPosixSpawnLauncher : IDERunOperationPathWorker
{
    void *_file_actions;
    BOOL _startSuspended;
    BOOL _terminateCalled;
    BOOL _targetReallyDead;
    BOOL _responsibleForTermination;
    DVTDispatchLock *_lifeCycleLock;
    DVTDispatchLock *_deathMutex;
}

@property BOOL startSuspended; // @synthesize startSuspended=_startSuspended;
- (void).cxx_destruct;
- (void)terminate;
- (void)start;
- (BOOL)_willUseExistingProcess:(id)arg1;
- (void)_setPIDOnMainThread:(int)arg1;
- (void)_forceQuit:(id)arg1;
- (BOOL)_convertCmdArgs:(id)arg1 intoPtrArray:(const char ***)arg2 andEnvVars:(id)arg3 intoPtrArray:(const char ***)arg4 andReturnStandardizedPath:(const char **)arg5 error:(id *)arg6;
- (void)_waitForChildExit:(int)arg1;
- (void *)_setupPosixSpawnAttributesAndPTY:(id *)arg1;
- (void)dealloc;
- (id)initWithExtensionIdentifier:(id)arg1 launchSession:(id)arg2;

@end

@interface IDERemoteRunnable : IDERunnable <DVTXMLUnarchiving>
{
    DVTFilePath *_remotePath;
    IDESchemeBuildableReference *_buildableReference;
}

+ (id)keyPathsForValuesAffectingBuildableProduct;
+ (id)remoteRunnableWithBundleIdentifier:(id)arg1 filePath:(id)arg2 mode:(int)arg3 buildableReference:(id)arg4;
@property(retain) IDESchemeBuildableReference *buildableReference; // @synthesize buildableReference=_buildableReference;
- (id)remotePath;
- (void).cxx_destruct;
- (void)addBuildableReference:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)dvt_encodeRelationshipsWithXMLArchiver:(id)arg1 version:(id)arg2;
- (void)dvt_encodeAttributesWithXMLArchiver:(id)arg1 version:(id)arg2;
- (void)setRemotePathFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setScheme:(id)arg1;
- (int)runnableType;
- (id)pathToRunnableForBuildParameters:(id)arg1;
@property(readonly) id <IDEBuildableProduct> buildableProduct;
- (id)toolTip;
- (id)displayName;
- (id)runnableUTIType:(id *)arg1;
- (BOOL)hasRunnablePath;
- (id)initFromXMLUnarchiver:(id)arg1 archiveVersion:(float)arg2;
- (id)initWithRemotePath:(id)arg1 bundleIdentifier:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IDEWorkspaceCore : IDEXMLPackageContainerCore <IDEContainerCore>
{
}


// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;
@end

@interface IDETemplateInstantiationContext : NSObject <NSCopying>
{
    BOOL _showsCrossPlatformSection;
    BOOL _alwaysReplaceFiles;
    BOOL _reuseFileReferences;
    IDEWorkspace *_workspace;
    IDETemplate *_documentTemplate;
    DVTFilePath *_documentFilePath;
    NSArray *_instantiatedItems;
    IDEContainerItem *_primaryInstantiatedItem;
    IDEGroup *_destinationGroup;
    unsigned long long _destinationIndex;
    NSArray *_destinationBuildables;
    IDEWorkspace *_createdWorkspace;
    id <IDEProvisioningBasicTeam> _team;
}

@property(retain) id <IDEProvisioningBasicTeam> team; // @synthesize team=_team;
@property BOOL reuseFileReferences; // @synthesize reuseFileReferences=_reuseFileReferences;
@property BOOL alwaysReplaceFiles; // @synthesize alwaysReplaceFiles=_alwaysReplaceFiles;
@property(retain) IDEWorkspace *createdWorkspace; // @synthesize createdWorkspace=_createdWorkspace;
@property BOOL showsCrossPlatformSection; // @synthesize showsCrossPlatformSection=_showsCrossPlatformSection;
@property(copy) NSArray *destinationBuildables; // @synthesize destinationBuildables=_destinationBuildables;
@property unsigned long long destinationIndex; // @synthesize destinationIndex=_destinationIndex;
@property(retain) IDEGroup *destinationGroup; // @synthesize destinationGroup=_destinationGroup;
@property(retain) IDEContainerItem *primaryInstantiatedItem; // @synthesize primaryInstantiatedItem=_primaryInstantiatedItem;
@property(copy) NSArray *instantiatedItems; // @synthesize instantiatedItems=_instantiatedItems;
@property(retain) DVTFilePath *documentFilePath; // @synthesize documentFilePath=_documentFilePath;
@property(retain, nonatomic) IDETemplate *documentTemplate; // @synthesize documentTemplate=_documentTemplate;
@property(retain, nonatomic) IDEWorkspace *workspace; // @synthesize workspace=_workspace;
- (void).cxx_destruct;
@property(readonly) NSDictionary *additionalMacroExpansions;
@property(readonly) NSArray *customDataStoresForTemplateMacros;
- (id)destinationBlueprintProvider;
- (id)sectionsForAvailableTemplatesOfKind:(id)arg1;
- (id)arrayBySortingSections:(id)arg1;
- (id)standardSectionNames;
- (id)description;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface IDEAppIDFeatureCoordinator : NSObject <DVTInvalidation>
{
    NSString *_configuration;
    BOOL _allowAllFeatures;
    DVTAppIDFeatures *_appIDFeatures;
    long long _provisioningStyle;
    IDEWorkspace *_workspace;
    id <IDEProvisionable> _provisionable;
    IDEProvisionableManager *_provisionableManager;
    id <IDEProvisioningAssetSelectionDataSource> _dataSource;
    DVTDelayedInvocation *_delayedNotification;
    DVTObservingToken *_provisioningProfileObserver;
}

+ (id)keyPathsForValuesAffectingTeam;
+ (id)keyPathsForValuesAffectingErrors;
+ (id)keyPathsForValuesAffectingCommunicatingWithPortal;
+ (void)initialize;
@property(retain, nonatomic) DVTObservingToken *provisioningProfileObserver; // @synthesize provisioningProfileObserver=_provisioningProfileObserver;
@property(nonatomic) BOOL allowAllFeatures; // @synthesize allowAllFeatures=_allowAllFeatures;
@property(retain, nonatomic) DVTDelayedInvocation *delayedNotification; // @synthesize delayedNotification=_delayedNotification;
@property(retain, nonatomic) id <IDEProvisioningAssetSelectionDataSource> dataSource; // @synthesize dataSource=_dataSource;
@property(retain, nonatomic) IDEProvisionableManager *provisionableManager; // @synthesize provisionableManager=_provisionableManager;
@property(retain, nonatomic) id <IDEProvisionable> provisionable; // @synthesize provisionable=_provisionable;
@property(retain, nonatomic) IDEWorkspace *workspace; // @synthesize workspace=_workspace;
@property(nonatomic) long long provisioningStyle; // @synthesize provisioningStyle=_provisioningStyle;
@property(retain, nonatomic) DVTAppIDFeatures *appIDFeatures; // @synthesize appIDFeatures=_appIDFeatures;
- (void).cxx_destruct;
@property(retain, nonatomic) id <IDEProvisioningBasicTeam> team;
@property(readonly, nonatomic) NSArray *errors;
@property(readonly, nonatomic, getter=isCommunicatingWithPortal) BOOL communicatingWithPortal;
- (BOOL)allowsFeatures:(id)arg1 missingFeatures:(id *)arg2;
- (void)noteAppIDFeaturesChanged;
- (id)_provisioningProfileForBasicProfile:(id)arg1;
- (void)_profileChanged:(id)arg1;
- (void)_updateDataSource;
- (void)_setUpObservations;
- (id)initWithProvisionable:(id)arg1 configuration:(id)arg2 workspace:(id)arg3;
- (void)primitiveInvalidate;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface IDEScheme : NSObject <DVTInvalidation>
{
    IDEBuildSchemeAction *_buildSchemeAction;
    IDETestSchemeAction *_testSchemeAction;
    IDELaunchSchemeAction *_launchSchemeAction;
    IDEArchiveSchemeAction *_archiveSchemeAction;
    IDEProfileSchemeAction *_profileSchemeAction;
    IDEAnalyzeSchemeAction *_analyzeSchemeAction;
    IDEInstallSchemeAction *_installSchemeAction;
    IDEIntegrateSchemeAction *_integrateSchemeAction;
    NSString *_lastUpgradeVersion;
    NSString *_cachedLastUpgradeVersion;
    BOOL _hasRunUpgradeCheck;
    BOOL _wasUpgraded;
    IDERunnable *_oldFormatArchivedRunnable;
    IDERunContextManager *_runContextManager;
    IDEContainer<IDECustomDataStoring> *_customDataStoreContainer;
    DVTCustomDataSpecifier *_customDataSpecifier;
    NSArray *_availableRunDestinations;
    BOOL _isShown;
    unsigned long long _orderHint;
    BOOL _dataStoreClosed;
    BOOL _deferredSaveScheduled;
    BOOL _registeredForIsBuildableNotifications;
    NSNumber *_isArchivable;
    id _isArchivableNotificationToken;
    NSNumber *_isInstallable;
    id _isInstallableNotificationToken;
    id _buildablesToken;
    BOOL _hasUnsupportedArchiveData;
    DVTDelayedInvocation *_runDestinationInvalidationScheduler;
    BOOL _transient;
    BOOL _persisted;
    BOOL _wasCreatedForAppExtension;
    BOOL _schemeRunnableRunsDirectlyOnPairedProxyDevice;
    BOOL _runDestinationInvalidationSuspended;
    BOOL _runDestinationInvalidationPending;
    IDEEntityIdentifier *_schemeIdentifier;
    NSError *_loadError;
    DVTObservingToken *_workspaceReferenceContainersObservingToken;
    IDESchemeOrderedWorkspaceNotificationManager *_orderedWorkspaceNotificationManager;
}

+ (id)_buildParametersForPurpose:(long long)arg1 schemeCommand:(id)arg2 configurationName:(id)arg3 workspaceArena:(id)arg4 overridingProperties:(id)arg5 activeRunDestination:(id)arg6 activeArchitecture:(id)arg7;
+ (BOOL)automaticallyNotifiesObserversOfOrderHint;
+ (BOOL)automaticallyNotifiesObserversOfIsShown;
+ (id)keyPathsForValuesAffectingDisambiguatedName;
+ (BOOL)automaticallyNotifiesObserversOfCustomDataStoreContainer;
+ (id)keyPathsForValuesAffectingIntegratable;
+ (id)keyPathsForValuesAffectingTestable;
+ (id)keyPathsForValuesAffectingAnalyzable;
+ (id)keyPathsForValuesAffectingProfilable;
+ (id)keyPathsForValuesAffectingRunnable;
+ (id)schemeFromXMLData:(id)arg1 withRunContextManager:(id)arg2 customDataStoreContainer:(id)arg3 customDataSpecifier:(id)arg4 isShown:(BOOL)arg5 orderHint:(unsigned long long)arg6 error:(id *)arg7;
+ (id)schemeWithRunContextManager:(id)arg1 customDataStoreContainer:(id)arg2 customDataSpecifier:(id)arg3;
+ (unsigned long long)assertionBehaviorForKeyValueObservationsAtEndOfEvent;
+ (unsigned long long)assertionBehaviorAfterEndOfEventForSelector:(SEL)arg1;
+ (void)initialize;
@property(retain) IDESchemeOrderedWorkspaceNotificationManager *orderedWorkspaceNotificationManager; // @synthesize orderedWorkspaceNotificationManager=_orderedWorkspaceNotificationManager;
@property(getter=isRunDestinationInvalidationPending) BOOL runDestinationInvalidationPending; // @synthesize runDestinationInvalidationPending=_runDestinationInvalidationPending;
@property(nonatomic, getter=isRunDestinationInvalidationSuspended) BOOL runDestinationInvalidationSuspended; // @synthesize runDestinationInvalidationSuspended=_runDestinationInvalidationSuspended;
@property(retain) DVTObservingToken *workspaceReferenceContainersObservingToken; // @synthesize workspaceReferenceContainersObservingToken=_workspaceReferenceContainersObservingToken;
@property(readonly) BOOL schemeRunnableRunsDirectlyOnPairedProxyDevice; // @synthesize schemeRunnableRunsDirectlyOnPairedProxyDevice=_schemeRunnableRunsDirectlyOnPairedProxyDevice;
@property BOOL wasCreatedForAppExtension; // @synthesize wasCreatedForAppExtension=_wasCreatedForAppExtension;
@property(retain) NSError *loadError; // @synthesize loadError=_loadError;
@property(copy, nonatomic) IDEEntityIdentifier *schemeIdentifier; // @synthesize schemeIdentifier=_schemeIdentifier;
@property(readonly) DVTCustomDataSpecifier *customDataSpecifier; // @synthesize customDataSpecifier=_customDataSpecifier;
@property(retain, nonatomic) IDEContainer<IDECustomDataStoring> *customDataStoreContainer; // @synthesize customDataStoreContainer=_customDataStoreContainer;
@property(retain) IDERunContextManager *runContextManager; // @synthesize runContextManager=_runContextManager;
@property(nonatomic, getter=isPersisted) BOOL persisted; // @synthesize persisted=_persisted;
@property(getter=isTransient) BOOL transient; // @synthesize transient=_transient;
@property BOOL wasUpgraded; // @synthesize wasUpgraded=_wasUpgraded;
@property BOOL hasRunUpgradeCheck; // @synthesize hasRunUpgradeCheck=_hasRunUpgradeCheck;
@property(copy) NSString *lastUpgradeVersion; // @synthesize lastUpgradeVersion=_lastUpgradeVersion;
@property(copy) NSString *cachedLastUpgradeVersion; // @synthesize cachedLastUpgradeVersion=_cachedLastUpgradeVersion;
@property(retain) IDEInstallSchemeAction *installSchemeAction; // @synthesize installSchemeAction=_installSchemeAction;
@property(retain) IDEIntegrateSchemeAction *integrateSchemeAction; // @synthesize integrateSchemeAction=_integrateSchemeAction;
@property(retain) IDEAnalyzeSchemeAction *analyzeSchemeAction; // @synthesize analyzeSchemeAction=_analyzeSchemeAction;
@property(retain) IDEProfileSchemeAction *profileSchemeAction; // @synthesize profileSchemeAction=_profileSchemeAction;
@property(retain) IDEArchiveSchemeAction *archiveSchemeAction; // @synthesize archiveSchemeAction=_archiveSchemeAction;
@property(retain) IDELaunchSchemeAction *launchSchemeAction; // @synthesize launchSchemeAction=_launchSchemeAction;
@property(retain) IDETestSchemeAction *testSchemeAction; // @synthesize testSchemeAction=_testSchemeAction;
@property(retain) IDEBuildSchemeAction *buildSchemeAction; // @synthesize buildSchemeAction=_buildSchemeAction;
- (void).cxx_destruct;
- (void)addBuildableProductRunnable:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)addPathRunnable:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)addLaunchPhase:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)addTestPhase:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)addBuildPhase:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)addArchiveAction:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)addInstallAction:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)addIntegrateAction:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)addAnalyzeAction:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)addProfileAction:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)addLaunchAction:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)addTestAction:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)addBuildAction:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setWasCreatedForAppExtensionFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setLastUpgradeVersionFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)dvt_encodeRelationshipsWithXMLArchiver:(id)arg1 version:(id)arg2;
- (void)dvt_encodeAttributesWithXMLArchiver:(id)arg1 version:(id)arg2;
@property(readonly) NSData *xmlData;
- (BOOL)_executionActionsNeedCurrentArchiveVersion;
- (void)dvt_awakeFromXMLUnarchiver:(id)arg1;
- (id)_groupAndImposeDependenciesForOrderedOperations:(id)arg1;
- (id)_buildOperationGroupForSchemeOperationParameters:(id)arg1 buildParameters:(id)arg2 buildLog:(id)arg3 dontActuallyRunCommands:(BOOL)arg4 restorePersistedBuildResults:(BOOL)arg5 schemeActionRecord:(id)arg6 overridingBuildables:(id)arg7 error:(id *)arg8;
- (id)_cleanOperationGroupForExecutionEnvironment:(id)arg1 orderedBuildables:(id)arg2 buildConfiguration:(id)arg3 buildLog:(id)arg4 overridingProperties:(id)arg5 activeRunDestination:(id)arg6 schemeActionRecord:(id)arg7 error:(id *)arg8;
- (id)_executionOperationForSchemeOperationParameters:(id)arg1 build:(BOOL)arg2 onlyBuild:(BOOL)arg3 buildParameters:(id)arg4 title:(id)arg5 buildLog:(id)arg6 dontActuallyRunCommands:(BOOL)arg7 restorePersistedBuildResults:(BOOL)arg8 deviceAvailableChecker:(CDUnknownBlockType)arg9 error:(id *)arg10 actionCallbackBlock:(CDUnknownBlockType)arg11;
- (id)buildParametersForTask:(long long)arg1 executionEnvironment:(id)arg2 buildPurpose:(long long)arg3 schemeCommand:(id)arg4 destination:(id)arg5 overridingProperties:(id)arg6 overridingBuildConfiguration:(id)arg7 overridingTestingSpecifiers:(id)arg8;
- (id)overridingBuildSettingsForSchemeCommand:(id)arg1 runDestination:(id)arg2;
- (id)startedOperationForSchemeOperationParameters:(id)arg1 deviceAvailableChecker:(CDUnknownBlockType)arg2 error:(id *)arg3 completionBlock:(CDUnknownBlockType)arg4;
- (id)schemeOperationForSchemeOperationParameters:(id)arg1 buildLog:(id)arg2 overridingProperties:(id)arg3 overridingBuildConfiguration:(id)arg4 dontActuallyRunCommands:(BOOL)arg5 restorePersistedBuildResults:(BOOL)arg6 error:(id *)arg7 completionBlock:(CDUnknownBlockType)arg8;
- (id)schemeOperationForSchemeOperationParameters:(id)arg1 buildLog:(id)arg2 overridingProperties:(id)arg3 overridingBuildConfiguration:(id)arg4 dontActuallyRunCommands:(BOOL)arg5 restorePersistedBuildResults:(BOOL)arg6 deviceAvailableChecker:(CDUnknownBlockType)arg7 error:(id *)arg8 completionBlock:(CDUnknownBlockType)arg9;
- (id)computeNameForCommand:(id)arg1 task:(long long)arg2;
- (id)_cleanOperationWithExecutionContext:(id)arg1 destination:(id)arg2 overridingProperties:(id)arg3 schemeCommand:(id)arg4 invocationRecord:(id)arg5 error:(id *)arg6;
- (void)_reportExecutionOperationForParameters:(id)arg1 shouldBuild:(BOOL)arg2 onlyBuild:(BOOL)arg3;
- (id)_addActionRecordToInvocationRecord:(id)arg1 shouldBuild:(BOOL)arg2 onlyBuild:(BOOL)arg3 schemeCommand:(id)arg4 runDestination:(id)arg5 title:(id)arg6;
- (void)_updateOrderHint:(unsigned long long)arg1;
@property unsigned long long orderHint;
- (void)_updateIsShown:(BOOL)arg1;
@property BOOL isShown;
@property BOOL isShared;
@property(readonly) NSString *disambiguatedName;
@property(copy) NSString *name;
- (void)_primitiveSetCustomDataStoreContainer:(id)arg1;
- (void)_updateCustomDataStoreContainer:(id)arg1 andSpecifier:(id)arg2;
- (void)_actuallyInvalidateAvailableRunDestinations;
- (void)_invalidateAvailableRunDestinations;
- (void)immediatelyInvalidateAvailableRunDestinations;
@property(readonly) NSArray *availableRunDestinations;
- (BOOL)schemeRunnableRunsOnPairedProxyDevice;
@property(readonly) BOOL schemeRunnableRequiresPairedProxyDevice;
- (void)buildConfigurationDidChange:(id)arg1;
- (id)buildParametersForSchemeCommand:(id)arg1 destination:(id)arg2;
- (id)buildParametersForSchemeCommand:(id)arg1 buildable:(id)arg2;
- (id)buildParametersForSchemeCommand:(id)arg1;
- (id)buildParametersForLaunchSchemeCommandAndBuildable:(id)arg1;
- (id)buildConfigurationForSchemeCommand:(id)arg1;
- (id)buildablesIncludingDependenciesForSchemeCommand:(id)arg1;
- (id)buildablesForSchemeCommand:(id)arg1;
- (id)runnablePathForSchemeCommand:(id)arg1 destination:(id)arg2;
- (id)schemeActionForSchemeCommand:(id)arg1;
- (BOOL)hasRunnableForBuildableProduct:(id)arg1;
@property(readonly, getter=isInstallable) BOOL installable;
@property(readonly, getter=isIntegratable) BOOL integratable;
@property(readonly, getter=isArchivable) BOOL archivable;
@property(readonly, getter=isTestable) BOOL testable;
@property(readonly, getter=isAnalyzable) BOOL analyzable;
@property(readonly, getter=isProfilable) BOOL profilable;
@property(readonly, getter=isRunnable) BOOL runnable;
@property(readonly, getter=isBuildable) BOOL buildable;
- (void)primitiveInvalidate;
@property(readonly) BOOL isClosed;
- (void)customDataStoreContainerClosing:(id)arg1;
- (void)performDelayedSave:(id)arg1;
- (void)markSchemeDirtyFromAutomaticChange;
- (void)markSchemeDirtyFromUserChange;
- (void)resolveBuildablesFromImport;
@property(readonly, copy) NSString *description;
- (id)initFromUnarchiver:(BOOL)arg1 runContextManager:(id)arg2 customDataStoreContainer:(id)arg3 customDataSpecifier:(id)arg4 isShown:(BOOL)arg5 orderHint:(unsigned long long)arg6;
- (void)_createDefaultSchemeActions;
- (id)buildDirectoriesForSchemeCommand:(id)arg1;
- (BOOL)ideIndex_containsBlueprint:(id)arg1;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface IDESchemeOrderedWorkspaceNotificationManager : NSObject <DVTInvalidation>
{
    IDEWorkspace *_workspace;
}

+ (id)orderedWorkspaceNotificationManagerForWorkspace:(id)arg1;
+ (void)initialize;
- (void).cxx_destruct;
@property(readonly) NSSet *referencedContainersNotifyingSchemes;
@property(readonly) NSSet *referencedContainersNotifyingSchemeBuildableReferences;
- (void)primitiveInvalidate;
- (id)initWithWorkspace:(id)arg1;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface IDEStream : NSObject <IDEStreamPublisher, IDEStreamConsumer>
{
    BOOL _wasStarted;
    BOOL _cancelled;
    BOOL _errored;
    BOOL _completed;
    id <IDEStreamConsumer> _consumer;
}

+ (void)initialize;
+ (id)streamWithError:(id)arg1;
+ (id)streamWithFastEnumeration:(id)arg1;
+ (id)emptyStream;
@property BOOL completed; // @synthesize completed=_completed;
@property BOOL errored; // @synthesize errored=_errored;
@property(getter=isCancelled) BOOL cancelled; // @synthesize cancelled=_cancelled;
@property BOOL wasStarted; // @synthesize wasStarted=_wasStarted;
@property(retain) id <IDEStreamConsumer> consumer; // @synthesize consumer=_consumer;
- (void).cxx_destruct;
- (void)onCancelled;
- (void)onCompleted;
- (void)onError:(id)arg1;
- (void)onNext:(id)arg1;
- (void)cancel;
- (BOOL)_finished;
- (void)subscribeConsumer:(id)arg1;
- (id)deleteItemsWorkForPathStrings;
- (id)createDirectoriesWorkForPathStrings;
- (id)systemTaskWorkForContexts;
- (id)collectInWorkContext:(id)arg1;
- (id)collectFirstInWorkContext:(id)arg1 forKey:(id)arg2;
- (id)collectInWorkContext:(id)arg1 forArrayKey:(id)arg2;
- (id)writeDataWorkForContexts;
- (id)join;
- (id)asyncMap:(CDUnknownBlockType)arg1;
- (id)map:(CDUnknownBlockType)arg1;
- (id)filter:(CDUnknownBlockType)arg1;
- (id)disperse;
- (id)collectInArray;
- (id)collectIn:(id)arg1 withBlock:(CDUnknownBlockType)arg2;
- (id)subscribeOnNext:(CDUnknownBlockType)arg1 onError:(CDUnknownBlockType)arg2 onCompleted:(CDUnknownBlockType)arg3 onCancelled:(CDUnknownBlockType)arg4;
- (id)extractLocStringsWorkForContexts;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface _IDEStreamMap : IDEStream
{
    id <IDEStreamPublisher> _publisher;
    CDUnknownBlockType _work;
    NSOperationQueue *_inQueue;
    NSOperation *_previousInOperation;
    NSOperationQueue *_outQueue;
    NSOperation *_previousOutOperation;
}

+ (id)withPublisher:(id)arg1 withWork:(CDUnknownBlockType)arg2;
@property(retain) NSOperation *previousOutOperation; // @synthesize previousOutOperation=_previousOutOperation;
@property(retain) NSOperationQueue *outQueue; // @synthesize outQueue=_outQueue;
@property(retain) NSOperation *previousInOperation; // @synthesize previousInOperation=_previousInOperation;
@property(retain) NSOperationQueue *inQueue; // @synthesize inQueue=_inQueue;
@property(copy) CDUnknownBlockType work; // @synthesize work=_work;
@property(retain) id <IDEStreamPublisher> publisher; // @synthesize publisher=_publisher;
- (void).cxx_destruct;
- (void)onCancelled;
- (void)onCompleted;
- (void)onNext:(id)arg1;
- (void)cancel;
- (void)subscribeConsumer:(id)arg1;
- (id)init;

@end

@interface _IDEStreamConcat : IDEStream
{
    id <IDEStreamPublisher> _first;
    id <IDEStreamPublisher> _second;
}

+ (id)withFirst:(id)arg1 second:(id)arg2;
@property(retain) id <IDEStreamPublisher> second; // @synthesize second=_second;
@property(retain) id <IDEStreamPublisher> first; // @synthesize first=_first;
- (void).cxx_destruct;
- (void)onCompleted;
- (void)onNext:(id)arg1;
- (void)cancel;
- (void)subscribeConsumer:(id)arg1;

@end

@interface _IDEStreamJoin : IDEStream
{
    id <IDEStreamPublisher> _publisher;
    id <IDEStreamPublisher> _joined;
}

+ (id)withPublisher:(id)arg1;
@property(retain) id <IDEStreamPublisher> joined; // @synthesize joined=_joined;
@property(retain) id <IDEStreamPublisher> publisher; // @synthesize publisher=_publisher;
- (void).cxx_destruct;
- (void)onCompleted;
- (void)onNext:(id)arg1;
- (void)cancel;
- (void)subscribeConsumer:(id)arg1;

@end

@interface _IDEStreamReturn : IDEStream
{
    NSArray *_publishBlocks;
}

+ (id)withFastEnumeration:(id)arg1;
@property(retain) NSArray *publishBlocks; // @synthesize publishBlocks=_publishBlocks;
- (void).cxx_destruct;
- (void)onCancelled;
- (void)onCompleted;
- (void)onNext:(id)arg1;
- (void)subscribeConsumer:(id)arg1;

@end

@interface _IDEStreamThrow : IDEStream
{
    NSError *_error;
}

+ (id)withError:(id)arg1;
@property(retain) NSError *error; // @synthesize error=_error;
- (void).cxx_destruct;
- (void)subscribeConsumer:(id)arg1;

@end

@interface _IDEStreamBlockBased : IDEStream
{
    id <IDEStreamPublisher> _publisher;
    CDUnknownBlockType _onNextBlock;
    CDUnknownBlockType _onErrorBlock;
    CDUnknownBlockType _onCompletedBlock;
    CDUnknownBlockType _onCancelledBlock;
}

@property(copy) CDUnknownBlockType onCancelledBlock; // @synthesize onCancelledBlock=_onCancelledBlock;
@property(copy) CDUnknownBlockType onCompletedBlock; // @synthesize onCompletedBlock=_onCompletedBlock;
@property(copy) CDUnknownBlockType onErrorBlock; // @synthesize onErrorBlock=_onErrorBlock;
@property(copy) CDUnknownBlockType onNextBlock; // @synthesize onNextBlock=_onNextBlock;
@property(retain) id <IDEStreamPublisher> publisher; // @synthesize publisher=_publisher;
- (void).cxx_destruct;
- (void)onCancelled;
- (void)onCompleted;
- (void)onError:(id)arg1;
- (void)onNext:(id)arg1;
- (void)subscribeConsumer:(id)arg1;
- (void)cancel;
- (id)initWithPublisher:(id)arg1 onNext:(CDUnknownBlockType)arg2 onError:(CDUnknownBlockType)arg3 onCompleted:(CDUnknownBlockType)arg4 onCancelled:(CDUnknownBlockType)arg5;

@end

@interface IDESourceControlOperation : DVTOperation
{
    NSArray *_result;
    IDESourceControlRequest *_request;
    NSString *_rawInput;
    NSString *_rawStandardOutput;
    NSString *_rawErrorOutput;
    unsigned int _scmPowerAssertion;
    DVTObservingToken *_isFinishedToken;
    BOOL _waitToParseData;
    BOOL _allowsSleep;
    BOOL _userInitiated;
}

@property BOOL userInitiated; // @synthesize userInitiated=_userInitiated;
@property BOOL allowsSleep; // @synthesize allowsSleep=_allowsSleep;
@property BOOL waitToParseData; // @synthesize waitToParseData=_waitToParseData;
@property(readonly) IDESourceControlRequest *request; // @synthesize request=_request;
- (void).cxx_destruct;
@property(retain) NSArray *result; // @synthesize result=_result;
- (void)cancel;
@property(retain) NSString *rawErrorOutput; // @synthesize rawErrorOutput=_rawErrorOutput;
@property(retain) NSString *rawStandardOutput; // @synthesize rawStandardOutput=_rawStandardOutput;
@property(retain) NSString *rawInput; // @synthesize rawInput=_rawInput;
- (void)dealloc;
- (void)main;
- (id)initWithRequest:(id)arg1;

@end

@interface IDESourceControlTreeItem : DVTModelTreeNode
{
    int _sourceControlLocalStatus;
    int _sourceControlServerStatus;
    unsigned long long _conflictStateForUpdateOrMerge;
    IDESourceControlRevision *_currentRevision;
    NSMutableDictionary *_revisions;
    NSString *_name;
    NSString *_pathString;
    unsigned long long _state;
}

+ (BOOL)automaticallyNotifiesObserversOfCurrentRevision;
+ (unsigned long long)assertionBehaviorForKeyValueObservationsAtEndOfEvent;
+ (unsigned long long)assertionBehaviorAfterEndOfEventForSelector:(SEL)arg1;
+ (id)_revisionLock;
+ (void)initialize;
@property unsigned long long conflictStateForUpdateOrMerge; // @synthesize conflictStateForUpdateOrMerge=_conflictStateForUpdateOrMerge;
@property int sourceControlServerStatus; // @synthesize sourceControlServerStatus=_sourceControlServerStatus;
@property int sourceControlLocalStatus; // @synthesize sourceControlLocalStatus=_sourceControlLocalStatus;
@property unsigned long long state; // @synthesize state=_state;
@property(readonly) NSString *pathString; // @synthesize pathString=_pathString;
@property(copy) NSString *name; // @synthesize name=_name;
- (void).cxx_destruct;
- (BOOL)isEqual:(id)arg1;
- (unsigned long long)hash;
- (void)clearAllRevisions;
- (id)revisionsWithStartingRevision:(id)arg1 limit:(unsigned long long)arg2 branch:(id)arg3 includeHEAD:(BOOL)arg4 completionBlock:(CDUnknownBlockType)arg5;
- (id)revisionsWithStartingRevision:(id)arg1 limit:(unsigned long long)arg2 branch:(id)arg3 completionBlock:(CDUnknownBlockType)arg4;
@property(readonly) NSArray *revisions;
- (id)revisionsDictionary;
- (void)addRevision:(id)arg1;
- (void)clearCurrentRevision;
- (id)currentRevisionWithCompletionBlock:(CDUnknownBlockType)arg1;
- (void)setCurrentRevision:(id)arg1;
@property(readonly) IDESourceControlRevision *currentRevision;
- (int)aggregateSourceControlServerStatus;
- (int)aggregateSourceControlLocalStatus;
- (id)description;
- (id)ideModelObjectTypeIdentifier;
- (void)repositoryURLStringAtBranch:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
@property(readonly) NSString *repositoryURLString;
- (void)_setPathString:(id)arg1;
- (void)updateFileReferences:(id)arg1 withFilePaths:(id)arg2;
- (void)primitiveInvalidate;
- (id)initWithPathString:(id)arg1;

// Remaining properties
@property(readonly) IDESourceControlTreeGroup *parentGroup; // @dynamic parentGroup;
@property(readonly) IDESourceControlTree *sourceTree; // @dynamic sourceTree;

@end

@interface IDESourceControlTreeGroup : IDESourceControlTreeItem
{
    BOOL _areChildrenLoaded;
}

+ (id)keyPathsForValuesAffectingSparseChildren;
+ (void)initialize;
@property BOOL areChildrenLoaded; // @synthesize areChildrenLoaded=_areChildrenLoaded;
- (void)clearAllRevisions;
- (void)reload;
@property(readonly) NSMutableArray *mutableChildren; // @dynamic mutableChildren;
@property(copy) NSArray *children; // @dynamic children;
- (id)sparseChildren;
- (id)ideModelObjectTypeIdentifier;

@end

@interface IDESourceControlWorkingTreeItem : IDESourceControlTreeItem
{
    DVTFilePath *_filePath;
    NSMutableDictionary *_statusForKeyDictionary;
    BOOL _edited;
}

+ (BOOL)automaticallyNotifiesObserversOfConflictStateForUpdateOrMerge;
+ (BOOL)automaticallyNotifiesObserversOfSourceControlServerStatus;
+ (BOOL)automaticallyNotifiesObserversOfSourceControlLocalStatus;
@property(readonly) DVTFilePath *filePath; // @synthesize filePath=_filePath;
- (void).cxx_destruct;
- (void)setSourceControlStatus:(int)arg1 forKey:(id)arg2;
- (int)sourceControlStatusForKey:(id)arg1;
- (id)temporaryFileForBranch:(id)arg1 revisionNumber:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (id)currentRevisionWithCompletionBlock:(CDUnknownBlockType)arg1;
@property BOOL edited; // @synthesize edited=_edited;
- (void)setConflictStateForUpdateOrMerge:(unsigned long long)arg1;
- (void)setSourceControlServerStatus:(int)arg1;
- (void)setSourceControlLocalStatus:(int)arg1;
- (id)ideModelObjectTypeIdentifier;
- (void)repositoryURLStringAtBranch:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (id)repositoryURLString;
- (BOOL)isEqual:(id)arg1;
- (unsigned long long)hash;
- (void)primitiveInvalidate;
- (id)initWithFilePath:(id)arg1;

@end

@interface IDESourceControlWorkingTreeGroup : IDESourceControlTreeGroup
{
    DVTFilePath *_filePath;
    NSMutableDictionary *_statusForKeyDictionary;
    BOOL _edited;
}

+ (BOOL)automaticallyNotifiesObserversOfConflictStateForUpdateOrMerge;
+ (BOOL)automaticallyNotifiesObserversOfSourceControlServerStatus;
+ (BOOL)automaticallyNotifiesObserversOfSourceControlLocalStatus;
@property(readonly) DVTFilePath *filePath; // @synthesize filePath=_filePath;
- (void).cxx_destruct;
- (int)aggregateSourceControlServerStatus;
- (int)aggregateSourceControlLocalStatus;
- (void)setSourceControlStatus:(int)arg1 forKey:(id)arg2;
- (int)sourceControlStatusForKey:(id)arg1;
- (void)setConflictStateForUpdateOrMerge:(unsigned long long)arg1;
- (void)setSourceControlServerStatus:(int)arg1;
- (void)setSourceControlLocalStatus:(int)arg1;
- (id)currentRevisionWithCompletionBlock:(CDUnknownBlockType)arg1;
@property BOOL edited; // @synthesize edited=_edited;
- (id)ideModelObjectTypeIdentifier;
- (void)repositoryURLStringAtBranch:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (id)repositoryURLString;
- (BOOL)isEqual:(id)arg1;
- (unsigned long long)hash;
- (void)primitiveInvalidate;
- (id)initWithFilePath:(id)arg1;

@end

@interface IDESourceControlWorkingTreeHolder : NSObject
{
    NSMutableArray *_workingTrees;
}

- (void).cxx_destruct;
- (unsigned long long)navigableItem_indexOfRepresentedObjectForIdentifier:(id)arg1 inRelationshipKeyPath:(id)arg2;
- (id)navigableItem_identifierForRepresentedObjectAtIndex:(unsigned long long)arg1 inRelationshipKeyPath:(id)arg2;
- (void)addWorkingTree:(id)arg1;
@property(readonly) NSMutableArray *workingTrees;

@end

@interface IDESourceControlWorkingTreeItemHolder : NSObject
{
    NSMutableArray *_workingTreeItems;
}

- (void).cxx_destruct;
- (unsigned long long)navigableItem_indexOfRepresentedObjectForIdentifier:(id)arg1 inRelationshipKeyPath:(id)arg2;
- (id)navigableItem_identifierForRepresentedObjectAtIndex:(unsigned long long)arg1 inRelationshipKeyPath:(id)arg2;
- (void)addWorkingTreeItem:(id)arg1;
@property(readonly) NSMutableArray *workingTreeItems;

@end

@interface IDESourceControlDummyItem : NSObject
{
    NSString *_name;
}

@property(retain) NSString *name; // @synthesize name=_name;
- (void).cxx_destruct;

@end

@interface IDEDiagnosticActivityLogMessage : IDEActivityLogMessage
{
    DVTDispatchLock *_diagnosticFixItItemsLock;
    NSMutableArray *_diagnosticFixItItems;
    DVTWeakInterposer *_delegate_dvtWeakInterposer;
    DVTWeakInterposer *_representedObject_dvtWeakInterposer;
    int _diagnosticSeverity;
}

+ (id)keyPathsForValuesAffectingFixableDiagnosticItems;
+ (id)diagnosticMessageType;
@property(copy, nonatomic) NSArray *diagnosticFixItItems; // @synthesize diagnosticFixItItems=_diagnosticFixItItems;
- (void).cxx_destruct;
- (void)updateFixItInfoWithLocationEncodingConverter:(id)arg1;
@property __weak id representedObject;
@property __weak id <IDEDiagnosticItemDelegate> delegate;
@property(readonly) NSArray *fixableDiagnosticItems;
@property(readonly, copy) NSArray *diagnosticFixItItemsSnapshot;
- (void)removeObjectFromDiagnosticFixItItemsAtIndex:(unsigned long long)arg1;
- (void)insertObject:(id)arg1 inDiagnosticFixItItemsAtIndex:(unsigned long long)arg2;
@property(readonly) NSMutableArray *mutableDiagnosticFixItItems;
@property(readonly) NSString *severityString;
@property(readonly) int diagnosticSeverity;
- (id)description;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
- (BOOL)isEqualToDiagnosticItem:(id)arg1;
- (BOOL)isEqualDisregardingTimestampToDiagnosticItem:(id)arg1;
- (BOOL)_isEqualToDiagnosticItem:(id)arg1 disregardingTimestamp:(BOOL)arg2;
- (BOOL)_array:(id)arg1 isEqualToArray:(id)arg2;
- (id)init;
- (id)initWithSeverity:(int)arg1 title:(id)arg2 location:(id)arg3;

@end

@interface IDEDiagnosticFixItItem : NSObject
{
    IDEDiagnosticActivityLogMessage *_diagnosticItem;
    NSString *_fixItString;
    DVTTextDocumentLocation *_replacementLocation;
}

@property(retain) DVTTextDocumentLocation *replacementLocation; // @synthesize replacementLocation=_replacementLocation;
@property(readonly) NSString *fixItString; // @synthesize fixItString=_fixItString;
@property(nonatomic) __weak IDEDiagnosticActivityLogMessage *diagnosticItem; // @synthesize diagnosticItem=_diagnosticItem;
- (void).cxx_destruct;
- (void)updateFixItInfoWithLocationEncodingConverter:(id)arg1;
- (id)description;
- (BOOL)isEqual:(id)arg1;
- (BOOL)isEqualToDiagnosticFixItItem:(id)arg1;
- (id)init;
- (id)initWithFixItString:(id)arg1 replacementLocation:(id)arg2;

@end

@interface IDEDistributionSummaryStep : IDEDistributionStep
{
}

+ (id)propertyListForContext:(id)arg1;
+ (id)availableOptionsForPropertyList;
- (BOOL)loadFromPropertyList:(id)arg1 error:(id *)arg2;
- (id)providedOutputContextPropertyNames;
- (id)requiredInputContextPropertyNames;

@end

@interface IDEIndexSymbolCollection : IDEIndexCollection
{
}

- (id)instantiateRow:(struct sqlite3_stmt *)arg1;
- (id)tempTableSchema;

@end

@interface IDEWorkspaceWrapping : NSObject
{
}

+ (id)resolveContainerPath:(id)arg1;
+ (id)wrappedWorkspacePathForContainerPath:(id)arg1;
+ (BOOL)isWorkspaceWrappingFileType:(id)arg1;

@end

@interface IDEDistributionOptionEntitlementProcessor : IDEDistributionOption
{
}

+ (id)propertyListForContext:(id)arg1;
- (id)providedOutputContextPropertyNames;
- (id)requiredInputContextPropertyNames;
- (id)matchingPrcoessorFromProcessors:(id)arg1;
- (id)makeNewPrcoessorWithDistributionMethod:(id)arg1 item:(id)arg2 itemEntitlements:(id)arg3;
- (id)createProcessors;
- (BOOL)loadFromPropertyList:(id)arg1 error:(id *)arg2;
- (Class)entitlementsPrcoessorClass;

@end

@interface IDESourcePackageProductReference : NSObject
{
    IDESourcePackageReference *_packageReference;
    NSString *_productName;
}

@property(readonly) NSString *productName; // @synthesize productName=_productName;
@property(readonly) IDESourcePackageReference *packageReference; // @synthesize packageReference=_packageReference;
- (void).cxx_destruct;
- (BOOL)isEqual:(id)arg1;
- (id)initWithPackageReference:(id)arg1 productName:(id)arg2;

@end

@interface IDEManageCertificatesPortalQueue : NSObject
{
    DVTSemaphore *_semaphore;
    NSObject<OS_dispatch_queue> *_queue;
}

- (void).cxx_destruct;
- (void)group:(id)arg1 asyncPerformBlock:(CDUnknownBlockType)arg2;
- (id)initWithLabel:(id)arg1 width:(unsigned long long)arg2;

@end

@interface IDEManageCertificatesContext : NSObject
{
    id <IDEProvisioningBasicTeam> _team;
    DVTPortalTeam *_portalTeam;
    NSSet *_certificateTypes;
    DVTSigningCertificateManager *_certificateManager;
    IDEProvisioningPortal *_portal;
    id <IDEProvisioningTeamAccountPairProvider> _teamAccountPairProvider;
    IDEProvisioningTeamManager *_teamManager;
    DVTDeveloperAccountManager *_developerAccountManager;
    DVTDeveloperAccount *_developerAccount;
}

@property(retain, nonatomic) DVTDeveloperAccount *developerAccount; // @synthesize developerAccount=_developerAccount;
@property(retain, nonatomic) DVTDeveloperAccountManager *developerAccountManager; // @synthesize developerAccountManager=_developerAccountManager;
@property(retain, nonatomic) IDEProvisioningTeamManager *teamManager; // @synthesize teamManager=_teamManager;
@property(retain, nonatomic) id <IDEProvisioningTeamAccountPairProvider> teamAccountPairProvider; // @synthesize teamAccountPairProvider=_teamAccountPairProvider;
@property(retain, nonatomic) IDEProvisioningPortal *portal; // @synthesize portal=_portal;
@property(retain, nonatomic) DVTSigningCertificateManager *certificateManager; // @synthesize certificateManager=_certificateManager;
@property(retain, nonatomic) NSSet *certificateTypes; // @synthesize certificateTypes=_certificateTypes;
@property(readonly, nonatomic) DVTPortalTeam *portalTeam; // @synthesize portalTeam=_portalTeam;
@property(readonly, nonatomic) id <IDEProvisioningBasicTeam> team; // @synthesize team=_team;
- (void).cxx_destruct;
- (id)sessionWithError:(id *)arg1;
- (id)developerAccountWithError:(id *)arg1;
- (id)initWithTeam:(id)arg1;

@end

@interface IDEManageCertificatesItemSource : NSObject <DVTInvalidation>
{
    unsigned int _currentGeneration;
    NSObject<OS_dispatch_queue> *_reloadQueue;
    DVTNotificationToken *_certManagerToken;
    DVTNotificationToken *_accountsToken;
    BOOL _finishedInitialScan;
    BOOL _refreshing;
    BOOL _ignoreUpdates;
    NSError *_currentError;
    DVTDelayedInvocation *_delayedUpdate;
    IDEManageCertificatesContext *_context;
    IDEManageCertificatesItemCollection *_itemCollection;
    DVTPortalCertificate *_newlyCreatedCertificate;
}

+ (void)_portalCertificatesWithSession:(id)arg1 context:(id)arg2 outPortalCertificates:(id *)arg3 outPortalErrors:(id *)arg4;
+ (void)initialize;
@property(nonatomic) BOOL ignoreUpdates; // @synthesize ignoreUpdates=_ignoreUpdates;
@property(retain, nonatomic) DVTPortalCertificate *newlyCreatedCertificate; // @synthesize newlyCreatedCertificate=_newlyCreatedCertificate;
@property(readonly, nonatomic) IDEManageCertificatesItemCollection *itemCollection; // @synthesize itemCollection=_itemCollection;
@property(retain, nonatomic) IDEManageCertificatesContext *context; // @synthesize context=_context;
@property(retain, nonatomic) DVTDelayedInvocation *delayedUpdate; // @synthesize delayedUpdate=_delayedUpdate;
@property(nonatomic) BOOL refreshing; // @synthesize refreshing=_refreshing;
@property(nonatomic) BOOL finishedInitialScan; // @synthesize finishedInitialScan=_finishedInitialScan;
@property(retain, nonatomic) NSError *currentError; // @synthesize currentError=_currentError;
- (void).cxx_destruct;
- (void)_updateItemsOnMainThreadWithSerialNumbers:(id)arg1 portalCertificates:(id)arg2 localCertificates:(id)arg3 error:(id)arg4 quickLocalOnlyUpdate:(BOOL)arg5;
- (void)_reloadDataWithNewCertificateOrNil:(id)arg1;
- (void)requestCertificateType:(id)arg1 callback:(CDUnknownBlockType)arg2;
- (id)_reloadQueue;
- (BOOL)deleteItemFromKeychain:(id)arg1 error:(id *)arg2;
- (void)_setUpObservations;
@property(readonly, nonatomic) NSSet *items;
- (void)primitiveInvalidate;
- (id)initWithContext:(id)arg1;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface IDEActivityLogUnitTestSection : IDEActivityLogSection
{
    NSString *_testsPassedString;
    NSString *_durationString;
    NSString *_summaryString;
    NSString *_suiteName;
    NSString *_testName;
    NSString *_performanceTestOutputString;
    long long _testsPassedCount;
}

+ (Class)logRecorderClass;
+ (id)defaultLogSectionDomainType;
@property long long testsPassedCount; // @synthesize testsPassedCount=_testsPassedCount;
@property(copy) NSString *performanceTestOutputString; // @synthesize performanceTestOutputString=_performanceTestOutputString;
@property(copy) NSString *testName; // @synthesize testName=_testName;
@property(copy) NSString *suiteName; // @synthesize suiteName=_suiteName;
@property(copy) NSString *summaryString; // @synthesize summaryString=_summaryString;
@property(copy) NSString *durationString; // @synthesize durationString=_durationString;
@property(copy) NSString *testsPassedString; // @synthesize testsPassedString=_testsPassedString;
- (void).cxx_destruct;
@property(readonly, copy) IDETestIdentifier *testIdentifier;
- (void)dvt_writeToSerializer:(id)arg1;
- (id)dvt_initFromDeserializer:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initUnitTestWithTitle:(id)arg1 location:(id)arg2;

@end

@interface IDEDistributionCopyBCSymbolMapsStep : IDEDistributionItemProcessingStep
{
}

- (_Bool)runWithError:(id *)arg1;
- (_Bool)shouldSkip;
- (id)providedOutputContextPropertyNames;
- (id)requiredInputContextPropertyNames;
- (id)name;

@end

@interface IDERunDestination : NSObject <NSCopying>
{
    DVTObservingToken *_targetDeviceNameObservingToken;
    BOOL _isTargetDeviceEligible;
    DVTDevice *_targetDevice;
    NSString *_targetArchitecture;
    DVTSDK *_targetSDK;
    NSString *_targetIdentifier;
    NSError *_deviceIneligibilityError;
}

+ (id)fallbackActiveArchitectureForBuildArchitectures:(id)arg1;
+ (id)keyPathsForValuesAffectingFullDisplayName;
+ (id)keyPathsForValuesAffectingDisplayName;
@property(readonly) NSError *deviceIneligibilityError; // @synthesize deviceIneligibilityError=_deviceIneligibilityError;
@property(readonly) BOOL isTargetDeviceEligible; // @synthesize isTargetDeviceEligible=_isTargetDeviceEligible;
@property(readonly) NSString *targetIdentifier; // @synthesize targetIdentifier=_targetIdentifier;
@property(readonly) DVTSDK *targetSDK; // @synthesize targetSDK=_targetSDK;
@property(readonly, copy) NSString *targetArchitecture; // @synthesize targetArchitecture=_targetArchitecture;
@property(readonly) DVTDevice *targetDevice; // @synthesize targetDevice=_targetDevice;
- (void).cxx_destruct;
- (id)dvt_detailedDebugDescription;
- (id)activeArchitectureForBuildArchitectures:(id)arg1;
- (void)didBecomeActiveRunDestinationForRunContext:(id)arg1;
- (id)runOperationForLaunchSession:(id)arg1 error:(id *)arg2;
- (id)runWorkerForLaunchSession:(id)arg1 error:(id *)arg2;
@property(readonly) NSString *targetArchitectureForSorting;
@property(readonly) NSString *targetSDKForSorting;
@property(readonly) NSString *targetDeviceForSorting;
@property(readonly) NSString *displayOrder;
- (BOOL)shouldPresentRunDestinationForScheme:(id)arg1 schemeTask:(long long)arg2 schemeCommand:(id)arg3 executionEnvironment:(id)arg4 overridingTestingSpecifiers:(id)arg5 error:(id *)arg6;
- (BOOL)isValidRunDestinationForScheme:(id)arg1 schemeTask:(long long)arg2 schemeCommand:(id)arg3 executionEnvironment:(id)arg4 overridingTestingSpecifiers:(id)arg5 error:(id *)arg6;
- (BOOL)_isValidRunDestinationForScheme:(id)arg1 schemeTask:(long long)arg2 schemeCommand:(id)arg3 executionEnvironment:(id)arg4 overridingTestingSpecifiers:(id)arg5 forPresentation:(BOOL)arg6 error:(id *)arg7;
- (id)description;
@property(readonly, copy) NSString *fullDisplayName;
@property(readonly) NSString *displayableIneligibilityLongDescription;
@property(readonly) NSString *displayableIneligibilityMessage;
@property(readonly, copy) NSString *displayNameAdditions;
@property(readonly, copy) NSString *displayName;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithIneligibleTargetDevice:(id)arg1 architecture:(id)arg2 SDK:(id)arg3 deviceIneligibilityError:(id)arg4;
- (id)initWithTargetDevice:(id)arg1 architecture:(id)arg2 SDK:(id)arg3;

@end

@interface IDEARCConversionContext : IDEMigrationContext
{
}

+ (Class)migrationTargetSublass;

@end

@interface IDEDistributionCopyInAppPurchaseContentStep : IDEDistributionProcessingStep
{
}

- (_Bool)runWithError:(id *)arg1;
- (id)providedOutputContextPropertyNames;
- (id)requiredInputContextPropertyNames;
- (id)name;

@end

@interface IDETextSubstitutionTemplateInstantiationContext : IDETemplateInstantiationContext
{
}

@end

@interface IDETemplateTextSubstitutionFactory : IDETemplateFactory
{
    NSFileManager *_fileManager;
    IDEVersionedFileManager *_versionedFileManager;
    DVTObservingToken *_operationObservingToken;
    NSOperationQueue *_queue;
}

@property(readonly) NSOperationQueue *queue; // @synthesize queue=_queue;
- (void).cxx_destruct;
- (void)instantiateTemplateForContext:(id)arg1 options:(id)arg2 whenDone:(CDUnknownBlockType)arg3;
- (id)operationForContext:(id)arg1 options:(id)arg2;
- (id)proposedFilePathsForContext:(id)arg1 options:(id)arg2 error:(id *)arg3;
- (id)_operationToInstantiateTemplateForContext:(id)arg1 options:(id)arg2 processor:(CDUnknownBlockType)arg3 finalProcessor:(CDUnknownBlockType)arg4;
- (id)mainFileNameForContext:(id)arg1;
- (id)macroEngineForContext:(id)arg1;
- (id)standardMacrosForContext:(id)arg1;
- (BOOL)shouldAddCreatedDocumentsToVersionControl:(id)arg1;
- (id)additionalMacrosForContext:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface IDEPIFObjectInfo : NSObject
{
    NSString *_signature;
    CDUnknownBlockType _generatePIF;
}

@property(readonly) CDUnknownBlockType generatePIF; // @synthesize generatePIF=_generatePIF;
@property(readonly) NSString *signature; // @synthesize signature=_signature;
- (void).cxx_destruct;
- (id)initWithSignature:(id)arg1 generator:(CDUnknownBlockType)arg2;

@end

@interface IDEProfileQualificationErrors : NSObject
{
}

+ (id)errorWithTitle:(id)arg1 code:(long long)arg2;

@end

@interface IDEDistributionOptionSymbols : IDEDistributionOption
{
}

+ (id)propertyListForContext:(id)arg1;
+ (id)availableOptionsForPropertyList;
- (id)providedOutputContextPropertyNames;
- (id)requiredInputContextPropertyNames;
- (BOOL)loadFromPropertyList:(id)arg1 error:(id *)arg2;
- (id)initWithIdentifier:(id)arg1 context:(id)arg2;

@end

@interface IDECapabilityItem : NSObject <IDEProjectItem>
{
    Class _viewControllerClass;
    Class _modelClass;
    NSString *_name;
    NSString *_imageName;
    NSString *_capabilityDescription;
    DVTExtension *_itemExtension;
}

@property(readonly) DVTExtension *itemExtension; // @synthesize itemExtension=_itemExtension;
@property(readonly, nonatomic) NSString *capabilityDescription; // @synthesize capabilityDescription=_capabilityDescription;
@property(readonly, nonatomic) NSString *imageName; // @synthesize imageName=_imageName;
@property(readonly, nonatomic) NSString *name; // @synthesize name=_name;
@property(readonly, nonatomic) Class modelClass; // @synthesize modelClass=_modelClass;
@property(readonly, nonatomic) Class viewControllerClass; // @synthesize viewControllerClass=_viewControllerClass;
- (void).cxx_destruct;
@property(readonly, nonatomic) DVTPortalContainerType *containerType;
@property(readonly, nonatomic) DVTPortalProfileFeature *feature;
@property(readonly, nonatomic) NSString *containerEntitlement;
@property(readonly, nonatomic) NSSet *entitlements;
@property(readonly, nonatomic) NSString *identifier;
- (id)initWithExtension:(id)arg1 platformIdentifier:(id)arg2;
- (id)initWithExtension:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IDEAlertEventProxy : NSObject
{
    IDEAlertEvent *_alertEvent;
    BOOL _triedToLoadClass;
    DVTExtension *_extension;
}

@property(retain) DVTExtension *extension; // @synthesize extension=_extension;
- (void).cxx_destruct;
@property(readonly) IDEAlertEvent *alertEvent;

@end

@interface IDEAlertEvent : NSObject
{
    NSMutableDictionary *_alerts;
    NSMutableDictionary *_observationTokensByAlert;
    NSString *_group;
    NSString *_groupSortKey;
    NSString *_iconName;
    NSString *_identifier;
    NSString *_title;
    NSString *_titleSortKey;
    BOOL _showInPreferences;
}

+ (id)alertLogAspect;
+ (id)alertEventsForGroup:(id)arg1;
+ (id)alertEventGroups;
+ (id)alertEvents;
+ (id)alertEventForIdentifier:(id)arg1;
+ (void)_cacheAlertEvents;
+ (void)_registerAlertEventExtension:(id)arg1;
@property BOOL showInPreferences; // @synthesize showInPreferences=_showInPreferences;
@property(retain) NSString *iconName; // @synthesize iconName=_iconName;
@property(readonly) NSDictionary *alerts; // @synthesize alerts=_alerts;
@property(retain, nonatomic) NSString *groupSortKey; // @synthesize groupSortKey=_groupSortKey;
@property(retain) NSString *group; // @synthesize group=_group;
@property(retain, nonatomic) NSString *titleSortKey; // @synthesize titleSortKey=_titleSortKey;
@property(retain) NSString *title; // @synthesize title=_title;
@property(readonly) NSString *identifier; // @synthesize identifier=_identifier;
- (void).cxx_destruct;
- (void)ide_setIdentifier:(id)arg1;
- (void)saveToUserDefaults;
- (id)propertyList;
- (id)propertyListForVersion:(int)arg1;
- (id)_defaultsForOnDiskPlistOfBehaviors;
- (id)alertDefaults;
- (id)alertDefaultsKey;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)runInWorkspace:(id)arg1 context:(id)arg2;
- (void)runInWorkspace:(id)arg1 context:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (id)ide_initializeAlertContext:(id)arg1 forWorkspace:(id)arg2;
- (BOOL)hasEnabledAlerts;
- (void)removeAlert:(id)arg1;
- (void)addAlert:(id)arg1;
- (id)description;
- (id)initWithIdentifier:(id)arg1 title:(id)arg2 group:(id)arg3;
- (id)init;
- (void)ide_initializeAlertsFromDefaults:(id)arg1;

@end

@interface IDEVersionCommandLineVerb : IDECommandLineVerb
{
}

+ (int)performWithEnvironment:(id)arg1;
+ (id)optionDefinitionsWithEnvironment:(id)arg1;

@end

@interface IDEShellXPCDebugSession : IDEDebugSession
{
    id <IDEDebugTopNavigableModel> _topNavigableModel;
}

- (void)setTopNavigableModel:(id)arg1;
- (id)topNavigableModel;
- (void).cxx_destruct;
- (void)primitiveInvalidate;
- (id)initWithName:(id)arg1;
- (id)init;

@end

@interface IDEShellXPCProcess : NSObject <IDEDebugTopNavigableModel>
{
    NSString *_associatedProcessUUID;
    IDELaunchSession *launchSession;
    NSString *_name;
}

+ (void)initialize;
@property(copy, nonatomic) NSString *name; // @synthesize name=_name;
@property(readonly) IDELaunchSession *launchSession; // @synthesize launchSession;
- (void).cxx_destruct;
- (void)primitiveInvalidate;
- (BOOL)isDoingAsyncAttach;
- (id)contentDelegateUIExtensionIdentifier;
@property(readonly, copy) NSString *associatedProcessUUID; // @synthesize associatedProcessUUID=_associatedProcessUUID;
- (id)initWithDebugSession:(id)arg1 name:(id)arg2;
- (id)init;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly, nonatomic) IDEDebugSession *parentDebugSession;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface IDEGaugeDataProviderService : DVTDeviceService
{
    DVTMutableOrderedDictionary *_coordinatorsByPID;
    NSSet *_startedPids;
    NSObject<OS_dispatch_queue> *_serialQueue;
    NSObject<OS_dispatch_source> *_timer;
    _Bool _suspended;
    BOOL _useProxiedDevice;
}

+ (id)observableAttributes;
+ (id)capability;
@property BOOL useProxiedDevice; // @synthesize useProxiedDevice=_useProxiedDevice;
- (void).cxx_destruct;
- (id)stopSamplingForPIDs:(id)arg1;
- (id)sampleAttributes:(id)arg1 forPIDs:(id)arg2;
- (id)startSamplingForPIDs:(id)arg1;
- (void)stopSampling;
- (void)resumeSampling;
- (void)pauseSampling;
- (void)startSamplingAtTime:(double)arg1 withInterval:(double)arg2;
- (void)didStopSampling;
- (void)willResumeSampling;
- (void)didPauseSampling;
- (void)willStartSamplingAtTime:(double)arg1 withInterval:(double)arg2;
- (void)stopTimer;
- (void)resumeTimer;
- (void)pauseTimer;
- (void)startTimerAtTime:(double)arg1 withInterval:(double)arg2;
- (void)removeAssociatedQueryCoordinator:(id)arg1;
- (void)addAssociatedQueryCoordinator:(id)arg1;
- (void)performServiceQueueBlock:(CDUnknownBlockType)arg1;
- (void)dealloc;
- (id)initForDevice:(id)arg1 extension:(id)arg2 capability:(id)arg3;

@end

@interface IDEActivityLogActionMessage : IDEActivityLogMessage
{
    NSString *_actionIdentifier;
}

@property(copy) NSString *actionIdentifier; // @synthesize actionIdentifier=_actionIdentifier;
- (void).cxx_destruct;
- (id)initWithAction:(id)arg1 severity:(unsigned long long)arg2 title:(id)arg3 location:(id)arg4;

@end

@interface IDEIndexSymbol : IDEIndexSymbolOccurrence <IDEAutoImportable>
{
    NSString *_name;
    NSString *_displayName;
    NSString *_qualifiedDisplayName;
    DVTSourceCodeSymbolKind *_symbolKind;
    DVTSourceCodeLanguage *_symbolLanguage;
    NSString *_resolution;
    long long _rawKind;
    long long _rawLanguage;
    BOOL _haveModelOccurrence;
    BOOL _isVirtual;
    BOOL _isSystem;
    NSString *_moduleName;
    _TtC13DVTFoundation9DVTSymbol *_identifier;
}

+ (id)newSymbolOfKind:(id)arg1 language:(id)arg2 name:(id)arg3 moduleName:(id)arg4 resolution:(id)arg5 isVirtual:(BOOL)arg6 role:(long long)arg7 location:(id)arg8 forQueryProvider:(id)arg9;
+ (id)newSymbolOfKind:(id)arg1 language:(id)arg2 name:(id)arg3 resolution:(id)arg4 isVirtual:(BOOL)arg5 role:(long long)arg6 location:(id)arg7 forQueryProvider:(id)arg8;
+ (id)newSymbolOfKind:(id)arg1 language:(id)arg2 name:(id)arg3 resolution:(id)arg4 forQueryProvider:(id)arg5;
+ (id)newSymbolOfRawKind:(long long)arg1 rawLanguage:(long long)arg2 name:(id)arg3 resolution:(id)arg4 forQueryProvider:(id)arg5;
+ (id)newSymbolOfRawKind:(long long)arg1 kind:(id)arg2 rawLanguage:(long long)arg3 language:(id)arg4 name:(id)arg5 resolution:(id)arg6 forQueryProvider:(id)arg7;
+ (Class)classForSymbolKind:(id)arg1;
@property(copy, nonatomic) NSString *moduleName; // @synthesize moduleName=_moduleName;
@property(nonatomic) BOOL isSystem; // @synthesize isSystem=_isSystem;
@property(nonatomic) BOOL isVirtual; // @synthesize isVirtual=_isVirtual;
@property(readonly, nonatomic) long long rawLanguage; // @synthesize rawLanguage=_rawLanguage;
@property(readonly, nonatomic) DVTSourceCodeLanguage *symbolLanguage; // @synthesize symbolLanguage=_symbolLanguage;
@property(readonly, nonatomic) long long rawKind; // @synthesize rawKind=_rawKind;
@property(readonly, nonatomic) DVTSourceCodeSymbolKind *symbolKind; // @synthesize symbolKind=_symbolKind;
@property(readonly, nonatomic) NSString *resolution; // @synthesize resolution=_resolution;
@property(readonly, nonatomic) NSString *name; // @synthesize name=_name;
- (void).cxx_destruct;
@property(readonly, nonatomic, getter=isAutoImportable) BOOL autoImportable;
@property(readonly, nonatomic) DVTFilePath *filePathToHeaderToImport;
@property(readonly, nonatomic) NSString *completionString;
- (id)qualifiedDisplayName;
- (id)displayName;
- (id)references;
- (id)referencingFiles;
- (id)containerSymbol;
- (id)containerSymbols;
@property(readonly, nonatomic) IDEIndexCollection *definitions;
- (id)declarations;
- (id)occurrences;
- (id)correspondingSymbol;
- (id)location;
- (id)file;
- (long long)column;
- (long long)lineNumber;
- (long long)role;
- (long long)objectId;
- (id)occurrence;
@property(readonly, nonatomic) BOOL hasOccurrence;
- (void)setModelOccurrenceObjectId:(long long)arg1 role:(long long)arg2 lineNumber:(long long)arg3 column:(long long)arg4 file:(id)arg5;
- (void)setModelOccurrenceRole:(long long)arg1 location:(id)arg2;
- (void)setModelOccurrence:(id)arg1;
- (id)modelOccurrence;
@property(readonly, nonatomic, getter=isInProject) BOOL inProject;
@property(readonly, nonatomic) BOOL navigationPrefersDefinition;
@property(readonly, nonatomic) _TtC13DVTFoundation9DVTSymbol *identifier;
- (BOOL)isEqual:(id)arg1;
@property(readonly) unsigned long long hash;
@property(readonly, copy) NSString *description;
- (void)setRawKind:(long long)arg1 kind:(id)arg2 rawLanguage:(long long)arg3 language:(id)arg4 name:(id)arg5 resolution:(id)arg6;
- (id)ide_callHeirarchy_callableSymbols;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, nonatomic) NSObject<IDEIndexQueryProvider> *queryProvider; // @dynamic queryProvider;
@property(readonly) Class superclass;

@end

@interface IDEExecutionEnvironment : NSObject <DVTInvalidation>
{
    NSMutableArray *_executionTrackers;
    NSMutableArray *_executionTrackersForDisplay;
    NSMutableOrderedSet *_executedActionInvocationRecords;
    NSMutableArray *_queuedBuildOperationInfos;
    NSCountedSet *_activeBuildLogs;
    IDEBuildOperation *_currentBuildOperation;
    long long _buildState;
    long long _lastBuildResult;
    unsigned long long _disableSubmissionOfBuildOperationsCount;
    NSString *_disableBuildSubmissionsReason;
    NSMutableArray *_launchSessions;
    NSMapTable *_launchSessionStateObservationTokens;
    NSMapTable *_launchSessionRunnablePIDObservationTokens;
    IDELogStore *_logStore;
    IDEInMemoryLogStore *_interfaceBuilderLogStore;
    NSMapTable *_ibLogsByBuildable;
    BOOL _handlingLaunchSessionStateChange;
    BOOL _settingLaunchSessionForTabChange;
    NSMutableArray *_debugSessions;
    DVTObservingToken *_currentDebugSessionObserverToken;
    DVTObservingToken *_currentTraceInferiorSessionObserverToken;
    IDEWorkspace *_workspace;
    IDEExecutionTracker *_currentExecutionTracker;
    IDEWorkspaceArena *_workspaceArena;
    id <IDEClientTracking> _clientTracker;
    IDELaunchSession *_selectedLaunchSession;
    IDELaunchSession *_currentLaunchSession;
    NSMapTable *_productNamesToBuildableProductsMapping;
    NSMapTable *_productNameStemsToBuildableProductsMapping;
    NSMapTable *_productModuleNamesToBuildableProductsMapping;
    id <IDEPreBuildSavingDelegate> _preBuildSavingDelegate;
    NSMapTable *_operationGroupSuboperationObserversByExecutionTracker;
    NSOperationQueue *_operationQueue;
}

+ (BOOL)automaticallyNotifiesObserversOfCurrentLaunchSession;
+ (id)keyPathsForValuesAffectingLatestBuildLog;
+ (id)keyPathsForValuesAffectingLogRecords;
+ (id)keyPathsForValuesAffectingBreakpointManager;
+ (BOOL)automaticallyNotifiesObserversForCurrentExecutionTracker;
+ (unsigned long long)assertionBehaviorForKeyValueObservationsAtEndOfEvent;
+ (void)initialize;
@property(retain) NSOperationQueue *operationQueue; // @synthesize operationQueue=_operationQueue;
@property(retain) NSMapTable *operationGroupSuboperationObserversByExecutionTracker; // @synthesize operationGroupSuboperationObserversByExecutionTracker=_operationGroupSuboperationObserversByExecutionTracker;
@property(retain) id <IDEPreBuildSavingDelegate> preBuildSavingDelegate; // @synthesize preBuildSavingDelegate=_preBuildSavingDelegate;
@property(copy) NSMapTable *productModuleNamesToBuildableProductsMapping; // @synthesize productModuleNamesToBuildableProductsMapping=_productModuleNamesToBuildableProductsMapping;
@property(copy) NSMapTable *productNameStemsToBuildableProductsMapping; // @synthesize productNameStemsToBuildableProductsMapping=_productNameStemsToBuildableProductsMapping;
@property(copy) NSMapTable *productNamesToBuildableProductsMapping; // @synthesize productNamesToBuildableProductsMapping=_productNamesToBuildableProductsMapping;
@property(retain, nonatomic) IDELaunchSession *currentLaunchSession; // @synthesize currentLaunchSession=_currentLaunchSession;
@property(retain, nonatomic) IDELaunchSession *selectedLaunchSession; // @synthesize selectedLaunchSession=_selectedLaunchSession;
@property(retain) id <IDEClientTracking> clientTracker; // @synthesize clientTracker=_clientTracker;
@property(retain) IDEWorkspaceArena *workspaceArena; // @synthesize workspaceArena=_workspaceArena;
@property(retain) IDEExecutionTracker *currentExecutionTracker; // @synthesize currentExecutionTracker=_currentExecutionTracker;
@property(readonly) IDEWorkspace *workspace; // @synthesize workspace=_workspace;
@property(readonly) long long lastBuildResult; // @synthesize lastBuildResult=_lastBuildResult;
@property(readonly) long long buildState; // @synthesize buildState=_buildState;
@property(readonly) NSArray *queuedBuildOperationInfos; // @synthesize queuedBuildOperationInfos=_queuedBuildOperationInfos;
@property(retain) IDEBuildOperation *currentBuildOperation; // @synthesize currentBuildOperation=_currentBuildOperation;
- (void).cxx_destruct;
- (id)queuedBuildOperationsDescription;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)_completeBuildOperation:(id)arg1 andPostLastBuildCompleted:(BOOL)arg2 andPostLastUserInitiatedBuildCompleted:(BOOL)arg3;
- (void)_addMissingErrorForFailedBuildToRecorder:(id)arg1 buildLog:(id)arg2;
- (void)_handleLaunchSession:(id)arg1 stateChange:(id)arg2;
- (void)_setStatusDisplayNameForLaunchSession:(id)arg1;
- (void)_setStatusDisplayNamesForExecutionTracker;
- (void)_noteLaunchSessionTargetOutputStateChanged:(id)arg1;
- (void)_setSelectedLaunchSessionForTabChange:(id)arg1;
- (void)promoteXPCExecutionTrackerForDisplay:(id)arg1;
@property(readonly) NSArray *interfaceBuilderLogs;
@property(readonly) IDEActivityLogSection *latestBuildLog;
@property(readonly, copy) NSArray *logRecords;
- (void)_storeLogForOperation:(id)arg1;
- (id)executeOperation:(id)arg1 withCommandName:(id)arg2 invocationRecord:(id)arg3 error:(id *)arg4;
- (id)executeOperation:(id)arg1 withCommandName:(id)arg2 serviceTier:(int)arg3 invocationRecord:(id)arg4 error:(id *)arg5;
- (void)_startNextQueuedBuildOperationIfNecessary;
- (void)_addSuboperationObservationToken:(id)arg1 forExecutionTracker:(id)arg2;
- (void)_startOperationForTracker:(id)arg1 commandName:(id)arg2 operationIncludesBuild:(BOOL)arg3;
- (void)_handleRunOperation:(id)arg1 addExecutionTrackerToDisplayList:(char *)arg2;
@property(readonly) BOOL canSubmitBuildOperations;
- (void)enableSubmissionOfBuildOperationsWithReason:(id)arg1;
- (void)disableSubmissionOfBuildOperationsWithReason:(id)arg1;
@property(readonly) int currentBuildOperationServiceTier;
@property(readonly) BOOL hasUserInitiatedBuildOperations;
@property(readonly) BOOL hasQueuedBuildOperations;
@property(readonly) NSSet *queuedBuildOperations;
@property(readonly) NSArray *executionTrackersOfOperationsWithBuilds;
@property(readonly) IDEBreakpointManager *breakpointManager;
- (void)primitiveInvalidate;
- (void)_setupDebugSessionsObservation;
- (id)initWithWorkspaceArena:(id)arg1;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSArray *debugSessions; // @dynamic debugSessions;
@property(readonly, copy) NSString *description;
@property(readonly, copy) NSSet *executedActionInvocationRecords; // @dynamic executedActionInvocationRecords;
@property(readonly, copy) NSArray *executionTrackers; // @dynamic executionTrackers;
@property(readonly, copy) NSArray *executionTrackersForDisplay; // @dynamic executionTrackersForDisplay;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly, copy) NSArray *launchSessions; // @dynamic launchSessions;
@property(readonly, copy) NSMutableArray *mutableDebugSessions; // @dynamic mutableDebugSessions;
@property(readonly, copy) NSMutableOrderedSet *mutableExecutedActionInvocationRecords; // @dynamic mutableExecutedActionInvocationRecords;
@property(readonly, copy) NSMutableArray *mutableExecutionTrackers; // @dynamic mutableExecutionTrackers;
@property(readonly, copy) NSMutableArray *mutableExecutionTrackersForDisplay; // @dynamic mutableExecutionTrackersForDisplay;
@property(readonly, copy) NSMutableArray *mutableLaunchSessions; // @dynamic mutableLaunchSessions;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface IDEQueuedOperationInfo : NSObject
{
    NSMutableArray *_buildOperations;
    BOOL _isRunning;
    NSString *_commandName;
    IDEExecutionOperationTracker *_tracker;
}

@property BOOL isRunning; // @synthesize isRunning=_isRunning;
@property(retain) IDEExecutionOperationTracker *tracker; // @synthesize tracker=_tracker;
@property(copy) NSString *commandName; // @synthesize commandName=_commandName;
- (void).cxx_destruct;
- (id)description;
- (void)removeBuildOperation:(id)arg1;
- (BOOL)containsBuildOperation:(id)arg1;
@property(readonly, copy) NSArray *buildOperations;
@property(readonly) DVTOperation *topLevelOperation;
- (id)initWithCommandName:(id)arg1 tracker:(id)arg2;
- (id)initWithCommandName:(id)arg1 tracker:(id)arg2 buildOperations:(id)arg3;

@end

@interface IDEAlert : NSObject
{
    NSSet *_cachedProperties;
    BOOL _enabled;
    NSString *_identifier;
    double _executionPriority;
}

+ (id)createAlertForAlertIdentifier:(id)arg1 propertyList:(id)arg2;
+ (id)createAlertForAlertIdentifier:(id)arg1;
+ (BOOL)canAlertWithIdentifierRunOnCurrentOS:(id)arg1;
+ (id)alertExtensionForAlertIdentifier:(id)arg1;
+ (id)alertIdentifiersForGroup:(id)arg1;
+ (id)alertGroups;
+ (id)alertIdentifiers;
+ (id)alertExtensions;
+ (void)_cacheAlerts;
+ (void)_registerAlert:(id)arg1;
+ (void)initialize;
@property double executionPriority; // @synthesize executionPriority=_executionPriority;
@property(getter=isEnabled) BOOL enabled; // @synthesize enabled=_enabled;
@property(readonly) NSString *identifier; // @synthesize identifier=_identifier;
- (void).cxx_destruct;
- (int)alertPropertyListVersion;
- (id)initWithPropertyList:(id)arg1;
- (id)propertyList;
- (BOOL)isEqual:(id)arg1;
- (long long)compare:(id)arg1;
- (id)description;
- (void)runForEvent:(id)arg1 inWorkspace:(id)arg2 context:(id)arg3 completionBlock:(CDUnknownBlockType)arg4;
- (void)prepareToRunForEvent:(id)arg1 inWorkspace:(id)arg2 context:(id)arg3;
- (id)valuesForProperty:(id)arg1;
- (BOOL)validatePropertyValues:(id)arg1;
- (void)enumeratePropertyPermutationsWithBlock:(CDUnknownBlockType)arg1;
- (void)_permuteAlert:(id)arg1 byVaryingProperty:(id)arg2 in:(id)arg3 values:(id)arg4 withBlock:(CDUnknownBlockType)arg5;
- (id)properties;
- (BOOL)canRunOnCurrentOS;
- (id)title;
- (id)group;

@end

@interface IDESourceControlTreeNode : DVTModelTreeNode
{
    DVTFilePath *_filePath;
    unsigned long long _sourceControlLocalStatus;
    unsigned long long _sourceControlServerStatus;
    DVTFilePath *_basePath;
    IDESourceControlTreeNode *_parentGroup;
    NSString *_navigableItem_sourceControlLocalStatus;
    NSString *_navigableItem_sourceControlServerStatus;
}

+ (id)keyPathsForValuesAffectingSparseChildren;
@property(readonly) NSString *navigableItem_sourceControlServerStatus; // @synthesize navigableItem_sourceControlServerStatus=_navigableItem_sourceControlServerStatus;
@property(readonly) NSString *navigableItem_sourceControlLocalStatus; // @synthesize navigableItem_sourceControlLocalStatus=_navigableItem_sourceControlLocalStatus;
@property(retain) IDESourceControlTreeNode *parentGroup; // @synthesize parentGroup=_parentGroup;
@property(retain, nonatomic) DVTFilePath *basePath; // @synthesize basePath=_basePath;
@property(nonatomic) unsigned long long sourceControlServerStatus; // @synthesize sourceControlServerStatus=_sourceControlServerStatus;
@property(nonatomic) unsigned long long sourceControlLocalStatus; // @synthesize sourceControlLocalStatus=_sourceControlLocalStatus;
@property(readonly, nonatomic) DVTFilePath *filePath; // @synthesize filePath=_filePath;
- (void).cxx_destruct;
- (id)description;
@property(readonly) NSMutableArray *mutableChildren;
@property(copy) NSArray *children;
- (id)sparseChildren;
@property(readonly, nonatomic) BOOL isLeaf;
@property(readonly, nonatomic) NSString *relativeFilePath;
- (void)primitiveInvalidate;
- (id)initWithFilePath:(id)arg1 basePath:(id)arg2 sourceControlLocalStatus:(unsigned long long)arg3 sourceControlServerStatus:(unsigned long long)arg4;

@end

@interface IDEBatchFindScopeCompoundPredicate : IDEBatchFindScopePredicate
{
    NSArray *_predicates;
}

+ (id)predicateWithPropertyListRepresentation:(id)arg1;
@property(readonly) NSArray *predicates; // @synthesize predicates=_predicates;
- (void).cxx_destruct;
- (BOOL)isWorkspaceSpecific;
- (id)predicateMatchersBoundToWorkspace:(id)arg1;
- (id)propertyListRepresentation;
- (BOOL)isEqualToScopePredicateWithIdenticalClass:(id)arg1;
- (unsigned long long)hash;
- (id)initWithPredicates:(id)arg1;

@end

@interface IDEBatchFindScopeAllPredicate : IDEBatchFindScopeCompoundPredicate
{
}

+ (id)propertyListIdentifier;
- (CDUnknownBlockType)matcherBoundToWorkspace:(id)arg1;

@end

@interface IDEBatchFindScopeAnyPredicate : IDEBatchFindScopeCompoundPredicate
{
}

+ (id)propertyListIdentifier;
- (CDUnknownBlockType)matcherBoundToWorkspace:(id)arg1;

@end

@interface IDEBatchFindScopeNonePredicate : IDEBatchFindScopeCompoundPredicate
{
}

+ (id)propertyListIdentifier;
- (CDUnknownBlockType)matcherBoundToWorkspace:(id)arg1;

@end

@interface IDEEntitlementsMerger : NSObject
{
}

+ (id)genericallyDefinedAppKeysToCopyFromProfile;
+ (id)keysToAlwaysCopyFromProfile;
+ (id)sharedMerger;
- (id)entitlementsByMergingProfileEntitlements:(id)arg1 appEntitlements:(id)arg2 bundleIdentifier:(id)arg3 appName:(id)arg4 profileName:(id)arg5 warnings:(id *)arg6 error:(id *)arg7;

@end

@interface IDEDistributionEmbedProfileStep : IDEDistributionItemProcessingStep
{
}

- (_Bool)runWithError:(id *)arg1;
- (id)providedOutputContextPropertyNames;
- (id)requiredInputContextPropertyNames;
- (id)name;

@end

@interface IDEIndexProductInfo : NSObject
{
    id <IDEIndexable> _indexable;
    IDEIndex *_index;
    NSObject<OS_dispatch_queue> *_queue;
    NSDictionary *_buildSettings;
    NSString *_productNameKey;
    NSString *_productName;
    BOOL _unitTest;
    NSString *_targetIdentifier;
    NSString *_workspaceIdentifier;
    NSString *_productType;
}

@property(readonly, nonatomic, getter=isUnitTest) BOOL unitTest; // @synthesize unitTest=_unitTest;
@property(readonly, nonatomic) NSString *productType; // @synthesize productType=_productType;
@property(readonly, nonatomic) NSString *workspaceIdentifier; // @synthesize workspaceIdentifier=_workspaceIdentifier;
@property(readonly, nonatomic) NSString *targetIdentifier; // @synthesize targetIdentifier=_targetIdentifier;
- (void).cxx_destruct;
- (void)reportBuildSettings:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) NSString *productName;
- (void)productNameHint:(id)arg1;
- (void)unregisterTarget;
- (void)updateBuildSettings;
- (void)registerTarget;
- (id)userInfo;
- (void)dealloc;
- (id)initWithIndexable:(id)arg1 forIndex:(id)arg2;

@end

@interface IDELogStore : NSObject <DVTInvalidation>
{
    NSMutableArray *_logRecords;
}

+ (id)onDiskOrInMemoryLogStoreInWorkspaceArena:(id)arg1 prefix:(id)arg2;
+ (void)initialize;
- (void).cxx_destruct;
- (id)coverageReportFilePathForActivityLogSection:(id)arg1;
- (id)testableSummariesPlistFilePathForActivityLogSection:(id)arg1;
- (id)logRecordWithURL:(id)arg1;
- (id)addLog:(id)arg1 entityIdentifier:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (id)init;
- (void)primitiveInvalidate;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) NSArray *logRecords; // @dynamic logRecords;
@property(readonly) NSMutableArray *mutableLogRecords; // @dynamic mutableLogRecords;
@property BOOL preserveOldLogs; // @dynamic preserveOldLogs;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface IDEActivityLogRecord : NSObject
{
    IDEEntityIdentifier *_entityIdentifier;
}

+ (unsigned long long)assertionBehaviorAfterEndOfEventForSelector:(SEL)arg1;
+ (id)cacheLog:(id)arg1;
+ (void)uncacheLogRecord:(id)arg1;
+ (void)cacheLogRecord:(id)arg1;
+ (id)cachedLogRecordWithURL:(id)arg1;
@property(readonly) IDEEntityIdentifier *entityIdentifier; // @synthesize entityIdentifier=_entityIdentifier;
- (void).cxx_destruct;
- (id)testableSummariesForFilePath:(id)arg1 runDestinationRecord:(id *)arg2 error:(id *)arg3;
@property(readonly) IDESchemeActionCodeCoverage *coverageReport;
- (id)coverageReportFilePath;
- (id)testableSummariesPlistFilePath;
- (id)initWithEntityIdentifier:(id)arg1;
- (long long)compareUsingTimeStartedRecording:(id)arg1;
- (id)fullLogIfInMemory;
- (id)fullLogWithError:(id *)arg1;
- (void)removeSelfWithCompletionBlock:(CDUnknownBlockType)arg1;
@property(readonly) BOOL isRemoved;
@property(readonly) BOOL isRecording;
@property(readonly) NSString *highLevelStatus;
@property(readonly) NSString *signature;
@property(readonly) DVTFileDataType *documentType;
@property(readonly, nonatomic) double timeStoppedRecording;
@property(readonly) double timeStartedRecording;
@property(readonly) NSString *title;
@property(readonly) IDETypeIdentifier *domainType;
@property(readonly) NSString *uniqueIdentifier;
@property(readonly) NSURL *logURL;

@end

@interface IDEMockProvisioningUserAction : NSObject
{
    NSString *_userActionName;
}

- (void).cxx_destruct;
- (id)userActionName;
- (id)initWithUserActionName:(id)arg1;

@end

@interface IDEMockProvisioningRevokeCertificatesUserAction : IDEMockProvisioningUserAction
{
    NSArray *_certificates;
}

+ (id)revokeCertificatesUserActionWithCertificates:(id)arg1 context:(id)arg2;
- (void).cxx_destruct;
@property(readonly, nonatomic) NSArray *certificates;
- (id)initWithUserActionName:(id)arg1 certificates:(id)arg2;

@end

@interface IDEAppExtensionConfiguration : NSObject
{
}

+ (int)actionForExtensionIdentifier:(id)arg1 bundleIdentifier:(id)arg2 platformFamily:(id)arg3;
+ (id)applicationBundleIdentifiersForExtension:(id)arg1 platformFamily:(id)arg2;
+ (int)modeForExtensionIdentifier:(id)arg1 platformFamily:(id)arg2;
+ (void)initialize;

@end

@interface IDEFolder : IDEContainer
{
    DVTDispatchLock *_generationLock;
    int _superclassActivity;
    unsigned long long _updateOperationGeneration;
    BOOL _didSetSuperclassActivity;
    unsigned long long _readingCount;
}

+ (unsigned long long)assertionBehaviorForKeyValueObservationsAtEndOfEvent;
+ (BOOL)supportsMultipleInstancesPerFilePath;
+ (BOOL)_observeContainerDataFilePathsForChanges;
+ (BOOL)_THREAD_shouldAddFileWithName:(id)arg1;
+ (id)containerTypeDisplayName;
+ (id)containerFileDataType;
+ (void)initialize;
- (void).cxx_destruct;
- (void)primitiveInvalidate;
- (void)_respondToFileChangeOnDiskWithFilePath:(id)arg1;
- (id)initWithFilePath:(id)arg1 extension:(id)arg2 workspace:(id)arg3 options:(id)arg4 error:(id *)arg5;
- (void)_filePathDidChange:(id)arg1;
- (void)_decrementReadingCount;
- (void)_incrementReadingCount;
@property(readonly, nonatomic) BOOL isReading;
- (void)setActivity:(int)arg1;
- (id)_THREAD_fileNamesAtFilePath:(id)arg1;
- (id)newFileReferenceForChildFilePath:(id)arg1;
- (void)_updateSubitemsWithFileNames:(id)arg1;
- (void)_addFileReferenceNamed:(id)arg1;
- (id)_itemBaseFilePathForFilePath:(id)arg1;
- (id)createRootGroup;

@end

@interface IDETestOperationEventSource : NSObject <DVTInvalidation>
{
    DVTObservingToken *_runOperationCancellationObservationToken;
    DVTObservingToken *_runOperationErrorObservationToken;
    id <IDETestOperationEventSourceEvents> _delegate;
}

+ (void)initialize;
@property(retain) id <IDETestOperationEventSourceEvents> delegate; // @synthesize delegate=_delegate;
@property(retain) DVTObservingToken *runOperationErrorObservationToken; // @synthesize runOperationErrorObservationToken=_runOperationErrorObservationToken;
@property(retain) DVTObservingToken *runOperationCancellationObservationToken; // @synthesize runOperationCancellationObservationToken=_runOperationCancellationObservationToken;
- (void).cxx_destruct;
- (void)_observeErrorForTestOperation:(id)arg1;
- (void)_observeCancellationForTestOperation:(id)arg1;
- (void)primitiveInvalidate;
- (id)initWithDelegate:(id)arg1 testOperation:(id)arg2;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface IDETypeIdentifier : NSObject
{
    NSString *_stringRepresentation;
    NSArray *_subTypes;
    IDETypeIdentifier *_parentType;
}

+ (id)typeIdentifierForStringRepresentation:(id)arg1;
+ (id)registerTypeIdentifierWithStringRepresentation:(id)arg1 basedOn:(id)arg2;
+ (id)_registerTypeIdentifierWithStringRepresentation:(id)arg1 basedOn:(id)arg2;
+ (id)_rootType;
+ (void)_registerBasicTypeIdentifiers;
@property(retain) IDETypeIdentifier *parentType; // @synthesize parentType=_parentType;
@property(retain) NSArray *subTypes; // @synthesize subTypes=_subTypes;
@property(copy) NSString *stringRepresentation; // @synthesize stringRepresentation=_stringRepresentation;
- (void).cxx_destruct;
- (id)typeIdentifierLineage;
- (BOOL)isEqual:(id)arg1;
- (BOOL)isKindOfType:(id)arg1;
- (void)addSubType:(id)arg1;
- (id)description;
- (id)initWithStringRepresentation:(id)arg1;

@end

@interface IDEDataProvider : NSObject
{
    NSMutableDictionary *_initialQueryTimeForPidDictionary;
}

+ (id)sharedDataProvider;
- (void).cxx_destruct;
- (id)initialQueryTimeForPidDictionary;
- (id)stopSamplingForPIDs:(id)arg1;
- (id)captureAttributes:(id)arg1 forPIDs:(id)arg2;
- (id)startSamplingForPIDs:(id)arg1;
- (id)supportedAttributes;

@end

@interface IDECrashPoint : NSObject <IDEDebugTopNavigableModel>
{
    NSString *_associatedProcessUUID;
    NSString *name;
    NSArray *_threads;
    NSArray *_queues;
    NSArray *_crashLogs;
    unsigned long long _currentCrashLogIndex;
    NSString *_appName;
    IDEDebugSession *_parentDebugSession;
}

+ (id)keyPathsForValuesAffectingSubtitle;
+ (void)initialize;
@property(retain, nonatomic) IDEDebugSession *parentDebugSession; // @synthesize parentDebugSession=_parentDebugSession;
@property(copy, nonatomic) NSString *appName; // @synthesize appName=_appName;
@property(nonatomic) unsigned long long currentCrashLogIndex; // @synthesize currentCrashLogIndex=_currentCrashLogIndex;
@property(copy, nonatomic) NSArray *crashLogs; // @synthesize crashLogs=_crashLogs;
@property(copy, nonatomic) NSArray *queues; // @synthesize queues=_queues;
@property(copy, nonatomic) NSArray *threads; // @synthesize threads=_threads;
@property(copy, nonatomic) NSString *name; // @synthesize name;
@property(readonly, copy) NSString *associatedProcessUUID; // @synthesize associatedProcessUUID=_associatedProcessUUID;
- (void).cxx_destruct;
- (void)primitiveInvalidate;
@property(readonly) NSString *subtitle;
@property(readonly) IDELaunchSession *launchSession;
- (id)contentDelegateUIExtensionIdentifier;
- (id)init;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface IDECrashLog : IDEDebugProcess
{
    IDECrashPoint *_crashPoint;
    IDEStackFrame *_crashingStackFrame;
}

@property(retain, nonatomic) IDEStackFrame *crashingStackFrame; // @synthesize crashingStackFrame=_crashingStackFrame;
- (void).cxx_destruct;
- (void)primitiveInvalidate;
- (BOOL)isPaused;
- (id)parentDebugSession;
- (id)associatedProcessUUID;
- (id)initWithCrashPoint:(id)arg1;
- (id)init;
- (id)initWithDebugSession:(id)arg1;

@end

@interface IDETestingOSXCrashReportObserver : NSObject
{
    int _fileDescriptor;
    NSString *_directoryPath;
    NSMutableSet *_filesInDirectory;
    NSObject<OS_dispatch_source> *_source;
    NSArray *_processNames;
}

@property(copy) NSArray *processNames; // @synthesize processNames=_processNames;
@property(retain) NSObject<OS_dispatch_source> *source; // @synthesize source=_source;
@property(retain) NSMutableSet *filesInDirectory; // @synthesize filesInDirectory=_filesInDirectory;
@property int fileDescriptor; // @synthesize fileDescriptor=_fileDescriptor;
@property(copy) NSString *directoryPath; // @synthesize directoryPath=_directoryPath;
- (void).cxx_destruct;
- (void)startMonitoringWithFileAddedHandler:(CDUnknownBlockType)arg1;
- (void)_updateFilesInDirectoryAndNotifyHandlerOfNewMatches:(CDUnknownBlockType)arg1;
- (id)_filesInDirectory:(id)arg1;
- (id)initWithDirectory:(id)arg1 matchingProcessNames:(id)arg2 error:(id *)arg3;
- (void)dealloc;

@end

@interface IDETextFragmentIndex : NSObject
{
    IDETextFragmentIndexRecordStorage *_storage;
    unsigned int _currentSaveGeneration;
    BOOL _disablePrescan;
    BOOL _completedPrescan;
}

+ (id)searchableFilepathsForWorkspace:(id)arg1;
+ (void)deriveEntryForFilePath:(id)arg1 initialTimestamp:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
+ (void)runProvider:(Class)arg1 forFilePath:(id)arg2 initialTimestamp:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
@property BOOL completedPrescan; // @synthesize completedPrescan=_completedPrescan;
- (void).cxx_destruct;
- (void)prescanWorkspace:(id)arg1 withScannerClass:(Class)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)scheduleSaveForWorkspace:(id)arg1 trimIndex:(BOOL)arg2;
- (id)indexPathForWorkspace:(id)arg1;
- (void)dropIndex;
- (void)ensureEntryForFilePathIsUpToDate:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)fragmentsForFilePath:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)fragmentsForFilePath:(id)arg1 thatMightMatchQueryTextFragmentProbe:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)fragmentsForFilePath:(id)arg1 indexEntryFilter:(CDUnknownBlockType)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (id)init;

@end

@interface IDECodeModule : NSObject
{
    NSString *_frameworkNameIncludingExtension;
    BOOL _isInBuiltProductDirectories;
    int _debugSymbolsLoadState;
    NSNumber *_timestamp;
    DVTFilePath *_filePath;
    NSString *_identifier;
    unsigned long long _address;
}

+ (id)keyPathsForValuesAffectingPath;
+ (id)keyPathsForValuesAffectingTimestamp;
+ (id)keyPathsForValuesAffectingName;
+ (id)frameworkNameIncludingExtensionFromPath:(id)arg1;
+ (id)logAspect;
@property(nonatomic) int debugSymbolsLoadState; // @synthesize debugSymbolsLoadState=_debugSymbolsLoadState;
@property(nonatomic) BOOL isInBuiltProductDirectories; // @synthesize isInBuiltProductDirectories=_isInBuiltProductDirectories;
@property(nonatomic) unsigned long long address; // @synthesize address=_address;
@property(copy, nonatomic) NSString *identifier; // @synthesize identifier=_identifier;
@property(copy, nonatomic) DVTFilePath *filePath; // @synthesize filePath=_filePath;
- (void).cxx_destruct;
@property(readonly, nonatomic) NSString *path;
@property(readonly, nonatomic) NSString *displayAddress;
@property(readonly, nonatomic) NSNumber *timestamp; // @synthesize timestamp=_timestamp;
@property(readonly, nonatomic) NSString *frameworkNameIncludingExtension;
@property(readonly, nonatomic) NSString *name;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
- (id)initWithIdentifier:(id)arg1 pathString:(id)arg2;
- (id)init;

@end

@interface IDEAnalyzeCommandLineVerb : IDESchemeBasedCommandLineVerb
{
}

+ (int)performWithEnvironment:(id)arg1;

@end

@interface IDEDeviceInstallWorkspaceMonitor : NSObject <DVTInvalidation>
{
    NSString *_appName;
    IDELogStore *_logStore;
    IDEActivityLogSectionRecorder *_logRecorder;
    IDEActivityLogSectionRecorder *_logSectionRecorder;
    NSString *_resultError;
}

+ (id)keyPathsForValuesAffectingLogRecords;
+ (void)initialize;
@property(retain) NSString *resultError; // @synthesize resultError=_resultError;
@property(retain) IDEActivityLogSectionRecorder *logSectionRecorder; // @synthesize logSectionRecorder=_logSectionRecorder;
@property(retain) IDEActivityLogSectionRecorder *logRecorder; // @synthesize logRecorder=_logRecorder;
@property(retain) IDELogStore *logStore; // @synthesize logStore=_logStore;
@property(retain) NSString *appName; // @synthesize appName=_appName;
- (void).cxx_destruct;
- (void)setResultErrorString:(id)arg1;
- (void)addOperationToActivityLog:(id)arg1 details:(id)arg2;
- (void)stopActivityLog;
- (void)startActivityLogForAppNamed:(id)arg1 deviceNamed:(id)arg2;
- (void)loadDeviceInstallLogsForWorkspace:(id)arg1;
@property(readonly) NSArray *logRecords;
- (void)primitiveInvalidate;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface IDEGaugeDataQueryCoordinator : NSObject
{
    BOOL _useProxiedDevice;
    DVTDevice *_device;
    NSNumber *_pid;
    NSMutableOrderedSet *_queries;
    NSMutableOrderedSet *_services;
    NSCountedSet *_attributes;
}

+ (id)sharedQueryCoordinatorWithPID:(id)arg1 onDevice:(id)arg2 useProxiedDevice:(BOOL)arg3;
@property(retain, nonatomic) NSCountedSet *attributes; // @synthesize attributes=_attributes;
@property(retain, nonatomic) NSMutableOrderedSet *services; // @synthesize services=_services;
@property(retain, nonatomic) NSMutableOrderedSet *queries; // @synthesize queries=_queries;
@property(readonly) BOOL useProxiedDevice; // @synthesize useProxiedDevice=_useProxiedDevice;
@property(retain, nonatomic) NSNumber *pid; // @synthesize pid=_pid;
@property(retain, nonatomic) DVTDevice *device; // @synthesize device=_device;
- (void).cxx_destruct;
- (void)handleResultDict:(id)arg1;
- (void)query:(id)arg1 didAddObservedAttributes:(id)arg2 andRemoveObservedAttributes:(id)arg3;
- (void)removeQuery:(id)arg1;
- (void)addQuery:(id)arg1;
- (id)_noteAttributesDidChange;
- (id)initForProcessWithPID:(id)arg1 onDevice:(id)arg2 useProxiedDevice:(BOOL)arg3;

@end

@interface IDEIndexUniqueStringMap : NSObject
{
    NSMapTable *_mapTable;
}

- (void).cxx_destruct;
- (id)stringWithString:(id)arg1;
- (id)stringWithUTF8String:(const char *)arg1;
- (void)dealloc;
- (id)init;

@end

@interface IDESourcePackageReference : NSObject
{
    NSURL *_packageURL;
    IDESourcePackageRequirement *_requirement;
}

@property(readonly) IDESourcePackageRequirement *requirement; // @synthesize requirement=_requirement;
@property(readonly) NSURL *packageURL; // @synthesize packageURL=_packageURL;
- (void).cxx_destruct;
- (BOOL)isEqual:(id)arg1;
- (id)initWithURL:(id)arg1 requirement:(id)arg2;

@end

@interface IDEConsoleAdaptor : NSObject <OSActivityStreamDelegate>
{
    OSActivityStream *_stream;
    NSDateFormatter *_dateFormatter;
    int _pid;
    unsigned long long _type;
    NSObject<OS_dispatch_queue> *_writeSerialQueue;
    NSTimer *_endOfStandardOutputReadTimer;
    NSTimer *_endOfStandardErrorReadTimer;
    BOOL _finishedReceivingData;
    BOOL _ignoreFutureOutput;
    NSFileHandle *_standardInput;
    NSFileHandle *_standardOutput;
    NSFileHandle *_standardError;
    NSMutableData *_currentOutputOverflow;
    NSMutableString *_currentOutputLineOverflow;
    NSMutableData *_currentErrorOverflow;
    NSMutableString *_currentErrorLineOverflow;
    NSTimer *_targetOutputOverflowTimer;
    NSTimer *_targetOutputNewlineTimer;
    id <IDEConsoleAdaptorDelegateProtocol> _delegate;
    BOOL _delegateRespondsToParseConsoleOutputFromOriginalOutput;
    BOOL _delegateRespondsToParseConsoleInputFromOriginalInput;
    unsigned long long _currNumStoredChars;
    struct __CFDictionary *_completeContent;
    struct __CFArray *_completeContentSequences;
    struct __CFArray *_standardInputSequences;
    struct __CFArray *_standardOutputSequences;
    struct __CFArray *_standardErrorSequences;
    NSMutableArray *_fileReadTokenArray;
}

+ (id)standardErrorItemsForAdaptors:(id)arg1;
+ (id)standardOutputItemsForAdaptors:(id)arg1;
+ (id)standardInputItemsForAdaptors:(id)arg1;
+ (id)allConsoleItemsForAdaptors:(id)arg1;
+ (id)_itemsForAdaptors:(id)arg1 sequencesSelector:(SEL)arg2;
+ (unsigned long long)_nextContentSequence;
+ (void)initialize;
@property(readonly) struct __CFArray *standardErrorSequences; // @synthesize standardErrorSequences=_standardErrorSequences;
@property(readonly) struct __CFArray *standardOutputSequences; // @synthesize standardOutputSequences=_standardOutputSequences;
@property(readonly) struct __CFArray *standardInputSequences; // @synthesize standardInputSequences=_standardInputSequences;
@property(readonly) struct __CFArray *completeContentSequences; // @synthesize completeContentSequences=_completeContentSequences;
@property(readonly) struct __CFDictionary *completeContent; // @synthesize completeContent=_completeContent;
@property BOOL ignoreFutureOutput; // @synthesize ignoreFutureOutput=_ignoreFutureOutput;
@property BOOL finishedReceivingData; // @synthesize finishedReceivingData=_finishedReceivingData;
@property(readonly) unsigned long long type; // @synthesize type=_type;
- (void).cxx_destruct;
- (BOOL)activityStream:(id)arg1 results:(id)arg2;
- (void)setupLoggingStreamForPid:(int)arg1 withDevice:(id)arg2;
- (id)standardErrorItems;
- (id)standardOutputItems;
- (id)standardInputItems;
- (id)allConsoleItems;
- (id)_itemsForSequences:(struct __CFArray *)arg1;
- (void)_setStandardError:(id)arg1;
- (void)_setStandardOutput:(id)arg1;
- (void)_addObserverToReadCompletion:(id)arg1 selector:(SEL)arg2;
- (void)_getError:(id)arg1;
- (void)_getOutput:(id)arg1;
- (void)_timerFiredToCheckEndOfRead:(id)arg1;
- (void)_fileHandleCompletedRead:(id)arg1;
- (id)_getData:(id)arg1 overflowBuffer:(id *)arg2 stringBuffer:(id *)arg3;
- (void)_timerFiredForTargetOutputOverflow:(id)arg1;
- (void)_timerFiredForTargetOutputWaitingForNewline:(id)arg1;
- (id)_delegateProcessedOutput:(id)arg1;
- (void)_setStandardInput:(id)arg1;
- (void)outputForStandardError:(id)arg1 kind:(int)arg2;
- (void)outputForStandardError:(id)arg1;
- (void)outputForStandardOutput:(id)arg1;
- (void)outputForStandardOutput:(id)arg1 isPrompt:(BOOL)arg2 isOutputRequestedByUser:(BOOL)arg3;
- (void)_postOnMainThreadForNotification:(id)arg1 consoleItem:(id)arg2;
- (void)inputForStandardInput:(id)arg1;
- (void)inputFromConsole:(id)arg1 echo:(BOOL)arg2;
- (void)makeExpired;
- (void)_makeExpired;
- (void)_addToCompleteContent:(id)arg1 andSupportingSequences:(struct __CFArray *)arg2;
- (BOOL)_removeSequence:(unsigned long long)arg1 fromSupportingSequences:(struct __CFArray *)arg2;
@property(retain) id <IDEConsoleAdaptorDelegateProtocol> delegate; // @synthesize delegate=_delegate;
@property(readonly, copy) NSString *description;
- (void)dealloc;
- (id)initWithType:(unsigned long long)arg1 standardInput:(id)arg2 standardOutput:(id)arg3 standardError:(id)arg4;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IDEIndexSymbolWithDefiningOccurrenceCollection : IDEIndexSymbolWithOccurrenceCollection
{
}

- (id)instantiateRow:(struct sqlite3_stmt *)arg1;
- (id)tempTableSchema;

@end

@interface IDEProvisioningCompoundProfileStore : NSObject
{
    NSDictionary *_compoundProfiles;
    DVTLogAspect *_logAspect;
    NSMutableDictionary *_mutableCompoundProfiles;
    NSMutableDictionary *_teamToIdentifiers;
}

@property(retain, nonatomic) NSMutableDictionary *teamToIdentifiers; // @synthesize teamToIdentifiers=_teamToIdentifiers;
@property(retain, nonatomic) NSMutableDictionary *mutableCompoundProfiles; // @synthesize mutableCompoundProfiles=_mutableCompoundProfiles;
@property(retain, nonatomic) DVTLogAspect *logAspect; // @synthesize logAspect=_logAspect;
@property(copy, nonatomic) NSDictionary *compoundProfiles; // @synthesize compoundProfiles=_compoundProfiles;
- (void).cxx_destruct;
- (id)profilesForTeam:(id)arg1;
- (void)updateWithProvisioningProfiles:(id)arg1;
- (void)removeProvisioningProfiles:(id)arg1;
- (void)updateWithPortalProfiles:(id)arg1;
- (void)updateTeamsToIdentifierWithIdentifier:(id)arg1;
- (id)initWithLogAspect:(id)arg1;

@end

@interface IDEProvisioningProfileDownloaderPortalRefreshTeamResult : NSObject
{
    id <IDEProvisioningBasicTeam> _team;
    NSArray *_profiles;
    NSError *_error;
}

@property(readonly, nonatomic) NSError *error; // @synthesize error=_error;
@property(readonly, nonatomic) NSArray *profiles; // @synthesize profiles=_profiles;
@property(readonly, nonatomic) id <IDEProvisioningBasicTeam> team; // @synthesize team=_team;
- (void).cxx_destruct;
- (id)initWithTeam:(id)arg1 profiles:(id)arg2;
- (id)initWithTeam:(id)arg1 error:(id)arg2;

@end

@interface IDEProvisioningProfileDownloader : NSObject <DVTInvalidation>
{
    BOOL _installingProfile;
    NSArray *_accountNamesFailed;
    NSArray *_teams;
    IDEProvisioningProfileDownloaderContext *_context;
    DVTLogAspect *_logAspect;
    id <IDEProvisioningProfileDownloaderDelegate> _delegate;
    DVTNotificationToken *_accountsObserver;
    DVTObservingToken *_teamsObserver;
    DVTNotificationToken *_profilesObserver;
    DVTDelayedInvocation *_delayedRefreshLocalProfilesInvocation;
    NSOperationQueue *_previewProfileQueue;
    NSOperationQueue *_refreshQueue;
    NSOperationQueue *_profilesForTeamQueue;
    DVTSemaphore *_waitForAreTeamsLoadedSemaphore;
    DVTSemaphore *_waitForAreProfilesLoadedSemaphore;
    DVTPerformanceMetric *_performanceMetric;
    NSOperationQueue *_refreshSerialQueue;
    NSOperationQueue *_installProfileSerialQueue;
    DVTDelayedInvocation *_delayedRefreshPortalProfilesInvocation;
    NSArray *_accountErrors;
    NSArray *_portalProfiles;
    NSSet *_provisioningProfiles;
    NSDictionary *_teamToError;
    IDEProvisioningCompoundProfileStore *_compoundProfileStore;
}

+ (unsigned long long)assertionBehaviorAfterEndOfEventForSelector:(SEL)arg1;
+ (unsigned long long)assertionBehaviorForKeyValueObservationsAtEndOfEvent;
+ (void)initialize;
@property(retain, nonatomic) IDEProvisioningCompoundProfileStore *compoundProfileStore; // @synthesize compoundProfileStore=_compoundProfileStore;
@property(retain, nonatomic) NSDictionary *teamToError; // @synthesize teamToError=_teamToError;
@property(retain, nonatomic) NSSet *provisioningProfiles; // @synthesize provisioningProfiles=_provisioningProfiles;
@property(retain, nonatomic) NSArray *portalProfiles; // @synthesize portalProfiles=_portalProfiles;
@property(retain, nonatomic) NSArray *accountErrors; // @synthesize accountErrors=_accountErrors;
@property(retain, nonatomic) DVTDelayedInvocation *delayedRefreshPortalProfilesInvocation; // @synthesize delayedRefreshPortalProfilesInvocation=_delayedRefreshPortalProfilesInvocation;
@property(retain, nonatomic) NSOperationQueue *installProfileSerialQueue; // @synthesize installProfileSerialQueue=_installProfileSerialQueue;
@property(retain, nonatomic) NSOperationQueue *refreshSerialQueue; // @synthesize refreshSerialQueue=_refreshSerialQueue;
@property(retain, nonatomic) DVTPerformanceMetric *performanceMetric; // @synthesize performanceMetric=_performanceMetric;
@property(retain, nonatomic) DVTSemaphore *waitForAreProfilesLoadedSemaphore; // @synthesize waitForAreProfilesLoadedSemaphore=_waitForAreProfilesLoadedSemaphore;
@property(retain, nonatomic) DVTSemaphore *waitForAreTeamsLoadedSemaphore; // @synthesize waitForAreTeamsLoadedSemaphore=_waitForAreTeamsLoadedSemaphore;
@property(retain, nonatomic) NSOperationQueue *profilesForTeamQueue; // @synthesize profilesForTeamQueue=_profilesForTeamQueue;
@property(retain, nonatomic) NSOperationQueue *refreshQueue; // @synthesize refreshQueue=_refreshQueue;
@property(retain, nonatomic) NSOperationQueue *previewProfileQueue; // @synthesize previewProfileQueue=_previewProfileQueue;
@property(retain, nonatomic) DVTDelayedInvocation *delayedRefreshLocalProfilesInvocation; // @synthesize delayedRefreshLocalProfilesInvocation=_delayedRefreshLocalProfilesInvocation;
@property(retain, nonatomic) DVTNotificationToken *profilesObserver; // @synthesize profilesObserver=_profilesObserver;
@property(retain, nonatomic) DVTObservingToken *teamsObserver; // @synthesize teamsObserver=_teamsObserver;
@property(retain, nonatomic) DVTNotificationToken *accountsObserver; // @synthesize accountsObserver=_accountsObserver;
@property(retain, nonatomic) id <IDEProvisioningProfileDownloaderDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) DVTLogAspect *logAspect; // @synthesize logAspect=_logAspect;
@property(retain, nonatomic) IDEProvisioningProfileDownloaderContext *context; // @synthesize context=_context;
@property(nonatomic, getter=isInstallingProfile) BOOL installingProfile; // @synthesize installingProfile=_installingProfile;
@property(retain, nonatomic) NSArray *teams; // @synthesize teams=_teams;
@property(retain, nonatomic) NSArray *accountNamesFailed; // @synthesize accountNamesFailed=_accountNamesFailed;
- (void).cxx_destruct;
- (void)primitiveInvalidate;
@property(readonly) NSError *noResultsError;
- (id)noProfilesError;
- (id)noTeamsError;
- (id)allAccountsFailedError;
- (id)noAccountsError;
- (id)noConnectionError;
- (void)cancelInstall:(id)arg1;
- (void)installProfile:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)waitForInMemoryDownloadOfProfile:(id)arg1;
- (void)updatePreviewProfile:(id)arg1;
- (id)retryInMemoryProfileForPortalProfile:(id)arg1 session:(id)arg2 error:(id *)arg3;
- (id)profilesForTeam:(id)arg1 error:(id *)arg2;
- (void)refreshWithCompletion:(CDUnknownBlockType)arg1;
- (void)refreshLocalProfiles:(BOOL)arg1 portalProfiles:(BOOL)arg2 completion:(CDUnknownBlockType)arg3;
- (void)updateDownloaderWithTeamResults:(id)arg1;
- (id)fetchProvisioningProfiles;
- (id)fetchPortalProfiles;
- (id)fetchErrorsForAccountsWithAccountNamesFailed:(id *)arg1;
- (id)sessionErrorsForAccounts:(id)arg1 accountNamesFailed:(id *)arg2;
- (void)waitForAreProfilesLoaded;
- (void)waitForAreTeamsLoaded;
- (id)manuallyQualifiedProfilesForTeam:(id)arg1 error:(id *)arg2;
- (id)portalProfilesForTeam:(id)arg1 error:(id *)arg2;
- (id)manuallyQualifiedProfiles:(id)arg1 team:(id)arg2;
- (void)setupObservations;
- (id)initWithContext:(id)arg1 delegate:(id)arg2;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface IDEProvisioningDisambiguatableBasicTeam : IDEProvisioningBasicTeam
{
    NSString *_teamType;
    NSString *_username;
    NSString *_disambiguatedName;
}

@property(retain, nonatomic) NSString *disambiguatedName; // @synthesize disambiguatedName=_disambiguatedName;
@property(retain, nonatomic) NSString *username; // @synthesize username=_username;
@property(retain, nonatomic) NSString *teamType; // @synthesize teamType=_teamType;
- (void).cxx_destruct;
- (id)teamName;
@property(readonly, nonatomic) NSString *originalName;
- (id)initWithTeamID:(id)arg1 teamName:(id)arg2;
- (id)description;

@end

@interface IDEProvisioningTeamManager : NSObject <DVTInvalidation>
{
    BOOL _areTeamsLoaded;
    BOOL _busy;
    DVTLogAspect *_logAspect;
    NSOrderedSet *_disambiguatedTeams;
    NSOrderedSet *_disambiguatedTeamsIncludingLocallyDerived;
    DVTDeveloperAccountManager *_accountManager;
    DVTProvisioningProfileManager *_profileManager;
    DVTSigningCertificateManager *_certificateManager;
    IDEProvisioningTeamAccountPairManager *_teamAccountPairManager;
    NSString *_teamCacheKey;
    DVTDispatchLock *_teamsLock;
    DVTDelayedInvocation *_delayedUpdateInvocation;
    DVTDelayedInvocation *_delayedLocalUpdateInvocation;
    NSSet *_developerAccountCredentialObservers;
    DVTNotificationToken *_accountsToken;
    DVTNotificationToken *_profilesToken;
    DVTNotificationToken *_certificatesToken;
}

+ (BOOL)supportsInvalidationPrevention;
+ (id)keyPathsForValuesAffectingTeamsIncludingLocallyDerivedTeams;
+ (id)keyPathsForValuesAffectingTeams;
+ (id)defaultTeamManager;
+ (void)initialize;
@property(retain) DVTNotificationToken *certificatesToken; // @synthesize certificatesToken=_certificatesToken;
@property(retain) DVTNotificationToken *profilesToken; // @synthesize profilesToken=_profilesToken;
@property(retain) DVTNotificationToken *accountsToken; // @synthesize accountsToken=_accountsToken;
@property(retain) NSSet *developerAccountCredentialObservers; // @synthesize developerAccountCredentialObservers=_developerAccountCredentialObservers;
@property(retain) DVTDelayedInvocation *delayedLocalUpdateInvocation; // @synthesize delayedLocalUpdateInvocation=_delayedLocalUpdateInvocation;
@property(retain) DVTDelayedInvocation *delayedUpdateInvocation; // @synthesize delayedUpdateInvocation=_delayedUpdateInvocation;
@property(retain) DVTDispatchLock *teamsLock; // @synthesize teamsLock=_teamsLock;
@property(retain) NSString *teamCacheKey; // @synthesize teamCacheKey=_teamCacheKey;
@property(retain) IDEProvisioningTeamAccountPairManager *teamAccountPairManager; // @synthesize teamAccountPairManager=_teamAccountPairManager;
@property(retain) DVTSigningCertificateManager *certificateManager; // @synthesize certificateManager=_certificateManager;
@property(retain) DVTProvisioningProfileManager *profileManager; // @synthesize profileManager=_profileManager;
@property(retain) DVTDeveloperAccountManager *accountManager; // @synthesize accountManager=_accountManager;
@property(getter=isBusy) BOOL busy; // @synthesize busy=_busy;
@property BOOL areTeamsLoaded; // @synthesize areTeamsLoaded=_areTeamsLoaded;
@property(retain, nonatomic) NSOrderedSet *disambiguatedTeamsIncludingLocallyDerived; // @synthesize disambiguatedTeamsIncludingLocallyDerived=_disambiguatedTeamsIncludingLocallyDerived;
@property(retain, nonatomic) NSOrderedSet *disambiguatedTeams; // @synthesize disambiguatedTeams=_disambiguatedTeams;
- (void).cxx_destruct;
- (id)developerAccountForTeam:(id)arg1 error:(id *)arg2;
- (id)teamWithID:(id)arg1;
- (void)_purgeErstwhileUsernamesFromCache:(id)arg1;
- (void)_cacheTeams:(id)arg1 forUsername:(id)arg2;
- (id)_cachedTeamsByUsername;
- (id)_teamsForAccount:(id)arg1 error:(id *)arg2;
- (void)_updateLocallyDerivedTeams;
- (void)_updateTeamsImpl:(CDUnknownBlockType)arg1 completionCallback:(CDUnknownBlockType)arg2;
- (void)_updateTeamsWithCacheLoadedCallback:(CDUnknownBlockType)arg1 completionCallback:(CDUnknownBlockType)arg2;
- (void)_setUpObservations;
- (void)_commonInitWithFullFunctionality:(BOOL)arg1;
@property(readonly, nonatomic) NSOrderedSet *teamsIncludingLocallyDerivedTeams;
@property(readonly, nonatomic) NSOrderedSet *teams;
- (void)forceReloadTeams;
- (void)_forceReloadInternalWithCacheLoadedCallback:(CDUnknownBlockType)arg1;
@property(retain) id <IDEProvisioningBasicTeam> lastSelectedTeam;
- (void)primitiveInvalidate;
@property(readonly) DVTLogAspect *logAspect; // @synthesize logAspect=_logAspect;
- (id)init;
- (id)initWithDeveloperAccountManager:(id)arg1 provisioningProfileManager:(id)arg2 signingCertificateManager:(id)arg3 teamAccountPairManager:(id)arg4 teamCacheUserDefaultsKey:(id)arg5 wantsFullFunctionality:(BOOL)arg6;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface _IDEProvisioningTeamDisambiguationProperty : NSObject
{
    NSString *_key;
    NSString *_emptyValue;
}

+ (id)disambiguationPropertyWithKey:(id)arg1 emptyValue:(id)arg2;
@property(readonly) NSString *emptyValue; // @synthesize emptyValue=_emptyValue;
@property(readonly) NSString *key; // @synthesize key=_key;
- (void).cxx_destruct;
- (id)valueForTeam:(id)arg1;

@end

@interface IDEProvisioningTeamDisambiguator : NSObject
{
}

+ (id)disambiguateTeams:(id)arg1;

@end

@interface IDERefactoringBuildSettings : NSObject
{
    int _status;
    NSDictionary *_headerMappings;
}

+ (id)plistFileSettings;
+ (id)dataModelFileSettings;
+ (id)nibFileSettings;
+ (id)fileInNoIndexables;
+ (id)noBuildSettingsFound;
@property(readonly) NSDictionary *headerMappings; // @synthesize headerMappings=_headerMappings;
@property int status; // @synthesize status=_status;
- (void).cxx_destruct;
- (id)pathForFileName:(id)arg1 includedByFiles:(id)arg2 usingQuotes:(BOOL)arg3;
@property(readonly) BOOL alwaysSearchUserPaths;
@property(readonly) NSNumber *arcMode;
@property(readonly) NSString *languageDialect;
@property(readonly) NSArray *undefinedMacroNames;
@property(readonly) NSArray *predefinedMacroNamesAndDefs;
@property(readonly) NSArray *userIncludePaths;
@property(readonly) NSArray *systemIncludePaths;
@property(readonly) NSArray *frameworkSearchPaths;
@property(readonly) NSSet *plistFilePaths;
@property(readonly) NSArray *preincludeFiles;
- (id)init;

@end

@interface IDEDistributionOptionsStep : IDEDistributionStep
{
    NSArray *_options;
}

+ (id)propertyListForContext:(id)arg1;
+ (id)availableOptionsForPropertyList;
+ (id)distributionOptionClasses;
+ (id)distributionOptionExtensions;
@property(readonly, nonatomic) NSArray *options; // @synthesize options=_options;
- (void).cxx_destruct;
- (id)providedOutputContextPropertyNames;
- (id)requiredInputContextPropertyNames;
- (BOOL)loadFromPropertyList:(id)arg1 error:(id *)arg2;
- (id)initWithContext:(id)arg1;

@end

@interface IDETestIdentifier : NSObject <NSCopying>
{
    NSString *_methodName;
    NSString *_suiteName;
}

@property(copy) NSString *suiteName; // @synthesize suiteName=_suiteName;
@property(readonly, copy) NSString *methodName; // @synthesize methodName=_methodName;
- (void).cxx_destruct;
@property(readonly, copy) NSString *displayName;
@property(readonly, copy) NSString *languageAgnosticIdentifierString;
@property(readonly, copy) NSString *identifierString;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
- (id)description;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithIdentifierString:(id)arg1;
- (id)initWithClassName:(id)arg1 methodName:(id)arg2;
- (id)initWithSuiteName:(id)arg1;

@end

@interface IDEIndexFileCollection : IDEIndexCollection
{
}

- (id)instantiateRow:(struct sqlite3_stmt *)arg1;
- (id)tempTableSchema;

@end

@interface IDEProvisioningRepairStep : NSObject
{
    NSString *_identifier;
}

@property(readonly, nonatomic) NSString *identifier; // @synthesize identifier=_identifier;
- (void).cxx_destruct;
- (BOOL)executeWithContext:(id)arg1 error:(id *)arg2;
- (BOOL)handleExecutionWithContext:(id)arg1 ledgerEntry:(id)arg2 error:(id *)arg3;
- (BOOL)preflightWithContext:(id)arg1 error:(id *)arg2;
- (BOOL)preflight;
- (id)activityDescription;
- (id)stepDescription;

@end

@interface IDEProvisioningRegisterDevicesUserAction : IDEProvisioningUserAction
{
    NSArray *_devices;
}

+ (id)registerDevicesUserActionWithDevices:(id)arg1 context:(id)arg2;
@property(readonly, nonatomic) NSArray *devices; // @synthesize devices=_devices;
- (void).cxx_destruct;
- (id)executionMessage;
- (id)userActionName;
- (id)userActionMessage;
- (id)userActionTitle;
- (id)initWithContext:(id)arg1 devices:(id)arg2;

@end

@interface IDETestBlueprintHostSettings : NSObject
{
    BOOL _hasBundleLoader;
    NSString *_hostBlueprintIdentifier;
}

@property(readonly) BOOL hasBundleLoader; // @synthesize hasBundleLoader=_hasBundleLoader;
@property(readonly) NSString *hostBlueprintIdentifier; // @synthesize hostBlueprintIdentifier=_hostBlueprintIdentifier;
- (void).cxx_destruct;
- (id)initWithHostBlueprintIdentifier:(id)arg1 hasBundleLoader:(BOOL)arg2;

@end

@interface IDEPlaygroundLoggerErrorEntry : NSObject <IDEPlaygroundLoggerLogEntry>
{
    NSString *_name;
    NSString *_summary;
}

@property(readonly, copy) NSString *summary; // @synthesize summary=_summary;
@property(readonly, copy) NSString *name; // @synthesize name=_name;
- (void).cxx_destruct;
- (id)initWithName:(id)arg1 summary:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IDEPlaygroundLoggerResult : IDETimestampedPlaygroundResult
{
    DVTTextDocumentLocation *_location;
    NSString *_sourceText;
    NSString *_fullLineSourceText;
    id <IDEPlaygroundLoggerLogEntry> _topLevelLogEntry;
    NSString *_threadID;
}

@property(readonly, copy) NSString *threadID; // @synthesize threadID=_threadID;
@property(readonly) id <IDEPlaygroundLoggerLogEntry> topLevelLogEntry; // @synthesize topLevelLogEntry=_topLevelLogEntry;
@property(readonly, copy) NSString *fullLineSourceText; // @synthesize fullLineSourceText=_fullLineSourceText;
@property(readonly, copy) NSString *sourceText; // @synthesize sourceText=_sourceText;
@property(readonly) DVTTextDocumentLocation *location; // @synthesize location=_location;
- (void).cxx_destruct;
- (id)description;
- (id)initWithResultDate:(id)arg1 location:(id)arg2 sourceCode:(id)arg3 topLevelLogEntry:(id)arg4 threadID:(id)arg5;

@end

@interface IDESwiftMigrationContext : IDEMigrationContext
{
    NSMapTable *_convertedFilePathForOriginalFilePathMapTable;
}

+ (Class)migrationTargetSublass;
- (void).cxx_destruct;
- (id)migrateFolderForMigrationTarget:(id)arg1 andScheme:(id)arg2;
- (id)migrationBuildFolderForScheme:(id)arg1;
- (id)convertedFilePathForOriginalFilePath:(id)arg1;
- (unsigned long long)numberOfConvertedFilePaths;
- (id)_convertedFilePathForOriginalFilePathMapTable;
- (void)_collectRemapFilesFromDir:(id)arg1 remapFiles:(id)arg2;
- (void)_convertRemapFiles:(id)arg1;
- (CDUnknownBlockType)setupBuild:(char *)arg1 forScheme:(id)arg2 minimizeInference:(BOOL)arg3 migrationBuildOptions:(id)arg4 withCompletionBlock:(CDUnknownBlockType)arg5;
- (void)selectDefaultTargets;

@end

@interface IDESourceControlTaskOperation : IDESourceControlOperation
{
    DVTTask *_task;
    DVTTask *_pipeTask;
    NSString *_launchPath;
    NSString *_currentDirectoryPath;
    NSArray *_arguments;
    NSMutableData *_data;
    NSMutableData *_errorData;
    DVTPerformanceMetric *_metric;
    BOOL _readyToParseData;
    CDUnknownBlockType _standardOutputFeedbackBlock;
    CDUnknownBlockType _standardErrorFeedbackBlock;
}

+ (void)setupFilePath:(id)arg1 asUnversionedWithDictionary:(id)arg2 blacklistedFiles:(id)arg3;
+ (id)_authenticationAgentExecutablePath;
+ (id)sourceControlTaskOperationLogAspect;
@property(copy) CDUnknownBlockType standardErrorFeedbackBlock; // @synthesize standardErrorFeedbackBlock=_standardErrorFeedbackBlock;
@property(copy) CDUnknownBlockType standardOutputFeedbackBlock; // @synthesize standardOutputFeedbackBlock=_standardOutputFeedbackBlock;
@property BOOL readyToParseData; // @synthesize readyToParseData=_readyToParseData;
@property(retain) NSMutableData *errorData; // @synthesize errorData=_errorData;
@property(retain) NSMutableData *data; // @synthesize data=_data;
@property(retain) NSArray *arguments; // @synthesize arguments=_arguments;
@property(copy) NSString *currentDirectoryPath; // @synthesize currentDirectoryPath=_currentDirectoryPath;
@property(copy) NSString *launchPath; // @synthesize launchPath=_launchPath;
@property(retain) DVTTask *pipeTask; // @synthesize pipeTask=_pipeTask;
@property(readonly) DVTTask *task; // @synthesize task=_task;
- (void).cxx_destruct;
- (void)parseDataOrGenerateErrorForTask:(id)arg1 operation:(id)arg2;
- (void)setWaitToParseData:(BOOL)arg1;
- (void)_real_main;
- (void)main;
- (id)readDataFromFileHandle:(id)arg1 intoBuffer:(id)arg2 runloopMode:(id)arg3 outstandingOperationCounter:(long long *)arg4 dataParsingBlock:(CDUnknownBlockType)arg5;
- (id)pipeToOperation;
- (id)rawErrorOutput;
- (id)rawStandardOutput;
- (id)rawInput;
- (id)errorFromErrorMessage:(id)arg1;
- (void)parseData;

@end

@interface IDEDistributionAppleProvidedContentSwiftSupport : NSObject <IDEDistributionAppleProvidedContent>
{
}

+ (BOOL)isSwiftSupport:(id)arg1;
@property(readonly) NSString *packagePath;
@property(readonly) NSString *archivePath;
@property(readonly) NSString *archiveOperationDestinationBuildSettingName;
- (BOOL)shouldCopySidecarContentFromArchive:(id)arg1;
- (BOOL)shouldRemoveForAppStoreDistributionDistributionItem:(id)arg1 shouldRemoveParentDirectory:(char *)arg2;
- (id)isAppleProvidedContent:(id)arg1 archive:(id)arg2 error:(id *)arg3;
- (BOOL)shouldCodeSignDistributionItem:(id)arg1;
@property(readonly) NSString *mainAppStubCopySubpath;

@end

@interface IDEIssueTypeGroup : NSObject
{
    NSMutableArray *_issues;
    NSMutableArray *_subgroups;
    unsigned long long _testFailureCount;
    unsigned long long _errorCount;
    unsigned long long _warningCount;
    unsigned long long _noticeCount;
    unsigned long long _analyzerResultCount;
    unsigned long long _runtimeCount;
    NSMutableDictionary *_displayNameForRuntimeIssueTypeIdentifierTable;
    IDEIssueProvider *_issueProvider;
    id _issueTypeIdentifier;
    unsigned long long _issueType;
}

@property(readonly) unsigned long long issueType; // @synthesize issueType=_issueType;
@property(readonly) id issueTypeIdentifier; // @synthesize issueTypeIdentifier=_issueTypeIdentifier;
@property(readonly) IDEIssueProvider *issueProvider; // @synthesize issueProvider=_issueProvider;
@property(readonly) NSMutableDictionary *displayNameForRuntimeIssueTypeIdentifierTable; // @synthesize displayNameForRuntimeIssueTypeIdentifierTable=_displayNameForRuntimeIssueTypeIdentifierTable;
@property(copy, nonatomic) NSMutableArray *subgroups; // @synthesize subgroups=_subgroups;
@property(readonly) NSArray *issues; // @synthesize issues=_issues;
- (void).cxx_destruct;
- (void)_removeIssues:(id)arg1;
- (void)_addIssues:(id)arg1;
- (void)_updateIssueType;
- (id)_initWithIssueProvider:(id)arg1 issueTypeIdentifier:(id)arg2;
- (id)init;

@end

@interface IDESourceKitCallableSymbol : IDESourceKitSymbol
{
}

- (BOOL)isKindOfClass:(Class)arg1;
- (id)callsCancelWhen:(CDUnknownBlockType)arg1;
- (id)calls;
- (id)typeOfArgument:(unsigned long long)arg1;
- (unsigned long long)numArguments;
- (id)returnType;
- (id)property;
- (id)overridingSymbols;
- (id)overriddenSymbols;
- (void)setContainerSymbol:(id)arg1;

@end

@interface IDETemplateOption : NSObject
{
    NSDictionary *_requiredOptions;
    NSString *_emptyReplacement;
    NSString *_fallbackHeader;
    BOOL _required;
    BOOL _notPersisted;
    NSMutableDictionary *_subclassCache;
    BOOL _enabled;
    BOOL _disabledByConstraints;
    NSString *_displayValue;
    id <IDETemplateOptionParent> _parent;
    NSString *_identifier;
    NSString *_name;
    NSString *_optionDescription;
    NSString *_type;
    NSString *_placeholder;
    NSString *_defaultValue;
    NSString *_value;
    NSString *_prefix;
    NSString *_suffix;
    NSArray *_values;
    NSDictionary *_suffixes;
    NSDictionary *_mainTemplateFiles;
    NSDictionary *_allowedTypes;
    NSDictionary *_variables;
    long long _sortOrder;
}

+ (id)keyPathsForValuesAffectingBooleanValue;
+ (id)keyPathsForValuesAffectingDisplayValues;
+ (id)keyPathsForValuesAffectingHasValidValue;
+ (id)keyPathsForValuesAffectingDisplayValue;
+ (id)allowedTemplateOptionTypes;
@property(copy) NSDictionary *requiredOptions; // @synthesize requiredOptions=_requiredOptions;
@property(nonatomic) BOOL disabledByConstraints; // @synthesize disabledByConstraints=_disabledByConstraints;
@property(nonatomic) BOOL enabled; // @synthesize enabled=_enabled;
@property long long sortOrder; // @synthesize sortOrder=_sortOrder;
@property(readonly) NSDictionary *variables; // @synthesize variables=_variables;
@property(readonly) NSDictionary *allowedTypes; // @synthesize allowedTypes=_allowedTypes;
@property(readonly) NSDictionary *mainTemplateFiles; // @synthesize mainTemplateFiles=_mainTemplateFiles;
@property(readonly) NSDictionary *suffixes; // @synthesize suffixes=_suffixes;
@property(copy) NSArray *values; // @synthesize values=_values;
@property(copy, nonatomic) NSString *suffix; // @synthesize suffix=_suffix;
@property(copy, nonatomic) NSString *prefix; // @synthesize prefix=_prefix;
@property(copy, nonatomic) NSString *value; // @synthesize value=_value;
@property(copy) NSString *defaultValue; // @synthesize defaultValue=_defaultValue;
@property(copy) NSString *placeholder; // @synthesize placeholder=_placeholder;
@property(copy) NSString *type; // @synthesize type=_type;
@property(copy) NSString *optionDescription; // @synthesize optionDescription=_optionDescription;
@property(copy) NSString *name; // @synthesize name=_name;
@property(copy) NSString *identifier; // @synthesize identifier=_identifier;
@property id <IDETemplateOptionParent> parent; // @synthesize parent=_parent;
- (void).cxx_destruct;
- (void)addImportMacroToEngine:(id)arg1;
- (id)_importStringFromWorkspaceVisibilityForFilePath:(id)arg1;
- (id)identifierValue;
- (BOOL)shouldPersistValue;
- (void)addMacroToEngine:(id)arg1;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
- (id)uniqueIdentifier;
@property BOOL booleanValue;
@property(readonly) NSArray *displayValues;
@property(readonly) BOOL hasExplicitValues;
@property(readonly) BOOL hasValidValue;
- (void)updateValueWithBuildables:(id)arg1;
- (void)updateValueWithOptions:(id)arg1;
- (void)updateEnabledWithOptions:(id)arg1;
- (id)staticValueWithOptions:(id)arg1;
- (void)setConstrainedDisplayValue:(id)arg1;
@property(copy, nonatomic) NSString *displayValue; // @synthesize displayValue=_displayValue;
- (BOOL)validateValue:(id *)arg1 forKey:(id)arg2 error:(id *)arg3;
- (BOOL)isUsableWithOptions:(id)arg1;
- (id)init;
- (id)initWithOptionInfo:(id)arg1 filePath:(id)arg2;

@end

@interface IDEBuildOperationConfiguration : NSObject
{
    BOOL _parallelizeBuildables;
    BOOL _dontActuallyRunCommands;
    BOOL _buildImplicitDependencies;
    BOOL _restorePersistedBuildResults;
    long long _buildCommand;
    IDEBuildParameters *_buildParameters;
    IDEExecutionEnvironment *_executionEnvironment;
    DVTFilePath *_singleFileToBuild;
    IDEActivityLogSection *_buildLog;
    NSArray *_buildables;
    IDEScheme *_scheme;
}

@property(retain, nonatomic) IDEScheme *scheme; // @synthesize scheme=_scheme;
@property(retain, nonatomic) NSArray *buildables; // @synthesize buildables=_buildables;
@property(nonatomic) BOOL restorePersistedBuildResults; // @synthesize restorePersistedBuildResults=_restorePersistedBuildResults;
@property(nonatomic) BOOL buildImplicitDependencies; // @synthesize buildImplicitDependencies=_buildImplicitDependencies;
@property(nonatomic) BOOL dontActuallyRunCommands; // @synthesize dontActuallyRunCommands=_dontActuallyRunCommands;
@property(nonatomic) BOOL parallelizeBuildables; // @synthesize parallelizeBuildables=_parallelizeBuildables;
@property(retain, nonatomic) IDEActivityLogSection *buildLog; // @synthesize buildLog=_buildLog;
@property(retain, nonatomic) DVTFilePath *singleFileToBuild; // @synthesize singleFileToBuild=_singleFileToBuild;
@property(retain, nonatomic) IDEExecutionEnvironment *executionEnvironment; // @synthesize executionEnvironment=_executionEnvironment;
@property(retain, nonatomic) IDEBuildParameters *buildParameters; // @synthesize buildParameters=_buildParameters;
@property(nonatomic) long long buildCommand; // @synthesize buildCommand=_buildCommand;
- (void).cxx_destruct;
- (id)initWithBuildCommand:(long long)arg1 buildParameters:(id)arg2 executionEnvironment:(id)arg3 singleFileToBuild:(id)arg4 buildLog:(id)arg5 parallelizeBuildables:(BOOL)arg6 dontActuallyRunCommands:(BOOL)arg7 buildImplicitDependencies:(BOOL)arg8 restorePersistedBuildResults:(BOOL)arg9;

@end

@interface IDEBuildOperation : DVTOperation <IDEExecutingOperationTrackable, IDEBuilderCallbacks>
{
    IDEBuildOperationDescription *_buildOperationDescription;
    long long _purpose;
    long long _buildCommand;
    NSArray *_buildables;
    IDEBuildParameters *_buildParameters;
    NSMapTable *_buildParametersForBuildable;
    BOOL _parallelizeBuildables;
    BOOL _buildImplicitDependencies;
    BOOL _restorePersistedBuildResults;
    BOOL _dontActuallyRunCommands;
    DVTFilePath *_moduleBuildSessionFilePath;
    DVTFilePath *_singleFileToBuild;
    long long _state;
    long long _result;
    IDEActivityLogSection *_buildLog;
    float _percentComplete;
    IDEBuildOperationStatus *_buildStatus;
    BOOL _isFinished;
    DVTDispatchLock *_buildStatusLock;
    NSOperationQueue *_builderQueue;
    IDEBuildOperationQueueSet *_buildTaskQueueSet;
    NSMapTable *_buildersToSerializationKeys;
    NSMapTable *_buildablesToBuilders;
    NSMapTable *_buildableOperationManagers;
    unsigned long long _buildersBuilt;
    id <DVTCancellationBlockCompletion> _cancellationToken;
    NSMutableSet *_generatedFileInfo;
    NSMutableDictionary *_copiedFilePathsMap;
    NSMutableArray *_buildSetupErrorStrings;
    NSMutableArray *_buildSetupWarningStrings;
    NSMutableArray *_buildSetupNoticeStrings;
    IDEExecutionOperationTracker *_mainExecutionTracker;
    IDEBuildStatisticsSection *_topLevelStatisticsSection;
    unsigned int _assertionID;
    IDEBuildOperationConfiguration *_config;
    IDEExecutionEnvironment *_executionEnvironment;
    IDEEntityIdentifier *_schemeIdentifier;
    IDESchemeActionResult *_schemeActionResult;
    NSDate *_startTime;
    NSDate *_stopTime;
    IDEBuildStatisticsSection *_buildStatisticsSection;
    IDEProvisioningBuildOperationInfo *_provisioningInfo;
    DVTDynamicLogController *_builderTimingDataLogController;
}

+ (CDUnknownBlockType)buildStatisticsEmissionSummaryBlock;
+ (long long)defaultQualityOfServiceClass;
+ (void)setDefaultBuildStatisticsSectionParent:(id)arg1;
+ (void)initialize;
@property(readonly) IDEBuildOperationQueueSet *buildTaskQueueSet; // @synthesize buildTaskQueueSet=_buildTaskQueueSet;
@property unsigned long long buildersBuilt; // @synthesize buildersBuilt=_buildersBuilt;
@property(retain) DVTDynamicLogController *builderTimingDataLogController; // @synthesize builderTimingDataLogController=_builderTimingDataLogController;
@property unsigned int assertionID; // @synthesize assertionID=_assertionID;
@property(readonly) NSMapTable *buildablesToBuilders; // @synthesize buildablesToBuilders=_buildablesToBuilders;
@property(readonly) NSOperationQueue *builderQueue; // @synthesize builderQueue=_builderQueue;
@property(readonly) BOOL buildImplicitDependencies; // @synthesize buildImplicitDependencies=_buildImplicitDependencies;
@property(readonly) IDEProvisioningBuildOperationInfo *provisioningInfo; // @synthesize provisioningInfo=_provisioningInfo;
@property(retain) IDEBuildStatisticsSection *buildStatisticsSection; // @synthesize buildStatisticsSection=_buildStatisticsSection;
@property(copy) NSDate *stopTime; // @synthesize stopTime=_stopTime;
@property(copy) NSDate *startTime; // @synthesize startTime=_startTime;
@property float percentComplete; // @synthesize percentComplete=_percentComplete;
@property(readonly) long long result; // @synthesize result=_result;
@property(readonly) long long state; // @synthesize state=_state;
@property(retain, nonatomic) IDESchemeActionResult *schemeActionResult; // @synthesize schemeActionResult=_schemeActionResult;
@property(readonly, copy, nonatomic) IDEEntityIdentifier *schemeIdentifier; // @synthesize schemeIdentifier=_schemeIdentifier;
@property(readonly) IDEExecutionEnvironment *executionEnvironment; // @synthesize executionEnvironment=_executionEnvironment;
@property(readonly) IDEActivityLogSection *buildLog; // @synthesize buildLog=_buildLog;
@property(readonly) BOOL restorePersistedBuildResults; // @synthesize restorePersistedBuildResults=_restorePersistedBuildResults;
@property(readonly) BOOL dontActuallyRunCommands; // @synthesize dontActuallyRunCommands=_dontActuallyRunCommands;
@property(readonly) BOOL parallelizeBuildables; // @synthesize parallelizeBuildables=_parallelizeBuildables;
@property(readonly) IDEBuildParameters *buildParameters; // @synthesize buildParameters=_buildParameters;
@property(readonly) NSArray *buildables; // @synthesize buildables=_buildables;
@property(readonly) long long buildCommand; // @synthesize buildCommand=_buildCommand;
@property(readonly) IDEBuildOperationDescription *buildOperationDescription; // @synthesize buildOperationDescription=_buildOperationDescription;
@property(readonly) IDEBuildOperationConfiguration *config; // @synthesize config=_config;
- (void).cxx_destruct;
@property(readonly, copy) NSString *description;
- (void)registerTracker:(id)arg1;
@property(retain) IDEBuildStatisticsSection *topLevelStatisticsSection;
- (void)_postDistributedProgressNotification;
- (void)stopWithResultCode:(long long)arg1;
- (void)lastBuilderDidFinish;
- (void)_cancelAllBuilders;
- (void)cancel;
- (void)start;
- (BOOL)shouldCreateModuleBuildSessionFile;
- (void)builder:(id)arg1 didUpdateBuildStatusWithStateDescription:(id)arg2 fileProgressString:(id)arg3 builderProgress:(double)arg4;
- (void)builderDidFinishExecuting:(id)arg1;
- (void)builderDidStartExecuting:(id)arg1;
- (void)builder:(id)arg1 resultDidChange:(long long)arg2;
- (void)builder:(id)arg1 activityLogSectionDidChange:(id)arg2;
- (void)_addOperationsForSingleFileBuild;
- (id)_buildableForSingleFileToBuildStartingWithBuildable:(id)arg1 recursionDetectionSet:(id)arg2;
- (void)_addOperationsForAllBuildables;
- (void)addOperationsToQueue:(id)arg1;
- (id)_addOperationForBuildableIfNeeded:(id)arg1;
- (id)_addOperationForBuildableIfNeeded:(id)arg1 recursionDetectionArray:(id)arg2;
- (void)_configureBuilder:(id)arg1;
- (id)finalBuildParametersForBuildable:(id)arg1;
- (void)setupCallbackBlocksOnNewBuilder:(id)arg1;
@property(retain) NSString *localizedStateDescription;
@property(retain) IDEBuildOperationStatus *buildStatus;
- (void)_takeMemorySnapshotsWithLog:(id)arg1;
- (BOOL)isFinished;
- (BOOL)isExecuting;
- (BOOL)isConcurrent;
- (void)changeMaximumOperationConcurrencyUsingThrottleFactor:(double)arg1;
- (id)copiedFilePathsMap;
- (void)addCopiedFilePathsFromDictionary:(id)arg1;
- (void)addBuildSetupNoticeString:(id)arg1;
- (void)addBuildSetupWarningString:(id)arg1;
- (void)addBuildSetupErrorString:(id)arg1;
- (void)addGeneratedFileInfo:(id)arg1;
@property(readonly) double duration;
- (id)_buildParametersForBuildable:(id)arg1;
- (void)setBuildParameters:(id)arg1 forBuildable:(id)arg2;
- (id)harvestedInfoForBuildable:(id)arg1;
- (BOOL)hasHarvestedInfo;
- (void)dealloc;
- (id)initWithConfiguration:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IDEBuildOperationGroup : DVTOperationGroup
{
    IDEBuildOperation *_buildOperation;
}

+ (id)operationGroupWithSuboperations:(id)arg1;
+ (id)operationGroupWithBuildOperation:(id)arg1 otherOperations:(id)arg2;
@property(readonly) IDEBuildOperation *buildOperation; // @synthesize buildOperation=_buildOperation;
- (void).cxx_destruct;

@end

@interface IDEBuildOperationStatus : NSObject
{
    NSString *_stateDescription;
    NSString *_fileProgressString;
}

@property(readonly, copy) NSString *fileProgressString; // @synthesize fileProgressString=_fileProgressString;
@property(readonly, copy) NSString *stateDescription; // @synthesize stateDescription=_stateDescription;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithStateDescription:(id)arg1 fileProgressString:(id)arg2;

@end

@interface IDEBuildLogCustomData : NSObject <IDEActivityLogSectionCustomData>
{
    NSString *_threadSanitizerMessage;
}

@property(copy) NSString *threadSanitizerMessage; // @synthesize threadSanitizerMessage=_threadSanitizerMessage;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface IDEDistributionMethodAppStore : IDEDistributionMethod
{
}

- (id)shortTitle;
- (id)subtitle;
- (id)title;
- (id)distributionOptionIdentifiers;
@property(readonly) DVTPlatform *supportedPlatform;
- (BOOL)isAppStoreBound;
- (id)commandLineName;
- (id)commandLineNameForTask:(int)arg1;
- (id)orderedDistributionStepClassNamesForTask:(int)arg1;
- (id)orderedDistributionStepClassNames;
- (id)appStoreName;
- (id)exportStepName;
- (id)taskNoun;
- (id)taskVerb;

@end

@interface IDEIndexGenericQueryProvider : NSObject <IDEIndexQueryProvider>
{
    IDEIndexDatabase *_db;
    NSDictionary *_settings;
    DVTFilePath *_mainFilePath;
    NSString *_target;
    NSDictionary *_coveredFiles;
    double _lastAccess;
}

+ (BOOL)supportsSymbolColoring;
+ (id)locationForURL:(id)arg1 locator:(id)arg2;
@property(retain, nonatomic) NSDictionary *coveredFiles; // @synthesize coveredFiles=_coveredFiles;
@property(copy, nonatomic) NSString *target; // @synthesize target=_target;
@property(copy, nonatomic) DVTFilePath *mainFilePath; // @synthesize mainFilePath=_mainFilePath;
@property double lastAccess; // @synthesize lastAccess=_lastAccess;
@property(readonly, nonatomic) NSDictionary *settings; // @synthesize settings=_settings;
@property(readonly, nonatomic) IDEIndexDatabase *database; // @synthesize database=_db;
- (void).cxx_destruct;
- (id)definitionsForSymbolWithResolutionOffset:(long long)arg1;
- (id)allAutoImportCompletionItemsMatchingKind:(id)arg1 symbolLanguage:(id)arg2 forIndex:(id)arg3;
- (id)allAutoImportCompletionItemsMatchingKind:(id)arg1 forIndex:(id)arg2;
- (id)completionStringForSymbol:(id)arg1;
- (BOOL)isProjectSymbol:(id)arg1;
- (id)calleesForSymbolOccurrence:(id)arg1;
- (id)locationForSymbolOccurrence:(id)arg1;
- (id)containingSymbolForOccurrence:(id)arg1;
- (id)correspondingSymbolForOccurrence:(id)arg1;
- (id)relatedClassForCategory:(id)arg1;
- (id)propertiesForCategory:(id)arg1;
- (id)instanceVariablesForCategory:(id)arg1;
- (id)instanceMethodsForCategory:(id)arg1;
- (id)classMethodsForCategory:(id)arg1;
- (id)allImplementingClassesForProtocol:(id)arg1;
- (id)implementingClassesForProtocol:(id)arg1;
- (id)subProtocolsForProtocol:(id)arg1;
- (id)allSuperProtocolsForProtocol:(id)arg1;
- (id)superProtocolsForProtocol:(id)arg1;
- (id)propertiesForProtocol:(id)arg1;
- (id)instanceMethodsForProtocol:(id)arg1;
- (id)classMethodsForProtocol:(id)arg1;
- (id)allInterfacesForClass:(id)arg1;
- (id)interfacesForClass:(id)arg1;
- (id)allProtocolsForClass:(id)arg1;
- (id)protocolsForClass:(id)arg1;
- (id)allOccurrencesOfMembers:(id)arg1 forClass:(id)arg2;
- (id)allSubClassesForClass:(id)arg1;
- (id)subClassesForClass:(id)arg1;
- (id)allSuperClassesForClass:(id)arg1;
- (id)superClassesForClass:(id)arg1;
- (id)categoriesForClass:(id)arg1;
- (id)gkInspectablePropertiesForClass:(id)arg1;
- (id)ibOutletCollectionPropertiesForClass:(id)arg1;
- (id)ibOutletCollectionVariablesForClass:(id)arg1;
- (id)ibOutletCollectionsForClass:(id)arg1;
- (id)ibOutletPropertiesForClass:(id)arg1;
- (id)ibOutletVariablesForClass:(id)arg1;
- (id)ibOutletsForClass:(id)arg1;
- (id)ibActionMethodsForClass:(id)arg1;
- (id)propertiesForClass:(id)arg1;
- (id)instanceVariablesForClass:(id)arg1;
- (id)classVariablesForClass:(id)arg1;
- (id)instanceMethodsForClass:(id)arg1;
- (id)classMethodsForClass:(id)arg1;
- (id)childrenForContainer:(id)arg1;
- (id)getterForProperty:(id)arg1;
- (id)setterForProperty:(id)arg1;
- (id)callsForCallable:(id)arg1 cancelWhen:(CDUnknownBlockType)arg2;
- (id)typeOfArgument:(unsigned long long)arg1 forCallable:(id)arg2;
- (unsigned long long)numArgumentsForCallable:(id)arg1;
- (id)returnTypeForCallable:(id)arg1;
- (id)propertyForCallable:(id)arg1;
- (id)overridingSymbolsForCallable:(id)arg1;
- (id)overriddenSymbolsForCallable:(id)arg1;
- (id)referencesForSymbol:(id)arg1;
- (id)referencingFilesForSymbol:(id)arg1;
- (id)containerSymbolForSymbol:(id)arg1;
- (id)containerSymbolsForSymbol:(id)arg1;
- (id)definitionsForSymbol:(id)arg1;
- (id)declarationsForSymbol:(id)arg1;
- (id)occurrencesForSymbol:(id)arg1;
- (id)modelOccurrenceForSymbol:(id)arg1;
- (id)filesWithSymbolOccurrencesMatchingName:(id)arg1 kind:(id)arg2 forIndex:(id)arg3;
- (id)classesWithReferencesToSymbols:(id)arg1 forIndex:(id)arg2;
- (id)allClassesWithMembers:(id)arg1 forIndex:(id)arg2;
- (id)classesWithMembers:(id)arg1 forIndex:(id)arg2;
- (id)allMethodsMatchingMethod:(id)arg1 forReceiver:(id)arg2 forIndex:(id)arg3;
- (id)membersMatchingName:(id)arg1 kinds:(id)arg2 forInterfaces:(id)arg3 forIndex:(id)arg4;
- (id)membersMatchingKinds:(id)arg1 forInterfaces:(id)arg2 forIndex:(id)arg3;
- (id)symbolsForResolutions:(id)arg1 forIndex:(id)arg2;
- (unsigned long long)countOfSymbolsMatchingKind:(id)arg1 workspaceOnly:(BOOL)arg2 forIndex:(id)arg3;
- (id)allSymbolsMatchingKind:(id)arg1 workspaceOnly:(BOOL)arg2 cancelWhen:(CDUnknownBlockType)arg3 forIndex:(id)arg4;
- (id)testMethodsForClasses:(id)arg1 forIndex:(id)arg2;
- (id)allSubClassesForClasses:(id)arg1 forIndex:(id)arg2;
- (id)allSymbolsMatchingNames:(id)arg1 kind:(id)arg2 forIndex:(id)arg3;
- (id)allSymbolsMatchingName:(id)arg1 kind:(id)arg2 forIndex:(id)arg3;
- (id)allProtocolsMatchingName:(id)arg1 forIndex:(id)arg2;
- (id)allClassesMatchingName:(id)arg1 forIndex:(id)arg2;
- (id)symbolsContaining:(id)arg1 anchorStart:(BOOL)arg2 anchorEnd:(BOOL)arg3 subsequence:(BOOL)arg4 ignoreCase:(BOOL)arg5 cancelWhen:(CDUnknownBlockType)arg6 forIndex:(id)arg7;
- (id)topLevelProtocolsWorkspaceOnly:(BOOL)arg1 cancelWhen:(CDUnknownBlockType)arg2 forIndex:(id)arg3;
- (id)topLevelClassesWorkspaceOnly:(BOOL)arg1 cancelWhen:(CDUnknownBlockType)arg2 forIndex:(id)arg3;
- (id)filesContaining:(id)arg1 anchorStart:(BOOL)arg2 anchorEnd:(BOOL)arg3 subsequence:(BOOL)arg4 ignoreCase:(BOOL)arg5 cancelWhen:(CDUnknownBlockType)arg6 forIndex:(id)arg7;
- (id)filesIncludedByFile:(id)arg1 forIndex:(id)arg2;
- (id)filesIncludingFile:(id)arg1 forIndex:(id)arg2;
- (id)impliedHeadersForModuleImportLocation:(id)arg1 withCurrentFileContentDictionary:(id)arg2 forIndex:(id)arg3;
- (id)importedFileAtDocumentLocation:(id)arg1 withCurrentFileContentDictionary:(id)arg2 forIndex:(id)arg3;
- (id)importedFilesAtDocument:(id)arg1 withCurrentFileContentDictionary:(id)arg2 forIndex:(id)arg3;
- (id)collectionElementTypeSymbolForSymbol:(id)arg1 withCurrentFileContentDictionary:(id)arg2 forIndex:(id)arg3;
- (id)typeSymbolForSymbol:(id)arg1 withCurrentFileContentDictionary:(id)arg2 forIndex:(id)arg3;
- (id)messageReceiverInContext:(id)arg1 withCurrentFileContentDictionary:(id)arg2 forIndex:(id)arg3;
- (id)referencesToSymbolMatchingName:(id)arg1 inContext:(id)arg2 withCurrentFileContentDictionary:(id)arg3 forIndex:(id)arg4;
- (id)referencesToSymbol:(id)arg1 inContext:(id)arg2 withCurrentFileContentDictionary:(id)arg3 forIndex:(id)arg4;
- (id)symbolsUsedInContext:(id)arg1 withCurrentFileContentDictionary:(id)arg2 forIndex:(id)arg3;
- (id)symbolsOccurrencesInContext:(id)arg1 withCurrentFileContentDictionary:(id)arg2 forIndex:(id)arg3;
- (id)codeDiagnosticsAtLocation:(id)arg1 withCurrentFileContentDictionary:(id)arg2 forIndex:(id)arg3;
- (id)codeCompletionsAtLocation:(id)arg1 withCurrentFileContentDictionary:(id)arg2 completionContext:(id *)arg3 forIndex:(id)arg4;
- (id)parsedCodeCommentAtLocation:(id)arg1 withCurrentFileContentDictionary:(id)arg2 forIndex:(id)arg3 symbolKindOut:(id *)arg4;
- (id)parsedCodeCommentAtLocation:(id)arg1 withCurrentFileContentDictionary:(id)arg2 forIndex:(id)arg3 cursorKindOut:(long long *)arg4;
- (id)parsedCodeCommentAtLocation:(id)arg1 withCurrentFileContentDictionary:(id)arg2 forIndex:(id)arg3;
- (id)symbolsMatchingName:(id)arg1 inContext:(id)arg2 withCurrentFileContentDictionary:(id)arg3 forIndex:(id)arg4;
- (id)symbolsMatchingName:(id)arg1 inContext:(id)arg2 forIndex:(id)arg3;
- (id)allParentsOfSymbols:(id)arg1 cancelWhen:(CDUnknownBlockType)arg2 forIndex:(id)arg3;
- (id)topLevelSymbolsInFile:(id)arg1 forIndex:(id)arg2;
@property(readonly, nonatomic) BOOL hasAST; // @dynamic hasAST;
@property(readonly, nonatomic) NSString *pchFile; // @dynamic pchFile;
@property(readonly, nonatomic) NSString *mainFile;
- (void)purgeCaches;
- (id)initWithSettings:(id)arg1 database:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IDEBuildFolder : NSObject
{
    NSString *_path;
    IDEBuilder *_currentBuilder;
}

+ (id)sharedBuildFolderWithPath:(id)arg1 error:(id *)arg2;
@property(retain) IDEBuilder *currentBuilder; // @synthesize currentBuilder=_currentBuilder;
@property(readonly) NSString *path; // @synthesize path=_path;
- (void).cxx_destruct;
- (id)description;
- (void)unregisterCurrentBuilder:(id)arg1;
- (void)registerCurrentBuilder:(id)arg1;
- (void)dealloc;
- (id)init;
- (id)initWithPath:(id)arg1 error:(id *)arg2;

@end

@interface IDETestsActivityLogBuilder : NSObject <IDETestRunSessionEvents>
{
    NSMutableArray *_subSectionRecorders;
    BOOL _aBundleDidNotFinishSuccessfully;
    BOOL _testsFinishedSuccessfully;
    IDEActivityLogSection *_activityLogSection;
    id <IDETestsActivityLogBuilderDelegate> _delegate;
}

@property __weak id <IDETestsActivityLogBuilderDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain) IDEActivityLogSection *activityLogSection; // @synthesize activityLogSection=_activityLogSection;
@property BOOL testsFinishedSuccessfully; // @synthesize testsFinishedSuccessfully=_testsFinishedSuccessfully;
- (void).cxx_destruct;
- (void)didFinishTest:(id)arg1 withTestResult:(id)arg2 rawOutput:(id)arg3;
- (void)didFailTest:(id)arg1 withTestResultMessage:(id)arg2 rawOutput:(id)arg3;
- (void)test:(id)arg1 didFinishActivity:(id)arg2;
- (void)test:(id)arg1 willStartActivity:(id)arg2;
- (void)test:(id)arg1 didMeasurePerformanceMetric:(id)arg2 rawOutput:(id)arg3;
- (void)testDidOutput:(id)arg1;
- (void)didStartTest:(id)arg1 withRawOutput:(id)arg2;
- (void)testSuiteDidFinish:(unsigned long long)arg1 withFailures:(unsigned long long)arg2 unexpected:(unsigned long long)arg3 testDuration:(double)arg4 totalDuration:(double)arg5 rawOutput:(id)arg6;
- (void)testSuite:(id)arg1 willFinishAt:(id)arg2 rawOutput:(id)arg3;
- (void)testSuite:(id)arg1 didStartAt:(id)arg2 rawOutput:(id)arg3;
- (void)testOperationGroupDidFinish;
- (void)testRunner:(id)arg1 willFinishPrematurelyWithError:(id)arg2;
- (void)testOperationWillFinishWithSuccess:(BOOL)arg1 withError:(id)arg2;
- (void)_finishSubSectionRecorders:(id)arg1 error:(id)arg2;
- (void)testRunner:(id)arg1 didLaunchTestSessionForScheme:(id)arg2 withDisplayName:(id)arg3 diagnosticLogPath:(id)arg4;
- (void)_appendAndPropagateUpText:(id)arg1 startingWithRecorder:(id)arg2;
- (id)addAbnormalFinishMessageToSection:(id)arg1 reason:(id)arg2 error:(id)arg3;
- (void)addDiagnosticLogInfoMessageToRecorder:(id)arg1 logPath:(id)arg2;
- (id)addTestRunLogSectionWithTestRunner:(id)arg1 displayName:(id)arg2 schemeName:(id)arg3 diagnosticLogPath:(id)arg4;
- (void)_popRecorderWithAbnormalFinishMessageForReason:(id)arg1 error:(id)arg2;
- (void)_popRecorder;
- (void)_pushRecorder:(id)arg1;
- (id)_currentSubSectionRecorder;
- (id)initWithActivityLogSection:(id)arg1 delegate:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IDEBatchFindAbstractSymbolicQuery : IDEBatchFindAbstractQuery
{
}

+ (id)queryTermPlaceholderText;
+ (BOOL)supportsCaseMatching;
+ (BOOL)supportsAnchorning;
- (void)execute;
- (BOOL)requiresEditorDocumentsToSaveBeforeSearching;
- (id)occurenceCollectionsForSymbol:(id)arg1;
- (id)makeRootResult;

@end

@interface IDEBatchFindSymbolicReferenceQuery : IDEBatchFindAbstractSymbolicQuery
{
}

+ (id)displayName;
- (id)occurenceCollectionsForSymbol:(id)arg1;

@end

@interface IDEBatchFindSymbolicDefinitionQuery : IDEBatchFindAbstractSymbolicQuery
{
}

+ (id)displayName;
- (id)occurenceCollectionsForSymbol:(id)arg1;

@end

@interface IDEDistributionStep : NSObject
{
    IDEDistributionContext *_context;
}

+ (id)propertyListForContext:(id)arg1;
+ (id)availableOptionsForPropertyList;
@property(readonly) IDEDistributionContext *context; // @synthesize context=_context;
- (void).cxx_destruct;
@property(readonly) NSSet *providedOutputContextPropertyNames;
@property(readonly) NSSet *requiredInputContextPropertyNames;
- (BOOL)loadFromPropertyList:(id)arg1 error:(id *)arg2;
- (id)initWithContext:(id)arg1;
- (id)init;

@end

@interface IDESymbolResolver : NSObject
{
}

+ (id)resolutionForParent:(id)arg1 childName:(id)arg2 kind:(id)arg3;
+ (id)resolutionForName:(id)arg1 kind:(id)arg2;
+ (void)initialize;

@end

@interface _IDESourceKitWeakWorkspaceDelegate : NSObject
{
    id <IDESourceKitWorkspaceDelegate> weakDelegate;
}

- (void).cxx_destruct;
- (id)initWithDelegate:(id)arg1;

@end

@interface _IDESourceKitWeakRefactoringActionDelegate : NSObject
{
    id <IDESourceKitRefactoringActionDelegate> weakDelegate;
}

- (void).cxx_destruct;
- (id)initWithDelegate:(id)arg1;

@end

@interface _IDESourceKitWeakConnectionDelegate : NSObject
{
    id <IDESourceKitConnectionDelegate> weakDelegate;
}

- (void).cxx_destruct;
- (id)initWithDelegate:(id)arg1;

@end

@interface _IDESourceKitLogOutputHandler : NSObject <IDESourceKitConnectionDelegate>
{
    CDUnknownBlockType _handler;
}

- (void).cxx_destruct;
- (void)onToolchainCompilerCrashed;
- (void)onLogOutput:(id)arg1;
- (id)initWithLogOutputHandler:(CDUnknownBlockType)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IDESourceKitConnection : NSObject
{
    IDESourceKitLowLevelConnection *_conn;
    IDESourceKitUIDSet *_UID;
    NSObject<OS_dispatch_queue> *_notificationQueue;
    NSMutableArray *_workspaceDelegates;
    NSMutableArray *_refactoringDelegates;
    NSMutableArray *_connectionDelegates;
    NSMutableArray *_logOutputHandlers;
    unsigned long long _logLevel;
    unsigned long long _originalLogLevel;
    BOOL _enabledLogOutput;
    CDUnknownBlockType _extraNotificationReceiver;
    // Error parsing type: AQ, name: _connectionToken
    DVTObservingToken *_availableToolchainsObservingToken;
}

+ (void)initialize;
+ (id)sharedInstance;
- (void).cxx_destruct;
- (void)_debugCrashService;
- (unsigned long long)_sendEnableLogOutputRequest:(BOOL)arg1 logLevel:(unsigned long long)arg2;
@property unsigned long long logLevel;
- (void)enableServiceLogOutput:(BOOL)arg1;
- (void)removeServiceLogOutputHandler:(CDUnknownBlockType)arg1;
- (void)addServiceLogOutputHandler:(CDUnknownBlockType)arg1;
- (void)sendYAMLRequest:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)mangleSwiftSimpleClasses:(id)arg1 toolchains:(id)arg2 queue:(id)arg3 completionBlock:(CDUnknownBlockType)arg4;
- (void)demangleSwiftMangledNames:(id)arg1 toolchains:(id)arg2 queue:(id)arg3 completionBlock:(CDUnknownBlockType)arg4;
- (void)collectModuleGroups:(id)arg1 args:(id)arg2 toolchains:(id)arg3 queue:(id)arg4 completionBlock:(CDUnknownBlockType)arg5;
- (void)postNotificationName:(id)arg1;
- (void)postNotificationName:(id)arg1 userInfo:(id)arg2;
- (void)_pingForServiceRestoration;
- (void)_handleCallbackWithInfo:(id)arg1 reply:(id)arg2;
- (void)_handleNotification:(id)arg1;
- (void)removeConnectionDelegate:(id)arg1;
- (void)addConnectionDelegate:(id)arg1;
- (void)removeRefactoringDelegate:(id)arg1;
- (void)addRefactoringDelegate:(id)arg1;
- (void)removeWorkspaceDelegate:(id)arg1;
- (void)addWorkspaceDelegate:(id)arg1;
- (void)setExtraNotificationReceiver:(CDUnknownBlockType)arg1;
- (void)_observeToolchains;
- (struct _sourcekit_connection_s *)sourceKitConnectionObject;
- (id)internalConnection;
- (id)UIDSet;
- (void)_initOrRestoreState;
- (id)init;
- (id)makeSymbol:(id)arg1 symbolKind:(id)arg2 language:(id)arg3 resolution:(id)arg4;
- (id)makeDocumentLocation:(id)arg1 startLine:(long long)arg2 startCol:(long long)arg3 endLine:(long long)arg4 endCol:(long long)arg5 rangeLoc:(long long)arg6 rangeCount:(long long)arg7 timeStamp:(id)arg8 encoding:(long long)arg9;
- (id)makeIndexable:(id)arg1 fileURLs:(id)arg2 indexableIsUnitTest:(id)arg3;
- (id)makeToolchainInfo:(id)arg1 name:(id)arg2 filePath:(id)arg3 isDefault:(BOOL)arg4;
- (void)openIndex:(id)arg1 workspaceFile:(id)arg2 indexFolder:(id)arg3 datastoreFolder:(id)arg4 databaseFolder:(id)arg5 pchHeaderFolder:(id)arg6 buildConfig:(id)arg7 destinationTargetIdentifier:(id)arg8 useBolt:(BOOL)arg9 enableFullStoreVisibility:(id)arg10 queue:(id)arg11 completion:(CDUnknownBlockType)arg12;
- (id)openIndex:(id)arg1 workspaceFile:(id)arg2 indexFolder:(id)arg3 datastoreFolder:(id)arg4 databaseFolder:(id)arg5 pchHeaderFolder:(id)arg6 buildConfig:(id)arg7 destinationTargetIdentifier:(id)arg8 useBolt:(BOOL)arg9 enableFullStoreVisibility:(id)arg10 error:(id *)arg11;
- (void)unregisterToolchains:(id)arg1 queue:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (BOOL)unregisterToolchains:(id)arg1 error:(id *)arg2;
- (void)registerToolchains:(id)arg1 queue:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (BOOL)registerToolchains:(id)arg1 error:(id *)arg2;
- (void)dumpIndexData:(id)arg1 queue:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (id)dumpIndexData:(id)arg1 error:(id *)arg2;
- (void)setLoggingSettings:(BOOL)arg1 logLevel:(long long)arg2 queue:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (id)setLoggingSettings:(BOOL)arg1 logLevel:(long long)arg2 error:(id *)arg3;
- (void)testingInvalidateFilePath:(id)arg1 queue:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (BOOL)testingInvalidateFilePath:(id)arg1 error:(id *)arg2;
- (void)testMe:(id)arg1 failedText:(id)arg2 crash:(id)arg3 notRecommended:(id)arg4 queue:(id)arg5 completion:(CDUnknownBlockType)arg6;
- (id)testMe:(id)arg1 failedText:(id)arg2 crash:(id)arg3 notRecommended:(id)arg4 error:(id *)arg5;

@end

@interface IDEDistributionProcessingStep : IDEDistributionStep
{
}

+ (_Bool)runsPerThinningVariant;
+ (_Bool)runsPerDistributionItem;
+ (_Bool)supportsDryRun;
+ (id)providedOutputContextPropertyNames;
+ (id)requiredInputContextPropertyNames;
@property(readonly) NSString *name;
- (id)providedOutputContextPropertyNames;
- (id)requiredInputContextPropertyNames;
- (_Bool)runWithError:(id *)arg1;
- (_Bool)shouldSkip;

@end

@interface IDEDistributionProcessingPackagingStep : IDEDistributionProcessingStep
{
}

+ (id)packagePathExtension;
+ (BOOL)wantsPayloadDir;

@end

@interface IDEDistributionItemProcessingStep : IDEDistributionProcessingStep
{
}

+ (_Bool)runsPerDistributionItem;
@property(readonly) IDEDistributionItem *distributionItem;
- (id)requiredInputContextPropertyNames;

@end

@interface IDEOnDiskLogStore_Impl : IDEOnDiskLogStore
{
    NSString *_rootDirectoryPath;
    NSMutableDictionary *_cache;
    NSMutableDictionary *_cachedLogs;
    NSOperationQueue *_asyncOperations;
    BOOL _preserveOldLogs;
}

+ (unsigned long long)assertionBehaviorAfterEndOfEventForSelector:(SEL)arg1;
+ (void)initialize;
- (BOOL)preserveOldLogs;
- (void).cxx_destruct;
- (id)description;
- (void)setPreserveOldLogs:(BOOL)arg1;
- (id)_pathForUniqueIdentifier:(id)arg1;
- (void)_removeAllButTheLatestLog;
- (void)_pruneLogsToLogStoreSizeLimit;
- (void)_removeLogRecord:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)_moveToRootDirectoryAtPath:(id)arg1 errorBlock:(CDUnknownBlockType)arg2;
- (id)addLog:(id)arg1 entityIdentifier:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (void)_saveLog:(id)arg1 logRecord:(id)arg2 toPath:(id)arg3 completionBlock:(CDUnknownBlockType)arg4;
- (BOOL)_saveCacheWithError:(id *)arg1;
- (id)_cachePath;
- (id)coverageReportFilePathForActivityLogSection:(id)arg1;
- (id)testableSummariesPlistFilePathForActivityLogSection:(id)arg1;
- (id)rootDirectoryPath;
- (void)primitiveInvalidate;
- (void)_pruneTestingAssets;
- (id)initWithRootDirectoryAtPath:(id)arg1 error:(id *)arg2;

@end

@interface IDEOnDiskLogStore : IDELogStore
{
    DVTObservingToken *_logFolderPathObservingToken;
}

+ (id)onDiskStoreInWorkspaceArena:(id)arg1 atSubPath:(id)arg2 error:(id *)arg3;
+ (id)onDiskStoreWithRootDirectoryAtPath:(id)arg1 error:(id *)arg2;
@property(retain) DVTObservingToken *logFolderPathObservingToken; // @synthesize logFolderPathObservingToken=_logFolderPathObservingToken;
- (void).cxx_destruct;
@property(readonly, copy) NSString *rootDirectoryPath;
- (void)primitiveInvalidate;

@end

@interface IDEDistributionTeamStep : IDEDistributionStep
{
}

+ (id)propertyListForContext:(id)arg1;
+ (id)availableOptionsForPropertyList;
- (BOOL)loadFromPropertyList:(id)arg1 error:(id *)arg2;
- (id)providedOutputContextPropertyNames;
- (id)requiredInputContextPropertyNames;

@end

@interface IDEContainerReadOnlyItem : NSObject <IDEReadOnlyItem>
{
    int _readOnlyStatus;
    IDEContainer *_container;
    DVTFilePath *_filePath;
}

@property int readOnlyStatus; // @synthesize readOnlyStatus=_readOnlyStatus;
@property(readonly) IDEContainer *container; // @synthesize container=_container;
@property(readonly) DVTFilePath *filePath; // @synthesize filePath=_filePath;
- (void).cxx_destruct;
- (BOOL)makeWritableWithError:(id *)arg1;
- (void)updateReadOnlyStatus;
@property(readonly) NSURL *readOnlyItemURL;
@property(readonly, copy) NSString *description;
- (id)initWithFilePath:(id)arg1 container:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IDEContainerReadOnlyListeningItem : IDEContainerReadOnlyItem <DVTInvalidation>
{
}

+ (void)initialize;
- (void)parentFilePathDidChange;
- (void)filePathDidChange;
- (void)primitiveInvalidate;
- (id)initWithFilePath:(id)arg1 container:(id)arg2;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface _IDELocalizedStringsAdaptorReadContext : IDELocalizationWorkReadStrings
{
}

+ (id)contextWithParent:(id)arg1 path:(id)arg2 adaptor:(id)arg3 language:(id)arg4;
- (id)language;
- (id)adaptor;

@end

@interface IDELocalizedStringsAdaptor : IDELocalizedResourceAdaptor
{
    NSString *_tableName;
    NSDictionary *_baseStrings;
    NSDictionary *_baseComments;
    NSMutableDictionary *_stringsCache;
}

+ (id)writeWorkForContext:(id)arg1 langauge:(id)arg2;
+ (id)readWorkForContext:(id)arg1;
- (void).cxx_destruct;
- (id)target;
- (id)expectedSuperitem;
- (id)expectedDirectoryPath;
- (id)expectedFileName;
- (id)tableName;
- (id)comments;
- (void)setStrings:(id)arg1 forLanguage:(id)arg2;
- (id)stringsForLanguage:(id)arg1;
- (void)updateBaseStrings:(id)arg1 updateBaseComments:(id)arg2;
- (id)initWithLocalizedContainer:(id)arg1 localizedGroup:(id)arg2 tableName:(id)arg3 baseStrings:(id)arg4 baseComments:(id)arg5;

@end

@interface IDESourceControlWorkspaceMonitor : NSObject <DVTInvalidation>
{
    IDEWorkspace *_workspace;
    IDEContainerQuery *_query;
    DVTTimeSlicedMainThreadWorkQueue *_fileReferenceProcessingQueue;
    NSMutableDictionary *_workspaceSCMInfo;
    NSMutableSet *_workspaceFolders;
    NSObject<OS_dispatch_queue> *_scanningQueue;
    BOOL _resumedScanningQueue;
    NSDate *_startDate;
    NSMutableSet *_repositoriesWarnedAreNewer;
    NSObject<OS_dispatch_queue> *_cachedBlueprintQueue;
    NSMutableSet *_workingCopies;
    NSMutableArray *_workingCopiesNeedingUpgrade;
    NSMutableArray *_workingTrees;
    DVTDispatchLock *_workingTreesLock;
    NSMutableSet *_workingTreeBranchTokens;
    DVTDispatchLock *_workingTreeBranchTokensLock;
    DVTObservingToken *_containerQueryMatchesObserver;
    NSOperationQueue *_scmFileEventQueue;
    IDESourceControlRequest *_sourceControlInfoRequest;
    NSString *_developerFolderPathString;
    unsigned long long _workingTreesCount;
    DVTDispatchLock *_derivedDataLock;
    DVTFilePath *_derivedDataFilePath;
    DVTObservingToken *_deriviedDataObservationToken;
    DVTFilePath *_intermediatesFilePath;
    DVTObservingToken *_intermediatesObservationToken;
    DVTFilePath *_productsFilePath;
    DVTObservingToken *_productsObservationToken;
    DVTNotificationToken *_sourceControlEnabledToken;
    DVTNotificationToken *_metadataUpdatedNotificationToken;
    NSMutableDictionary *_workingCopiesLastModified;
    long long _fetchFileStatusQueueLockCount;
    NSOperationQueue *_fetchFileStatusQueue;
    NSMutableDictionary *_workingCopyRemotesFetchingDisabled;
    BOOL _localStatusCheckingEnabled;
    BOOL _remoteStatusCheckingEnabled;
    id _rootItem;
    DVTSourceControlWorkspace *_sourceControlWorkspace;
    DVTSourceControlWorkspaceBlueprint *_cachedBlueprint;
    IDESourceControlManager *_sourceControlManager;
    double _serverStatusUpdateInterval;
    unsigned long long _state;
    NSTimer *_statusUpdateTimer;
}

+ (id)keyPathsForValuesAffectingDidScanWorkspace;
+ (id)keyPathsForValuesAffectingIsPerformingInitialWorkspaceScan;
+ (void)initialize;
+ (void)setRootItemBlock:(CDUnknownBlockType)arg1;
+ (CDUnknownBlockType)rootItemBlock;
@property(retain) NSTimer *statusUpdateTimer; // @synthesize statusUpdateTimer=_statusUpdateTimer;
@property(readonly) IDEWorkspace *workspace; // @synthesize workspace=_workspace;
@property unsigned long long state; // @synthesize state=_state;
@property(nonatomic) BOOL remoteStatusCheckingEnabled; // @synthesize remoteStatusCheckingEnabled=_remoteStatusCheckingEnabled;
@property(nonatomic) BOOL localStatusCheckingEnabled; // @synthesize localStatusCheckingEnabled=_localStatusCheckingEnabled;
@property double serverStatusUpdateInterval; // @synthesize serverStatusUpdateInterval=_serverStatusUpdateInterval;
@property(retain) IDESourceControlManager *sourceControlManager; // @synthesize sourceControlManager=_sourceControlManager;
@property(retain) DVTSourceControlWorkspaceBlueprint *cachedBlueprint; // @synthesize cachedBlueprint=_cachedBlueprint;
@property(retain) DVTSourceControlWorkspace *sourceControlWorkspace; // @synthesize sourceControlWorkspace=_sourceControlWorkspace;
@property(retain) id rootItem; // @synthesize rootItem=_rootItem;
- (void).cxx_destruct;
- (id)rootDirectoryOfAllWorkingCopies;
- (void)checkForMissingCheckouts;
- (void)writeSCMInfoToWorkspace;
- (void)saveSCMInfo;
- (id)getSCMInfoObjectforKey:(id)arg1;
- (void)setSCMInfoObject:(id)arg1 forSCMKey:(id)arg2;
- (void)setSuppressMissingCheckoutsAlert:(BOOL)arg1;
- (BOOL)suppressMissingCheckoutsAlert;
- (BOOL)_saveWorkspaceSCMInfo;
- (id)_loadWorkspaceSCMInfo;
- (id)_SCMInfoFilePath;
- (void)unblockFetchingFilesAndStatus;
- (void)blockFetchingFilesAndStatus;
@property(readonly) NSOperationQueue *fetchFileStatusQueue;
- (void)_updateLocalStatusForWorkingTreesWithForce:(BOOL)arg1 modifiedSinceDate:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (void)forceUpdateLocalStatusForWorkingTreesWithCompletionBlock:(CDUnknownBlockType)arg1;
- (void)updateLocalStatusForWorkingTreesModifiedSinceDate:(id)arg1;
- (void)forceUpdateLocalStatusForWorkingTrees;
- (void)updateLocalStatusForWorkingTrees;
- (void)_updateCurrentBranchForWorkingTreesModifiedSinceDate:(id)arg1;
- (void)_updateServerStatusForWorkingTreesWithForce:(BOOL)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)_fetchFromWorkingCopiesWithCompletionBlock:(CDUnknownBlockType)arg1;
- (void)_disableRemote:(id)arg1 fromWorkingCopy:(id)arg2;
- (void)forceUpdateServerStatusForWorkingTreesWithCompletionBlock:(CDUnknownBlockType)arg1;
- (void)fetchAndUpdateServerStatusForWorkingCopies;
- (void)endPeriodicServerStatusUpdates;
- (void)beginPeriodicServerStatusUpdates;
- (void)endObservingWorkingTree:(id)arg1;
- (void)beginObservingWorkingTree:(id)arg1;
- (BOOL)isBlacklistedPath:(id)arg1;
- (void)updateWorkingCopyLocations;
- (void)_scanBatchFinished;
- (void)endObservingWorkingTrees;
- (void)beginObservingWorkingTrees;
- (void)_updateWorkingCopyMetadata:(id)arg1;
- (void)_updateAllWorkingCopyMetadata;
- (void)startScanningWorkspace:(id)arg1;
- (void)warnToCommitBefore:(id)arg1 warnedBy:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (void)setSuppressCommitAlert:(BOOL)arg1;
- (void)_startScanningWorkspace:(id)arg1;
- (void)_processFileReference:(id)arg1;
- (void)upgradedWorkingCopy:(id)arg1;
- (void)scanForWorkingCopyInFilePath:(id)arg1;
- (void)addWorkspaceFilePathToCheck:(id)arg1;
- (void)_scanWorkspaceFolders:(BOOL)arg1;
- (void)_requestScanWorkspaceFolders;
- (BOOL)_filePathIsInDerivedDataFolder:(id)arg1;
@property(readonly) BOOL didScanWorkspace;
@property(readonly) BOOL isPerformingInitialWorkspaceScan;
- (void)addWorkingTree:(id)arg1;
- (void)_sortWorkingCopies;
- (id)workingTreeForWorkingCopy:(id)arg1;
@property(readonly) NSArray *workingCopies;
@property(readonly) NSArray *workingTrees;
@property(readonly) NSArray *workingCopiesNeedingUpgrade;
- (void)primitiveInvalidate;
- (void)_disableSourceControlMonitor;
- (id)initWithSCMManager:(id)arg1;
- (id)init;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface IDESourceKitWorkspaceTextualSearchDelegate : NSObject <IDEBatchFindQueryDelegate>
{
    IDESourceKitWorkspace *_skWorkspace;
    long long _token;
    IDESourceKitWorkspaceTextualSearchDelegate *_strongSelf;
}

- (void).cxx_destruct;
- (void)findNavigatorQuery:(id)arg1 didFinishGeneratingLazyChildrenOfResult:(id)arg2;
- (void)findNavigatorQuery:(id)arg1 isStalledOnFilePaths:(id)arg2;
- (void)findNavigatorQuery:(id)arg1 progressUpdate:(long long)arg2;
- (void)findNavigatorQuery:(id)arg1 didGenerateResults:(id)arg2;
- (void)findNavigatorQueryDidComplete:(id)arg1;
- (id)initWithSKWorkspace:(id)arg1 token:(long long)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IDELocationScenario : NSObject
{
    NSString *_identifier;
    NSArray *_locations;
    BOOL _autorepeat;
    DVTFilePath *_filePath;
    BOOL _hasLoadedContent;
    BOOL _isCurrentLocation;
    BOOL _isCurrentLocationScenario;
    NSError *_gpxError;
}

+ (id)builtInScenarioWithIdentifier:(id)arg1;
+ (id)defaultScenarios;
+ (id)currentLocationScenario;
+ (void)initialize;
@property(retain) NSError *gpxError; // @synthesize gpxError=_gpxError;
@property(readonly) BOOL isCurrentLocationScenario; // @synthesize isCurrentLocationScenario=_isCurrentLocationScenario;
@property(readonly) BOOL autorepeat; // @synthesize autorepeat=_autorepeat;
@property(readonly) DVTFilePath *filePath; // @synthesize filePath=_filePath;
@property(readonly) NSString *identifier; // @synthesize identifier=_identifier;
- (void).cxx_destruct;
@property(readonly, getter=isDefaultScenario) BOOL defaultScenario;
- (id)description;
@property(readonly) NSString *name;
@property(readonly) NSArray *locations;
- (BOOL)isValidWithError:(id *)arg1;
- (void)_loadLocationsIfNeeded;
- (id)_processedLocationsFromGPXLocations:(id)arg1;
- (id)_locationsFromReferencedGPXFileWithError:(id *)arg1;
- (id)_gpxFileErrorWithCode:(long long)arg1 reason:(id)arg2;
- (id)initWithWorkspace:(id)arg1 referencingFilePath:(id)arg2;
- (id)initWithIdentifier:(id)arg1 referencingFilePath:(id)arg2;
- (id)initWithIdentifier:(id)arg1 locations:(id)arg2 autorepeat:(BOOL)arg3;
- (id)initWithIdentifier:(id)arg1 locations:(id)arg2;

@end

@interface IDESourceKitLowLevelConnection : NSObject
{
    struct _sourcekit_connection_s *_obj;
}

- (void)sendCallbackReply:(id)arg1;
- (void)setCallbackHandler:(id)arg1 receiver:(CDUnknownBlockType)arg2;
- (void)setNotificationHandler:(id)arg1 receiver:(CDUnknownBlockType)arg2;
- (void)sendRequest:(id)arg1 queue:(id)arg2 receiver:(CDUnknownBlockType)arg3;
- (id)sendRequestSync:(id)arg1 error:(id *)arg2;
- (id)sendRequestSync:(id)arg1;
- (struct _sourcekit_uid_s *)getUIDFromString:(const char *)arg1;
- (void)cancel;
- (void)start;
- (void)dealloc;
- (id)init;
- (struct _sourcekit_connection_s *)sourceKitObject;

@end

@interface IDESchemeActionTestPerformanceMetricSummary : NSObject
{
    NSString *_identifier;
    NSString *_displayName;
    NSString *_unitOfMeasurement;
    NSArray *_measurements;
    NSString *_baselineName;
    NSNumber *_baselineAverage;
    NSNumber *_maxPercentRegression;
    NSNumber *_maxPercentRelativeStandardDeviation;
    NSNumber *_maxRegression;
    NSNumber *_maxStandardDeviation;
}

+ (id)missingBaselineDescriptionForPerformanceMetricWithName:(id)arg1;
@property(readonly) NSNumber *maxStandardDeviation; // @synthesize maxStandardDeviation=_maxStandardDeviation;
@property(readonly) NSNumber *maxRegression; // @synthesize maxRegression=_maxRegression;
@property(readonly) NSNumber *maxPercentRelativeStandardDeviation; // @synthesize maxPercentRelativeStandardDeviation=_maxPercentRelativeStandardDeviation;
@property(readonly) NSNumber *maxPercentRegression; // @synthesize maxPercentRegression=_maxPercentRegression;
@property(readonly) NSNumber *baselineAverage; // @synthesize baselineAverage=_baselineAverage;
@property(readonly) NSString *baselineName; // @synthesize baselineName=_baselineName;
@property(readonly, copy) NSArray *measurements; // @synthesize measurements=_measurements;
@property(readonly, copy) NSString *unitOfMeasurement; // @synthesize unitOfMeasurement=_unitOfMeasurement;
@property(readonly, copy) NSString *displayName; // @synthesize displayName=_displayName;
@property(readonly, copy) NSString *identifier; // @synthesize identifier=_identifier;
- (void).cxx_destruct;
- (BOOL)isEqualToTestPerformanceMetricSummary:(id)arg1;
@property(readonly) double relativeStandardDeviationOfMeasurements;
@property(readonly) double meanAverageOfMeasurements;
- (id)dictionaryRepresentation;
- (id)initWithDictionaryRepresentation:(id)arg1;
- (id)initWithPerformanceMetricName:(id)arg1 unitOfMeasurement:(id)arg2 measurements:(id)arg3 identifier:(id)arg4 baselineName:(id)arg5 baselineAverage:(id)arg6 maxPercentRegression:(id)arg7 maxPercentRelativeStandardDeviation:(id)arg8 maxRegression:(id)arg9 maxStandardDeviation:(id)arg10;

@end

@interface IDESchemeActionTestFailureSummary : NSObject
{
    BOOL _isPerformanceFailure;
    NSString *_message;
    NSString *_fileName;
    long long _lineNumber;
}

@property(readonly) BOOL isPerformanceFailure; // @synthesize isPerformanceFailure=_isPerformanceFailure;
@property(readonly) long long lineNumber; // @synthesize lineNumber=_lineNumber;
@property(readonly, copy) NSString *fileName; // @synthesize fileName=_fileName;
@property(readonly, copy) NSString *message; // @synthesize message=_message;
- (void).cxx_destruct;
- (BOOL)isEqualToTestFailureSummary:(id)arg1;
- (id)dictionaryRepresentation;
- (id)initWithDictionaryRepresentation:(id)arg1;
- (id)initWithMessage:(id)arg1 fileName:(id)arg2 lineNumber:(long long)arg3 isPerformanceFailure:(BOOL)arg4;

@end

@interface IDESchemeActionAbstractTestSummaryObject : NSObject
{
    NSString *_name;
}

@property(copy) NSString *name; // @synthesize name=_name;
- (void).cxx_destruct;
- (id)_testActivitySummariesForSummaryObject:(id)arg1;
@property(readonly) NSArray *testActivitySummaries;
- (id)description;
- (BOOL)updateWithDictionaryRepresentation:(id)arg1;
- (id)dictionaryRepresentation;
@property(readonly) unsigned long long status;
- (void)loadAttachmentsFromDirectory:(id)arg1;
- (id)initWithDictionaryRepresentation:(id)arg1;
- (id)initWithName:(id)arg1;

@end

@interface IDESchemeActionTestSummary : IDESchemeActionAbstractTestSummaryObject
{
    unsigned long long _status;
    double _duration;
    NSString *_identifier;
    NSString *_testSummaryGUID;
    NSArray *_failureSummaries;
    NSArray *_performanceMetrics;
    NSArray *_activitySummaries;
}

+ (unsigned long long)testStatusForString:(id)arg1;
+ (id)stringForTestStatus:(unsigned long long)arg1;
@property(copy) NSArray *activitySummaries; // @synthesize activitySummaries=_activitySummaries;
@property(copy) NSArray *performanceMetrics; // @synthesize performanceMetrics=_performanceMetrics;
@property(copy) NSArray *failureSummaries; // @synthesize failureSummaries=_failureSummaries;
@property(copy) NSString *testSummaryGUID; // @synthesize testSummaryGUID=_testSummaryGUID;
@property(copy) NSString *identifier; // @synthesize identifier=_identifier;
@property double duration; // @synthesize duration=_duration;
@property unsigned long long status; // @synthesize status=_status;
- (void).cxx_destruct;
- (BOOL)updateWithDictionaryRepresentation:(id)arg1;
- (id)dictionaryRepresentation;
- (void)loadAttachmentsFromDirectory:(id)arg1;
- (id)initWithDictionaryRepresentation:(id)arg1;
- (id)initWithName:(id)arg1 identifier:(id)arg2 status:(unsigned long long)arg3 failureSummaries:(id)arg4 performanceMetrics:(id)arg5 activitySummaries:(id)arg6;

@end

@interface IDESchemeActionTestableSummary : IDESchemeActionAbstractTestSummaryObject <IDESchemeActionTestSummaryContainer>
{
    NSMutableArray *_tests;
    NSString *_blueprintProviderRelativePath;
    NSString *_blueprintName;
}

+ (void)_countOfSuccessfulTests:(unsigned long long *)arg1 failingTests:(unsigned long long *)arg2 mixedTests:(unsigned long long *)arg3 inSummaryContainer:(id)arg4;
+ (void)countOfSuccessfulTests:(unsigned long long *)arg1 failingTests:(unsigned long long *)arg2 mixedTests:(unsigned long long *)arg3 inSummaries:(id)arg4;
+ (void)_coalesceTestSummariesInContainers:(id)arg1 intoAggregateContainer:(id)arg2;
+ (id)coalescedTestableSummaryForTestableSummariesForSameTestable:(id)arg1;
+ (BOOL)includeDummyTestSummaryInTestableSummary;
+ (void)initialize;
@property(copy) NSString *blueprintName; // @synthesize blueprintName=_blueprintName;
@property(copy) NSString *blueprintProviderRelativePath; // @synthesize blueprintProviderRelativePath=_blueprintProviderRelativePath;
- (void).cxx_destruct;
- (BOOL)isSummaryForSameTestableAsSummary:(id)arg1;
- (BOOL)updateWithDictionaryRepresentation:(id)arg1;
@property(readonly) NSMutableArray *mutableContainedTestSummaries;
@property(readonly) NSArray *containedTestSummaries;
- (id)dictionaryRepresentation;
- (id)addNewTestSummaryGroupWithName:(id)arg1 identifier:(id)arg2;
- (void)addTestSummary:(id)arg1;
- (unsigned long long)status;
- (void)loadAttachmentsFromDirectory:(id)arg1;
- (id)initWithDictionaryRepresentation:(id)arg1;
- (id)initWithName:(id)arg1 blueprintProviderRelativePath:(id)arg2 blueprintName:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(retain) NSMutableArray *mutableTests; // @dynamic mutableTests;
@property(readonly) Class superclass;
@property(copy) NSArray *tests; // @dynamic tests;

@end

@interface IDESchemeActionTestSummaryGroup : IDESchemeActionAbstractTestSummaryObject <IDESchemeActionTestSummaryContainer>
{
    NSMutableArray *_subtests;
    NSString *_identifier;
    double _duration;
}

+ (void)initialize;
@property double duration; // @synthesize duration=_duration;
@property(copy) NSString *identifier; // @synthesize identifier=_identifier;
- (void).cxx_destruct;
@property(readonly) NSMutableArray *mutableContainedTestSummaries;
@property(readonly) NSArray *containedTestSummaries;
- (BOOL)updateWithDictionaryRepresentation:(id)arg1;
- (id)dictionaryRepresentation;
- (id)addNewTestSummaryGroupWithName:(id)arg1 identifier:(id)arg2;
- (void)addTestSummary:(id)arg1;
- (unsigned long long)status;
- (void)loadAttachmentsFromDirectory:(id)arg1;
- (id)initWithDictionaryRepresentation:(id)arg1;
- (id)initWithName:(id)arg1 identifier:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(retain) NSMutableArray *mutableSubtests; // @dynamic mutableSubtests;
@property(copy) NSArray *subtests; // @dynamic subtests;
@property(readonly) Class superclass;

@end

@interface IDESchemeActionDummyTestSummary : IDESchemeActionAbstractTestSummaryObject
{
    NSString *_sentinelGUID;
}

- (void).cxx_destruct;
- (BOOL)updateWithDictionaryRepresentation:(id)arg1;
- (id)dictionaryRepresentation;
- (unsigned long long)status;
- (id)identifier;
- (id)init;

@end

@interface IDEDistributionOptionManifest : IDEDistributionOption
{
}

+ (id)propertyListForContext:(id)arg1;
+ (BOOL)wantsAssetPackManifestURLForContext:(id)arg1;
+ (id)availableOptionsForPropertyList;
- (id)providedOutputContextPropertyNames;
- (id)requiredInputContextPropertyNames;
- (BOOL)wantsAssetPackManifestURL;
- (BOOL)loadFromPropertyList:(id)arg1 error:(id *)arg2;

@end

@interface IDEIndexTestMethodCollection : IDEIndexSymbolWithDefiningOccurrenceCollection
{
    NSObject<NSFastEnumeration> *_classes;
    NSDictionary *_classesByID;
}

- (void).cxx_destruct;
- (id)instantiateRow:(struct sqlite3_stmt *)arg1;
- (id)tempTableSchema;
- (void)setClasses:(id)arg1;

@end

@interface IDEDataProvider_NetworkStatistics : IDEDataProvider
{
    NSObject<OS_dispatch_queue> *_capture_lock;
    struct __NStatManager *_netstatManager;
    NSObject<OS_dispatch_queue> *_netstatQueue;
    struct unordered_map<int, ProcessInfo, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, ProcessInfo>>> _processInfoByPID;
    struct unordered_map<__NStatSource *, SourceInfo, std::__1::hash<__NStatSource *>, std::__1::equal_to<__NStatSource *>, std::__1::allocator<std::__1::pair<__NStatSource *const, SourceInfo>>> _sourceInfosBySrcRef;
}

+ (id)sharedDataProvider;
- (id).cxx_construct;
- (void).cxx_destruct;
- (id)captureAttributes:(id)arg1 forPIDs:(id)arg2;
- (void)dealloc;
- (BOOL)captureAttributes:(id)arg1 toDictionary:(id)arg2 forPID:(id)arg3;
- (id)supportedAttributes;
- (id)init;

@end

@interface IDERunOperationPathWorker : IDERunOperationWorker
{
}

@property(readonly) NSMutableDictionary *compositeEnvironmentVariables;
@property(readonly) DVTFilePath *filePath;

@end

@interface IDEAppIDItemIdentifiersItemModelSet : NSObject <DVTInvalidation, IDEAppIDContainerFlightCheckDelegate>
{
    id <IDEFlightChecking> _flightCheck;
    NSOrderedSet *_unexpandedIdentifiers;
    DVTFuture *_validationF;
    unsigned int _currentGeneration;
    BOOL _requiresPortalIdentifiers;
    IDEProjectItemModel *_itemModel;
    NSString *_teamItemsKeyPath;
    NSString *_featuresItemsKeyPath;
    DVTPortalContainerType *_containerType;
    Class _listTeamItemsOpClass;
    NSSet *_availableTeamIdentifiers;
}

+ (id)expandedIdentifiers:(id)arg1 targetCapabilitiesContext:(id)arg2 buildConfiguration:(id)arg3 expansion:(id)arg4 error:(id *)arg5;
+ (void)initialize;
@property(retain) NSSet *availableTeamIdentifiers; // @synthesize availableTeamIdentifiers=_availableTeamIdentifiers;
@property(readonly) Class listTeamItemsOpClass; // @synthesize listTeamItemsOpClass=_listTeamItemsOpClass;
@property(readonly) DVTPortalContainerType *containerType; // @synthesize containerType=_containerType;
@property(readonly) NSString *featuresItemsKeyPath; // @synthesize featuresItemsKeyPath=_featuresItemsKeyPath;
@property(readonly) NSString *teamItemsKeyPath; // @synthesize teamItemsKeyPath=_teamItemsKeyPath;
@property(retain) IDEProjectItemModel *itemModel; // @synthesize itemModel=_itemModel;
@property(readonly) BOOL requiresPortalIdentifiers; // @synthesize requiresPortalIdentifiers=_requiresPortalIdentifiers;
- (void).cxx_destruct;
- (void)flightCheckIsValidating:(id)arg1;
- (id)containerIdentifiersForFlightCheck:(id)arg1 error:(id *)arg2;
@property(readonly) id <IDEFlightChecking> flightCheck;
- (id)refreshAvailableTeamIdentifiers;
- (id)_availableTeamContainerIdentifiersForAccount:(id)arg1 teamID:(id)arg2 portalProgram:(id)arg3 error:(id *)arg4;
- (id)expandedIdentifiersWithError:(id *)arg1;
- (id)expandedIdentifier:(id)arg1 error:(id *)arg2;
@property(copy, nonatomic) NSOrderedSet *unexpandedIdentifiers;
- (void)_setUnexpandedIdentifiers:(id)arg1 postAssignmentBlock:(CDUnknownBlockType)arg2;
- (void)primitiveInvalidate;
- (id)initWithoutPortalWithItemModel:(id)arg1;
- (id)initWithItemModel:(id)arg1 teamItemsKeyPath:(id)arg2 featuresItemsKeyPath:(id)arg3 listTeamItemsOpClass:(Class)arg4 containerType:(id)arg5;
- (id)initWithItemModel:(id)arg1 teamItemsKeyPath:(id)arg2 featuresItemsKeyPath:(id)arg3 listTeamItemsOpClass:(Class)arg4 containerType:(id)arg5 flightCheckName:(id)arg6;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface IDEConsoleItem : NSObject <DVTSimpleSerialization, NSSecureCoding>
{
    unsigned long long _adaptorType;
    NSString *_content;
    double _timestamp;
    int _kind;
}

+ (BOOL)supportsSecureCoding;
+ (id)keyPathsForValuesAffectingError;
+ (id)keyPathsForValuesAffectingOutputRequestedByUser;
+ (id)keyPathsForValuesAffectingPrompt;
+ (id)keyPathsForValuesAffectingOutput;
+ (id)keyPathsForValuesAffectingInput;
@property int kind; // @synthesize kind=_kind;
@property(readonly) double timestamp; // @synthesize timestamp=_timestamp;
@property(readonly) NSString *content; // @synthesize content=_content;
@property(readonly) unsigned long long adaptorType; // @synthesize adaptorType=_adaptorType;
- (void).cxx_destruct;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)dvt_writeToSerializer:(id)arg1;
- (id)dvt_initFromDeserializer:(id)arg1;
- (id)itemAsSubitems;
@property(readonly, getter=isError) BOOL error;
- (void)setError:(BOOL)arg1;
@property(readonly, getter=isOutputRequestedByUser) BOOL outputRequestedByUser;
- (void)setOutputRequestedByUser:(BOOL)arg1;
@property(readonly, getter=isPrompt) BOOL prompt;
- (void)setPrompt:(BOOL)arg1;
@property(readonly, getter=isOutput) BOOL output;
- (void)setOutput:(BOOL)arg1;
@property(readonly, getter=isInput) BOOL input;
- (void)setInput:(BOOL)arg1;
- (id)description;
- (id)initWithAdaptorType:(unsigned long long)arg1 content:(id)arg2 kind:(int)arg3;

@end

@interface IDEContainerCore : NSObject <IDEContainerCore>
{
    DVTFilePath *_filePath;
    DVTExtension *_containerExtension;
    int _currentActivity;
}

+ (void)_invalidateContainerCore:(id)arg1;
+ (void)_releaseContainerCore:(id)arg1;
+ (void)_retainContainerCore:(id)arg1;
+ (BOOL)_closeContainerCoreIfNeeded:(id)arg1;
+ (void)_removeReferencesToContainerCore:(id)arg1;
+ (void)_decrementCountForContainerCore:(id)arg1;
+ (void)_incrementCountForContainerCore:(id)arg1;
+ (unsigned long long)_countForContainerCore:(id)arg1;
+ (id)_openContainerCores;
+ (id)containerDataFilePathsForFilePath:(id)arg1;
+ (BOOL)supportsFilePersistence;
+ (id)containerFileType;
+ (BOOL)isContainerCoreOpenForFilePath:(id)arg1;
+ (id)retainedContainerCoreForFilePath:(id)arg1;
+ (id)retainedContainerCoreAtFilePath:(id)arg1 ofType:(id)arg2 error:(id *)arg3;
+ (id)containerExtensionForFileDataType:(id)arg1;
+ (void)initialize;
- (void).cxx_destruct;
- (id)filePath;
- (id)containerExtension;
- (id)rootGroup;
- (int)currentActivity;
- (void)primitiveInvalidate;
- (void)releaseContainerCore;
- (void)retainContainerCore;
- (void)_saveContainerCoreIfNeeded;
- (id)init;
- (id)initWithFilePath:(id)arg1 extension:(id)arg2 error:(id *)arg3;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface IDECommandLineEnvironment : NSObject
{
    NSArray *_arguments;
    NSDictionary *_environment;
    DVTFilePath *_workingDirectory;
    NSDictionary *_commandLineOptions;
    NSArray *_commandLineUnparsedArguments;
    NSFileHandle *_standardInput;
    NSFileHandle *_standardOutput;
    NSFileHandle *_standardError;
    IDEWorkspace *_workspace;
    IDEContainer<IDEBlueprintProvider> *_primaryBlueprintProvider;
    IDEScheme *_scheme;
    NSSet *_blueprints;
    IDEMutableOverridingBuildProperties *_buildProperties;
    NSString *_buildConfiguration;
    IDERunDestination *_runDestination;
    IDESchemeActionsInvocationRecord *_schemeActionsInvocationRecord;
}

@property(retain, nonatomic) IDESchemeActionsInvocationRecord *schemeActionsInvocationRecord; // @synthesize schemeActionsInvocationRecord=_schemeActionsInvocationRecord;
@property(retain, nonatomic) IDERunDestination *runDestination; // @synthesize runDestination=_runDestination;
@property(copy, nonatomic) NSString *buildConfiguration; // @synthesize buildConfiguration=_buildConfiguration;
@property(retain, nonatomic) IDEMutableOverridingBuildProperties *buildProperties; // @synthesize buildProperties=_buildProperties;
@property(copy, nonatomic) NSSet *blueprints; // @synthesize blueprints=_blueprints;
@property(retain, nonatomic) IDEScheme *scheme; // @synthesize scheme=_scheme;
@property(retain, nonatomic) IDEContainer<IDEBlueprintProvider> *primaryBlueprintProvider; // @synthesize primaryBlueprintProvider=_primaryBlueprintProvider;
@property(retain, nonatomic) IDEWorkspace *workspace; // @synthesize workspace=_workspace;
@property(retain, nonatomic) NSFileHandle *standardError; // @synthesize standardError=_standardError;
@property(retain, nonatomic) NSFileHandle *standardOutput; // @synthesize standardOutput=_standardOutput;
@property(retain, nonatomic) NSFileHandle *standardInput; // @synthesize standardInput=_standardInput;
@property(copy, nonatomic) NSArray *commandLineUnparsedArguments; // @synthesize commandLineUnparsedArguments=_commandLineUnparsedArguments;
@property(copy, nonatomic) NSDictionary *commandLineOptions; // @synthesize commandLineOptions=_commandLineOptions;
@property(retain, nonatomic) DVTFilePath *workingDirectory; // @synthesize workingDirectory=_workingDirectory;
@property(copy, nonatomic) NSDictionary *environment; // @synthesize environment=_environment;
@property(copy, nonatomic) NSArray *arguments; // @synthesize arguments=_arguments;
- (void).cxx_destruct;

@end

@interface IDEIndexDBStringStorage : NSObject <DVTInvalidation>
{
    NSURL *_fileURL;
    DVTDispatchLock *_lock;
    NSHashTable *_hashTable;
    NSMutableData *_data;
    long long _fileSize;
}

+ (unsigned long long)assertionBehaviorForKeyValueObservationsAtEndOfEvent;
+ (unsigned long long)assertionBehaviorAfterEndOfEventForSelector:(SEL)arg1;
+ (void)initialize;
@property(readonly, nonatomic) NSURL *fileURL; // @synthesize fileURL=_fileURL;
- (void).cxx_destruct;
- (void)findStringsContaining:(const char *)arg1 anchorStart:(BOOL)arg2 anchorEnd:(BOOL)arg3 subsequence:(BOOL)arg4 forEachResult:(CDUnknownBlockType)arg5;
- (id)findStringAtOffset:(long long)arg1 callback:(CDUnknownBlockType)arg2;
- (id)writeChangesToDisk;
- (long long)offsetOfString:(const char *)arg1 addIfMissing:(BOOL)arg2;
- (void)primitiveInvalidate;
- (void)close;
- (id)open;
- (id)initWithFileURL:(id)arg1;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface IDENotifyingLocalizedGroup : NSObject <DVTInvalidation>
{
    IDEGroup<IDELocalizedGroup> *_group;
    NSDictionary *_variantFileReferences;
    DVTObservingToken *_subitemsObservationToken;
    DVTObservingToken *_resolvedFilePathObservationToken;
}

+ (id)keyPathsForValuesAffectingAvailableLanguages;
+ (id)keyPathsForValuesAffectingDevelopmentFileReference;
+ (id)keyPathsForValuesAffectingBaseFileReference;
+ (void)initialize;
- (void).cxx_destruct;
- (id)availableLanguagesForFileReferencesConformingToType:(id)arg1;
- (id)availableLanguages;
- (id)targetLanguages;
- (id)developmentLanguage;
- (id)fileReferenceForLanguage:(id)arg1;
- (id)developmentFileReference;
- (id)baseFileReference;
- (id)group;
- (void)primitiveInvalidate;
- (void)_update;
- (id)initWithLocalizedGroup:(id)arg1;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface IDEPlaygroundVersion : NSObject
{
    BOOL _requiresUserPermissionForUpgrade;
    BOOL _supportsExecutionInFullSimulator;
    BOOL _supportsAuxiliarySources;
    BOOL _supportsDisplayModeToggle;
    BOOL _supportsPlaygroundPages;
    BOOL _supportsOrganizationMetadata;
    BOOL _usesLegacyXMLFormat;
    BOOL _usesDiscreteFilesForSections;
    BOOL _usesTimelineElement;
    DVTVersion *_version;
}

+ (BOOL)_readBoolForKey:(id)arg1 fromExtension:(id)arg2;
+ (id)_playgroundVersionFromExtension:(id)arg1;
+ (id)_documentVersionsExtensionPoint;
+ (id)playgroundVersionForVersion:(id)arg1;
+ (id)latestPlaygroundVersion;
+ (id)knownPlaygroundVersions;
@property BOOL usesTimelineElement; // @synthesize usesTimelineElement=_usesTimelineElement;
@property BOOL usesDiscreteFilesForSections; // @synthesize usesDiscreteFilesForSections=_usesDiscreteFilesForSections;
@property BOOL usesLegacyXMLFormat; // @synthesize usesLegacyXMLFormat=_usesLegacyXMLFormat;
@property BOOL supportsOrganizationMetadata; // @synthesize supportsOrganizationMetadata=_supportsOrganizationMetadata;
@property BOOL supportsPlaygroundPages; // @synthesize supportsPlaygroundPages=_supportsPlaygroundPages;
@property BOOL supportsDisplayModeToggle; // @synthesize supportsDisplayModeToggle=_supportsDisplayModeToggle;
@property BOOL supportsAuxiliarySources; // @synthesize supportsAuxiliarySources=_supportsAuxiliarySources;
@property BOOL supportsExecutionInFullSimulator; // @synthesize supportsExecutionInFullSimulator=_supportsExecutionInFullSimulator;
@property BOOL requiresUserPermissionForUpgrade; // @synthesize requiresUserPermissionForUpgrade=_requiresUserPermissionForUpgrade;
@property(retain) DVTVersion *version; // @synthesize version=_version;
- (void).cxx_destruct;
- (id)description;
@property(readonly) BOOL canSupportOrganizationalMetadataWithImplicitUpgrade;
@property(readonly) BOOL canBeImplicitlyUpgraded;
@property(readonly) BOOL canBeMigrated;
@property(readonly) BOOL canBeUpgraded;

@end

@interface IDEIndexTestPlistDataSource : IDEIndexDataSource
{
    IDEIndexImportSession *_session;
    NSString *_target;
}

+ (void)initialize;
- (void).cxx_destruct;
- (void)_processFile:(id)arg1 newFiles:(id)arg2;
- (id)_newFilesForDictionaries:(id)arg1;
- (void)_processSymbol:(id)arg1 inFile:(id)arg2 container:(id)arg3 containerName:(id)arg4;
- (BOOL)generateDataForJob:(id)arg1;
- (void)generateDataForPlist:(id)arg1;
- (id)initWithSession:(id)arg1 target:(id)arg2;

@end

@interface IDEWorkspaceArena : NSObject <DVTInvalidation>
{
    IDEWorkspace *_workspace;
    DVTFilePath *_cachedDerivedDataLocation;
    DVTFilePath *_cachedBuildFolderPath;
    DVTFilePath *_cachedBuildProductsFolderPath;
    DVTFilePath *_cachedBuildIntermediatesFolderPath;
    DVTFilePath *_cachedIndexStoreFolderPath;
    NSString *_cachedWorkspaceArenaFolderName;
    BOOL _hasWorkspaceRelativeDerivedDataLocation;
    BOOL didSetUpCachedWorkspaceArenaFolderNameObservations;
    id _derivedDataFolderForWorkspaceObservingToken;
    id _derivedDataNotificationToken;
    id _derivedDataSourceTreesNotificationToken;
    id _derivedDataOverrideNotificationToken;
    IDEWorkspaceArenaSnapshot *_cachedSnapshot;
    DVTFilePath *_indexDataStoreFolderOverride;
    BOOL _indexEnableDataStore;
}

+ (id)defaultBuildSubdirectoryName;
+ (id)defaultWorkspaceRelativeDerivedDataDirLocation;
+ (BOOL)shouldUniqueWorkspaceFoldersInStandardDerivedDataLocation;
+ (id)standardWorkspaceDerivedDataLocationForWorkspace:(id)arg1;
+ (id)_standardDerivedDataLocationPathFragment;
+ (id)keyPathsForValuesAffectingWorkspaceArenaInfo;
+ (id)keyPathsForValuesAffectingTestResultsFolderPath;
+ (id)keyPathsForValuesAffectingLogFolderPath;
+ (id)keyPathsForValuesAffectingIndexPrecompiledHeadersFolderPath;
+ (id)keyPathsForValuesAffectingIndexDataStoreFolderPath;
+ (id)keyPathsForValuesAffectingIndexFolderPath;
+ (id)keyPathsForValuesAffectingTextIndexFolderPath;
+ (id)indexStoreFolderPathForSettings:(id)arg1 usingPlaceholderOfType:(int *)arg2;
+ (id)buildIntermediatesFolderPathForSettings:(id)arg1 usingPlaceholderOfType:(int *)arg2;
+ (id)buildProductsFolderPathForSettings:(id)arg1 usingPlaceholderOfType:(int *)arg2;
+ (id)keyPathsForValuesAffectingPrecompiledHeadersFolderPath;
+ (id)keyPathsForValuesAffectingIBLiveViewsBuildFolderPath;
+ (id)keyPathsForValuesAffectingSwiftMigrationBuildFolderPath;
+ (id)keyPathsForValuesAffectingCodeCoverageBuildFolderPath;
+ (id)keyPathsForValuesAffectingPGOBuildFolderPath;
+ (id)keyPathsForValuesAffectingInstallingBuildFolderPath;
+ (id)keyPathsForValuesAffectingArchivingBuildFolderPath;
+ (id)keyPathsForValuesAffectingBuildIntermediatesFolderPath;
+ (id)keyPathsForValuesAffectingBuildProductsFolderPath;
+ (void)_buildResultsPathForBuildResultsType:(int)arg1 settings:(id)arg2 workspaceArena:(id)arg3 returningFilePath:(id *)arg4 orReturningPathString:(id *)arg5 withPlaceholder:(int *)arg6;
+ (id)_resolvedBuildFolderSettingsGivenSettings:(id)arg1;
+ (id)keyPathsForValuesAffectingPath;
+ (id)keyPathsForValuesAffectingDerivedDataFolderForWorkspace;
+ (id)nameForWorkspaceArenaWithBaseName:(id)arg1 gristInput:(id)arg2;
+ (void)initialize;
@property BOOL hasWorkspaceRelativeDerivedDataLocation; // @synthesize hasWorkspaceRelativeDerivedDataLocation=_hasWorkspaceRelativeDerivedDataLocation;
@property(readonly) IDEWorkspace *workspace; // @synthesize workspace=_workspace;
- (void).cxx_destruct;
@property(readonly, copy) NSString *description;
- (void)createWorkspaceArenaFolderIfNecessary;
- (BOOL)createWorkspaceArenaFolderIfNecessaryWithError:(id *)arg1;
@property(readonly) double workspaceArenaInfoRefreshInterval;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)_setupIndexPreferences;
- (id)initWithWorkspace:(id)arg1;
@property(readonly) IDEWorkspaceArenaInfo *workspaceArenaInfo;
@property(readonly) DVTFilePath *testResultsFolderPath;
@property(readonly) DVTFilePath *logFolderPath;
@property(readonly) DVTFilePath *indexPrecompiledHeadersFolderPath;
@property(readonly) BOOL indexEnableDataStore;
@property(readonly) DVTFilePath *indexDataStoreFolderPath;
@property(readonly) DVTFilePath *indexFolderPath;
@property(readonly) DVTFilePath *textIndexFolderPath;
@property(readonly) DVTFilePath *precompiledHeadersFolderPath;
@property(readonly) DVTFilePath *IBLiveViewsBuildFolderPath;
@property(readonly) DVTFilePath *swiftMigrationBuildFolderPath;
@property(readonly) DVTFilePath *codeCoverageBuildFolderPath;
@property(readonly) DVTFilePath *pgoBuildFolderPath;
@property(readonly) DVTFilePath *installingBuildFolderPath;
@property(readonly) DVTFilePath *archivingBuildFolderPath;
@property(readonly) DVTFilePath *buildIntermediatesFolderPath;
- (id)indexStoreFolderPathForSettings:(id)arg1;
- (id)buildIntermediatesFolderPathForSettings:(id)arg1;
@property(readonly) DVTFilePath *buildProductsFolderPath;
- (id)buildProductsFolderPathForSettings:(id)arg1;
- (id)_buildResultsPathForBuildResultsType:(int)arg1 settings:(id)arg2;
@property(readonly) DVTFilePath *buildFolderPath;
- (id)_buildFolderPathForSettings:(id)arg1;
- (void)buildFolderSettingsDidChange:(id)arg1;
- (id)presumptiveBuildFolderPathWithName:(id)arg1 baseBuildFolderLocation:(id)arg2;
- (id)_derivedDataFolderPathOverride;
- (id)path;
@property(readonly) DVTFilePath *derivedDataFolderForWorkspace;
- (BOOL)_shouldUniqueWorkspaceInDerivedDataForDerivedDataLocationStyle:(int)arg1 customDerivedDataLocation:(id)arg2;
@property(readonly) DVTFilePath *derivedDataLocation;
- (id)workspaceArenaFolderName;
- (void)primitiveInvalidate;
@property(readonly) IDEWorkspaceArenaSnapshot *currentSnapshot;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface IDEBuildFolderSettings : NSObject
{
    int buildLocationStyle;
    NSString *sharedBuildFolderName;
    int customBuildLocationType;
    NSString *customBuildProductsPath;
    NSString *customBuildIntermediatesPath;
    NSString *customIndexStorePath;
}

+ (id)buildFolderSettingsForWorkspaceSettings:(id)arg1;
- (void).cxx_destruct;
- (id)description;

@end

@interface IDEWorkspaceArenaInfo : NSObject
{
    NSDictionary *_infoDict;
    DVTFilePath *_workspacePath;
    NSDate *_lastAccessedDate;
}

+ (id)workspaceArenaInfoFromFileAtPath:(id)arg1 error:(id *)arg2;
+ (id)workspaceArenaInfoWithWorkspacePath:(id)arg1;
@property(readonly) NSDate *lastAccessedDate; // @synthesize lastAccessedDate=_lastAccessedDate;
- (void).cxx_destruct;
- (BOOL)writeToFileAtPath:(id)arg1 withRelativeWorkspacePath:(BOOL)arg2 error:(id *)arg3;
@property(readonly) DVTFilePath *workspacePath;

@end

@interface IDEWorkspaceArenaSnapshot : NSObject
{
    DVTFilePath *_derivedDataFolderPath;
    DVTFilePath *_buildProductsFolderPath;
    DVTFilePath *_buildIntermediatesFolderPath;
    DVTFilePath *_precompiledHeadersFolderPath;
    DVTFilePath *_indexFolderPath;
    DVTFilePath *_indexDataStoreFolderPath;
    DVTFilePath *_indexPrecompiledHeadersFolderPath;
    DVTFilePath *_logFolderPath;
    DVTFilePath *_textIndexFolderPath;
    BOOL _indexEnableDataStore;
    unsigned long long _hash;
}

+ (id)workspaceArenaSnapshotForWorkspaceArena:(id)arg1;
@property(readonly) DVTFilePath *textIndexFolderPath; // @synthesize textIndexFolderPath=_textIndexFolderPath;
@property(readonly) DVTFilePath *logFolderPath; // @synthesize logFolderPath=_logFolderPath;
@property(readonly) DVTFilePath *indexPrecompiledHeadersFolderPath; // @synthesize indexPrecompiledHeadersFolderPath=_indexPrecompiledHeadersFolderPath;
@property(readonly) BOOL indexEnableDataStore; // @synthesize indexEnableDataStore=_indexEnableDataStore;
@property(readonly) DVTFilePath *indexDataStoreFolderPath; // @synthesize indexDataStoreFolderPath=_indexDataStoreFolderPath;
@property(readonly) DVTFilePath *indexFolderPath; // @synthesize indexFolderPath=_indexFolderPath;
@property(readonly) DVTFilePath *precompiledHeadersFolderPath; // @synthesize precompiledHeadersFolderPath=_precompiledHeadersFolderPath;
@property(readonly) DVTFilePath *buildIntermediatesFolderPath; // @synthesize buildIntermediatesFolderPath=_buildIntermediatesFolderPath;
@property(readonly) DVTFilePath *buildProductsFolderPath; // @synthesize buildProductsFolderPath=_buildProductsFolderPath;
@property(readonly) DVTFilePath *derivedDataFolderPath; // @synthesize derivedDataFolderPath=_derivedDataFolderPath;
- (void).cxx_destruct;
- (id)dvt_detailedDebugDescription;
- (id)copy;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;

@end

@interface IDEFileBasedCacheDeleteItem : NSObject <DVTDefaultPolicyCacheDeleteExtensionItem>
{
    DVTFilePath *_path;
}

@property(readonly) DVTFilePath *path; // @synthesize path=_path;
- (void).cxx_destruct;
@property(readonly, copy) NSString *description;
- (BOOL)deleteWithError:(id *)arg1;
@property(readonly) BOOL isOrphaned;
@property(readonly) unsigned long long size;
@property(readonly) DVTFilePath *volume;
@property(readonly) NSDate *lastAccessedDate;
- (id)initWithFilePath:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IDEWorkspaceArenaCacheDeleteItem : IDEFileBasedCacheDeleteItem
{
    IDEWorkspaceArenaInfo *_info;
}

@property(readonly) IDEWorkspaceArenaInfo *info; // @synthesize info=_info;
- (void).cxx_destruct;
- (BOOL)isOrphaned;
- (id)lastAccessedDate;
- (id)initWithWorkspaceArenaInfo:(id)arg1 workspaceArenaPath:(id)arg2;

@end

@interface IDEModuleCacheCacheDeleteItem : IDEFileBasedCacheDeleteItem
{
}

- (BOOL)isOrphaned;
- (id)lastAccessedDate;

@end

@interface IDEDerivedDataCacheDeleteExtension : DVTDefaultPolicyCacheDeleteExtension
{
    DVTFilePath *_derivedDataLocation;
}

- (void).cxx_destruct;
- (id)itemsWithError:(id *)arg1;
- (id)init;
- (id)initWithDerivedDataLocation:(id)arg1;

@end

@interface IDESourceControlMultipleStepInvalidationToken : NSObject <DVTCancellable>
{
    IDESourceControlRequest *_currentRequest;
    BOOL _isCancelled;
}

@property __weak IDESourceControlRequest *currentRequest; // @synthesize currentRequest=_currentRequest;
- (void).cxx_destruct;
- (void)cancel;
@property(readonly, getter=isCancelled) BOOL cancelled;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IDECleanCommandLineVerb : IDESchemeBasedCommandLineVerb
{
}

+ (BOOL)_cleanFolderAtPath:(id)arg1 withDisplayName:(id)arg2 environment:(id)arg3;
+ (id)_overridingValueForProperty:(id)arg1 inOverridingProperties:(id)arg2;
+ (BOOL)requiresScheme;
+ (int)performWithEnvironment:(id)arg1;
+ (int)cleanBuildFolderForWorkspace:(id)arg1 inEnvironment:(id)arg2;
+ (id)optionDefinitionsWithEnvironment:(id)arg1;

@end

@interface IDESchemeBasedCommandLineVerb : IDEWorkspaceBasedCommandLineVerb
{
}

+ (id)_schemeWithName:(id)arg1 blueprints:(id)arg2 inWorkspace:(id)arg3;
+ (void)finalizeSchemeActionsInvocationRecordWithEnvironment:(id)arg1;
+ (BOOL)requiresScheme;
+ (int)performWithEnvironment:(id)arg1;
+ (id)optionDefinitionsWithEnvironment:(id)arg1;

@end

@interface IDEIndexDataSource : NSObject
{
    DVTPerformanceMetric *_generatorMetric;
    NSString *_source;
}

+ (const char *)builtinClassResolutionCString;
+ (id)builtinClassResolution;
+ (const char *)builtinIdResolutionCString;
+ (id)builtinIdResolution;
+ (const char *)builtinVoidResolutionCString;
+ (id)builtinVoidResolution;
+ (id)dataSourceVersion;
@property(retain, nonatomic) DVTPerformanceMetric *generatorMetric; // @synthesize generatorMetric=_generatorMetric;
@property(readonly, nonatomic) NSString *source; // @synthesize source=_source;
- (void).cxx_destruct;
- (BOOL)generateDataForJob:(id)arg1;
- (BOOL)processJob:(id)arg1;
- (id)initWithSource:(id)arg1;

@end

@interface IDEIssueFileGroup : NSObject
{
    NSMutableArray *_issues;
    unsigned long long _testFailureCount;
    unsigned long long _errorCount;
    unsigned long long _warningCount;
    unsigned long long _noticeCount;
    unsigned long long _analyzerResultCount;
    unsigned long long _runtimeCount;
    IDEIssueProvider *_issueProvider;
    NSURL *_documentURL;
    unsigned long long _issueType;
}

@property(readonly) unsigned long long issueType; // @synthesize issueType=_issueType;
@property(readonly) NSURL *documentURL; // @synthesize documentURL=_documentURL;
@property(readonly) IDEIssueProvider *issueProvider; // @synthesize issueProvider=_issueProvider;
@property(readonly) NSArray *issues; // @synthesize issues=_issues;
- (void).cxx_destruct;
- (void)_removeIssues:(id)arg1;
- (void)_addIssues:(id)arg1;
- (void)_updateIssueType;
- (id)_initWithIssueProvider:(id)arg1 documentURL:(id)arg2;
- (id)init;

@end

@interface IDEBatchFindTextQuery : IDEBatchFindAbstractWorkspacePerFileTextualQuery
{
}

+ (id)queryTermPlaceholderText;
+ (id)displayName;
+ (BOOL)supportsPatterns;
+ (BOOL)supportsAnchorning;
+ (BOOL)supportsCaseMatching;

@end

@interface IDEDistributionAppleProvidedContent : NSObject
{
}

+ (id)isAppleProvidedContent:(id)arg1 distributionItem:(id)arg2 archive:(id)arg3 error:(id *)arg4;

@end

@interface IDEWorkspaceSettings : NSObject <DVTInvalidation>
{
    IDEWorkspace *_workspace;
    NSMutableDictionary *_workspaceSettings;
    BOOL _loadedExistingSettings;
}

+ (void)initialize;
+ (BOOL)automaticallyNotifiesObserversForBuildSystemType;
@property(readonly) BOOL loadedExistingSettings; // @synthesize loadedExistingSettings=_loadedExistingSettings;
@property(readonly) IDEWorkspace *workspace; // @synthesize workspace=_workspace;
- (void).cxx_destruct;
- (void)primitiveInvalidate;
@property int buildSystemType;
- (void)loadSettings;
- (void)saveSettings;
- (id)customDataSpecifier;
- (id)settingsOwnership;
- (void)setBool:(BOOL)arg1 forKey:(id)arg2;
- (void)setInteger:(long long)arg1 forKey:(id)arg2;
- (void)setString:(id)arg1 forKey:(id)arg2;
- (BOOL)boolForKey:(id)arg1;
- (long long)integerForKey:(id)arg1;
- (id)stringForKey:(id)arg1;
- (void)removeObjectForKey:(id)arg1;
- (void)setObject:(id)arg1 forKey:(id)arg2;
- (id)objectForKey:(id)arg1;
- (id)initWithWorkspace:(id)arg1;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface IDEBatchFindNamedScopePredicate : NSObject <NSCopying>
{
    NSString *_name;
    IDEBatchFindScopePredicate *_predicate;
}

+ (id)titleForNamedScope:(id)arg1 inWorkspace:(id)arg2;
+ (id)namedPredicateWithPropertyListRepresentation:(id)arg1;
@property(readonly) IDEBatchFindScopePredicate *predicate; // @synthesize predicate=_predicate;
@property(readonly) NSString *name; // @synthesize name=_name;
- (void).cxx_destruct;
- (id)description;
- (BOOL)isWorkspaceSpecific;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (BOOL)isEqual:(id)arg1;
- (BOOL)isEqualToNamedScopePredicate:(id)arg1;
- (unsigned long long)hash;
- (id)propertyListRepresentation;
- (id)initWithName:(id)arg1 predicate:(id)arg2;

@end

@interface IDEEntitlementsDictionary : NSObject <NSCopying>
{
    _Bool _frozen;
    id _storage;
    IDEEntitlementsDictionary *_parent;
}

+ (id)whiteoutMarker;
@property(readonly) IDEEntitlementsDictionary *parent; // @synthesize parent=_parent;
- (void).cxx_destruct;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
- (void)setDictionary:(id)arg1;
- (void)removeObjectsForKeys:(id)arg1;
- (void)removeAllObjects;
- (void)addEntriesFromDictionary:(id)arg1;
- (void)removeObjectForKey:(id)arg1;
- (id)objectForKeyedSubscript:(id)arg1;
- (void)setObject:(id)arg1 forKeyedSubscript:(id)arg2;
- (void)setObject:(id)arg1 forKey:(id)arg2;
- (id)objectForKey:(id)arg1;
@property(readonly) unsigned long long count;
@property(readonly, copy) NSSet *allValues;
@property(readonly, copy) NSSet *allKeys;
- (id)objectEnumerator;
- (id)keyEnumerator;
- (id)deltaRepresentation;
- (id)flatRepresentation;
- (id)mutableChildByApplyingDelta:(id)arg1;
- (void)applyDelta:(id)arg1;
- (id)mutableChild;
- (void)freeze;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithDictionary:(id)arg1;
- (id)init;

@end

@interface IDEEntitlementsWhiteOutMarker : NSObject
{
}

+ (id)marker;

@end

@interface IDECodesignParameterSnapshot : NSObject
{
    id <DVTProvisioningProfile> _provisioningProfile;
    DVTSigningCertificate *_signingCertificate;
    NSString *_identityHash;
    IDEProfileQualification *_profileQualification;
}

+ (id)_snapshotForAdHocSigning;
+ (id)_snapshotForNullSigning;
+ (id)_snapshotWithProvisioningProfile:(id)arg1 andSigningCertificate:(id)arg2 profileQualification:(id)arg3;
+ (id)_snapshotWithSigningCertificate:(id)arg1;
+ (id)_snapshotWithIdentityHash:(id)arg1;
@property(retain, nonatomic) IDEProfileQualification *profileQualification; // @synthesize profileQualification=_profileQualification;
@property(copy) NSString *identityHash; // @synthesize identityHash=_identityHash;
@property(retain) DVTSigningCertificate *signingCertificate; // @synthesize signingCertificate=_signingCertificate;
@property(retain) id <DVTProvisioningProfile> provisioningProfile; // @synthesize provisioningProfile=_provisioningProfile;
- (void).cxx_destruct;
- (BOOL)isEqual:(id)arg1;
- (unsigned long long)hash;
@property(readonly) _Bool willSign;
@property(readonly) _Bool isAdHocIdentity;
- (id)description;

@end

@interface IDECodesignResolver : NSObject
{
    DVTSigningCertificate *_signingCertificate;
    long long _automaticLocationStyle;
    IDEProvisioningInputs *_inputs;
}

+ (id)signingIdentityCertificatesForTeamID:(id)arg1 certificateKind:(id)arg2 certificateManager:(id)arg3 logAspect:(id)arg4;
+ (id)parametersForAdHocSigning;
+ (id)parametersForNullSigning;
+ (id)_errorForNoCertificateMatchingManualSpecifier:(id)arg1 team:(id)arg2 platform:(id)arg3;
+ (id)_errorForNoSigningCertificateMatchingAuto:(id)arg1 teamID:(id)arg2 platform:(id)arg3;
+ (id)_errorForInvalidSigningCertificate:(id)arg1 platform:(id)arg2;
+ (id)_manageCertificatesErrorWithCode:(long long)arg1 message:(id)arg2 recoverySuggestion:(id)arg3 team:(id)arg4 platform:(id)arg5 specifier:(id)arg6;
+ (id)_certificateMatchingPartialName:(id)arg1 signingCertificates:(id)arg2 team:(id)arg3;
+ (id)_certificateMatchingExactName:(id)arg1 signingCertificates:(id)arg2 team:(id)arg3;
+ (id)_certificateMatchingHash:(id)arg1 signingCertificates:(id)arg2;
+ (id)automaticSigningCertificateFromCertificates:(id)arg1 certificateKind:(id)arg2 teamID:(id)arg3 platform:(id)arg4 limitToIdentities:(BOOL)arg5 outError:(id *)arg6;
+ (id)_signingCertificateForManualSpecifier:(id)arg1 signingCertificates:(id)arg2 team:(id)arg3 platform:(id)arg4 error:(id *)arg5;
+ (BOOL)_isAutomaticCertificateSpecifier:(id)arg1 forPlatform:(id)arg2;
+ (BOOL)_isManualCertificateSpecifier:(id)arg1 forPlatform:(id)arg2;
+ (id)signingCertificateForIdentifier:(id)arg1 platform:(id)arg2 signingCertificates:(id)arg3 team:(id)arg4 error:(id *)arg5;
+ (id)profileQualificationForProfile:(id)arg1 team:(id)arg2 bundleID:(id)arg3 platform:(id)arg4 signingCertificate:(id)arg5 appIDFeatures:(id)arg6 entitlements:(id)arg7 devices:(id)arg8 profileType:(id)arg9 allowTeamProfiles:(BOOL)arg10;
@property(readonly, nonatomic) IDEProvisioningInputs *inputs; // @synthesize inputs=_inputs;
@property(nonatomic) long long automaticLocationStyle; // @synthesize automaticLocationStyle=_automaticLocationStyle;
@property(retain, nonatomic) DVTSigningCertificate *signingCertificate; // @synthesize signingCertificate=_signingCertificate;
- (void).cxx_destruct;
- (id)_errorForSigningCertificateOverrideInManual;
- (id)_errorForProfile:(id)arg1 qualification:(id)arg2;
- (BOOL)_isAutomaticDevelopmentSpecifier:(id)arg1;
- (id)_signingCertificateWithError:(id *)arg1;
- (id)_profileLocatorWithError:(id *)arg1;
- (id)_snapshotIncludingProfileWithErrors:(id *)arg1;
- (id)parametersWithErrors:(id *)arg1;
- (id)initWithInputs:(id)arg1;

@end

@interface IDEDistributionResultStep : IDEDistributionStep
{
}

+ (id)propertyListForContext:(id)arg1;
+ (id)availableOptionsForPropertyList;
- (BOOL)loadFromPropertyList:(id)arg1 error:(id *)arg2;
- (id)providedOutputContextPropertyNames;
- (id)requiredInputContextPropertyNames;

@end

@interface IDEBatchFindAbstractResult : NSObject
{
    id _cachedIcon;
    DVTDocumentLocation *_location;
    SEL _childOrderingSelector;
    IDEBatchFindAbstractResult *_parent;
    long long _depth;
    NSString *_text;
    NSNumber *_initialSuggestedNumberOfLines;
    long long _suggestedOrder;
    struct _NSRange _highlightedTextRange;
}

@property(readonly) long long suggestedOrder; // @synthesize suggestedOrder=_suggestedOrder;
@property(readonly) NSNumber *initialSuggestedNumberOfLines; // @synthesize initialSuggestedNumberOfLines=_initialSuggestedNumberOfLines;
@property(readonly) struct _NSRange highlightedTextRange; // @synthesize highlightedTextRange=_highlightedTextRange;
@property(readonly) NSString *text; // @synthesize text=_text;
@property(readonly) long long depth; // @synthesize depth=_depth;
@property(readonly) IDEBatchFindAbstractResult *parent; // @synthesize parent=_parent;
@property(readonly) SEL childOrderingSelector; // @synthesize childOrderingSelector=_childOrderingSelector;
@property(readonly) DVTDocumentLocation *location; // @synthesize location=_location;
- (void).cxx_destruct;
- (long long)compareSuggestedOrder:(id)arg1;
- (id)textRepresentationForPasteboard;
- (id)generateFindResult;
- (BOOL)allowsSummarization;
- (BOOL)contributesToResultCount;
- (BOOL)contributesToFileResultCount;
- (long long)compareDocumentLocations:(id)arg1;
- (long long)compareText:(id)arg1;
- (long long)compareFilePaths:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithDocumentLocation:(id)arg1 text:(id)arg2 highlightedTextRange:(struct _NSRange)arg3 initialNumberOfLinesCalculator:(CDUnknownBlockType)arg4 parent:(id)arg5 suggestedOrder:(long long)arg6 childOrderingSelector:(SEL)arg7;

@end

@interface IDEBatchFindRootResult : IDEBatchFindAbstractResult
{
}

- (id)initWithChildOrderingSelector:(SEL)arg1;

@end

@interface IDEBatchFindFileResult : IDEBatchFindAbstractResult
{
    DVTFilePath *_filePath;
}

@property(readonly) DVTFilePath *filePath; // @synthesize filePath=_filePath;
- (void).cxx_destruct;
- (id)textRepresentationForPasteboard;
- (BOOL)allowsSummarization;
- (BOOL)contributesToResultCount;
- (BOOL)contributesToFileResultCount;
- (id)initWithFilePath:(id)arg1 parent:(id)arg2 suggestedOrder:(long long)arg3 childOrderingSelector:(SEL)arg4;

@end

@interface IDEBatchFindAbstractMatchResult : IDEBatchFindAbstractResult
{
    NSString *_contextText;
    struct _NSRange _contextTextMatchingRange;
}

@property(readonly) struct _NSRange contextTextMatchingRange; // @synthesize contextTextMatchingRange=_contextTextMatchingRange;
@property(readonly) NSString *contextText; // @synthesize contextText=_contextText;
- (void).cxx_destruct;
- (id)textRepresentationForPasteboard;
- (BOOL)allowsSummarization;
- (BOOL)contributesToResultCount;
- (BOOL)contributesToFileResultCount;
- (id)initWithDocumentLocation:(id)arg1 contextText:(id)arg2 contextTextMatchingRange:(struct _NSRange)arg3 initialNumberOfLinesCalculator:(CDUnknownBlockType)arg4 parent:(id)arg5;

@end

@interface IDEBatchFindTextResult : IDEBatchFindAbstractMatchResult
{
}

- (id)generateFindResult;

@end

@interface IDEBatchFindSymbolicResult : IDEBatchFindAbstractMatchResult
{
    IDEIndexSymbol *_symbol;
}

@property(retain) IDEIndexSymbol *symbol; // @synthesize symbol=_symbol;
- (void).cxx_destruct;
- (id)initWithDocumentLocation:(id)arg1 contextText:(id)arg2 contextTextMatchingRange:(struct _NSRange)arg3 initialNumberOfLinesCalculator:(CDUnknownBlockType)arg4 parent:(id)arg5 symbol:(id)arg6;

@end

@interface IDEBatchFindRegularExpressionResult : IDEBatchFindAbstractMatchResult
{
    NSRegularExpression *_regularExpression;
    NSTextCheckingResult *_textCheckingResult;
}

@property(readonly) NSTextCheckingResult *textCheckingResult; // @synthesize textCheckingResult=_textCheckingResult;
@property(readonly) NSRegularExpression *regularExpression; // @synthesize regularExpression=_regularExpression;
- (void).cxx_destruct;
- (id)generateFindResult;
- (id)initWithDocumentLocation:(id)arg1 contextText:(id)arg2 contextTextMatchingRange:(struct _NSRange)arg3 regularExpression:(id)arg4 textCheckingResult:(id)arg5 initialNumberOfLinesCalculator:(CDUnknownBlockType)arg6 parent:(id)arg7;

@end

@interface IDETestFailureBreakpoint : IDEBreakpoint
{
}

- (id)accessibilityDescription;
- (id)symbolNames;
- (id)displayName;
- (id)init;

@end

@interface IDEPlaygroundAuxiliarySourceFrameworkStructure : NSObject <NSSecureCoding>
{
    DVTFilePath *_buildProductsPath;
    NSString *_sourcesModuleName;
    DVTFilePath *_frameworkBundlePath;
    DVTFilePath *_originalResourcesDirectory;
    DVTFilePath *_resourcesFolderPath;
    DVTFilePath *_modulesFolderPath;
    DVTFilePath *_moduleBundlePath;
    DVTFilePath *_modulePath;
    DVTFilePath *_dylibPath;
}

+ (BOOL)supportsSecureCoding;
@property(readonly, copy) DVTFilePath *dylibPath; // @synthesize dylibPath=_dylibPath;
@property(readonly, copy) DVTFilePath *modulePath; // @synthesize modulePath=_modulePath;
@property(readonly, copy) DVTFilePath *moduleBundlePath; // @synthesize moduleBundlePath=_moduleBundlePath;
@property(readonly, copy) DVTFilePath *modulesFolderPath; // @synthesize modulesFolderPath=_modulesFolderPath;
@property(readonly, copy) DVTFilePath *resourcesFolderPath; // @synthesize resourcesFolderPath=_resourcesFolderPath;
@property(readonly, copy) DVTFilePath *originalResourcesDirectory; // @synthesize originalResourcesDirectory=_originalResourcesDirectory;
@property(readonly, copy) DVTFilePath *frameworkBundlePath; // @synthesize frameworkBundlePath=_frameworkBundlePath;
@property(readonly, copy) NSString *sourcesModuleName; // @synthesize sourcesModuleName=_sourcesModuleName;
@property(readonly, copy) DVTFilePath *buildProductsPath; // @synthesize buildProductsPath=_buildProductsPath;
- (void).cxx_destruct;
- (BOOL)removeDirectoryStructure:(id *)arg1;
- (BOOL)createDirectoryStructureIfNecessary:(id *)arg1;
- (BOOL)createDirectoryIfNecessary:(id *)arg1;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithBuildProductsPath:(id)arg1 resourcesDirectory:(id)arg2 sourcesModuleName:(id)arg3;

@end

@interface IDEPlaygroundAuxiliarySourceFrameworkLocation : NSObject <NSSecureCoding>
{
    IDEPlaygroundAuxiliarySourceFrameworkStructure *__structure;
}

+ (BOOL)supportsSecureCoding;
+ (id)auxiliarySourcesFrameworkNameForPlaygroundWithName:(id)arg1 isPage:(BOOL)arg2;
@property(readonly) IDEPlaygroundAuxiliarySourceFrameworkStructure *_structure; // @synthesize _structure=__structure;
- (void).cxx_destruct;
@property(readonly, copy) DVTFilePath *dylibPath;
@property(readonly, copy) DVTFilePath *buildProductsPath;
@property(readonly, copy) NSString *frameworkName;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithBuildProductsPath:(id)arg1 resourcesDirectory:(id)arg2 frameworkName:(id)arg3;

@end

@interface IDEPlaygroundSectionFileReference : NSObject
{
    long long _type;
    DVTFilePath *_filePath;
    DVTFilePath *_originalContentsFilePath;
}

@property(retain) DVTFilePath *originalContentsFilePath; // @synthesize originalContentsFilePath=_originalContentsFilePath;
@property(retain) DVTFilePath *filePath; // @synthesize filePath=_filePath;
@property long long type; // @synthesize type=_type;
- (void).cxx_destruct;
- (id)initWithType:(long long)arg1 filePath:(id)arg2 originalContentsFilePath:(id)arg3;

@end

@interface IDELocalizedStringsdictAdaptor : IDELocalizedPlistAdaptor
{
}

@end

@interface IDETestSchemeAction : IDELaunchTestSchemeAction
{
    NSMutableArray *_testableReferences;
    NSMutableArray *_loadingTestableReferences;
    BOOL _codeCoverageEnabled;
    DVTObservingToken *_testablesObservingToken;
    DVTObservingToken *_skippedTestsObservingToken;
    DVTObservingToken *_workspaceRunnableProductsToken;
    DVTNotificationToken *_buildablesToken;
    NSArray *_hostBuildableReferences;
    IDESchemeBuildableReference *_testBuildableReferenceToUseForMacroExpansion;
    BOOL _shouldUseLaunchSchemeArgsEnv;
    BOOL _suppressSimulatorApplication;
}

+ (id)keyPathsForValuesAffectingBuildableReferenceToUseForMacroExpansion;
+ (id)keyPathsForValuesAffectingTestBuildableReferences;
+ (id)keyPathsForValuesAffectingDoesNonActionWork;
+ (id)keyPathsForValuesAffectingSubtitle;
+ (void)forceCodeCoverageEnabledTo:(BOOL)arg1;
+ (void)initialize;
@property(nonatomic) BOOL suppressSimulatorApplication; // @synthesize suppressSimulatorApplication=_suppressSimulatorApplication;
@property(nonatomic) BOOL shouldUseLaunchSchemeArgsEnv; // @synthesize shouldUseLaunchSchemeArgsEnv=_shouldUseLaunchSchemeArgsEnv;
- (void).cxx_destruct;
- (id)selectedInternalDebuggerToolchainIdentifier;
- (int)internalDebuggerToolchainSelectionMode;
- (id)productTypesToIgnoreForSwiftDebuggerToolchain;
- (void)setTestOrTestable:(id)arg1 enabled:(BOOL)arg2;
- (void)disableTestsReferencedByTestableReference:(id)arg1;
- (void)_disableTestOrTestable:(id)arg1;
- (void)_enableTestOrTestable:(id)arg1;
- (void)_postEnabledStateNotification;
- (BOOL)isTestOrTestableEnabled:(id)arg1;
- (BOOL)isTestableEnabled:(id)arg1;
- (BOOL)isTestEnabled:(id)arg1;
- (id)_testableReferenceForTestable:(id)arg1;
- (BOOL)_isEnabledTest:(id)arg1 testableReference:(id)arg2;
- (BOOL)_isTestEditable:(id)arg1 testableReference:(id)arg2;
- (BOOL)needsNewSchemeVersionForLocationSimulation;
- (BOOL)needsNewSchemeVersionForAppDataPackages;
- (void)addMacroExpansion:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)addTestables:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setCodeCoverageEnabledFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setShouldUseLaunchSchemeArgsEnvFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)dvt_encodeRelationshipsWithXMLArchiver:(id)arg1 version:(id)arg2;
- (void)dvt_encodeAttributesWithXMLArchiver:(id)arg1 version:(id)arg2;
- (id)initFromXMLUnarchiver:(id)arg1 archiveVersion:(float)arg2;
- (void)primitiveInvalidate;
- (id)expandMacrosInString:(id)arg1 forBuildParameters:(id)arg2;
- (void)setBuildableReferenceToUseForMacroExpansion:(id)arg1;
- (id)buildableReferenceToUseForMacroExpansion;
- (BOOL)shouldDebugAppExtensions;
- (BOOL)shouldDebugXPCServices;
- (id)additionalOptions;
- (id)_additionalOptionEntries;
- (id)mutableEnvironmentVariableEntries;
- (id)environmentVariableEntries;
- (id)commandLineArgumentsForBuildParameters:(id)arg1;
- (id)mutableCommandLineArgumentEntries;
- (id)commandLineArgumentEntries;
- (void)_updateTestActionBuildableToUseForMacroExpansion;
- (void)setRunContext:(id)arg1;
@property(readonly, getter=isTestable) BOOL testable;
@property(readonly) NSArray *testBuildableReferences;
@property(readonly) NSArray *hostBuildableReferences;
- (void)testableDidChangeHost:(id)arg1;
- (void)_prepareForMessageTracer:(id)arg1;
- (id)testOperationWithSchemeOperationParameters:(id)arg1 testManager:(id)arg2 withBuildOperation:(id)arg3 buildParameters:(id)arg4 schemeCommand:(id)arg5 actionRecord:(id)arg6 testRunSpecifications:(id)arg7 deviceAvailableChecker:(CDUnknownBlockType)arg8 outError:(id *)arg9 actionCallbackBlock:(CDUnknownBlockType)arg10;
- (id)workingDirectoryForBuildParameters:(id)arg1;
- (id)effectiveBlueprintForOptimizationProfileGenerationForSchemeCommand:(id)arg1;
@property BOOL codeCoverageEnabled;
- (id)runnable;
- (BOOL)doesNonActionWork;
- (id)subtitle;
- (id)name;
- (void)_commonInit;
- (id)init;

// Remaining properties
@property(readonly) NSMutableArray *mutableTestableReferences; // @dynamic mutableTestableReferences;
@property(copy) NSArray *testableReferences; // @dynamic testableReferences;

@end

@interface IDELocalizationBundleExportContext : IDELocalizationWorkContext <IDELocalizationWorkProvider>
{
    NSURL *_destinationUrl;
    IDEContainer<IDELocalizedContainer> *_container;
    NSString *_sourceLanguage;
    NSArray *_targetLanguages;
}

+ (id)contextWithParent:(id)arg1 destinationUrl:(id)arg2 container:(id)arg3 sourceLanguage:(id)arg4 targetLanguages:(id)arg5;
@property(retain) NSArray *targetLanguages; // @synthesize targetLanguages=_targetLanguages;
@property(retain) NSString *sourceLanguage; // @synthesize sourceLanguage=_sourceLanguage;
@property(retain) IDEContainer<IDELocalizedContainer> *container; // @synthesize container=_container;
@property(retain) NSURL *destinationUrl; // @synthesize destinationUrl=_destinationUrl;
- (void).cxx_destruct;
- (id)work;
- (void)primitiveInvalidate;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IDELocalizationLanguageExportContext : IDELocalizationWorkContext <IDELocalizationWorkProvider>
{
    IDELocalizedResourcePopulationContext *_populationContext;
    NSURL *_destinationUrl;
    IDEContainer<IDELocalizedContainer> *_container;
    NSString *_sourceLanguage;
    NSString *_targetLanguage;
    NSXMLDocument *_exportXLIFF;
}

+ (id)contextWithParent:(id)arg1 populationContext:(id)arg2 destinationUrl:(id)arg3 container:(id)arg4 sourceLanguage:(id)arg5 targetLanguage:(id)arg6;
@property(retain) NSXMLDocument *exportXLIFF; // @synthesize exportXLIFF=_exportXLIFF;
@property(retain) NSString *targetLanguage; // @synthesize targetLanguage=_targetLanguage;
@property(retain) NSString *sourceLanguage; // @synthesize sourceLanguage=_sourceLanguage;
@property(retain) IDEContainer<IDELocalizedContainer> *container; // @synthesize container=_container;
@property(retain) NSURL *destinationUrl; // @synthesize destinationUrl=_destinationUrl;
@property(retain) IDELocalizedResourcePopulationContext *populationContext; // @synthesize populationContext=_populationContext;
- (void).cxx_destruct;
- (id)work;
- (void)primitiveInvalidate;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IDELocalizationExporter : NSObject <IDELocalizationWorkProgress, DVTInvalidation>
{
    IDEStream *_exportWork;
    IDELocalizationBundleExportContext *_exportContext;
    long long _workDone;
    long long _workOutstanding;
    DVTNotificationToken *_localizationPhaseObserver;
    DVTNotificationToken *_localizationWorkItemIncrementObserver;
    DVTNotificationToken *_localizationWorkItemDecrementObserver;
    BOOL _complete;
    long long _progress;
    NSString *_phase;
    NSString *_workTitle;
    CDUnknownBlockType _onErrorBlock;
    CDUnknownBlockType _onCompletedBlock;
}

+ (void)initialize;
+ (id)exporterToURL:(id)arg1 container:(id)arg2 sourceLanguage:(id)arg3 targetLanguages:(id)arg4;
@property(copy) CDUnknownBlockType onCompletedBlock; // @synthesize onCompletedBlock=_onCompletedBlock;
@property(copy) CDUnknownBlockType onErrorBlock; // @synthesize onErrorBlock=_onErrorBlock;
@property(readonly, copy) NSString *workTitle; // @synthesize workTitle=_workTitle;
@property(copy) NSString *phase; // @synthesize phase=_phase;
@property BOOL complete; // @synthesize complete=_complete;
@property long long progress; // @synthesize progress=_progress;
- (void).cxx_destruct;
- (void)cancel;
- (void)start;
- (void)primitiveInvalidate;
- (id)initWithExportContext:(id)arg1;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface IDESchemeActionRecord : NSObject
{
    IDESchemeCommand *_schemeCommand;
    long long _schemeTask;
    NSString *_title;
    NSDate *_startedTime;
    NSDate *_endedTime;
    IDESchemeActionResult *_buildResult;
    IDESchemeActionResult *_actionResult;
    IDESchemeActionRunDestinationRecord *_runDestinationRecord;
    DVTFilePath *_localRecordDirectoryFilePath;
    DVTFilePath *_creatingWorkspaceFilePath;
}

+ (long long)schemeTaskForString:(id)arg1;
+ (id)stringForSchemeTask:(long long)arg1;
+ (id)schemeCommandForString:(id)arg1;
+ (id)keyPathsForValuesAffectingTestsFailedCount;
+ (id)keyPathsForValuesAffectingTestsCount;
+ (id)keyPathsForValuesAffectingAnalyzerWarningCount;
+ (id)keyPathsForValuesAffectingErrorCount;
+ (id)keyPathsForValuesAffectingWarningCount;
+ (id)keyPathsForValuesAffectingStatus;
+ (BOOL)getSchemeTask:(long long *)arg1 fromDictionaryRepresentation:(id)arg2;
@property(retain, nonatomic) DVTFilePath *creatingWorkspaceFilePath; // @synthesize creatingWorkspaceFilePath=_creatingWorkspaceFilePath;
@property(retain, nonatomic) DVTFilePath *localRecordDirectoryFilePath; // @synthesize localRecordDirectoryFilePath=_localRecordDirectoryFilePath;
@property(readonly, nonatomic) IDESchemeActionRunDestinationRecord *runDestinationRecord; // @synthesize runDestinationRecord=_runDestinationRecord;
@property(retain, nonatomic) IDESchemeActionResult *actionResult; // @synthesize actionResult=_actionResult;
@property(retain, nonatomic) IDESchemeActionResult *buildResult; // @synthesize buildResult=_buildResult;
@property(copy, nonatomic) NSDate *endedTime; // @synthesize endedTime=_endedTime;
@property(copy, nonatomic) NSDate *startedTime; // @synthesize startedTime=_startedTime;
@property(copy, nonatomic) NSString *title; // @synthesize title=_title;
@property(readonly, nonatomic) long long schemeTask; // @synthesize schemeTask=_schemeTask;
@property(retain, nonatomic) IDESchemeCommand *schemeCommand; // @synthesize schemeCommand=_schemeCommand;
- (void).cxx_destruct;
@property(readonly, nonatomic) unsigned long long testsFailedCount;
@property(readonly, nonatomic) unsigned long long testsCount;
@property(readonly, nonatomic) unsigned long long analyzerWarningCount;
@property(readonly, nonatomic) unsigned long long errorCount;
@property(readonly, nonatomic) unsigned long long warningCount;
@property(readonly, nonatomic) long long status;
- (id)description;
- (void)close;
- (BOOL)updateWithDictionaryRepresentation:(id)arg1 forSchemeActionsInvocationRecord:(id)arg2;
- (id)dictionaryRepresentationForSchemeActionsInvocationRecord:(id)arg1;
- (BOOL)saveReturningError:(id *)arg1;
- (void)recordRunDestination:(id)arg1;
- (id)init;
- (id)initWithLocalRecordDirectoryFilePath:(id)arg1 creatingWorkspaceFilePath:(id)arg2 schemeTask:(long long)arg3;

@end

@interface IDESchemeActionDeviceRecord : NSObject
{
    BOOL _concreteDevice;
    NSString *_name;
    NSString *_operatingSystemVersion;
    NSString *_operatingSystemVersionWithBuildNumber;
    NSString *_nativeArchitecture;
    NSString *_modelName;
    NSString *_modelCode;
    NSString *_modelUTI;
    NSString *_identifier;
    NSString *_cpuKind;
    unsigned long long _cpuCount;
    unsigned long long _cpuSpeedInMHz;
    unsigned long long _busSpeedInMHz;
    unsigned long long _ramSizeInMegabytes;
    unsigned long long _physicalCPUCoresPerPackage;
    unsigned long long _logicalCPUCoresPerPackage;
    IDESchemeActionPlatformRecord *_platformRecord;
}

@property(readonly, nonatomic) IDESchemeActionPlatformRecord *platformRecord; // @synthesize platformRecord=_platformRecord;
@property unsigned long long logicalCPUCoresPerPackage; // @synthesize logicalCPUCoresPerPackage=_logicalCPUCoresPerPackage;
@property unsigned long long physicalCPUCoresPerPackage; // @synthesize physicalCPUCoresPerPackage=_physicalCPUCoresPerPackage;
@property unsigned long long ramSizeInMegabytes; // @synthesize ramSizeInMegabytes=_ramSizeInMegabytes;
@property unsigned long long busSpeedInMHz; // @synthesize busSpeedInMHz=_busSpeedInMHz;
@property unsigned long long cpuSpeedInMHz; // @synthesize cpuSpeedInMHz=_cpuSpeedInMHz;
@property unsigned long long cpuCount; // @synthesize cpuCount=_cpuCount;
@property(copy) NSString *cpuKind; // @synthesize cpuKind=_cpuKind;
@property(readonly, copy) NSString *identifier; // @synthesize identifier=_identifier;
@property(readonly, copy, nonatomic) NSString *modelUTI; // @synthesize modelUTI=_modelUTI;
@property(readonly, copy, nonatomic) NSString *modelCode; // @synthesize modelCode=_modelCode;
@property(readonly, copy, nonatomic) NSString *modelName; // @synthesize modelName=_modelName;
@property(readonly, copy) NSString *nativeArchitecture; // @synthesize nativeArchitecture=_nativeArchitecture;
@property(readonly, copy, nonatomic) NSString *operatingSystemVersionWithBuildNumber; // @synthesize operatingSystemVersionWithBuildNumber=_operatingSystemVersionWithBuildNumber;
@property(readonly, copy) NSString *operatingSystemVersion; // @synthesize operatingSystemVersion=_operatingSystemVersion;
@property(readonly, getter=isConcreteDevice) BOOL concreteDevice; // @synthesize concreteDevice=_concreteDevice;
@property(readonly, copy) NSString *name; // @synthesize name=_name;
- (void).cxx_destruct;
- (id)dictionaryRepresentation;
- (id)initWithDictionaryRepresentation:(id)arg1;
- (id)initWithDevice:(id)arg1;
- (id)initWithDeviceName:(id)arg1 isConcreteDevice:(BOOL)arg2 nativeArchitecture:(id)arg3 operatingSystemVersion:(id)arg4 operatingSystemVersionWithBuildNumber:(id)arg5 modelName:(id)arg6 modelCode:(id)arg7 modelUTI:(id)arg8 identifier:(id)arg9 cpuKind:(id)arg10 cpuCount:(unsigned long long)arg11 cpuSpeedInMHz:(unsigned long long)arg12 busSpeedInMHz:(unsigned long long)arg13 ramSizeInMegabytes:(unsigned long long)arg14 physicalCPUCoresPerPackage:(unsigned long long)arg15 logicalCPUCoresPerPackage:(unsigned long long)arg16 platformRecord:(id)arg17;

@end

@interface IDESchemeActionRunDestinationRecord : NSObject
{
    NSString *_displayName;
    NSString *_targetArchitecture;
    IDESchemeActionDeviceRecord *_targetDeviceRecord;
    IDESchemeActionDeviceRecord *_localComputerRecord;
    IDESchemeActionSDKRecord *_targetSDKRecord;
}

+ (id)recordForRunDestination:(id)arg1;
@property(readonly, nonatomic) IDESchemeActionSDKRecord *targetSDKRecord; // @synthesize targetSDKRecord=_targetSDKRecord;
@property(readonly, nonatomic) IDESchemeActionDeviceRecord *localComputerRecord; // @synthesize localComputerRecord=_localComputerRecord;
@property(readonly, nonatomic) IDESchemeActionDeviceRecord *targetDeviceRecord; // @synthesize targetDeviceRecord=_targetDeviceRecord;
@property(readonly, copy) NSString *targetArchitecture; // @synthesize targetArchitecture=_targetArchitecture;
@property(readonly, copy) NSString *displayName; // @synthesize displayName=_displayName;
- (void).cxx_destruct;
- (id)dictionaryRepresentation;
- (id)initWithDictionaryRepresentation:(id)arg1;
- (id)initWithDisplayName:(id)arg1 targetArchitecture:(id)arg2 targetDevice:(id)arg3 targetSDK:(id)arg4 localComputer:(id)arg5;

@end

@interface IDESchemeActionPlatformRecord : NSObject
{
    NSString *_userDescription;
    NSString *_identifier;
}

@property(readonly, copy) NSString *identifier; // @synthesize identifier=_identifier;
@property(readonly, copy) NSString *userDescription; // @synthesize userDescription=_userDescription;
- (void).cxx_destruct;
- (id)dictionaryRepresentation;
- (id)initWithDictionaryRepresentation:(id)arg1;
- (id)initWithUserDescription:(id)arg1 identifier:(id)arg2;

@end

@interface IDESchemeActionSDKRecord : NSObject
{
    BOOL _internal;
    NSString *_displayName;
    NSString *_canonicalName;
    NSString *_operatingSystemVersion;
}

@property(readonly, getter=isInternal) BOOL internal; // @synthesize internal=_internal;
@property(readonly, copy) NSString *operatingSystemVersion; // @synthesize operatingSystemVersion=_operatingSystemVersion;
@property(readonly, copy) NSString *canonicalName; // @synthesize canonicalName=_canonicalName;
@property(readonly, copy) NSString *displayName; // @synthesize displayName=_displayName;
- (void).cxx_destruct;
- (id)dictionaryRepresentation;
- (id)initWithDictionaryRepresentation:(id)arg1;
- (id)initWithSDK:(id)arg1;
- (id)initWithDisplayName:(id)arg1 canonicalName:(id)arg2 operatingSystemVersion:(id)arg3 isInternal:(BOOL)arg4;

@end

@interface IDESourceControlManager : NSObject
{
    NSMutableArray *_registeredWorkspaces;
    NSObject<OS_dispatch_queue> *_registeredWorkspacesDispatchQueue;
    NSMutableArray *_legacyWorkingTrees;
    NSMutableArray *_extensions;
    NSOperationQueue *_operationQueue;
    NSMutableArray *_holdingQueue;
    DVTDispatchLock *_holdingQueueLock;
    long long _maxConcurrentOperationCount;
    long long _authenticationRetryAttempts;
    BOOL _enableSourceControl;
    BOOL _localStatusCheckingEnabled;
    BOOL _remoteStatusCheckingEnabled;
    BOOL _automaticallyAddNewFiles;
    BOOL _waitingForAuthentication;
    BOOL _showMergeCommits;
    BOOL _shouldLoadAccounts;
    NSObject<OS_dispatch_queue> *_legacyWorkingTreesDispatchQueue;
    _TtC13IDEFoundation27SourceControlAccountManager *_accountManager;
    _TtC13IDEFoundation31SourceControlFingerprintManager *_fingerprintManager;
    double _minimumLocalStatusRequestDelay;
    NSString *_pathOfWorkspaceJustCheckedOut;
}

+ (id)keyPathsForValuesAffectingRepositories;
+ (id)sourceControlProfilingLogAspect;
+ (id)sourceControlAuthenticationLogAspect;
+ (id)sourceControlFileScanningLogAspect;
+ (id)sourceControlReachabilityLogAspect;
+ (id)sourceControlLogAspect;
+ (id)sharedSourceControlManager;
@property(retain) NSString *pathOfWorkspaceJustCheckedOut; // @synthesize pathOfWorkspaceJustCheckedOut=_pathOfWorkspaceJustCheckedOut;
@property(readonly) double minimumLocalStatusRequestDelay; // @synthesize minimumLocalStatusRequestDelay=_minimumLocalStatusRequestDelay;
@property(readonly) _TtC13IDEFoundation31SourceControlFingerprintManager *fingerprintManager; // @synthesize fingerprintManager=_fingerprintManager;
@property(readonly) _TtC13IDEFoundation27SourceControlAccountManager *accountManager; // @synthesize accountManager=_accountManager;
@property(readonly) BOOL shouldLoadAccounts; // @synthesize shouldLoadAccounts=_shouldLoadAccounts;
@property(readonly) NSArray *extensions; // @synthesize extensions=_extensions;
- (void).cxx_destruct;
- (void)cancelRequest:(id)arg1;
- (void)performRequest:(id)arg1 withCompletionBlock:(CDUnknownBlockType)arg2;
- (void)performRequest:(id)arg1 waitUntilFinished:(BOOL)arg2 withCompletionBlock:(CDUnknownBlockType)arg3;
- (void)handleError:(id)arg1 forRequest:(id)arg2 operation:(id)arg3 waitUntilFinished:(BOOL)arg4 withCompletionBlock:(CDUnknownBlockType)arg5;
- (BOOL)validateRequest:(id)arg1 error:(id *)arg2;
@property BOOL waitingForAuthentication; // @synthesize waitingForAuthentication=_waitingForAuthentication;
@property long long maxConcurrentOperationCount; // @synthesize maxConcurrentOperationCount=_maxConcurrentOperationCount;
- (void)reportSourceControlOperation:(unsigned long long)arg1;
- (void)_reportConfigurationOperation:(unsigned long long)arg1;
- (void)_reportCommitNavigatorOperation:(unsigned long long)arg1;
- (void)_reportEditorOperation:(unsigned long long)arg1;
- (void)_reportMenuOperation:(unsigned long long)arg1;
- (void)_reportCommitOperation:(unsigned long long)arg1;
- (void)workingTreeRootForFilePath:(id)arg1 sourceControlExtension:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (id)_upgradableSVNWorkingTreeRootForFilePath:(id)arg1;
- (id)_svnOriginURLForFilePath:(id)arg1;
- (void)workingTreeForFilePath:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (id)workingTreeForFilePath:(id)arg1;
- (void)unregisterWorkspace:(id)arg1;
- (void)registerWorkspace:(id)arg1;
- (id)workingCopyForFilePath:(id)arg1;
- (id)extensionForRequest:(id)arg1;
- (id)commonExtensionForPaths:(id)arg1;
- (id)extensionForURL:(id)arg1;
- (id)extensionToUseForFilePath:(id)arg1;
- (void)scanForExtensionsInFilePath:(id)arg1;
- (id)extensionsAtDirectoryPath:(id)arg1;
- (void)invalidateExtensionsForFilePath:(id)arg1;
- (id)extensionsAssociatedWithFilePath:(id)arg1;
- (void)removeAssociatedExtension:(id)arg1 withPath:(id)arg2;
- (void)associateExtension:(id)arg1 withPath:(id)arg2;
- (id)extensionMatchingDirectoryIdentifier:(id)arg1;
- (id)extensionsMatchingProtocol:(id)arg1;
- (id)extensionMatchingIdentifier:(id)arg1;
- (void)addLegacyWorkingTree:(id)arg1;
@property(readonly) NSArray *legacyWorkingTrees; // @synthesize legacyWorkingTrees=_legacyWorkingTrees;
@property BOOL showMergeCommits;
@property BOOL automaticallyAddNewFiles;
@property BOOL remoteStatusCheckingEnabled; // @synthesize remoteStatusCheckingEnabled=_remoteStatusCheckingEnabled;
@property BOOL localStatusCheckingEnabled; // @synthesize localStatusCheckingEnabled=_localStatusCheckingEnabled;
@property BOOL enableSourceControl;
- (id)_blacklistedDirectories;
- (id)_directoryIdentifiers;
- (void)loadExtensions;
- (void)loadPlugIns;
- (id)defaultExtension;
- (id)initWithSavedAccounts:(BOOL)arg1;

@end

@interface IDEIndexClassSymbol : IDEIndexContainerSymbol
{
    IDEIndexCollection *_subClasses;
}

- (void).cxx_destruct;
- (id)allInterfaces;
- (id)interfaces;
- (id)allProtocols;
- (id)protocols;
- (id)allOccurrencesOfMembers:(id)arg1;
- (id)allSubclasses;
- (id)subclasses;
- (id)allSuperclasses;
- (id)superclasses;
- (id)categories;
- (id)gkInspectableProperties;
- (id)ibOutletCollectionProperties;
- (id)ibOutletCollectionVariables;
- (id)ibOutletCollections;
- (id)ibOutletProperties;
- (id)ibOutletVariables;
- (id)ibOutlets;
- (id)ibActionMethods;
- (id)properties;
- (id)instanceVariables;
- (id)classVariables;
- (id)instanceMethods;
- (id)classMethods;

@end

@interface IDELocalizationWorkExtractLocStrings : IDELocalizationWorkContext
{
}

+ (id)contextWithParent:(id)arg1 sourceFiles:(id)arg2 temporaryDirectory:(id)arg3;
@property(readonly, copy) NSNumber *signalStatus;
@property(readonly, copy) NSNumber *exitStatus;
@property(readonly, copy) NSString *temporaryDirectory;
@property(readonly, copy) NSArray *sourceFiles;

@end

@interface IDEIndexProtocolSymbol : IDEIndexContainerSymbol
{
}

- (id)allImplementingClasses;
- (id)implementingClasses;
- (id)subProtocols;
- (id)allSuperProtocols;
- (id)superProtocols;
- (id)properties;
- (id)instanceMethods;
- (id)classMethods;

@end

@interface IDEDebuggerSpecifier : NSObject
{
    NSString *_correspondingLauncherIdentifier;
    DVTExtension *_extension;
}

+ (BOOL)_isDefaultNonDebuggerLauncher:(id)arg1;
+ (id)_launcherExtensions;
+ (BOOL)requiresDebuggerForDevice:(id)arg1;
+ (id)defaultDebuggerSpecifierForWorkspace:(id)arg1;
+ (id)_launcherPluginIdentifierForDebuggerPlugin:(id)arg1;
+ (id)allDebuggerSpecifiersIncludingNone;
+ (id)allDebuggerSpecifiers;
+ (id)_specifierWithIdentifier:(id)arg1 inArray:(id)arg2;
+ (id)specifierWithIdentifierInAllDebuggerSpecifiersIncludingNone:(id)arg1;
+ (id)specifierWithIdentifierInAllSpecifiers:(id)arg1;
@property(readonly) DVTExtension *extension; // @synthesize extension=_extension;
- (void).cxx_destruct;
@property(readonly) NSString *correspondingLauncherIdentifier;
@property(readonly) NSString *identifier;
@property(readonly) NSString *displayName;
- (id)_initWithExtension:(id)arg1;

@end

@interface _IDEPlaygroundPageFileReference : IDEFileReference
{
}

- (BOOL)structureEditSetName:(id)arg1 inContext:(id)arg2;
- (BOOL)structuredEditingAcceptsInsertionIntoGroup:(id)arg1;
- (id)_initWithPath:(id)arg1;

@end

@interface IDEPlaygroundPageCommon : IDEPlaygroundCommon
{
    IDEPlaygroundSharedContext *_playgroundContext;
    IDEPlaygroundCommonSharedContext *_pageContext;
}

- (void).cxx_destruct;
- (void)_didChangeContainerFilePath:(id)arg1 inContext:(id)arg2;
- (void)_willChangeContainerFilePath:(id)arg1 inContext:(id)arg2;
- (id)context;
@property(readonly, nonatomic) IDEPlaygroundCommonSharedContext *pageContext;
- (id)playgroundContext;
- (id)initWithFilePath:(id)arg1 extension:(id)arg2 workspace:(id)arg3 options:(id)arg4 error:(id *)arg5;

@end

@interface IDEArchivedInAppContent : IDEArchivedContent
{
}

+ (id)keyPathsForValuesAffectingInAppContentPath;
+ (id)archivedContentPathPlistKey;
+ (id)archivedContentPropertiesPlistKey;
+ (BOOL)fillInfoDictionary:(id)arg1 forContentAtPath:(id)arg2 inArchiveProductsDirectory:(id)arg3;
+ (id)soleArchivedContentRelativePathInDirectory:(id)arg1;
- (long long)autodetectedFormatForPackaging;
- (BOOL)supportsPackagingAsFormat:(long long)arg1;
- (id)teamIdentifier;
@property(readonly) DVTFilePath *inAppContentPath;

@end

@interface IDEDistributionAnalyzeArchiveStep : IDEDistributionStep
{
}

+ (id)propertyListForContext:(id)arg1;
+ (id)availableOptionsForPropertyList;
+ (id)archivedTeamForContext:(id)arg1;
- (BOOL)loadFromPropertyList:(id)arg1 error:(id *)arg2;
- (BOOL)analyzeArchiveWithError:(id *)arg1;
- (BOOL)populateSigningStateFromArchiveWithError:(id *)arg1;
- (BOOL)populateTeamFromArchiveWithError:(id *)arg1;
- (BOOL)populateTopLevelDistributionItemsIfNecessaryWithError:(id *)arg1;
- (id)providedOutputContextPropertyNames;
- (id)requiredInputContextPropertyNames;

@end

@interface IDETestBundleBaselineRecord : NSObject
{
    NSMutableDictionary *_infoDict;
    NSMutableDictionary *_baselinesByRunDestinationUUIDDict;
}

+ (BOOL)_validatePropertyList:(id)arg1 errorString:(id *)arg2;
+ (id)_baselineRecordForBlueprint:(id)arg1 withRunDestinationRecord:(id)arg2 createIfNecessary:(BOOL)arg3 versionedFileManager:(id)arg4 filePath:(id *)arg5 error:(id *)arg6;
+ (id)baselineRecordForBlueprint:(id)arg1 withRunDestinationRecord:(id)arg2 createIfNecessary:(BOOL)arg3 versionedFileManager:(id)arg4 filePath:(id *)arg5 error:(id *)arg6;
+ (id)_baselineRecordFilePathInBundleBaselineWithFilePath:(id)arg1 withRunDestinationRecord:(id)arg2 createIfNecessary:(BOOL)arg3 workspace:(id)arg4 versionedFileManager:(id)arg5 error:(id *)arg6;
+ (void)initialize;
- (void).cxx_destruct;
- (void)unionWithBundleBaselineRecord:(id)arg1;
- (void)setBaselineRecord:(id)arg1 forRunDestination:(id)arg2;
- (id)baselineRecordForRunDestination:(id)arg1;
- (id)runDestinations;
@property unsigned long long version;
- (BOOL)writeToFilePath:(id)arg1 workspace:(id)arg2 versionedFileManager:(id)arg3 error:(id *)arg4;
- (id)initWithFilePath:(id)arg1 error:(id *)arg2;
- (id)init;

@end

@interface IDEProvisioningInputs : NSObject
{
    BOOL _validateCrossConfigurationIssues;
    DVTPlatform *_platform;
    NSSet *_codesignableDeviceSnapshots;
    NSDictionary *_entitlements;
    NSSet *_signingCertificates;
    NSSet *_provisioningProfiles;
    IDEProfileSpecifier *_profileSpecifier;
    IDEProvisionableSnapshot *_provisionableSnapshot;
    NSString *_configuration;
    DVTPortalProfilePurpose *_provisioningPurpose;
}

+ (id)_codesignableDevicesFromSnapshots:(id)arg1 forPlatform:(id)arg2 provisioningPurpose:(id)arg3;
+ (id)_platformForProvisionableSnapshot:(id)arg1 configuration:(id)arg2;
+ (id)inputsFromProvisionableSnapshot:(id)arg1 configuration:(id)arg2 codesignableDeviceSnapshots:(id)arg3 signingCertificates:(id)arg4 provisioningProfiles:(id)arg5 entitlements:(id)arg6 validateAcrossConfigurations:(BOOL)arg7 error:(id *)arg8;
+ (id)inputsFromProvisionableSnapshot:(id)arg1 configuration:(id)arg2 codesignableDeviceSnapshots:(id)arg3 signingCertificates:(id)arg4 provisioningProfiles:(id)arg5 entitlements:(id)arg6 error:(id *)arg7;
@property(readonly, nonatomic) BOOL validateCrossConfigurationIssues; // @synthesize validateCrossConfigurationIssues=_validateCrossConfigurationIssues;
@property(retain, nonatomic) DVTPortalProfilePurpose *provisioningPurpose; // @synthesize provisioningPurpose=_provisioningPurpose;
@property(retain, nonatomic) NSString *configuration; // @synthesize configuration=_configuration;
@property(retain, nonatomic) IDEProvisionableSnapshot *provisionableSnapshot; // @synthesize provisionableSnapshot=_provisionableSnapshot;
@property(readonly, nonatomic) IDEProfileSpecifier *profileSpecifier; // @synthesize profileSpecifier=_profileSpecifier;
@property(readonly, nonatomic) NSSet *provisioningProfiles; // @synthesize provisioningProfiles=_provisioningProfiles;
@property(readonly, nonatomic) NSSet *signingCertificates; // @synthesize signingCertificates=_signingCertificates;
@property(readonly, nonatomic) NSDictionary *entitlements; // @synthesize entitlements=_entitlements;
@property(readonly, nonatomic) NSSet *codesignableDeviceSnapshots; // @synthesize codesignableDeviceSnapshots=_codesignableDeviceSnapshots;
@property(readonly, nonatomic) DVTPlatform *platform; // @synthesize platform=_platform;
- (void).cxx_destruct;
@property(readonly, nonatomic) NSString *certificateIdentifier;
@property(readonly, nonatomic) DVTPortalCertificateType *certificateType;
- (id)certificateTypeBasedOnAutomaticSelectors;
@property(readonly, nonatomic) DVTPortalProfileType *profileType;
- (BOOL)needsBundleIdentifier;
- (BOOL)supportsProfile;
@property(readonly, nonatomic) BOOL needsProfile;
- (BOOL)signingEnabled;
@property(readonly, nonatomic) long long provisioningStyle;
@property(readonly, nonatomic) DVTAppIDFeatures *appIDFeatures;
@property(readonly, nonatomic) id <IDEProvisioningBasicTeam> team;
@property(readonly, nonatomic) NSString *bundleIdentifier;
@property(readonly, nonatomic) NSString *provisionableName;
- (BOOL)_validateForManualProvisioningWithError:(id *)arg1;
- (BOOL)_validateForAutomaticCrossConfigIssues:(id *)arg1;
- (BOOL)_validateForAutomaticProvisioningWithError:(id *)arg1;
- (BOOL)_validateBasicSetupWithError:(id *)arg1;
- (BOOL)validateWithError:(id *)arg1;

@end

@interface IDEScriptingElement : NSObject
{
    id _container;
    id _accessor;
}

@property(retain) id accessor; // @synthesize accessor=_accessor;
@property(retain) id container; // @synthesize container=_container;
- (void).cxx_destruct;
- (id)objectSpecifier;
- (id)objectSpecifierAsProperty;
- (id)objectSpecifierByIndex;
- (id)objectSpecifierByName:(id)arg1;
- (id)objectSpecifierByID:(id)arg1;
- (id)newScriptingObjectOfClass:(Class)arg1 forValueForKey:(id)arg2 withContentsValue:(id)arg3 properties:(id)arg4;
- (void)setScriptingID:(id)arg1;
- (void)setName:(id)arg1;
- (id)description;

@end

@interface IDEScriptingWrapper : IDEScriptingElement
{
    id _client;
}

+ (id)wrapSingleton:(id)arg1 inWrapper:(Class)arg2 forContainer:(id)arg3 andAccessor:(id)arg4;
+ (id)wrapItems:(id)arg1 inWrapper:(Class)arg2 forContainer:(id)arg3 andAccessor:(id)arg4;
+ (id)wrapItem:(id)arg1 inWrapper:(Class)arg2 forContainer:(id)arg3 andAccessor:(id)arg4;
@property(retain) id client; // @synthesize client=_client;
- (void).cxx_destruct;
- (id)objectSpecifier;
- (BOOL)isEqual:(id)arg1;
- (id)scriptingID;
- (id)name;
- (id)description;

@end

@interface IDEScriptingProxy : IDEScriptingElement
{
    id _key;
    id _collection;
}

+ (id)wrapDictionary:(id)arg1 inProxy:(Class)arg2 forContainer:(id)arg3 andAccessor:(id)arg4;
+ (id)wrapItemOfDictionary:(id)arg1 forKey:(id)arg2 inProxy:(Class)arg3 forContainer:(id)arg4 andAccessor:(id)arg5;
@property(retain) id collection; // @synthesize collection=_collection;
@property(retain) id key; // @synthesize key=_key;
- (void).cxx_destruct;
- (id)objectSpecifier;
- (BOOL)isEqual:(id)arg1;
- (void)setValue:(id)arg1;
- (id)value;
- (id)scriptingID;
- (id)name;
- (id)description;

@end

@interface IDESchemeWrapper : IDEScriptingWrapper
{
}

- (id)scriptingID;

@end

@interface IDERunDestinationWrapper : IDEScriptingWrapper
{
    NSString *_disambiguatedDisplayName;
}

+ (id)wrapItem:(id)arg1 withDisambiguatedName:(id)arg2 forContainer:(id)arg3 andAccessor:(id)arg4;
- (void).cxx_destruct;
- (id)targetCompanionDevice;
- (id)targetDevice;
- (id)platform;
- (id)architecture;
- (id)name;
- (id)objectSpecifierByID:(id)arg1;
- (id)scriptingID;

@end

@interface IDEDeviceWrapper : NSObject
{
    id <DVTBasicDevice> _device;
    id _container;
    NSString *_accessor;
}

+ (id)deviceWrapperForDevice:(id)arg1 forContainer:(id)arg2 andAccessor:(id)arg3;
@property(readonly, copy) NSString *accessor; // @synthesize accessor=_accessor;
@property(readonly) id container; // @synthesize container=_container;
@property(readonly) id <DVTBasicDevice> device; // @synthesize device=_device;
- (void).cxx_destruct;
- (id)deviceModel;
- (id)operatingSystemVersion;
- (id)deviceIdentifier;
- (BOOL)generic;
- (id)name;
- (id)objectSpecifier;

@end

@interface IDEScriptingSchemeActionResult : IDEScriptingElement
{
    BOOL _didCancelEnqueuingAction;
    NSError *_error;
    IDESchemeActionsInvocationRecord *_invocationRecord;
    NSString *_identifier;
    NSMutableArray *_buildErrors;
    NSMutableArray *_buildWarnings;
    NSMutableArray *_analyzerIssues;
    NSMutableArray *_testFailures;
}

@property(readonly) NSMutableArray *testFailures; // @synthesize testFailures=_testFailures;
@property(readonly) NSMutableArray *analyzerIssues; // @synthesize analyzerIssues=_analyzerIssues;
@property(readonly) NSMutableArray *buildWarnings; // @synthesize buildWarnings=_buildWarnings;
@property(readonly) NSMutableArray *buildErrors; // @synthesize buildErrors=_buildErrors;
@property(retain) NSString *identifier; // @synthesize identifier=_identifier;
@property(readonly) IDESchemeActionsInvocationRecord *invocationRecord; // @synthesize invocationRecord=_invocationRecord;
@property BOOL didCancelEnqueuingAction; // @synthesize didCancelEnqueuingAction=_didCancelEnqueuingAction;
@property(retain) NSError *error; // @synthesize error=_error;
- (void).cxx_destruct;
- (id)sdefSupport_testFailures;
- (id)sdefSupport_analyzerIssues;
- (id)sdefSupport_buildWarnings;
- (id)sdefSupport_buildErrors;
- (void)_updateMyIssues:(id)arg1 fromSummaries:(id)arg2 forAccessor:(id)arg3;
- (id)sdefSupport_errorText;
- (id)sdefSupport_actionLog;
- (id)sdefSupport_buildLog;
- (id)_logFromBuildInsteadOfAction:(BOOL)arg1;
- (BOOL)sdefSupport_completed;
- (unsigned int)sdefSupport_status;
- (id)objectSpecifier;
- (id)scriptingID;
- (id)initWithInvocationRecord:(id)arg1 container:(id)arg2 andAccessor:(id)arg3;
- (id)init;

@end

@interface IDEScriptingSchemeActionIssue : IDEScriptingElement
{
    IDESchemeActionIssueSummary *_issueSummary;
}

@property(readonly) IDESchemeActionIssueSummary *issueSummary; // @synthesize issueSummary=_issueSummary;
- (void).cxx_destruct;
- (id)sdefSupport_endingColumnNumber;
- (id)sdefSupport_startingColumnNumber;
- (id)sdefSupport_endingLineNumber;
- (id)sdefSupport_startingLineNumber;
- (id)sdefSupport_filePath;
- (id)sdefSupport_message;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
- (id)objectSpecifier;
- (id)initWithIssueSummary:(id)arg1 container:(id)arg2 andAccessor:(id)arg3;
- (id)init;

@end

@interface XCBuildConfigurationTypeWrapper : IDEScriptingWrapper
{
}

@end

@interface IDESchemeActionResult : NSObject
{
    DVTObservingToken *_logRecordingToken;
    IDESchemeActionCodeCoverage *_coverageReport;
    NSMutableArray *_warningSummaries;
    NSMutableArray *_errorSummaries;
    NSMutableArray *_analyzerWarningSummaries;
    NSMutableArray *_testFailureSummaries;
    NSMutableArray *_testableSummaries;
    BOOL _localLogFileIsCurrent;
    BOOL _remoteLogNeedsFetch;
    BOOL _remoteTestSummaryNeedsFetch;
    BOOL _remoteCodeCoverageNeedsFetch;
    int _status;
    NSString *_resultName;
    NSError *_error;
    IDEActivityLogSection *_log;
    id _remoteLogIdentifier;
    unsigned long long _warningCount;
    unsigned long long _errorCount;
    unsigned long long _analyzerWarningCount;
    unsigned long long _testsCount;
    unsigned long long _testsFailedCount;
    id _remoteTestSummaryIdentifier;
    id _remoteCodeCoverageIdentifier;
    NSString *_testSummaryPath;
    NSString *_codeCoveragePath;
    NSString *_logPath;
    DVTFilePath *_localCodeCoverageFilePath;
    DVTFilePath *_testSessionTemporaryDirectoryPath;
    DVTFilePath *_localResultDirectoryFilePath;
    DVTFilePath *_creatingWorkspaceFilePath;
    NSHashTable *_blueprintsForShowingIssues;
}

+ (int)actionResultStatusForString:(id)arg1;
+ (id)stringForActionResultStatus:(int)arg1;
+ (id)testableSummariesForFilePath:(id)arg1 loadAttachments:(BOOL)arg2 runDestinationRecord:(id *)arg3 error:(id *)arg4;
+ (BOOL)automaticallyNotifiesObserversOfLog;
@property(retain, nonatomic) NSHashTable *blueprintsForShowingIssues; // @synthesize blueprintsForShowingIssues=_blueprintsForShowingIssues;
@property(retain, nonatomic) DVTFilePath *creatingWorkspaceFilePath; // @synthesize creatingWorkspaceFilePath=_creatingWorkspaceFilePath;
@property(retain, nonatomic) DVTFilePath *localResultDirectoryFilePath; // @synthesize localResultDirectoryFilePath=_localResultDirectoryFilePath;
@property(retain, nonatomic) DVTFilePath *testSessionTemporaryDirectoryPath; // @synthesize testSessionTemporaryDirectoryPath=_testSessionTemporaryDirectoryPath;
@property(retain, nonatomic) DVTFilePath *localCodeCoverageFilePath; // @synthesize localCodeCoverageFilePath=_localCodeCoverageFilePath;
@property(copy, nonatomic) NSString *logPath; // @synthesize logPath=_logPath;
@property(copy, nonatomic) NSString *codeCoveragePath; // @synthesize codeCoveragePath=_codeCoveragePath;
@property(copy, nonatomic) NSString *testSummaryPath; // @synthesize testSummaryPath=_testSummaryPath;
@property(nonatomic) BOOL remoteCodeCoverageNeedsFetch; // @synthesize remoteCodeCoverageNeedsFetch=_remoteCodeCoverageNeedsFetch;
@property(copy, nonatomic) id remoteCodeCoverageIdentifier; // @synthesize remoteCodeCoverageIdentifier=_remoteCodeCoverageIdentifier;
@property(nonatomic) BOOL remoteTestSummaryNeedsFetch; // @synthesize remoteTestSummaryNeedsFetch=_remoteTestSummaryNeedsFetch;
@property(copy, nonatomic) id remoteTestSummaryIdentifier; // @synthesize remoteTestSummaryIdentifier=_remoteTestSummaryIdentifier;
@property(nonatomic) unsigned long long testsFailedCount; // @synthesize testsFailedCount=_testsFailedCount;
@property(nonatomic) unsigned long long testsCount; // @synthesize testsCount=_testsCount;
@property(nonatomic) unsigned long long analyzerWarningCount; // @synthesize analyzerWarningCount=_analyzerWarningCount;
@property(nonatomic) unsigned long long errorCount; // @synthesize errorCount=_errorCount;
@property(nonatomic) unsigned long long warningCount; // @synthesize warningCount=_warningCount;
@property(nonatomic) BOOL remoteLogNeedsFetch; // @synthesize remoteLogNeedsFetch=_remoteLogNeedsFetch;
@property(copy, nonatomic) id remoteLogIdentifier; // @synthesize remoteLogIdentifier=_remoteLogIdentifier;
@property(nonatomic) BOOL localLogFileIsCurrent; // @synthesize localLogFileIsCurrent=_localLogFileIsCurrent;
@property(retain, nonatomic) IDEActivityLogSection *log; // @synthesize log=_log;
@property(copy, nonatomic) NSError *error; // @synthesize error=_error;
@property(nonatomic) int status; // @synthesize status=_status;
@property(copy, nonatomic) NSString *resultName; // @synthesize resultName=_resultName;
@property(retain, nonatomic) NSMutableArray *testableSummaries; // @synthesize testableSummaries=_testableSummaries;
@property(retain, nonatomic) NSMutableArray *testFailureSummaries; // @synthesize testFailureSummaries=_testFailureSummaries;
@property(retain, nonatomic) NSMutableArray *analyzerWarningSummaries; // @synthesize analyzerWarningSummaries=_analyzerWarningSummaries;
@property(retain, nonatomic) NSMutableArray *errorSummaries; // @synthesize errorSummaries=_errorSummaries;
@property(retain, nonatomic) NSMutableArray *warningSummaries; // @synthesize warningSummaries=_warningSummaries;
- (void).cxx_destruct;
- (BOOL)updateLocalCodeCoverageWithRemoteCodeCoverage:(id)arg1 forSchemeActionRecord:(id)arg2 error:(id *)arg3;
- (BOOL)saveCodeCoverageWithError:(id *)arg1;
@property(readonly, copy, nonatomic) IDESchemeActionCodeCoverage *coverageReport;
- (BOOL)updateLocalTestSummaryWithRemoteTestSummary:(id)arg1 forSchemeActionRecord:(id)arg2 error:(id *)arg3;
- (BOOL)saveTestSummariesForTestableSummaryFilePath:(id)arg1 runDestinationRecord:(id)arg2 error:(id *)arg3;
- (BOOL)saveTestSummariesForSchemeActionRecord:(id)arg1 error:(id *)arg2;
- (id)testSummaryFormatVersionString;
@property(readonly, nonatomic) DVTFilePath *localTestSummaryFilePath;
- (void)_readIssueSummaries;
- (id)_issueSummaryForMessage:(id)arg1 blueprint:(id)arg2;
- (void)filterWarningsToBuildables:(id)arg1;
- (BOOL)waitUntilBuildLogHasBeenClosed:(id)arg1 error:(id *)arg2;
- (BOOL)loadInMemoryLogFromLocalLogFileReturningError:(id *)arg1;
- (BOOL)flushInMemoryLogIfPossibleReturningError:(id *)arg1;
- (BOOL)saveInMemoryLogReturningError:(id *)arg1;
- (BOOL)updateLocalLogWithRemoteLogData:(id)arg1 error:(id *)arg2;
@property(readonly, nonatomic) DVTFilePath *localLogFilePath;
- (id)description;
- (BOOL)updateWithDictionaryRepresentation:(id)arg1 forSchemeActionsInvocationRecord:(id)arg2;
- (id)dictionaryRepresentationForSchemeActionsInvocationRecord:(id)arg1;
- (BOOL)saveForSchemeActionRecord:(id)arg1 error:(id *)arg2;
- (void)dealloc;
- (id)init;
- (id)initWithResultName:(id)arg1 localResultDirectoryFilePath:(id)arg2 creatingWorkspaceFilePath:(id)arg3;

@end

@interface IDEGroupCore : IDEContainerItemCore <IDEGroupCore>
{
    id <IDEContainerCore> _parentContainer;
    NSString *_name;
    NSArray *_subitems;
}

@property(copy) NSArray *subitems; // @synthesize subitems=_subitems;
@property(copy) NSString *name; // @synthesize name=_name;
- (void)setParentContainer:(id)arg1;
@property(readonly) id <IDEContainerCore> parentContainer;
- (void).cxx_destruct;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(retain) id <IDEGroupCore> parentGroup;
@property(copy) NSString *path;
@property(readonly) Class superclass;

@end

@interface IDEInstallCommandLineVerb : IDEBuildCommandLineVerb
{
}

+ (id)synthesizedOverridingBuildPropertiesWithEnvironment:(id)arg1;

@end

@interface IDEBatchFindAbstractQuery : NSObject
{
    BOOL _canceled;
    IDEBatchFindQuerySpecification *_specification;
    IDEWorkspace *_workspace;
    id <IDEBatchFindQueryDelegate> _delegate;
    IDEBatchFindLineWrappingParameters *_initialLineWrappingParameters;
    CDUnknownBlockType _initialNumberOfLinesCalculator;
    IDEBatchFindAbstractResult *_rootResult;
}

+ (id)queryTermPlaceholderText;
+ (BOOL)supportsPatterns;
+ (BOOL)supportsCaseMatching;
+ (BOOL)supportsAnchorning;
+ (BOOL)supportsQueryAction:(long long)arg1;
+ (id)displayName;
@property(readonly, getter=isCanceled) BOOL canceled; // @synthesize canceled=_canceled;
@property(readonly) IDEBatchFindAbstractResult *rootResult; // @synthesize rootResult=_rootResult;
@property(readonly) CDUnknownBlockType initialNumberOfLinesCalculator; // @synthesize initialNumberOfLinesCalculator=_initialNumberOfLinesCalculator;
@property(readonly) IDEBatchFindLineWrappingParameters *initialLineWrappingParameters; // @synthesize initialLineWrappingParameters=_initialLineWrappingParameters;
@property(readonly) __weak id <IDEBatchFindQueryDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly) IDEWorkspace *workspace; // @synthesize workspace=_workspace;
@property(readonly) IDEBatchFindQuerySpecification *specification; // @synthesize specification=_specification;
- (void).cxx_destruct;
- (void)userIsAttemptingToViewFaultedChildrenOfItem:(id)arg1;
@property(readonly) NSString *customContextMenuID;
- (BOOL)lazilyFaultsChildren;
- (void)execute;
- (void)initiateIgnoringUnsavedChanges;
- (id)activityReportTitle;
- (BOOL)requiresEditorDocumentsToSaveBeforeSearching;
- (id)makeRootResult;
- (void)cancel;
- (id)initWithSpecification:(id)arg1 initialNumberOfLinesCalculator:(CDUnknownBlockType)arg2 initialLineWrappingParameters:(id)arg3 workspace:(id)arg4 andDelegate:(id)arg5 error:(id *)arg6;

@end

@interface IDEContainerItem : DVTModelObject <DVTInvalidation, DVTReferenceResolverClient>
{
    IDEGroup *_superitem;
    NSMutableDictionary *_properties;
    NSString *_path;
    DVTReferenceResolver *_resolver;
    struct {
        unsigned int observingForBuildProductsRelative:1;
        unsigned int observingForCurrentSDKRelative:1;
        unsigned int observingForSourceTreeRelative:1;
    } _flags;
}

+ (id)keyPathsForValuesAffectingExpectedFilePath;
+ (id)keyPathsForValuesAffectingWrapsLines;
+ (id)keyPathsForValuesAffectingIndentWidth;
+ (id)keyPathsForValuesAffectingTabWidth;
+ (id)keyPathsForValuesAffectingUsesTabs;
+ (BOOL)automaticallyNotifiesObserversOfContainer;
+ (id)supportedCustomResolutionStrategies;
+ (id)supportedResolutionStrategies;
+ (void)initialize;
+ (id)containerRelativeResolutionStrategy;
+ (id)groupRelativeResolutionStrategy;
@property(readonly) NSString *path; // @synthesize path=_path;
@property(readonly) DVTReferenceResolver *resolver; // @synthesize resolver=_resolver;
- (void).cxx_destruct;
- (id)knownAssetTags;
- (id)assetTags;
- (void)setAssetTags:(id)arg1;
- (BOOL)canHaveAssetTags;
- (void)primitiveInvalidate;
- (void)_performMove:(id)arg1 newFilePath:(id)arg2 inContext:(id)arg3;
- (BOOL)_structureEditSetNameForItemsConnectedToFileSystem:(id)arg1 inContext:(id)arg2;
- (void)_takePathAndResolutionStrategiesFromContainerItem:(id)arg1;
@property(readonly) DVTFilePath *expectedFilePath;
@property(readonly) DVTFilePath *resolvedFilePath;
- (BOOL)_getPathAndResolutionStrategiesForAbsolutePath:(id)arg1 path:(id *)arg2 resolutionStrategies:(id *)arg3;
- (BOOL)_getPath:(id *)arg1 forStrategies:(id)arg2;
- (BOOL)_getPath:(id *)arg1 forStrategies:(id)arg2 absolutePath:(id)arg3;
- (id)_absolutePath;
- (id)resolutionContextForStrategies:(id)arg1;
@property(readonly) long long progress; // @dynamic progress;
- (id)issueLog;
@property(readonly) unsigned long long aggregateSourceControlConflictStatus;
@property(readonly) int aggregateSourceControlServerStatus;
@property(readonly) int aggregateSourceControlLocalStatus;
@property(readonly) unsigned long long conflictStateForUpdateOrMerge;
@property(readonly) int sourceControlServerStatus;
@property(readonly) int sourceControlLocalStatus;
- (void)_setContainerItemEdited;
@property(readonly, copy) NSString *description;
- (void)debugPrintStructure;
- (void)debugPrintInnerStructure;
@property(copy) DVTSourceCodeLanguage *language;
@property BOOL wrapsLines;
@property long long indentWidth;
@property long long tabWidth;
@property BOOL usesTabs;
@property unsigned long long textEncoding;
@property unsigned long long lineEndings;
- (id)_textPreferences;
- (void)_setProperty:(id)arg1 forKey:(id)arg2;
- (id)_propertyForKey:(id)arg1 searchParent:(BOOL)arg2;
- (id)_propertiesCreatingIfNeeded;
@property(readonly) NSDictionary *properties;
@property(readonly, copy, nonatomic) NSString *name; // @dynamic name;
@property(readonly, getter=isEditable) BOOL editable;
- (void)_didSetContainer;
- (void)_setContainer:(id)arg1;
- (BOOL)_willSetContainer:(id)arg1;
@property(readonly) IDEContainer *container;
- (void)_setSuperitem:(id)arg1;
@property(readonly) IDEGroup *superitem;
- (void)setPath:(id)arg1 resolutionStrategies:(id)arg2;
- (void)changePath:(id)arg1 resolutionStrategies:(id)arg2;
- (void)primitiveChangePath:(id)arg1 resolutionStrategies:(id)arg2;
- (void)resolverStrategiesDidChange:(id)arg1;
- (void)_configureReferenceResolutionStrategySpecificObservations;
- (void)_clearAllReferenceResolutionStrategySpecificObservations;
- (void)_setupSourceTreeRelativeObservations;
- (void)_clearSourceTreeRelativeObservations;
- (void)_setupCurrentSDKRelativeObservations;
- (void)_clearCurrentSDKRelativeObservations;
- (void)_setupBuildProductsRelativeObservations;
- (void)_clearBuildProductsRelativeObservations;
- (void)_workspaceBuildProductsLocationDidChange:(id)arg1;
- (void)_invalidateResolvedFilePath;
- (id)relativePathForPath:(id)arg1 resolutionStrategies:(id)arg2;
- (id)initWithPath:(id)arg1 resolutionStrategies:(id)arg2;
- (id)init;
- (BOOL)structuredEditingAcceptsInsertionIntoGroup:(id)arg1;
- (void)dvt_encodeRelationshipsWithXMLArchiver:(id)arg1 version:(id)arg2;
- (void)dvt_encodeAttributesWithXMLArchiver:(id)arg1 version:(id)arg2;
- (void)dvt_awakeFromXMLUnarchiver:(id)arg1;
- (void)setReferenceStrategyFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setLocationFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setPathFromUTF8String:(const char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setReferenceStyleFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface IDEPosixSpawnLaunchLocalService : IDERunDeviceService
{
}

+ (id)capability;
- (id)operationWorkerWithLaunchSession:(id)arg1 error:(id *)arg2;

@end

@interface IDEPosixSpawnLocalService : IDERunDeviceService
{
}

+ (id)capability;
- (id)operationWorkerWithLaunchSession:(id)arg1 error:(id *)arg2;
- (id)capabilitySequenceForLaunchSession:(id)arg1;

@end

@interface IDEPlaygroundDeviceChooser : NSObject
{
}

+ (id)bestDeviceForPlatform:(id)arg1 error:(out id *)arg2;

@end

@interface IDEDistributionItem : NSObject <NSCopying>
{
    BOOL _canHaveProvisioningProfile;
    BOOL _hasProvisioningProfile;
    DVTAppIDFeatures *_appIDFeatures;
    DVTFilePath *_path;
    DVTFilePath *_machOPath;
    IDEDistributionItem *_parent;
    NSArray *_childItems;
    id <IDEProvisioningBasicTeam> _team;
    NSString *_appID;
    NSString *_appIDWithoutPrefix;
    NSDictionary *_infoDictionary;
    NSDictionary *_entitlements;
    NSDictionary *_archivedUserEntitlements;
}

+ (id)platformForItemAtPath:(id)arg1 error:(id *)arg2;
+ (id)topLevelDistributionItemsFromProductsRoot:(id)arg1 logAspect:(id)arg2 error:(id *)arg3;
+ (id)_distributionItemForPath:(id)arg1 pathsToItems:(id)arg2 pathsToChildPaths:(id)arg3 logAspect:(id)arg4 error:(id *)arg5;
+ (id)flattenDistributionItems:(id)arg1;
+ (id)embeddedProvisioningProfileForItemAtPath:(id)arg1 error:(id *)arg2;
+ (id)canHaveProvisioningProfileForItemAtPath:(id)arg1 logAspect:(id)arg2 error:(id *)arg3;
+ (id)machOFileTypesAtPath:(id)arg1 error:(id *)arg2;
+ (id)archivedUserEntitlementsForItemAtPath:(id)arg1 error:(id *)arg2;
+ (id)itemWithPath:(id)arg1 childItems:(id)arg2 logAspect:(id)arg3 error:(id *)arg4;
+ (id)itemsSupportingProvisioning:(id)arg1 archive:(id)arg2 logAspect:(id)arg3;
@property(readonly, nonatomic) BOOL hasProvisioningProfile; // @synthesize hasProvisioningProfile=_hasProvisioningProfile;
@property(readonly, nonatomic) BOOL canHaveProvisioningProfile; // @synthesize canHaveProvisioningProfile=_canHaveProvisioningProfile;
@property(readonly, nonatomic) NSDictionary *archivedUserEntitlements; // @synthesize archivedUserEntitlements=_archivedUserEntitlements;
@property(readonly, nonatomic) NSDictionary *entitlements; // @synthesize entitlements=_entitlements;
@property(readonly, nonatomic) NSDictionary *infoDictionary; // @synthesize infoDictionary=_infoDictionary;
@property(readonly, nonatomic) NSString *appIDWithoutPrefix; // @synthesize appIDWithoutPrefix=_appIDWithoutPrefix;
@property(readonly, nonatomic) NSString *appID; // @synthesize appID=_appID;
@property(retain, nonatomic) id <IDEProvisioningBasicTeam> team; // @synthesize team=_team;
@property(readonly, nonatomic) NSArray *childItems; // @synthesize childItems=_childItems;
@property __weak IDEDistributionItem *parent; // @synthesize parent=_parent;
@property(readonly, nonatomic) DVTFilePath *machOPath; // @synthesize machOPath=_machOPath;
@property(readonly, nonatomic) DVTFilePath *path; // @synthesize path=_path;
- (void).cxx_destruct;
@property(readonly, nonatomic) DVTAppIDFeatures *appIDFeatures; // @synthesize appIDFeatures=_appIDFeatures;
- (id)platformWithError:(id *)arg1;
- (id)isAppleProvidedContentFromArchive:(id)arg1 error:(id *)arg2;
- (BOOL)isManuallyProvisionedFromArchive:(id)arg1 logAspect:(id)arg2;
- (id)debugDescription;
- (id)description;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
- (long long)compare:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
@property(readonly, nonatomic) NSString *bundleID;
- (id)initWithPath:(id)arg1 infoDictionary:(id)arg2 canHaveProvisioningProfile:(BOOL)arg3 hasProvisioningProfile:(BOOL)arg4 team:(id)arg5 appID:(id)arg6 appIDWithoutPrefix:(id)arg7 entitlements:(id)arg8 archivedUserEntitlements:(id)arg9 childItems:(id)arg10;
- (id)init;
- (BOOL)supportsProvisioning:(char *)arg1 forArchive:(id)arg2 error:(id *)arg3;
- (id)provisioningName;
- (long long)profileSupport;

@end

@interface IDEOnDiskActivityLogRecord : IDEActivityLogRecord
{
    IDEOnDiskLogStore_Impl *_logStore;
    IDEActivityLogSection *_strongFullLog;
    IDEActivityLogSection *_weakFullLog;
    IDEActivityLogSection *_recorderLog;
    DVTObservingToken *_recorderLogObservingToken;
    NSString *_uniqueIdentifier;
    IDETypeIdentifier *_domainType;
    NSString *_title;
    double _timeStartedRecording;
    double _timeStoppedRecording;
    DVTFileDataType *_documentType;
    NSString *_signature;
    NSString *_highLevelStatus;
}

+ (id)keyPathsForValuesAffectingIsRecording;
+ (unsigned long long)assertionBehaviorForKeyValueObservationsAtEndOfEvent;
@property(retain, nonatomic) IDEActivityLogSection *recorderLog; // @synthesize recorderLog=_recorderLog;
@property(nonatomic) double timeStoppedRecording; // @synthesize timeStoppedRecording=_timeStoppedRecording;
- (void).cxx_destruct;
- (id)description;
- (id)highLevelStatus;
- (id)signature;
- (id)documentType;
- (double)timeStartedRecording;
- (id)title;
- (id)domainType;
- (id)identifier;
- (id)uniqueIdentifier;
- (BOOL)isRecording;
- (void)_setRemovedState;
- (void)_makeWeak;
- (id)fullLogIfInMemory;
- (id)fullLogWithError:(id *)arg1;
- (void)removeSelfWithCompletionBlock:(CDUnknownBlockType)arg1;
- (BOOL)isRemoved;
- (void)tearDown;
- (void)addObserver:(id)arg1 forKeyPath:(id)arg2 options:(unsigned long long)arg3 context:(void *)arg4;
- (id)initWithUUID:(id)arg1 store:(id)arg2 cacheEntry:(id)arg3 updatedCache:(char *)arg4 error:(id *)arg5;
- (id)initWithLog:(id)arg1 entityIdentifier:(id)arg2 store:(id)arg3;
- (id)coverageReport;
- (id)coverageReportFilePath;
- (id)testableSummariesPlistFilePath;

@end

@interface IDERunOperationWorker : NSObject <DVTInvalidation>
{
    NSString *_extensionIdentifier;
    IDELaunchSession *_launchSession;
    IDERunOperationWorkerGroup *_workerGroup;
    NSError *_recoverablePreflightError;
    BOOL _isLongTerm;
    IDEExecutionRunnableTracker *_runnableTracker;
}

+ (void)initialize;
@property BOOL isLongTerm; // @synthesize isLongTerm=_isLongTerm;
@property(retain, nonatomic) IDEExecutionRunnableTracker *runnableTracker; // @synthesize runnableTracker=_runnableTracker;
@property(readonly) IDELaunchSession *launchSession; // @synthesize launchSession=_launchSession;
@property(readonly) NSString *extensionIdentifier; // @synthesize extensionIdentifier=_extensionIdentifier;
- (void).cxx_destruct;
- (void)primitiveInvalidate;
@property(readonly, copy) NSString *description;
- (void)terminate;
- (id)notFinishedReasonWithDepth:(unsigned long long)arg1;
- (void)finishedWithError:(id)arg1;
- (void)recoveredFromPreflightError;
- (void)start;
- (void)performWorkerAction;
- (BOOL)preflightWithError:(id *)arg1 recoverable:(char *)arg2;
- (void)startNextWorkerFromCompletedWorker:(id)arg1 error:(id)arg2;
- (void)setWorkerGroup:(id)arg1;
- (id)initWithExtensionIdentifier:(id)arg1 launchSession:(id)arg2;
- (id)init;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface IDEPlaygroundAuxiliarySourceCompilerOperation : DVTOperation
{
    BOOL _compilerLoggingEnabled;
    NSDate *_compilationDate;
    IDEPlaygroundAuxiliarySourceFrameworkLocation *_frameworkLocation;
    IDEActivityLogSection *_activityLogSection;
    IDEPlaygroundCommonSharedContext *_context;
    NSSet *_sourcesDirectorySwiftFiles;
    DVTTask *_compilerTask;
}

+ (id)logAspect;
@property(retain) DVTTask *compilerTask; // @synthesize compilerTask=_compilerTask;
@property(readonly, copy) NSSet *sourcesDirectorySwiftFiles; // @synthesize sourcesDirectorySwiftFiles=_sourcesDirectorySwiftFiles;
@property __weak IDEPlaygroundCommonSharedContext *context; // @synthesize context=_context;
@property(retain) IDEActivityLogSection *activityLogSection; // @synthesize activityLogSection=_activityLogSection;
@property(retain) IDEPlaygroundAuxiliarySourceFrameworkLocation *frameworkLocation; // @synthesize frameworkLocation=_frameworkLocation;
@property(retain) NSDate *compilationDate; // @synthesize compilationDate=_compilationDate;
- (void).cxx_destruct;
- (id)linkerBuildFlags;
@property(readonly) NSArray *basicBuildFlags;
- (BOOL)signFrameworkDylibAtPath:(id)arg1 error:(id *)arg2;
- (void)main;
- (void)cancel;
- (void)makeHighestPriority;
- (void)makeDefaultPriority;
- (id)initWithContext:(id)arg1 swiftSourceFiles:(id)arg2;

@end

@interface IDEBuildParameters : NSObject <NSCopying>
{
    IDEWorkspaceArenaSnapshot *_workspaceArenaSnapshot;
    NSString *_buildAction;
    IDESchemeCommand<IDEPrimitiveSchemeCommand> *_schemeCommand;
    NSString *_configurationName;
    IDERunDestination *_activeRunDestination;
    NSString *_activeArchitecture;
    IDEOverridingBuildProperties *_overridingProperties;
    IDEXBSBuildParameters *_xbsBuildParameters;
    unsigned long long _hash;
}

+ (void)registerDefaultXcconfigCommandLineOverridingProperties:(id)arg1;
@property(readonly) IDEXBSBuildParameters *xbsBuildParameters; // @synthesize xbsBuildParameters=_xbsBuildParameters;
@property(readonly, copy) IDEOverridingBuildProperties *overridingProperties; // @synthesize overridingProperties=_overridingProperties;
@property(readonly, copy) NSString *activeArchitecture; // @synthesize activeArchitecture=_activeArchitecture;
@property(readonly) IDERunDestination *activeRunDestination; // @synthesize activeRunDestination=_activeRunDestination;
@property(readonly, copy) NSString *configurationName; // @synthesize configurationName=_configurationName;
@property(readonly) IDESchemeCommand<IDEPrimitiveSchemeCommand> *schemeCommand; // @synthesize schemeCommand=_schemeCommand;
@property(readonly, copy) NSString *buildAction; // @synthesize buildAction=_buildAction;
@property(readonly, copy) IDEWorkspaceArenaSnapshot *workspaceArenaSnapshot; // @synthesize workspaceArenaSnapshot=_workspaceArenaSnapshot;
- (void).cxx_destruct;
- (id)dvt_detailedDebugDescription;
- (id)description;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)copyWithOverridingProperties:(id)arg1;
- (id)copyWithConfigurationName:(id)arg1;
- (id)copyWithAction:(id)arg1;
- (id)initForBuildWithWorkspaceArenaSnapshot:(id)arg1 configurationName:(id)arg2;
- (id)initForBuildWithConfigurationName:(id)arg1;
- (id)initForBuildWithWorkspaceArenaSnapshot:(id)arg1 schemeCommand:(id)arg2 configurationName:(id)arg3 activeRunDestination:(id)arg4 activeArchitecture:(id)arg5 overridingProperties:(id)arg6;
- (id)initForAction:(id)arg1 workspaceArenaSnapshot:(id)arg2 schemeCommand:(id)arg3 configurationName:(id)arg4 activeRunDestination:(id)arg5 activeArchitecture:(id)arg6 overridingProperties:(id)arg7;
- (id)initForAction:(id)arg1 workspaceArenaSnapshot:(id)arg2 schemeCommand:(id)arg3 configurationName:(id)arg4 activeRunDestination:(id)arg5 activeArchitecture:(id)arg6 overridingProperties:(id)arg7 xbsParameters:(id)arg8;
- (id)init;

@end

@interface IDEPlainTextTextFragmentProvider : IDETextFragmentProvider
{
}

+ (id)documentLocationForTextFragment:(id)arg1 range:(struct _NSRange)arg2;
- (BOOL)retainsFragments;
- (void)generateTextFragmentsForFilePath:(id)arg1 modificationDate:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;

@end

@interface IDEGaugeDocumentLocation : DVTDocumentLocation
{
    BOOL _displaysWhileTracing;
    NSString *_displayName;
    unsigned long long _priority;
}

+ (id)launchSessionFromURL:(id)arg1;
+ (id)URLForScheme:(id)arg1 launchSession:(id)arg2;
+ (id)URLForScheme:(id)arg1 launchSession:(id)arg2 otherQueryString:(id)arg3;
@property BOOL displaysWhileTracing; // @synthesize displaysWhileTracing=_displaysWhileTracing;
@property(readonly) unsigned long long priority; // @synthesize priority=_priority;
@property(readonly) NSString *displayName; // @synthesize displayName=_displayName;
- (void).cxx_destruct;
- (id)initWithDisplayName:(id)arg1 documentURL:(id)arg2 priority:(unsigned long long)arg3;

@end

@interface IDEDirectoryBasedCustomDataStore : DVTDirectoryBasedCustomDataStore
{
}

- (void)addSpecifier:(id)arg1 inWorkspace:(id)arg2 toSCMWithCompletionBlock:(CDUnknownBlockType)arg3;
- (void)scmStatusForSpecifier:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;

@end

@interface IDEPlaygroundResourcesSymlinkManager : NSObject <DVTInvalidation>
{
    NSMapTable *__contextToResourcesMonitorMap;
    NSMapTable *__monitorToModificationObservingTokenMap;
    NSOperationQueue *__compilerOperationQueue;
}

+ (void)initialize;
+ (BOOL)isResourceNeededForCompilation:(id)arg1;
+ (BOOL)isResourceTypeXIB:(id)arg1;
+ (BOOL)isResourceTypeStoryboard:(id)arg1;
+ (BOOL)isResourceTypeCoreMLModel:(id)arg1;
+ (id)sharedManager;
@property(retain) NSOperationQueue *_compilerOperationQueue; // @synthesize _compilerOperationQueue=__compilerOperationQueue;
@property(retain) NSMapTable *_monitorToModificationObservingTokenMap; // @synthesize _monitorToModificationObservingTokenMap=__monitorToModificationObservingTokenMap;
@property(retain) NSMapTable *_contextToResourcesMonitorMap; // @synthesize _contextToResourcesMonitorMap=__contextToResourcesMonitorMap;
- (void).cxx_destruct;
- (id)_createMonitorForPlaygroundContext:(id)arg1 dependency:(id)arg2;
- (void)_findOrCreateMonitorsForPlaygroundPageContext:(id)arg1;
- (void)_unregisterMonitor:(id)arg1;
- (void)unregisterPlaygroundPageContext:(id)arg1;
- (void)registerPlaygroundPageContext:(id)arg1;
- (BOOL)_reloadSymlinksForPlaygroundPageContext:(id)arg1 error:(id *)arg2;
- (void)reloadSymlinksForPlaygroundPageContext:(id)arg1;
- (void)primitiveInvalidate;
- (id)init;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface IDEProvisioningBuildOperationInfo : NSObject
{
    NSMutableSet *_automaticallyAuthorizedUserActionNames;
    BOOL _allowProvisioningRepairs;
}

@property BOOL allowProvisioningRepairs; // @synthesize allowProvisioningRepairs=_allowProvisioningRepairs;
- (void).cxx_destruct;
- (void)automaticallyAuthorizeUserActionsNamed:(id)arg1;
- (BOOL)shouldAutomaticallyAuthorizeUserActionNamed:(id)arg1;
- (id)init;

@end

@interface IDEManageCertificatesItemCollection : NSObject
{
    NSMutableDictionary *_itemsBySerialNumber;
    NSMutableSet *_items;
}

- (void).cxx_destruct;
- (void)removeItemWithSerialNumber:(id)arg1;
- (void)removeItem:(id)arg1;
- (void)addItem:(id)arg1;
- (id)itemWithSerialNumber:(id)arg1;
@property(readonly, nonatomic) NSSet *allSerialNumbers;
@property(readonly, nonatomic) NSSet *items;
- (id)init;

@end

@interface IDEDistributionCreateManifestStep : IDEDistributionProcessingStep
{
}

- (_Bool)runWithError:(id *)arg1;
- (_Bool)shouldSkip;
- (id)providedOutputContextPropertyNames;
- (id)requiredInputContextPropertyNames;
- (id)name;

@end

@interface IDEDistributionManifest : NSObject
{
    NSString *_name;
    NSString *_bundleIdentifier;
    NSString *_bundleVersion;
    NSString *_appURL;
    NSString *_displayImageURL;
    NSString *_fullSizeImageURL;
    NSString *_assetPackManifestURL;
}

@property(copy) NSString *assetPackManifestURL; // @synthesize assetPackManifestURL=_assetPackManifestURL;
@property(copy) NSString *fullSizeImageURL; // @synthesize fullSizeImageURL=_fullSizeImageURL;
@property(copy) NSString *displayImageURL; // @synthesize displayImageURL=_displayImageURL;
@property(copy) NSString *appURL; // @synthesize appURL=_appURL;
@property(copy) NSString *bundleVersion; // @synthesize bundleVersion=_bundleVersion;
@property(copy) NSString *bundleIdentifier; // @synthesize bundleIdentifier=_bundleIdentifier;
@property(copy) NSString *name; // @synthesize name=_name;
- (void).cxx_destruct;
- (id)dictionaryRepresentationForVariants:(id)arg1 error:(id *)arg2;
- (BOOL)isValidManifest;
- (BOOL)validateAssetPackManifestURL:(id *)arg1 error:(id *)arg2;
- (BOOL)validateFullSizeImageURL:(id *)arg1 error:(id *)arg2;
- (BOOL)validateDisplayImageURL:(id *)arg1 error:(id *)arg2;
- (BOOL)validateAppURL:(id *)arg1 error:(id *)arg2;
- (BOOL)_validateURL:(id)arg1 propertyName:(id)arg2 error:(id *)arg3;

@end

@interface IDEBuildOperationQueueSet : NSObject
{
    NSString *_identifier;
    NSOperationQueue *_copyTaskQueue;
    unsigned long long _slidingMaxNumberOfConcurrentCompileTasks;
    BOOL _didReduceConcurrencyDueToResourcePressure;
    NSOperationQueue *_compileTaskQueue;
    NSOperationQueue *_linkTaskQueue;
    DVTDispatchLock *_updateConcurrencyLock;
    NSDate *_lastCheckedResourcePressure;
    NSDate *_lastIncreasedConcurrency;
    NSObject<OS_dispatch_queue> *_addOperationQueue;
}

+ (id)sharedBuildTaskQueueSet;
+ (unsigned long long)maxNumberOfConcurrentCompileTasks;
+ (void)setMaxNumberOfConcurrentCompileTasks:(unsigned long long)arg1;
+ (void)initialize;
@property(readonly) NSString *identifier; // @synthesize identifier=_identifier;
- (void).cxx_destruct;
- (void)dealloc;
- (void)addLinkTaskOperation:(id)arg1 forCommand:(id)arg2;
- (void)addCopyTaskOperation:(id)arg1 forCommand:(id)arg2;
- (void)addCompileTaskOperation:(id)arg1 forCommand:(id)arg2;
- (void)changeMaximumOperationConcurrencyUsingThrottleFactor:(double)arg1;
- (void)resetOperationConcurrency;
- (void)updateOperationConcurrency;
- (id)initWithIdentifier:(id)arg1;

@end

@interface IDEIndexingJob : NSObject
{
    IDEIndexingEngine *_engine;
    id <IDEIndexable> _indexable;
    DVTFilePath *_file;
    NSSet *_dirtyFiles;
    IDEIndexImportSession *_session;
    NSDictionary *_settings;
    BOOL _canceled;
    BOOL _completed;
    BOOL _deferred;
    BOOL _treatAsDeferred;
    BOOL _onHold;
    BOOL _highPriority;
    NSSet *_oldDirtyFiles;
}

+ (void)initialize;
@property(readonly, nonatomic) NSSet *oldDirtyFiles; // @synthesize oldDirtyFiles=_oldDirtyFiles;
@property(nonatomic, getter=isHighPriority) BOOL highPriority; // @synthesize highPriority=_highPriority;
@property(nonatomic, getter=isOnHold) BOOL onHold; // @synthesize onHold=_onHold;
@property(nonatomic, getter=isDeferred) BOOL deferred; // @synthesize deferred=_deferred;
@property(retain, nonatomic) NSDictionary *settings; // @synthesize settings=_settings;
@property(retain, nonatomic) IDEIndexImportSession *session; // @synthesize session=_session;
@property(readonly, nonatomic) NSSet *dirtyFiles; // @synthesize dirtyFiles=_dirtyFiles;
@property(readonly, nonatomic) DVTFilePath *file; // @synthesize file=_file;
@property(readonly, nonatomic) id <IDEIndexable> indexable; // @synthesize indexable=_indexable;
@property(readonly, nonatomic) __weak IDEIndexingEngine *engine; // @synthesize engine=_engine;
- (void).cxx_destruct;
- (void)didCompleteWithLanguage:(id)arg1 pch:(BOOL)arg2;
- (void)didComplete;
- (BOOL)shouldContinue;
- (id)newMainFileWithSource:(id)arg1 modified:(id)arg2;
- (void)indexFile:(id)arg1 indexable:(id)arg2;
- (void)cancel;
- (void)run;
- (void)treatAsDeferred;
@property(readonly, nonatomic, getter=isModuleJob) BOOL moduleJob;
@property(readonly, nonatomic) NSString *target;
@property(readonly, nonatomic) IDEIndex *index;
- (void)addDirtyFile:(id)arg1;
- (id)initWithEngine:(id)arg1 indexable:(id)arg2 file:(id)arg3;
- (id)initWithEngine:(id)arg1 indexable:(id)arg2;

@end

@interface IDEProvisioningLogProvider : IDELogProvider
{
}

+ (id)keyPathsForValuesAffectingLogRecords;
- (id)ideModelObjectTypeIdentifier;
- (id)logRecords;

@end

@interface IDEIndexContainerSymbol : IDEIndexSymbol
{
}

- (id)children;

@end

@interface IDEBatchFindQuerySpecification : NSObject <NSCoding>
{
    BOOL _matchCase;
    IDEBatchFindQueryTerm *_queryTerm;
    long long _anchoring;
    Class _queryClass;
    IDEBatchFindNamedScopePredicate *_namedScope;
}

@property(readonly) IDEBatchFindNamedScopePredicate *namedScope; // @synthesize namedScope=_namedScope;
@property(readonly) Class queryClass; // @synthesize queryClass=_queryClass;
@property(readonly) long long anchoring; // @synthesize anchoring=_anchoring;
@property(readonly) BOOL matchCase; // @synthesize matchCase=_matchCase;
@property(readonly) IDEBatchFindQueryTerm *queryTerm; // @synthesize queryTerm=_queryTerm;
- (void).cxx_destruct;
- (BOOL)isEqual:(id)arg1;
- (BOOL)isEqualToSpecification:(id)arg1;
- (unsigned long long)hash;
- (id)termSymbolsForWorkspaceAssertingOnTypeMismatch:(id)arg1 useQualifiedNameParser:(BOOL)arg2 cancelWhen:(CDUnknownBlockType)arg3;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithQueryTerm:(id)arg1 queryClass:(Class)arg2 anchoring:(long long)arg3 matchCase:(BOOL)arg4 namedScope:(id)arg5;

@end

@interface IDETestRunSpecification : NSObject
{
    BOOL _useDestinationArtifacts;
    BOOL _useInternalIOSLaunchStyleRsync;
    BOOL _isAppHostedTestBundle;
    BOOL _isUITestBundle;
    BOOL _useUITargetAppProvidedByTests;
    BOOL _treatMissingBaselinesAsFailures;
    id <IDETestingSpecifier> _testingSpecifier;
    NSSet *_testIdentifiersToRun;
    NSSet *_testIdentifiersToSkip;
    DVTFilePath *_testBundleFilePath;
    NSString *_testBundleDestinationRelativePathString;
    IDERunnable *_testHostRunnable;
    NSString *_bundleIdForTestHost;
    NSArray *_filePathsForDependentProducts;
    NSSet *_bundleIDsForCrashReportEmphasis;
    NSString *_productModuleName;
    NSArray *_toolchainsSettingValue;
    NSArray *_commandLineArguments;
    NSDictionary *_environmentVariables;
    NSDictionary *_testingEnvironmentVariables;
    IDESchemeCommand<IDEPrimitiveSchemeCommand> *_schemeCommand;
    NSString *_testLanguage;
    NSString *_testRegion;
    long long _systemAttachmentLifetime;
    long long _userAttachmentLifetime;
    NSString *_UITestingTargetAppBundleId;
    DVTFilePath *_UITestingTargetAppPath;
    NSArray *_UITestingTargetAppCommandLineArguments;
    NSDictionary *_UITestingTargetAppEnvironmentVariables;
    NSString *_blueprintProviderRelativePath;
    NSString *_blueprintName;
    NSString *_baselineFilePathString;
    id <IDEBuildableProduct> _buildableProductForUIRecordingManager;
    id <IDEBuildableProduct> _buildableProductForDebugger;
    NSString *_clangProfileDataDirectoryPathString;
}

+ (id)specificationWithSpecifier:(id)arg1 testBundleFilePath:(id)arg2 testHostRunnable:(id)arg3 bundleIdForTestHost:(id)arg4 filePathsForDependentProducts:(id)arg5 bundleIDsForCrashReportEmphasis:(id)arg6 productModuleName:(id)arg7 toolchainsSettingValue:(id)arg8 testingEnvironmentVariables:(id)arg9 schemeCommand:(id)arg10 isUITestBundle:(BOOL)arg11 isAppHostedTestBundle:(BOOL)arg12 useUITargetAppProvidedByTests:(BOOL)arg13 UITestingTargetAppPath:(id)arg14 buildableProductForUIRecordingManager:(id)arg15 buildableProductForDebugger:(id)arg16 treatMissingBaselinesAsFailures:(BOOL)arg17 blueprintProviderRelativePath:(id)arg18 blueprintName:(id)arg19;
+ (id)groupLongTestIdentifiersFor:(id)arg1;
+ (id)languageAgnosticIdentifersFor:(id)arg1;
+ (CDUnknownBlockType)launchParametersBlockForShouldDebugXPCServices:(BOOL)arg1 shouldDebugAppExtensions:(BOOL)arg2 workspace:(id)arg3 pgoController:(id)arg4 schemeIdentifier:(id)arg5 workingDirectory:(id)arg6 selectedLauncherIdentifier:(id)arg7 selectedDebuggerIdentifier:(id)arg8 buildConfiguration:(id)arg9 buildParameters:(id)arg10 debugProcessAsUID:(unsigned int)arg11 diagnosticsDictionary:(id)arg12 testLanguage:(id)arg13 testRegion:(id)arg14 suppressSimulatorApplication:(BOOL)arg15;
+ (id)buildableProductForTestingSpecifier:(id)arg1;
+ (id)pathForBuildableProduct:(id)arg1 buildParameters:(id)arg2 runDestination:(id)arg3;
+ (id)testHostRunnableForUsesXCTRunner:(BOOL)arg1 runDestination:(id)arg2 buildableProduct:(id)arg3 buildParameters:(id)arg4 testingSpecifier:(id)arg5 outError:(id *)arg6;
+ (id)computedHostApplicationForBuildableProduct:(id)arg1 forRunDestination:(id)arg2 buildParameters:(id)arg3 workspace:(id)arg4;
+ (id)hostBuildableProductForBuildable:(id)arg1 buildParameters:(id)arg2 workspace:(id)arg3;
+ (BOOL)_path:(id)arg1 containsProductName:(id)arg2;
+ (id)bundleIDsForDependentProductsForBuildables:(id)arg1 buildParameters:(id)arg2;
+ (id)bundleIDForBuildableProduct:(id)arg1 buildParameters:(id)arg2;
+ (id)filePathsForDependentProductsForBuildables:(id)arg1 buildParameters:(id)arg2 runDestination:(id)arg3;
+ (id)_dependentProductsForBuildables:(id)arg1;
+ (id)baselinePlistFilePathForTestingSpecifier:(id)arg1 bundleBaselineFilePath:(id)arg2 baselineOverridesFilePath:(id)arg3 runDestination:(id)arg4 withError:(id *)arg5;
+ (id)environmentVariablesForBuildParameters:(id)arg1 runDestination:(id)arg2 hostApplication:(id)arg3 testHostBuildSetting:(id)arg4 testingSpecifier:(id)arg5 usesXCTRunner:(BOOL)arg6 testBundleFilePath:(id)arg7;
+ (id)environmentVariablesForBuildParameters:(id)arg1 runDestination:(id)arg2 testHost:(id)arg3 testingSpecifier:(id)arg4 usesXCTRunner:(BOOL)arg5 isAppHosted:(BOOL)arg6 testHostBuildSetting:(id)arg7;
+ (id)removePathPlaceholdersIn:(id)arg1 forTestRootPath:(id)arg2 workspace:(id)arg3;
+ (id)insertPathPlaceholdersIn:(id)arg1 forTestRootPath:(id)arg2 workspace:(id)arg3;
+ (void)applyRunSkippedTestsOnlyToSpecifications:(id)arg1;
+ (void)applyTestIdentifiersToRun:(id)arg1 toSpecifications:(id)arg2;
+ (void)applyTestIdentifiersToSkip:(id)arg1 toSpecifications:(id)arg2;
+ (BOOL)writeTestRunSpecifications:(id)arg1 toFilePath:(id)arg2 workspace:(id)arg3 error:(id *)arg4;
+ (id)testRunSpecificationsAtFilePath:(id)arg1 workspace:(id)arg2 error:(id *)arg3;
+ (id)testRunSpecificationsForTestingSpecifiers:(id)arg1 buildOperation:(id)arg2 withBuildParameters:(id)arg3 environmentVariables:(id)arg4 commandLineArguments:(id)arg5 includeClangProfileParameters:(BOOL)arg6 doingCodeCoverage:(BOOL)arg7 diagnosticsDictionary:(id)arg8 shouldDebugAppExtensions:(BOOL)arg9 testLanguage:(id)arg10 testRegion:(id)arg11 systemAttachmentLifetime:(long long)arg12 userAttachmentLifetime:(long long)arg13 internalIOSLaunchStyle:(int)arg14 error:(id *)arg15;
+ (id)outputDirectoriesForBuildables:(id)arg1 buildParameters:(id)arg2;
@property(retain) NSString *clangProfileDataDirectoryPathString; // @synthesize clangProfileDataDirectoryPathString=_clangProfileDataDirectoryPathString;
@property(retain) id <IDEBuildableProduct> buildableProductForDebugger; // @synthesize buildableProductForDebugger=_buildableProductForDebugger;
@property(retain) id <IDEBuildableProduct> buildableProductForUIRecordingManager; // @synthesize buildableProductForUIRecordingManager=_buildableProductForUIRecordingManager;
@property NSString *baselineFilePathString; // @synthesize baselineFilePathString=_baselineFilePathString;
@property BOOL treatMissingBaselinesAsFailures; // @synthesize treatMissingBaselinesAsFailures=_treatMissingBaselinesAsFailures;
@property(copy) NSString *blueprintName; // @synthesize blueprintName=_blueprintName;
@property(copy) NSString *blueprintProviderRelativePath; // @synthesize blueprintProviderRelativePath=_blueprintProviderRelativePath;
@property(copy) NSDictionary *UITestingTargetAppEnvironmentVariables; // @synthesize UITestingTargetAppEnvironmentVariables=_UITestingTargetAppEnvironmentVariables;
@property(copy) NSArray *UITestingTargetAppCommandLineArguments; // @synthesize UITestingTargetAppCommandLineArguments=_UITestingTargetAppCommandLineArguments;
@property(copy) DVTFilePath *UITestingTargetAppPath; // @synthesize UITestingTargetAppPath=_UITestingTargetAppPath;
@property(copy) NSString *UITestingTargetAppBundleId; // @synthesize UITestingTargetAppBundleId=_UITestingTargetAppBundleId;
@property BOOL useUITargetAppProvidedByTests; // @synthesize useUITargetAppProvidedByTests=_useUITargetAppProvidedByTests;
@property BOOL isUITestBundle; // @synthesize isUITestBundle=_isUITestBundle;
@property long long userAttachmentLifetime; // @synthesize userAttachmentLifetime=_userAttachmentLifetime;
@property long long systemAttachmentLifetime; // @synthesize systemAttachmentLifetime=_systemAttachmentLifetime;
@property(copy) NSString *testRegion; // @synthesize testRegion=_testRegion;
@property(copy) NSString *testLanguage; // @synthesize testLanguage=_testLanguage;
@property(retain) IDESchemeCommand<IDEPrimitiveSchemeCommand> *schemeCommand; // @synthesize schemeCommand=_schemeCommand;
@property(copy) NSDictionary *testingEnvironmentVariables; // @synthesize testingEnvironmentVariables=_testingEnvironmentVariables;
@property(copy) NSDictionary *environmentVariables; // @synthesize environmentVariables=_environmentVariables;
@property(copy) NSArray *commandLineArguments; // @synthesize commandLineArguments=_commandLineArguments;
@property(copy) NSArray *toolchainsSettingValue; // @synthesize toolchainsSettingValue=_toolchainsSettingValue;
@property(copy) NSString *productModuleName; // @synthesize productModuleName=_productModuleName;
@property(copy) NSSet *bundleIDsForCrashReportEmphasis; // @synthesize bundleIDsForCrashReportEmphasis=_bundleIDsForCrashReportEmphasis;
@property(copy) NSArray *filePathsForDependentProducts; // @synthesize filePathsForDependentProducts=_filePathsForDependentProducts;
@property BOOL isAppHostedTestBundle; // @synthesize isAppHostedTestBundle=_isAppHostedTestBundle;
@property BOOL useInternalIOSLaunchStyleRsync; // @synthesize useInternalIOSLaunchStyleRsync=_useInternalIOSLaunchStyleRsync;
@property BOOL useDestinationArtifacts; // @synthesize useDestinationArtifacts=_useDestinationArtifacts;
@property(copy) NSString *bundleIdForTestHost; // @synthesize bundleIdForTestHost=_bundleIdForTestHost;
@property(retain) IDERunnable *testHostRunnable; // @synthesize testHostRunnable=_testHostRunnable;
@property(copy) NSString *testBundleDestinationRelativePathString; // @synthesize testBundleDestinationRelativePathString=_testBundleDestinationRelativePathString;
@property(copy) DVTFilePath *testBundleFilePath; // @synthesize testBundleFilePath=_testBundleFilePath;
@property(copy, nonatomic) NSSet *testIdentifiersToSkip; // @synthesize testIdentifiersToSkip=_testIdentifiersToSkip;
@property(copy, nonatomic) NSSet *testIdentifiersToRun; // @synthesize testIdentifiersToRun=_testIdentifiersToRun;
@property(retain) id <IDETestingSpecifier> testingSpecifier; // @synthesize testingSpecifier=_testingSpecifier;
- (void).cxx_destruct;
- (id)testArchitectureForRunDestination:(id)arg1 buildParameters:(id)arg2;
- (id)clangProfileFilePathStringForRunDestination:(id)arg1;
- (id)clangRawProfileDirectoryPathStringForRunDestination:(id)arg1;
- (id)preparedTestEnvironmentVariablesForRunDestination:(id)arg1;
- (void)updateFromDictionaryRepresentation:(id)arg1;
- (id)dictionaryRepresentation;
- (void)applyLanguageAndRegionToArguments;
- (BOOL)validateRunDestination:(id)arg1 error:(id *)arg2;
@property(readonly) NSArray *testDependencySearchDirectories;

@end

@interface IDEDistributionCompileBitcodeStep : IDEDistributionProcessingStep
{
}

- (_Bool)runWithError:(id *)arg1;
- (_Bool)shouldSkip;
- (id)providedOutputContextPropertyNames;
- (id)requiredInputContextPropertyNames;
- (id)name;

@end

@interface IDEProvisioningLogDVTLogAspectListener : NSObject
{
    DVTLogAspect *_logAspect;
    int _logLevelThreshold;
    CDUnknownBlockType _handler;
    id _logHandlerToken;
}

- (void).cxx_destruct;
- (void)invalidate;
- (id)initWithLogAspect:(id)arg1 logLevelThreshold:(int)arg2 logHandler:(CDUnknownBlockType)arg3;

@end

@interface IDEFileReference : IDEContainerItem <IDEStructureEditing>
{
    DVTFilePath *_watchedFilePath;
    DVTFilePath *_oldWatchedFilePath;
    DVTFilePath *_resolvedFilePath;
    DVTFileDataType *_presumedFileDataType;
    DVTFileDataType *_lastKnownFileDataType;
    DVTFileDataType *_lastDiscoveredFileDataType;
    DVTFileDataType *_discoveredFileDataType;
    DVTExtension *_referencedContainerExtension;
    IDEContainer *_referencedContainer;
    DVTObservingToken *_referencedContainerIsValidObservingToken;
    DVTObservingToken *_workspaceIsValidObservingToken;
    BOOL _workaroundForProblem8727051;
    BOOL _stopResolvingReferencedContainers;
    int _sourceControlLocalStatus;
    int _sourceControlServerStatus;
    unsigned long long _conflictStateForUpdateOrMerge;
    int _aggregateSourceControlLocalStatus;
    int _aggregateSourceControlServerStatus;
    unsigned long long _aggregateSourceControlConflictStatus;
    BOOL _sourceControlLocalStatusNeedsUpdate;
    BOOL _sourceControlServerStatusNeedsUpdate;
    BOOL _sourceControlConflictStatusNeedsUpdate;
    BOOL _waitingForChangeNotificationsToResume;
    id <NSObject> _modelObjectGraphDidCoalesceNotificationToken;
    DVTFileDataType *_assignedFileDataType;
}

+ (BOOL)automaticallyNotifiesObserversOfAggregateSourceControlConflictStatus;
+ (BOOL)automaticallyNotifiesObserversOfAggregateSourceControlServerStatus;
+ (BOOL)automaticallyNotifiesObserversOfAggregateSourceControlLocalStatus;
+ (BOOL)automaticallyNotifiesObserversOfConflictStateForUpdateOrMerge;
+ (BOOL)automaticallyNotifiesObserversOfSourceControlServerStatus;
+ (BOOL)automaticallyNotifiesObserversOfSourceControlLocalStatus;
+ (id)keyPathsForValuesAffectingIssueLog;
+ (id)keyPathsForValuesAffectingExpectedFilePath;
+ (id)keyPathsForValuesAffectingName;
+ (id)fileReferenceAssociatesForPath:(id)arg1 forAllPathsToSameFile:(BOOL)arg2;
+ (id)fileReferenceAssociatesForPath:(id)arg1 forAllPathsToSameFile:(BOOL)arg2 workspace:(id)arg3;
+ (id)_fileReferenceAssociatesForPath:(id)arg1 forAllPathsToSameFile:(BOOL)arg2 workspace:(id)arg3;
+ (unsigned long long)assertionBehaviorAfterEndOfEventForSelector:(SEL)arg1;
+ (unsigned long long)assertionBehaviorForKeyValueObservationsAtEndOfEvent;
+ (void)initialize;
+ (id)keyPathsForValuesAffectingIdeModelObjectTypeIdentifier;
@property(copy, nonatomic) DVTFileDataType *assignedFileDataType; // @synthesize assignedFileDataType=_assignedFileDataType;
- (void).cxx_destruct;
- (BOOL)structureEditSetName:(id)arg1 inContext:(id)arg2;
- (id)_structureEditNameForSuggestedName:(id)arg1;
- (BOOL)canStructureEditName;
- (BOOL)structureEditRemoveSubitemsAtIndexes:(id)arg1 error:(id *)arg2;
- (BOOL)canStructureEditRemoveSubitemsAtIndexes:(id)arg1;
- (BOOL)structureEditSortSubitemsAtIndexes:(id)arg1 byNameOrByType:(BOOL)arg2;
- (BOOL)canStructureEditSortSubitemsAtIndexes:(id)arg1 byNameOrByType:(BOOL)arg2;
- (id)structureEditInsertFileURLs:(id)arg1 atIndex:(unsigned long long)arg2 createGroupsForFolders:(BOOL)arg3;
- (BOOL)canStructureEditInsertFileURLs:(id)arg1 atIndex:(unsigned long long)arg2;
- (id)structureEditInsertSubitems:(id)arg1 atIndex:(unsigned long long)arg2;
- (BOOL)canStructureEditInsertSubitems:(id)arg1 atIndex:(unsigned long long)arg2;
- (BOOL)allowUserModificationOfSubitems;
- (BOOL)allowRemovingContainerGroup;
- (void)fileReferenceWasConfigured;
- (void)_takeConfigurationFromFileReference:(id)arg1;
- (void)debugPrintInnerStructure;
- (void)_updateSourceControlStatusIfNeeded;
- (void)_updateAggregateSourceControlConflictStatus;
- (void)_updateAggregateSourceControlServerStatus;
- (void)_updateAggregateSourceControlLocalStatus;
- (void)_setAggregateSourceControlConflictStatus:(unsigned long long)arg1;
- (void)_setAggregateSourceControlServerStatus:(int)arg1;
- (void)_setAggregateSourceControlLocalStatus:(int)arg1;
- (void)_updateConflictStateForUpdateOrMerge;
@property unsigned long long conflictStateForUpdateOrMerge;
- (void)_updateSourceControlServerStatus;
@property int sourceControlServerStatus;
- (void)_updateSourceControlLocalStatus;
- (void)_updateSourceControlStatus;
- (void)_enqueueScmStatusUpdate;
@property int sourceControlLocalStatus;
- (unsigned long long)aggregateSourceControlConflictStatus;
- (int)aggregateSourceControlServerStatus;
- (int)aggregateSourceControlLocalStatus;
- (id)issueLog;
- (BOOL)isReferencedContainerLoaded;
- (void)_invalidateReferencedContainer;
- (void)_addObserversForReferencedContainer;
- (id)_referencedContainer;
- (void)_resolvedFilePathWasRecalculated;
- (void)_referencedContainerWasRecalculated;
@property(readonly) IDEContainer *referencedContainer;
- (void)_recalculateReferencedContainer;
- (BOOL)_workaroundForProblem8727051;
@property(readonly) DVTExtension *referencedContainerExtension;
- (id)_resolveReferencedContainerExtension;
- (BOOL)_isBuildProductReference;
- (void)_invalidateFileDataType;
@property(readonly) DVTFileDataType *discoveredFileDataType;
@property(readonly) DVTFileDataType *lastKnownFileDataType;
@property(readonly) DVTFileDataType *presumedFileDataType;
- (void)_assignedFileDataTypeDidChange;
@property(readonly) DVTFilePath *expectedFilePath;
- (BOOL)_resolvedFilePathIsValid;
- (void)_resolvedFilePathDidChange:(id)arg1;
- (BOOL)_filePathExists;
- (void)_invalidateResolvedFilePathUsingPath:(id)arg1 resolutionStrategies:(id)arg2;
- (void)_invalidateResolvedFilePath;
- (void)_resolvedFilePathWasInvalidated;
- (id)_absolutePath;
- (id)_resolvedFilePathIfAvailable;
@property(readonly) DVTFilePath *resolvedFilePath;
@property(readonly, copy, nonatomic) NSString *name;
- (void)_invalidateStartingWith:(id)arg1 changeBlock:(CDUnknownBlockType)arg2;
- (void)_invalidateStartingWith:(id)arg1;
- (void)changePath:(id)arg1 resolutionStrategies:(id)arg2;
- (void)_setContainer:(id)arg1;
- (void)primitiveInvalidate;
- (id)init;
- (id)ideFindScope_groupForGroupPath:(id)arg1;
- (id)ideFindScope_componentForGroupPath;
- (void)ideFindScope_accumulateFilePaths:(id)arg1 andVisitedContainers:(id)arg2;
@property(readonly) NSString *sourceControlRepositoryURLString;
@property(readonly) NSString *sourceControlCurrentRevision;
@property(readonly) NSString *sourceControlCurrentBranchString;
@property(readonly) IDESourceControlExtension *sourceControlExtension;
@property(readonly) IDESourceControlRepository *sourceControlRepository;
- (id)ideModelObjectTypeIdentifier;
- (void)setAssignedFileDataTypeFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)dvt_encodeRelationshipsWithXMLArchiver:(id)arg1 version:(id)arg2;
- (void)dvt_encodeAttributesWithXMLArchiver:(id)arg1 version:(id)arg2;
- (void)dvt_awakeFromXMLUnarchiver:(id)arg1;

@end

@interface IDEProvisioningTeamAccountPair : NSObject
{
    DVTPortalTeam *_team;
    DVTDeveloperAccount *_account;
}

@property(readonly, nonatomic) DVTDeveloperAccount *account; // @synthesize account=_account;
@property(readonly, nonatomic) DVTPortalTeam *team; // @synthesize team=_team;
- (void).cxx_destruct;
- (id)initWithTeam:(id)arg1 account:(id)arg2;

@end

@interface IDEExecutionTracker : NSObject <IDEExecutionTrackerReporting>
{
    NSMutableArray *_subtrackers;
    NSError *_error;
    BOOL _isFinished;
    BOOL _wantsHold;
    BOOL _isCanceling;
    int _serviceTier;
    int _cancellationReason;
    NSString *_statusDisplayName;
    DVTFilePath *_statusImageFilePath;
    IDELaunchSession *_launchSession;
    IDEExecutionTracker *_cancelingTracker;
    NSString *_debugName;
}

+ (void)initialize;
@property(copy) NSString *debugName; // @synthesize debugName=_debugName;
@property(retain) IDEExecutionTracker *cancelingTracker; // @synthesize cancelingTracker=_cancelingTracker;
@property int cancellationReason; // @synthesize cancellationReason=_cancellationReason;
@property(readonly) BOOL isCanceling; // @synthesize isCanceling=_isCanceling;
@property(retain) IDELaunchSession *launchSession; // @synthesize launchSession=_launchSession;
@property BOOL wantsHold; // @synthesize wantsHold=_wantsHold;
@property BOOL isFinished; // @synthesize isFinished=_isFinished;
@property int serviceTier; // @synthesize serviceTier=_serviceTier;
@property(retain) DVTFilePath *statusImageFilePath; // @synthesize statusImageFilePath=_statusImageFilePath;
@property(copy) NSString *statusDisplayName; // @synthesize statusDisplayName=_statusDisplayName;
- (void).cxx_destruct;
@property(retain) NSError *error;
@property(readonly, copy) NSString *description;
- (void)setStatusDisplayName:(id)arg1 statusImageFilePath:(id)arg2;
- (void)addSubtracker:(id)arg1;
- (id)notFinishedReasonWithDepth:(unsigned long long)arg1;
- (void)_updateIsFinished;
- (void)_updateWantsHold;
- (void)cancel;
- (void)cancelWithReason:(int)arg1;
@property(readonly) BOOL statusChanged;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(retain) NSMutableArray *mutableSubtrackers; // @dynamic mutableSubtrackers;
@property(readonly, copy) NSArray *subtrackers; // @dynamic subtrackers;
@property(readonly) Class superclass;

@end

@interface IDEBuildStatisticsData : NSObject <IDEBuildStatisticsData>
{
    NSString *_commandString;
    NSString *_title;
    unsigned long long _ordinal;
    DVTSystemStatisticsMeasurement *_startSystemStats;
    DVTSystemStatisticsMeasurement *_endSystemStats;
    double _elapsedUserTime;
    double _elapsedSystemTime;
}

@property double elapsedSystemTime; // @synthesize elapsedSystemTime=_elapsedSystemTime;
@property double elapsedUserTime; // @synthesize elapsedUserTime=_elapsedUserTime;
@property(retain) DVTSystemStatisticsMeasurement *endSystemStats; // @synthesize endSystemStats=_endSystemStats;
@property(retain) DVTSystemStatisticsMeasurement *startSystemStats; // @synthesize startSystemStats=_startSystemStats;
@property unsigned long long ordinal; // @synthesize ordinal=_ordinal;
@property(copy) NSString *title; // @synthesize title=_title;
@property(copy) NSString *commandString; // @synthesize commandString=_commandString;
- (void).cxx_destruct;
- (void)emitContentsForAspect:(id)arg1 logLevel:(int)arg2 indentLevel:(unsigned long long)arg3 withBlock:(CDUnknownBlockType)arg4;
- (id)defaultEmissionStringWithIndentLevel:(unsigned long long)arg1;
@property(readonly) long long numberOfVMPageouts;
@property(readonly) long long numberOfVMPageins;
@property(readonly) double elapsedWallClockTime;
@property(readonly) double endWallClockTime;
@property(readonly) double startWallClockTime;
- (id)initWithTitle:(id)arg1 commandString:(id)arg2 ordinal:(unsigned long long)arg3 startSystemStatisticsMeasurement:(id)arg4 endSystemStatisticsMeasurement:(id)arg5 elapsedUserTime:(double)arg6 elapsedSystemTime:(double)arg7;

@end

@interface IDEBatchFindLineWrappingParameters : NSObject <NSCopying>
{
    double _columnWidth;
    double _indentationPerLevel;
    long long _maxNumberOfLines;
    long long _maxXPadding;
}

@property(readonly) long long maxXPadding; // @synthesize maxXPadding=_maxXPadding;
@property(readonly) long long maxNumberOfLines; // @synthesize maxNumberOfLines=_maxNumberOfLines;
@property(readonly) double indentationPerLevel; // @synthesize indentationPerLevel=_indentationPerLevel;
@property(readonly) double columnWidth; // @synthesize columnWidth=_columnWidth;
- (double)tableCellWidthForIndentionLevel:(long long)arg1;
- (BOOL)isEqual:(id)arg1;
- (BOOL)isEqualToBatchFindLineWrappingParameters:(id)arg1;
- (unsigned long long)hash;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithColumnWidth:(double)arg1 indentationPerLevel:(double)arg2 maxXPadding:(long long)arg3 maxNumberOfLines:(long long)arg4;

@end

@interface IDEIndexQualifiedNameParser : NSObject
{
    BOOL _success;
    NSString *_containerName;
    NSString *_symbolName;
    IDEIndexCollection *_kinds;
}

@property(readonly) BOOL success; // @synthesize success=_success;
@property(readonly, nonatomic) IDEIndexCollection *kinds; // @synthesize kinds=_kinds;
@property(readonly, nonatomic) NSString *symbolName; // @synthesize symbolName=_symbolName;
@property(readonly, nonatomic) NSString *containerName; // @synthesize containerName=_containerName;
- (void).cxx_destruct;
- (void)parse:(id)arg1;
- (void)parseObjCMethod:(id)arg1;
- (id)parseSelector:(id)arg1;
- (id)parseIdentifier:(id)arg1;
- (id)parseString:(id)arg1 withCharSet:(id)arg2;
- (void)skipWhitespace:(id)arg1;
- (id)initWithString:(id)arg1;

@end

@interface IDEProfileSpecifier : NSObject <NSCopying>
{
    NSString *_teamID;
    NSString *_specifier;
}

@property(readonly, nonatomic) NSString *specifier; // @synthesize specifier=_specifier;
@property(readonly, nonatomic) NSString *teamID; // @synthesize teamID=_teamID;
- (void).cxx_destruct;
- (id)stringRepresentation;
- (void)_parseString:(id)arg1 teamSpecifier:(id *)arg2 specifier:(id *)arg3;
- (id)chunkFromString:(id)arg1 remainingString:(id *)arg2;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
- (id)initWithString:(id)arg1 error:(id *)arg2;
- (id)initWithString:(id)arg1;
- (id)initWithTeamID:(id)arg1 specifier:(id)arg2;

@end

@interface IDESourceKitService : NSObject
{
    NSMutableArray *_initializationBlocks;
    NSMutableArray *_notificationDocumentUpdateBlocks;
    NSMutableArray *_notificationSemanticsDisabledBlocks;
    DVTNotificationToken *_connectionInterruptedNotificationToken;
    DVTNotificationToken *_connectionRestoredNotificationToken;
    int _serviceStatus;
}

+ (void)handleSourceKitError:(struct _sourcekit_response_s *)arg1 logAspect:(id)arg2 crashed:(char *)arg3;
+ (id)sharedSourceKitService;
+ (void)initialize;
@property int serviceStatus; // @synthesize serviceStatus=_serviceStatus;
- (void).cxx_destruct;
- (void)handleNotification:(struct _sourcekit_response_s *)arg1;
- (void)handleConnectionRestored;
- (void)removeSemanticsDisabledNotificationBlock:(id)arg1;
- (id)addSemanticsDisabledNotificationBlock:(CDUnknownBlockType)arg1;
- (void)removeDocumentUpdateNotificationBlock:(id)arg1;
- (id)addDocumentUpdateNotificationBlock:(CDUnknownBlockType)arg1;
- (void)removeInitializationBlock:(id)arg1;
- (id)addInitializationBlock:(CDUnknownBlockType)arg1;
- (id)sendRequestAsync:(struct _sourcekit_object_s *)arg1 queue:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (id)sendRequestSync:(struct _sourcekit_object_s *)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (id)sendRequestSyncWithName:(id)arg1 parameters:(id)arg2 error:(id *)arg3;
- (id)init;

@end

@interface IDETestingSystem : NSObject
{
    NSString *_name;
    NSString *_identifier;
    Class _testableClass;
}

+ (id)testingSystems;
+ (id)testingSystemForIdentifier:(id)arg1;
+ (id)_testingSystemForExtension:(id)arg1;
+ (void)initialize;
@property(readonly) Class testableClass; // @synthesize testableClass=_testableClass;
@property(readonly, copy) NSString *identifier; // @synthesize identifier=_identifier;
@property(readonly, copy) NSString *name; // @synthesize name=_name;
- (void).cxx_destruct;
- (id)description;
- (id)initWithTestingSystemExtension:(id)arg1;

@end

@interface IDEProvisioningManagerContext : NSObject <DVTInvalidation>
{
    IDEProvisioningContext *_provisioningContext;
    IDEProvisioningMechanic *_mechanic;
}

+ (void)initialize;
@property(retain, nonatomic) IDEProvisioningMechanic *mechanic; // @synthesize mechanic=_mechanic;
- (void).cxx_destruct;
@property(readonly, nonatomic) long long automaticLocationStyle;
@property(readonly, nonatomic) long long repairMode;
@property(readonly, nonatomic) long long evaluationMode;
@property(readonly, nonatomic) DVTProvisioningProfileManager *profileManager;
@property(readonly, nonatomic) DVTSigningCertificateManager *certificateManager;
@property(readonly, nonatomic) IDEProvisioningTeamManager *teamManager;
- (id)newProvisionableManagerForProvisionable:(id)arg1 provisioningManager:(id)arg2;
- (void)primitiveInvalidate;
- (id)initWithProvisioningContext:(id)arg1 mechanic:(id)arg2;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface IDELaunchSchemeAction : IDELaunchTestSchemeAction
{
    NSMutableArray *_additionalSourceCodeEntries;
    NSMutableArray *_additionalDSYMEntries;
    DVTNotificationToken *_buildablesToken;
    NSMutableDictionary *_additionalSchemeSettings;
    DVTObservingToken *_launchSessionObservingToken;
    NSDictionary *_cachedAppExtensionBuiltPaths;
    BOOL _debugXPCServices;
    BOOL _stopOnEveryThreadSanitizerIssue;
    BOOL _stopOnEveryUBSanitizerIssue;
    BOOL _stopOnEveryMainThreadCheckerIssue;
    BOOL _useCustomWorkingDirectory;
    BOOL _allowLocationSimulation;
    BOOL _showNonLocalizedStrings;
    BOOL _ignoresPersistentStateOnLaunch;
    BOOL _debugDocumentVersioning;
    BOOL _enableGPUValidationMode;
    BOOL _queueDebuggingEnabled;
    int _launchStyle;
    int _enableGPUFrameCaptureMode;
    int _internalIOSLaunchStyle;
    NSString *_resolvedCustomWorkingDirectory;
    NSMutableOrderedSet *_debugServiceExtensionContents;
    IDEDeviceAppDataReference *_deviceAppDataReference;
    unsigned long long _launchAutomaticallySubstyle;
    NSString *_customWorkingDirectory;
    IDELocationScenarioReference *_locationScenarioReference;
    IDESchemeOptionReference *_routingCoverageFileReference;
    NSNumber *_simulatorIPhoneDisplay;
    NSNumber *_simulatorIPadDisplay;
    NSString *_internalIOSSubstitutionApp;
    long long _consoleMode;
    NSString *_debugServiceExtensionContentsString;
    NSString *_debugServiceExtension;
}

+ (id)keyPathsForValuesAffectingLaunchDueToFetchEvent;
+ (id)keyPathsForValuesAffectingDoesNonActionWork;
+ (id)keyPathsForValuesAffectingSubtitle;
+ (void)initialize;
@property(copy) NSString *debugServiceExtension; // @synthesize debugServiceExtension=_debugServiceExtension;
@property(copy) NSString *debugServiceExtensionContentsString; // @synthesize debugServiceExtensionContentsString=_debugServiceExtensionContentsString;
@property long long consoleMode; // @synthesize consoleMode=_consoleMode;
@property BOOL queueDebuggingEnabled; // @synthesize queueDebuggingEnabled=_queueDebuggingEnabled;
@property(copy) NSString *internalIOSSubstitutionApp; // @synthesize internalIOSSubstitutionApp=_internalIOSSubstitutionApp;
@property int internalIOSLaunchStyle; // @synthesize internalIOSLaunchStyle=_internalIOSLaunchStyle;
@property(retain) NSDictionary *additionalSchemeSettings; // @synthesize additionalSchemeSettings=_additionalSchemeSettings;
@property BOOL enableGPUValidationMode; // @synthesize enableGPUValidationMode=_enableGPUValidationMode;
@property int enableGPUFrameCaptureMode; // @synthesize enableGPUFrameCaptureMode=_enableGPUFrameCaptureMode;
@property BOOL debugDocumentVersioning; // @synthesize debugDocumentVersioning=_debugDocumentVersioning;
@property BOOL ignoresPersistentStateOnLaunch; // @synthesize ignoresPersistentStateOnLaunch=_ignoresPersistentStateOnLaunch;
@property(retain) NSNumber *simulatorIPadDisplay; // @synthesize simulatorIPadDisplay=_simulatorIPadDisplay;
@property(retain) NSNumber *simulatorIPhoneDisplay; // @synthesize simulatorIPhoneDisplay=_simulatorIPhoneDisplay;
@property(retain) IDESchemeOptionReference *routingCoverageFileReference; // @synthesize routingCoverageFileReference=_routingCoverageFileReference;
@property(retain) IDELocationScenarioReference *locationScenarioReference; // @synthesize locationScenarioReference=_locationScenarioReference;
@property BOOL showNonLocalizedStrings; // @synthesize showNonLocalizedStrings=_showNonLocalizedStrings;
@property BOOL allowLocationSimulation; // @synthesize allowLocationSimulation=_allowLocationSimulation;
@property(copy, nonatomic) NSString *customWorkingDirectory; // @synthesize customWorkingDirectory=_customWorkingDirectory;
@property BOOL useCustomWorkingDirectory; // @synthesize useCustomWorkingDirectory=_useCustomWorkingDirectory;
@property(nonatomic) unsigned long long launchAutomaticallySubstyle; // @synthesize launchAutomaticallySubstyle=_launchAutomaticallySubstyle;
@property(nonatomic) int launchStyle; // @synthesize launchStyle=_launchStyle;
@property BOOL stopOnEveryMainThreadCheckerIssue; // @synthesize stopOnEveryMainThreadCheckerIssue=_stopOnEveryMainThreadCheckerIssue;
@property BOOL stopOnEveryUBSanitizerIssue; // @synthesize stopOnEveryUBSanitizerIssue=_stopOnEveryUBSanitizerIssue;
@property BOOL stopOnEveryThreadSanitizerIssue; // @synthesize stopOnEveryThreadSanitizerIssue=_stopOnEveryThreadSanitizerIssue;
@property BOOL debugXPCServices; // @synthesize debugXPCServices=_debugXPCServices;
@property(retain) IDEDeviceAppDataReference *deviceAppDataReference; // @synthesize deviceAppDataReference=_deviceAppDataReference;
- (void).cxx_destruct;
- (void)addRoutingCoverageFileReference:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)addLocationScenarioReference:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)addDeviceAppData:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)addMacroExpansion:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)addAdditionalDSYMFilesAndDirs:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)addAdditionalSourceCodeFilesAndDirs:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)dvt_encodeRelationshipsWithXMLArchiver:(id)arg1 version:(id)arg2;
- (BOOL)needsNewSchemeVersionForInternalIOSLaunchStyleAndOthers;
- (BOOL)needsNewSchemeVersionForLocationSimulation;
- (BOOL)needsNewSchemeVersionForAppDataPackage;
- (void)setAskForAppToLaunchFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
@property BOOL askForAppToLaunch;
@property BOOL launchWithComplication;
@property BOOL launchWithGlance;
@property BOOL launchWithNotification;
@property BOOL staticNotificationSelected;
- (void)_setLaunchOption:(unsigned long long)arg1 enabled:(BOOL)arg2;
- (BOOL)_launchOptionIsSet:(unsigned long long)arg1;
- (void)setUseCustomWorkingDirectoryFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
@property(readonly) BOOL shouldAllowGPUOptions;
- (void)setConsoleModeFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setQueueDebuggingEnabledFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setLaunchAutomaticallySubstyleFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setInternalIOSLaunchStyleFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setInternalIOSSubstitutionAppFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setSimulatorIPadDisplayFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setSimulatorIPhoneDisplayFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setShowNonLocalizedStringsFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setAllowLocationSimulationFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setEnableGPUValidationModeFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setEnableGPUFrameCaptureModeFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setDebugServiceExtensionContentsStringFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setDebugServiceExtensionFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setCustomLaunchCommandFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setStopOnEveryMainThreadCheckerIssueFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setStopOnEveryUBSanitizerIssueFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setStopOnEveryThreadSanitizerIssueFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setDebugXPCServicesFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setDebugDocumentVersioningFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setIgnoresPersistentStateOnLaunchFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
@property(copy) NSMutableOrderedSet *debugServiceExtensionContents; // @synthesize debugServiceExtensionContents=_debugServiceExtensionContents;
- (void)dvt_encodeAttributesWithXMLArchiver:(id)arg1 version:(id)arg2;
- (void)dvt_awakeFromXMLUnarchiver:(id)arg1;
- (void)_prepareForMessageTracer:(id)arg1;
- (id)runOperationForSchemeOperationParameters:(id)arg1 withBuildOperation:(id)arg2 buildParameters:(id)arg3 buildableProductDirectories:(id)arg4 schemeCommand:(id)arg5 schemeActionRecord:(id)arg6 outError:(id *)arg7 actionCallbackBlock:(CDUnknownBlockType)arg8;
- (BOOL)_tweakEnvironmentVariables:(id)arg1 buildParameters:(id)arg2 buildableProductDirectories:(id)arg3 schemeCommand:(id)arg4 schemeActionRecord:(id)arg5 shouldSetupExtraDebuggingSupport:(BOOL)arg6 optimizationProfileFilePath:(id *)arg7 extensionInfos:(id)arg8 outError:(id *)arg9;
- (id)_preferredBuildableForSchemeCommand:(id)arg1 buildParameters:(id)arg2;
- (void)_restoreLaunchStyleForMetalRemoteDebuggingWithEnvironmentVariables:(id)arg1;
- (BOOL)_overrideParametersForMetalRemoteDebuggingWithEnvironmentVariables:(id)arg1 outError:(id *)arg2;
- (BOOL)_isMetalRemoteDebuggingEnabledWithEnvironmentVariables:(id)arg1;
- (BOOL)hasAppExtensionsInTargets;
- (void)_setupRecordedFramesInEnvironmentVariables:(id)arg1 runDestination:(id)arg2;
@property(retain) NSString *customLaunchCommand;
- (id)customLaunchCommandMacroExpanded;
- (void)setLaunchDueToFetchEvent:(BOOL)arg1;
- (BOOL)launchDueToFetchEvent;
@property(readonly) NSArray *additionalDSYMFilePaths;
@property(readonly) NSArray *additionalSourceCodeFilePaths;
- (id)additionalOptions;
- (id)_additionalOptionEntries;
- (id)expandMacrosInString:(id)arg1 forBuildParameters:(id)arg2;
- (id)_expandMacrosInString:(id)arg1;
@property(readonly) NSString *resolvedCustomWorkingDirectory; // @synthesize resolvedCustomWorkingDirectory=_resolvedCustomWorkingDirectory;
- (id)commandLineArgumentsForDevice:(id)arg1 buildParameters:(id)arg2;
- (BOOL)doesNonActionWork;
- (id)subtitle;
- (id)name;
- (void)_updateBuildableToUseForMacroExpansion;
- (void)updateBuildableForChangeInRunnable;
- (void)setRunContext:(id)arg1;
- (void)primitiveInvalidate;
- (id)createAdditionalDiagnosticsDict;
- (id)notificationPayloadFileReferences;
- (void)_setupQueueDebuggingState;
- (void)_commonInit;
- (BOOL)internalSettings;
- (id)initFromXMLUnarchiver:(id)arg1 archiveVersion:(float)arg2;
- (id)init;

// Remaining properties
@property(copy) NSArray *additionalDSYMEntries; // @dynamic additionalDSYMEntries;
@property(copy) NSArray *additionalSourceCodeEntries; // @dynamic additionalSourceCodeEntries;
@property(readonly) NSMutableArray *mutableAdditionalDSYMEntries; // @dynamic mutableAdditionalDSYMEntries;
@property(readonly) NSMutableArray *mutableAdditionalSourceCodeEntries; // @dynamic mutableAdditionalSourceCodeEntries;

@end

@interface IDECommandLineArgumentEntry : NSObject
{
    BOOL _isEnabled;
    NSString *_argument;
}

+ (id)argumentEntriesForLegacyValues:(id)arg1;
@property(getter=isEnabled) BOOL enabled; // @synthesize enabled=_isEnabled;
@property(copy) NSString *argument; // @synthesize argument=_argument;
- (void).cxx_destruct;
- (void)setIsEnabledFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setArgumentFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)dvt_encodeAttributesWithXMLArchiver:(id)arg1 version:(id)arg2;
- (id)description;
- (id)init;
- (id)initWithArgument:(id)arg1 enabled:(BOOL)arg2;

@end

@interface IDEEnvironmentVariableEntry : NSObject
{
    BOOL _isEnabled;
    NSString *_key;
    NSString *_value;
}

@property(getter=isEnabled) BOOL enabled; // @synthesize enabled=_isEnabled;
@property(copy) NSString *value; // @synthesize value=_value;
@property(copy) NSString *key; // @synthesize key=_key;
- (void).cxx_destruct;
- (void)setIsEnabledFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setValueFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setKeyFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)dvt_encodeAttributesWithXMLArchiver:(id)arg1 version:(id)arg2;
- (id)description;
- (id)init;
- (id)initWithKey:(id)arg1 value:(id)arg2 enabled:(BOOL)arg3;

@end

@interface IDELaunchRunPhasePathEntry : NSObject
{
    BOOL _isEnabled;
    NSString *_path;
}

@property(getter=isEnabled) BOOL enabled; // @synthesize enabled=_isEnabled;
@property(copy) NSString *path; // @synthesize path=_path;
- (void).cxx_destruct;
- (void)dvt_encodeRelationshipsWithXMLArchiver:(id)arg1 version:(id)arg2;
- (void)setIsEnabledFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setPathFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)dvt_encodeAttributesWithXMLArchiver:(id)arg1 version:(id)arg2;
@property(readonly) DVTFilePath *filePath;
- (id)description;
- (id)init;
- (id)initWithPathString:(id)arg1 enabled:(BOOL)arg2;

@end

@interface IDEDataMatrix : NSObject
{
    const struct _IDEDataMatrixDescriptor *_descriptor;
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (void)initialize;
@property(readonly, nonatomic) struct _IDEDataMatrixDescriptor *descriptor; // @synthesize descriptor=_descriptor;
- (void)executeRowOperation:(const struct _IDEDataMatrixRowOp *)arg1 overColumns:(id)arg2;
@property(readonly) unsigned long long rowCount;
- (long long)SInt64AtRow:(unsigned long long)arg1 column:(unsigned char)arg2;
- (void)enumerateInt64Range:(struct _NSRange)arg1 withBlock:(CDUnknownBlockType)arg2;
- (void)addSInt64Rows:(unsigned long long)arg1 withBlock:(CDUnknownBlockType)arg2;
- (id)initWithCapacity:(unsigned long long)arg1 descriptor:(struct _IDEDataMatrixDescriptor *)arg2;

@end

@interface IDEDataMatrixSIn64 : IDEDataMatrix
{
    struct vector<long long, std::__1::allocator<long long>> *_columns;
}

- (unsigned long long)rowCount;
- (void)executeRowOperation:(const struct _IDEDataMatrixRowOp *)arg1 overColumns:(id)arg2;
- (long long)SInt64AtRow:(unsigned long long)arg1 column:(unsigned char)arg2;
- (void)addSInt64Rows:(unsigned long long)arg1 withBlock:(CDUnknownBlockType)arg2;
- (void)enumerateInt64Range:(struct _NSRange)arg1 withBlock:(CDUnknownBlockType)arg2;
- (void)dealloc;
- (id)initWithCapacity:(unsigned long long)arg1 descriptor:(struct _IDEDataMatrixDescriptor *)arg2;

@end

@interface IDEIndexQPManager : NSObject
{
    IDEIndex *_index;
    NSObject<OS_dispatch_queue> *_qp_queue;
    NSMutableArray *_masterBlocks;
    NSMutableArray *_recentQueryProviders;
    NSTimer *_purgeTimer;
}

+ (void)initialize;
@property(readonly, nonatomic) IDEIndex *index; // @synthesize index=_index;
- (void).cxx_destruct;
- (void)_logRecents;
- (void)_cancelPurgeTimer;
- (void)_purgeTimeout:(id)arg1;
- (void)_scheduleQPPurge;
- (void)_addQueryProviderToRecents:(id)arg1 highPriority:(BOOL)arg2;
- (void)purgeQPsUsingPCH:(id)arg1;
- (void)purgeAllQPs;
- (id)queryProviderForFile:(id)arg1 highPriority:(BOOL)arg2;
- (void)dealloc;
- (id)initWithIndex:(id)arg1;

@end

@interface IDEPerformanceSignpostEvent : NSObject <IDEPerformanceSignpostSerializable>
{
    NSString *_name;
    NSDate *_timestamp;
    NSDictionary *_userInfo;
}

+ (id)firstEventOfName:(id)arg1 fromEvents:(id)arg2;
+ (id)eventsLoadedFromPath:(id)arg1 error:(id *)arg2;
+ (BOOL)saveEvents:(id)arg1 toPath:(id)arg2 error:(id *)arg3;
@property(readonly, copy) NSDictionary *userInfo; // @synthesize userInfo=_userInfo;
@property(readonly, copy) NSDate *timestamp; // @synthesize timestamp=_timestamp;
@property(readonly, copy) NSString *name; // @synthesize name=_name;
- (void).cxx_destruct;
@property(readonly, copy) NSDictionary *serializedRepresentation;
- (id)initFromSerialized:(id)arg1;
- (id)initWithName:(id)arg1 userInfo:(id)arg2;
- (id)initWithName:(id)arg1 timestamp:(id)arg2 userInfo:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IDEEntityIdentifier : NSObject <NSCopying>
{
    unsigned long long _hashValue;
    int _sharedState;
    int _entityType;
    NSString *_entityName;
    NSString *_containerName;
    NSString *_entityGUID;
}

+ (id)entityIdentifierFromEntityName:(id)arg1 entityType:(int)arg2 containerName:(id)arg3;
+ (id)entityIdentifierFromEntityName:(id)arg1 entityType:(int)arg2 containerName:(id)arg3 isShared:(BOOL)arg4;
+ (id)entityIdentifierFromGUID:(id)arg1 entityName:(id)arg2 entityType:(int)arg3 containerName:(id)arg4;
+ (id)entityIdentifierFromGUID:(id)arg1 entityName:(id)arg2 entityType:(int)arg3 containerName:(id)arg4 isShared:(BOOL)arg5;
@property(readonly, copy) NSString *entityGUID; // @synthesize entityGUID=_entityGUID;
@property(readonly) int entityType; // @synthesize entityType=_entityType;
@property(readonly, copy) NSString *containerName; // @synthesize containerName=_containerName;
@property(readonly, copy) NSString *entityName; // @synthesize entityName=_entityName;
@property(readonly) int sharedState; // @synthesize sharedState=_sharedState;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (BOOL)isSimilarToEntityIdentifier:(id)arg1;
- (unsigned long long)hash;
- (id)description;
- (BOOL)isEqual:(id)arg1;
- (id)initWithGUID:(id)arg1 entityName:(id)arg2 entityType:(int)arg3 containerName:(id)arg4 shared:(int)arg5;

@end

@interface IDESchemeActionTestActivitySummary : NSObject
{
    NSString *_title;
    NSString *_activityType;
    NSString *_attachmentsDirectory;
    NSUUID *_uuid;
    NSDate *_start;
    NSDate *_finish;
    NSArray *_attachments;
    NSMutableArray *_subActivities;
}

+ (id)summariesFromSummaries:(id)arg1 withAttachmentsExtractedToDirectory:(id)arg2;
@property(readonly, copy) NSMutableArray *subActivities; // @synthesize subActivities=_subActivities;
@property(copy) NSArray *attachments; // @synthesize attachments=_attachments;
@property(readonly, copy) NSDate *finish; // @synthesize finish=_finish;
@property(copy) NSDate *start; // @synthesize start=_start;
@property(readonly, copy) NSUUID *uuid; // @synthesize uuid=_uuid;
@property(copy) NSString *attachmentsDirectory; // @synthesize attachmentsDirectory=_attachmentsDirectory;
@property(readonly, copy) NSString *activityType; // @synthesize activityType=_activityType;
@property(readonly, copy) NSString *title; // @synthesize title=_title;
- (void).cxx_destruct;
- (id)attachmentWithName:(id)arg1;
- (BOOL)hasAttachmentWithName:(id)arg1;
- (void)pruneAttachmentsWithLifetimes:(id)arg1 deletedAutomationScreenshots:(char *)arg2 deletedUserAttachments:(char *)arg3;
@property(readonly, copy) NSData *memoryGraphData;
@property(readonly, copy) NSString *memoryGraphFileName;
@property(readonly, copy) NSString *memoryGraphFilePath;
@property(readonly, copy) NSData *diagnosticReportData;
@property(readonly, copy) NSString *diagnosticReportFileName;
@property(readonly, copy) NSString *diagnosticReportFilePath;
@property(readonly, copy) NSString *screenshotFileName;
@property(readonly, copy) NSData *screenshotData;
@property(readonly, copy) NSString *snapshotFileName;
@property(readonly, copy) XCElementSnapshot *snapshot;
@property(readonly, copy) XCSynthesizedEventRecord *synthesizedEvent;
- (id)_fileNameForAttachmentName:(id)arg1;
- (id)_unarchiveIfPresentAttachmentWithName:(id)arg1 expectedClassName:(id)arg2;
- (id)_dataIfPresentForAttachmentName:(id)arg1;
- (id)_unarchiveAttachment:(id)arg1;
- (id)_legacyFileNameForAttachmentWithName:(id)arg1;
- (BOOL)matchesTestActivitySummary:(id)arg1;
- (void)addSubActivity:(id)arg1;
- (void)updateFromActivityRecord:(id)arg1;
- (void)addAttachment:(id)arg1;
- (void)loadLegacyAttachmentMetadataFromActivityRecord:(id)arg1;
- (void)createLegacyAttachmentsFromDictionary:(id)arg1;
- (id)_legacyAttachmentWithUTI:(id)arg1 name:(id)arg2 inActivityIdentifier:(long long)arg3 fileName:(id)arg4;
- (void)loadAttachmentsFromDirectory:(id)arg1;
@property(readonly) NSDictionary *dictionaryRepresentation;
- (void)saveLegacyAttachmentMetadataToDictionary:(id)arg1;
- (id)initWithDictionaryRepresentation:(id)arg1;
- (id)initWithActivityRecord:(id)arg1 attachmentsDirectory:(id)arg2;

@end

@interface IDEThread : NSObject <IDEDebugNavigableModel, DVTInvalidation>
{
    IDEThread *_leadingThread;
    BOOL _staleThreadDisplayName;
    long long _lastCompressionValue;
    long long _secondLastCompressionValue;
    NSCache *_compressedStackFramesCache;
    NSMutableArray *_stackFrames;
    NSMutableArray *_delayedInvalidationChildren;
    DVTDispatchLock *_delayedInvalidationChildrenLock;
    BOOL _autoRefreshStackFramesWhenPaused;
    BOOL _hasLatestStackFrames;
    BOOL _hasInitializedStackFrames;
    BOOL _recorded;
    BOOL _recordedForInstrumentation;
    BOOL _userSuspended;
    BOOL _specialRuntimeThread;
    int _state;
    int _stopReason;
    int _breakpointStackSelectionBehavior;
    NSString *_associatedProcessUUID;
    NSString *_threadDisplayName;
    IDEDebugProcess *_parentProcess;
    NSNumber *_uniqueID;
    NSString *_threadName;
    IDEDebugQueue *_queue;
    IDEThread *_recordedThread;
    unsigned long long _recordedThreadDepth;
    NSString *_lastReasonStopped;
    IDERecordedThreadCollection *_recordedThreadCollection;
    IDEIssue *_runtimeIssue;
    NSString *_qualityOfServiceValue;
}

+ (unsigned long long)assertionBehaviorForKeyValueObservationsAtEndOfEvent;
+ (id)keyPathsForValuesAffectingThreadDisplayName;
+ (id)displayNameForThreadName:(id)arg1 threadID:(id)arg2;
+ (void)initialize;
@property(nonatomic) int breakpointStackSelectionBehavior; // @synthesize breakpointStackSelectionBehavior=_breakpointStackSelectionBehavior;
@property(copy, nonatomic) NSString *qualityOfServiceValue; // @synthesize qualityOfServiceValue=_qualityOfServiceValue;
@property BOOL specialRuntimeThread; // @synthesize specialRuntimeThread=_specialRuntimeThread;
@property(retain, nonatomic) IDEIssue *runtimeIssue; // @synthesize runtimeIssue=_runtimeIssue;
@property(retain, nonatomic) IDERecordedThreadCollection *recordedThreadCollection; // @synthesize recordedThreadCollection=_recordedThreadCollection;
@property(nonatomic) BOOL userSuspended; // @synthesize userSuspended=_userSuspended;
@property(copy, nonatomic) NSString *lastReasonStopped; // @synthesize lastReasonStopped=_lastReasonStopped;
@property(nonatomic, getter=isRecordedForInstrumentation) BOOL recordedForInstrumentation; // @synthesize recordedForInstrumentation=_recordedForInstrumentation;
@property(nonatomic, getter=isRecorded) BOOL recorded; // @synthesize recorded=_recorded;
@property(nonatomic) unsigned long long recordedThreadDepth; // @synthesize recordedThreadDepth=_recordedThreadDepth;
@property(retain, nonatomic) IDEThread *recordedThread; // @synthesize recordedThread=_recordedThread;
@property BOOL hasInitializedStackFrames; // @synthesize hasInitializedStackFrames=_hasInitializedStackFrames;
@property(nonatomic) BOOL hasLatestStackFrames; // @synthesize hasLatestStackFrames=_hasLatestStackFrames;
@property(nonatomic) BOOL autoRefreshStackFramesWhenPaused; // @synthesize autoRefreshStackFramesWhenPaused=_autoRefreshStackFramesWhenPaused;
@property(retain, nonatomic) IDEDebugQueue *queue; // @synthesize queue=_queue;
@property(nonatomic) int stopReason; // @synthesize stopReason=_stopReason;
@property(copy, nonatomic) NSString *threadName; // @synthesize threadName=_threadName;
@property(nonatomic) int state; // @synthesize state=_state;
@property(readonly, nonatomic) NSNumber *uniqueID; // @synthesize uniqueID=_uniqueID;
@property(retain, nonatomic) IDEDebugProcess *parentProcess; // @synthesize parentProcess=_parentProcess;
@property(readonly, copy) NSString *associatedProcessUUID; // @synthesize associatedProcessUUID=_associatedProcessUUID;
- (void).cxx_destruct;
- (void)primitiveInvalidate;
- (void)requestUnsuspend;
- (void)requestSuspend;
- (void)_inferStateFromStackFrames:(id)arg1;
- (void)_inferState;
- (id)primitiveStackFrames;
- (id)compressedStackFrames:(long long)arg1;
- (void)requestStackFrames:(unsigned long long)arg1 handleOnMainQueueWithResultHandler:(CDUnknownBlockType)arg2;
- (void)refreshStackFrames;
- (void)invalidateUnusedStackFramesAfterCallToSetStackFrames:(id)arg1;
@property(copy, nonatomic) NSArray *stackFrames; // @dynamic stackFrames;
- (void)_invalidateStackFrames:(id)arg1;
- (void)setLeadingThread:(id)arg1 depth:(unsigned long long)arg2;
- (id)leadingThread;
- (void)setPrimitiveQueue:(id)arg1;
- (void)willReuse:(BOOL)arg1;
- (void)_resetQueueStackFramesAndRecordedStates:(BOOL)arg1;
- (void)_resetCurrentStackFrameIfNecessary:(id)arg1;
- (id)compressedStackFramesIncludingRecorded:(long long)arg1;
- (BOOL)_shouldSkipRecordedFrames;
- (BOOL)_isStopped;
@property(readonly, nonatomic) NSString *threadDisplayName; // @synthesize threadDisplayName=_threadDisplayName;
@property(readonly) IDELaunchSession *launchSession;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
- (BOOL)isEqual:(id)arg1;
- (id)init;
- (id)initWithParentProcess:(id)arg1 uniqueID:(id)arg2;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly, copy) NSMutableArray *mutableStackFrames; // @dynamic mutableStackFrames;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface IDEThreadStateInterpreter : NSObject
{
}

+ (BOOL)_doesStackFrameAtIndex:(unsigned long long)arg1 inStackFrames:(id)arg2 matchName:(id)arg3;
+ (BOOL)_doAnyOfTheFirst:(unsigned long long)arg1 stackFrames:(id)arg2 matchName:(id)arg3;
+ (BOOL)_isThreadInConditionalWait:(id)arg1;
+ (BOOL)_isThreadWaitingForLock:(id)arg1;
+ (BOOL)_isThreadWaitingForSpinLock:(id)arg1;
+ (void)updateStateOfThread:(id)arg1 usingStackFrames:(id)arg2;
+ (BOOL)useThreadStateInterpreter;

@end

@interface IDEProvisionableStatusEvaluator : NSObject
{
    DVTLogAspect *_logAspect;
}

@property(retain, nonatomic) DVTLogAspect *logAspect; // @synthesize logAspect=_logAspect;
- (void).cxx_destruct;
- (id)_provisioningInputsForEvaluationInputs:(id)arg1 configuration:(id)arg2 entitlements:(id)arg3 error:(id *)arg4;
- (long long)_signingStyleForProvisionableSnapshot:(id)arg1 configuration:(id)arg2;
- (id)evaluateStatusWithInputs:(id)arg1;
- (id)initWithName:(id)arg1 logAspect:(id)arg2;

@end

@interface IDEProvisionableStatusEvaluation : NSObject
{
    long long _signingStyle;
    NSArray *_errors;
    IDEProfileQualification *_profileQualification;
    id <IDEProvisioningBasicProfile> _profileForDisplay;
    NSDictionary *_entitlements;
    IDEProvisioningCommandInputs *_provisioningCommandInputs;
    NSString *_configuration;
    IDECodesignParameterSnapshot *_codesignParameterSnapshot;
    IDEProvisioningRepairInfo *_repairInfo;
    IDEProvisionableStatusEvalutorInputs *_evaluationInputs;
    DVTLogAspect *_logAspect;
    NSDictionary *_rawEntitlements;
    NSArray *_rawErrors;
}

+ (id)mostRecentManualProfilesFromProfiles:(id)arg1 bundleIdentifier:(id)arg2 team:(id)arg3 platform:(id)arg4 profileType:(id)arg5 logAspect:(id)arg6;
@property(readonly) NSArray *rawErrors; // @synthesize rawErrors=_rawErrors;
@property(readonly) NSDictionary *rawEntitlements; // @synthesize rawEntitlements=_rawEntitlements;
@property(readonly) DVTLogAspect *logAspect; // @synthesize logAspect=_logAspect;
@property(readonly) IDEProvisionableStatusEvalutorInputs *evaluationInputs; // @synthesize evaluationInputs=_evaluationInputs;
@property(readonly, nonatomic) IDEProvisioningRepairInfo *repairInfo; // @synthesize repairInfo=_repairInfo;
@property(readonly, nonatomic) IDECodesignParameterSnapshot *codesignParameterSnapshot; // @synthesize codesignParameterSnapshot=_codesignParameterSnapshot;
@property(readonly, nonatomic) NSString *configuration; // @synthesize configuration=_configuration;
- (void).cxx_destruct;
@property(readonly, nonatomic) IDEProvisioningCommandInputs *provisioningCommandInputs; // @synthesize provisioningCommandInputs=_provisioningCommandInputs;
- (id)mergedEntitlementsWithWarnings:(id *)arg1 error:(id *)arg2;
@property(readonly, nonatomic) NSString *appIdentifierPrefix;
@property(readonly, nonatomic) NSString *teamIdentifierPrefix;
@property(readonly, nonatomic) NSDictionary *entitlements; // @synthesize entitlements=_entitlements;
@property(readonly, nonatomic) id <IDEProvisioningBasicProfile> profileForDisplay; // @synthesize profileForDisplay=_profileForDisplay;
- (void)locateEligibleProfiles:(id *)arg1 ineligibleProfiles:(id *)arg2 requiredTeam:(id)arg3 requiredProfileType:(id)arg4;
- (long long)_provisioningStyle;
- (void)locateEligibleProfiles:(id *)arg1 ineligibleProfiles:(id *)arg2;
- (id)qualificationForProfile:(id)arg1 requiredTeam:(id)arg2 error:(id *)arg3;
@property(readonly, nonatomic) IDEProfileQualification *profileQualification; // @synthesize profileQualification=_profileQualification;
@property(readonly, nonatomic) NSArray *errors; // @synthesize errors=_errors;
@property(readonly, nonatomic) long long signingStyle; // @synthesize signingStyle=_signingStyle;
@property(readonly, nonatomic) IDEProvisionableSnapshot *provisionableSnapshot;
- (id)evaluationByInjectingError:(id)arg1;
- (id)initWithEvaluationInputs:(id)arg1 configuration:(id)arg2 codesignParameterSnapshot:(id)arg3 entitlements:(id)arg4 repairInfo:(id)arg5 logAspect:(id)arg6 errors:(id)arg7;

@end

@interface IDEProvisionableStatusEvalutorInputs : NSObject
{
    IDEProvisionableSnapshot *_provisionableSnapshot;
    NSSet *_provisioningProfiles;
    NSSet *_signingCertificates;
    NSSet *_deviceSnapshots;
    long long _automaticLocationStyle;
}

+ (id)_processedDeviceSnapshots:(id)arg1 usingProvisionableSnapshot:(id)arg2;
+ (id)evaluatorInputsWithProvisionableSnapshot:(id)arg1 provisioningProfiles:(id)arg2 signingCertificates:(id)arg3 deviceSnapshots:(id)arg4 automaticLocationStyle:(long long)arg5;
@property(readonly, nonatomic) long long automaticLocationStyle; // @synthesize automaticLocationStyle=_automaticLocationStyle;
@property(readonly, nonatomic) NSSet *deviceSnapshots; // @synthesize deviceSnapshots=_deviceSnapshots;
@property(readonly, nonatomic) NSSet *signingCertificates; // @synthesize signingCertificates=_signingCertificates;
@property(readonly, nonatomic) NSSet *provisioningProfiles; // @synthesize provisioningProfiles=_provisioningProfiles;
@property(retain, nonatomic) IDEProvisionableSnapshot *provisionableSnapshot; // @synthesize provisionableSnapshot=_provisionableSnapshot;
- (void).cxx_destruct;

@end

@interface IDEProvisionableRepairArbiter : NSObject
{
}

- (id)repairInfoForEvaluatorInputs:(id)arg1 provisioningInputs:(id)arg2 insigatingErrors:(id)arg3 outError:(id *)arg4;
- (BOOL)_errorsContainOnlyEntitlementQualificationIssue:(id)arg1;

@end

@interface IDEIndexNewFile : NSObject <IDEIndexNewFileBase>
{
    DVTFilePath *_path;
    NSURL *_moduleURL;
    NSDate *_modified;
    IDEIndexNewFile *_includer;
    long long _fileId;
    long long _groupId;
    char **_vectorSegments;
    int _nVectorSegments;
    int _vectorBytesRemaining;
    NSMutableArray *_containers;
    IDEIndexDBFactory *_symbolFactory;
    IDEIndexDBFactory *_referenceFactory;
    BOOL _hasSkippedBodies;
    BOOL _hasUnskippedBodies;
    void *_digestContext;
    void *_digestContext_inBody;
    NSString *_signature;
    NSString *_signature_inBody;
    IDEIndexNewMainFile *_mainFile;
}

+ (void)poolFree:(void *)arg1;
+ (void *)poolMalloc:(unsigned long long)arg1;
+ (void)_pushSegment:(void *)arg1;
+ (void)_poolDelayedFree;
+ (void *)_popSegment;
+ (void)initialize;
@property(readonly, nonatomic) BOOL hasUnskippedBodies; // @synthesize hasUnskippedBodies=_hasUnskippedBodies;
@property(readonly, nonatomic) BOOL hasSkippedBodies; // @synthesize hasSkippedBodies=_hasSkippedBodies;
@property(nonatomic) long long groupId; // @synthesize groupId=_groupId;
@property(nonatomic) long long fileId; // @synthesize fileId=_fileId;
@property(readonly, nonatomic) IDEIndexNewMainFile *mainFile; // @synthesize mainFile=_mainFile;
@property(readonly, nonatomic) NSDate *modified; // @synthesize modified=_modified;
@property(retain, nonatomic) NSURL *moduleURL; // @synthesize moduleURL=_moduleURL;
@property(readonly, nonatomic) DVTFilePath *path; // @synthesize path=_path;
- (void).cxx_destruct;
@property(readonly, nonatomic) NSString *signature_inBody;
@property(readonly, nonatomic) NSString *signature;
- (id)newFileWithPath:(id)arg1 modified:(id)arg2;
- (id)newSymbolWithName:(id)arg1 kind:(id)arg2 role:(int)arg3 language:(id)arg4 resolution:(id)arg5 lineNumber:(long long)arg6 column:(long long)arg7 locator:(id)arg8 receiver:(id)arg9 completionString:(void *)arg10 container:(id)arg11;
- (void)addSymbolWithName:(id)arg1 kind:(id)arg2 role:(int)arg3 language:(id)arg4 resolution:(id)arg5 lineNumber:(long long)arg6 column:(long long)arg7 locator:(id)arg8 receiver:(id)arg9 completionString:(void *)arg10 container:(id)arg11;
- (id)newSymbolWithCName:(const char *)arg1 kind:(id)arg2 role:(int)arg3 language:(id)arg4 resolution:(const char *)arg5 lineNumber:(long long)arg6 column:(long long)arg7 locator:(id)arg8 receiver:(const char *)arg9 completionString:(void *)arg10 container:(id)arg11;
- (void)addSymbolWithCName:(const char *)arg1 kind:(id)arg2 role:(int)arg3 language:(id)arg4 resolution:(const char *)arg5 lineNumber:(long long)arg6 column:(long long)arg7 locator:(id)arg8 receiver:(const char *)arg9 completionString:(void *)arg10 container:(id)arg11;
- (void)createSymbolWithName:(const char *)arg1 kind:(id)arg2 role:(int)arg3 language:(id)arg4 resolution:(const char *)arg5 lineNumber:(long long)arg6 column:(long long)arg7 locator:(id)arg8 receiver:(const char *)arg9 completionString:(void *)arg10 container:(id)arg11 pSymbol:(id *)arg12;
- (id)description;
- (void)freeMemory;
@property(readonly, nonatomic) BOOL hasBodies;
- (void)willAddBodySkipped:(BOOL)arg1;
- (void)dontSubmitSymbols;
- (long long)submitSymbolsTo:(id)arg1 nReferences:(long long *)arg2;
- (long long)realSymbolIdForId:(long long)arg1;
@property(readonly, nonatomic) long long realGroupId;
@property(readonly, nonatomic) long long realFileId;
@property __weak IDEIndexNewFile *includer;
- (void)dealloc;
- (id)initWithPath:(id)arg1 modified:(id)arg2;

@end

@interface IDEProvisioningBasicProfile : NSObject <IDEProvisioningBasicProfile>
{
    IDEProfileSpecifier *_specifier;
    id <DVTProvisioningProfile> _provisioningProfile;
}

+ (id)locateBasicProfileInProfiles:(id)arg1 matchingSpecifier:(id)arg2 bundleID:(id)arg3 platform:(id)arg4 provisioningStyle:(long long)arg5;
+ (id)basicMissingProfileWithSpecifier:(id)arg1;
+ (id)basicProfileWithDVTProvisioningProfile:(id)arg1 profileSpecifier:(id)arg2;
+ (id)basicProfileWithDVTProvisioningProfile:(id)arg1;
@property(readonly) id <DVTProvisioningProfile> provisioningProfile; // @synthesize provisioningProfile=_provisioningProfile;
@property(readonly) IDEProfileSpecifier *specifier; // @synthesize specifier=_specifier;
- (void).cxx_destruct;
- (id)description;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
@property(readonly) NSString *automaticIdentitySelector;
@property(readonly) id <IDEProvisioningBasicTeam> team;
@property(readonly) BOOL existsOnDisk;
@property(readonly) NSString *name;
@property(readonly) NSString *UUID;

@end

@interface IDEActivityLogSection : NSObject <NSCopying>
{
    IDEActivityLogSectionRecorder *_recorder;
    IDETypeIdentifier *_domainType;
    NSString *_title;
    double _timeStartedRecording;
    double _timeStoppedRecording;
    NSMutableArray *_subsections;
    NSMutableString *_text;
    NSMutableArray *_messages;
    id _representedObject;
    NSString *_subtitle;
    DVTDocumentLocation *_location;
    NSString *_signature;
    NSString *_commandDetailDesc;
    unsigned short _totalTestFailureCount;
    unsigned short _totalErrorCount;
    unsigned short _totalWarningCount;
    unsigned short _totalAnalyzerWarningCount;
    unsigned short _totalAnalyzerResultCount;
    unsigned short _sectionType;
    unsigned short _sectionAuthority;
    unsigned short _resultCode;
    BOOL _wasCancelled;
    BOOL _isQuiet;
    BOOL _wasFetchedFromCache;
    BOOL _hasAddedIssueMessage;
    NSString *_uniqueIdentifier;
    NSString *_localizedResultString;
    struct os_unfair_lock_s _lock;
    NSMapTable *_customDataObjectsByClass;
    IDESchemeActionCodeCoverage *_coverageReport;
    NSData *_xcbuildSignature;
}

+ (id)sectionWithContentsOfFile:(id)arg1 error:(id *)arg2;
+ (id)sectionByDeserializingData:(id)arg1 error:(id *)arg2;
+ (unsigned long long)serializationFormatVersion;
+ (id)UUIDWithURL:(id)arg1;
+ (id)URLWithUUID:(id)arg1;
+ (id)defaultMainLogDomainType;
+ (id)defaultLogSectionDomainType;
+ (Class)logRecorderClass;
+ (void)initialize;
@property(copy) NSData *xcbuildSignature; // @synthesize xcbuildSignature=_xcbuildSignature;
@property(retain) IDESchemeActionCodeCoverage *coverageReport; // @synthesize coverageReport=_coverageReport;
@property(readonly) NSString *uniqueIdentifier; // @synthesize uniqueIdentifier=_uniqueIdentifier;
@property(copy) NSString *localizedResultString; // @synthesize localizedResultString=_localizedResultString;
@property BOOL hasAddedIssueMessage; // @synthesize hasAddedIssueMessage=_hasAddedIssueMessage;
@property BOOL wasFetchedFromCache; // @synthesize wasFetchedFromCache=_wasFetchedFromCache;
@property(readonly) IDETypeIdentifier *domainType; // @synthesize domainType=_domainType;
@property unsigned short sectionAuthority; // @synthesize sectionAuthority=_sectionAuthority;
- (void).cxx_destruct;
- (id)indexPathForMessageOrSection:(id)arg1;
- (id)indexPathForMessageOrSection:(id)arg1 messageOrSectionEqualityTest:(CDUnknownBlockType)arg2;
- (id)messageOrSectionAtIndexPath:(id)arg1;
- (BOOL)writeToFile:(id)arg1 error:(id *)arg2;
- (id)serializedData;
- (void)dvt_writeToSerializer:(id)arg1;
- (id)dvt_initFromDeserializer:(id)arg1;
- (void)removeObserver:(id)arg1;
- (id)addObserverUsingBlock:(CDUnknownBlockType)arg1;
- (id)enumerateMessagesUsingBlock:(CDUnknownBlockType)arg1;
- (id)enumerateSubsectionsRecursivelyUsingPreorderBlock:(CDUnknownBlockType)arg1;
- (void)_enumerateSubsectionsRecursivelyUsingPreorderBlock:(CDUnknownBlockType)arg1 returningFilteredSections:(id)arg2;
- (id)customDataObjectForClass:(Class)arg1;
- (void)registerCustomDataObject:(id)arg1 forClass:(Class)arg2;
@property(readonly) NSURL *logSectionURL;
- (id)emittedOutputText;
- (void)logRecorder:(id)arg1 setCommandDetailDescription:(id)arg2;
@property(readonly) NSString *commandDetailDescription;
@property(readonly) DVTDocumentLocation *location;
- (void)logRecorder:(id)arg1 setWasFetchedFromCache:(BOOL)arg2;
- (void)logRecorder:(id)arg1 setIsQuiet:(BOOL)arg2;
@property(readonly) BOOL isQuiet;
- (void)logRecorder:(id)arg1 adjustMessageCountsWithTestFailureDelta:(long long)arg2 errorCountDelta:(long long)arg3 warningCountDelta:(long long)arg4 analyzerWarningDelta:(long long)arg5 analyzerResultDelta:(long long)arg6;
@property(readonly) unsigned long long totalNumberOfAnalyzerResults;
@property(readonly) unsigned long long totalNumberOfAnalyzerWarnings;
@property(readonly) unsigned long long totalNumberOfWarnings;
@property(readonly) unsigned long long totalNumberOfErrors;
@property(readonly) unsigned long long totalNumberOfTestFailures;
- (id)description;
- (void)logRecorder:(id)arg1 didStopRecordingWithInfo:(id)arg2;
- (void)checkMessageCounts;
@property(readonly) IDEActivityLogSectionRecorder *recorder;
@property(readonly) BOOL isRecording;
- (void)logRecorder:(id)arg1 setWasCancelled:(BOOL)arg2;
@property(readonly) long long resultCode;
@property(readonly) BOOL wasCancelled;
- (void)logRecorder:(id)arg1 addMessage:(id)arg2;
@property(readonly) NSArray *messages;
- (void)logRecorder:(id)arg1 appendText:(id)arg2;
- (void)setAdditionalDescription:(id)arg1;
@property(readonly) NSString *subtitle;
@property(readonly) NSString *text;
- (void)logRecorder:(id)arg1 addSubsection:(id)arg2;
@property(readonly) NSArray *subsections;
@property(readonly) double timeStoppedRecording;
@property(readonly) double timeStartedRecording;
@property(copy) NSString *signature;
@property(readonly) NSString *title;
@property(readonly) id representedObject;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
@property(readonly) long long sectionType;
- (id)initWithTitle:(id)arg1;
- (id)init;
- (id)initWithSectionType:(long long)arg1 domainType:(id)arg2 title:(id)arg3;
- (id)initCommandInvocationWithDomainType:(id)arg1 title:(id)arg2 detailDescription:(id)arg3 filePath:(id)arg4;
- (id)initCommandInvocationWithDomainType:(id)arg1 title:(id)arg2 detailDescription:(id)arg3 location:(id)arg4;
- (id)initMajorGroupWithDomainType:(id)arg1 title:(id)arg2 representedObject:(id)arg3 subtitle:(id)arg4;
- (id)initMainLogWithDomainType:(id)arg1 title:(id)arg2;
- (id)initWithSectionType:(long long)arg1 domainType:(id)arg2 title:(id)arg3 location:(id)arg4;

@end

@interface IDERunnable : NSObject
{
    DVTFileDataType *_dataType;
    NSError *_dataTypeDetectionError;
    NSString *_bundleIdentifier;
    BOOL _usesSwift;
    BOOL _checkedForSwift;
    int _runnableDebuggingMode;
    IDEScheme *_scheme;
    DVTFilePath *_remotePath;
}

+ (id)_productTypeForBuildableProduct:(id)arg1 scheme:(id)arg2;
+ (id)runnableForBuildProduct:(id)arg1 inScheme:(id)arg2;
@property int runnableDebuggingMode; // @synthesize runnableDebuggingMode=_runnableDebuggingMode;
@property(readonly, copy) DVTFilePath *remotePath; // @synthesize remotePath=_remotePath;
@property(copy, nonatomic) NSString *bundleIdentifier; // @synthesize bundleIdentifier=_bundleIdentifier;
@property(retain) IDEScheme *scheme; // @synthesize scheme=_scheme;
- (void).cxx_destruct;
- (BOOL)_checkForSwiftInBuildable;
@property(readonly) BOOL usesSwift;
- (void)dvt_encodeAttributesWithXMLArchiver:(id)arg1 version:(id)arg2;
- (void)setBundleIdentifierFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (int)runnableType;
- (void)resolveBuildableFromImport;
@property(readonly) BOOL runsDirectlyOnPairedProxyDevice;
@property(readonly) BOOL requiresPairedProxyDevice;
@property(readonly) BOOL hasRunnablePath;
@property(readonly) IDESchemeBuildableReference *buildableReference;
@property(readonly) id <IDEBuildableProduct> buildableProduct;
- (id)runnableUTIType:(id *)arg1;
- (id)pathToRunnableForBuildParameters:(id)arg1;
@property(readonly, copy) NSString *toolTip;
@property(readonly, copy) NSString *displayName;

@end

@interface IDEProvisioningChooseAndRevokeCertificateUserAction : IDEProvisioningUserAction
{
    NSArray *_certificates;
    DVTPortalCertificateType *_type;
}

+ (id)chooseAndRevokeCertificateUserActionWithCertificates:(id)arg1 type:(id)arg2 context:(id)arg3;
@property(readonly, nonatomic) DVTPortalCertificateType *type; // @synthesize type=_type;
@property(readonly, nonatomic) NSArray *certificates; // @synthesize certificates=_certificates;
- (void).cxx_destruct;
- (id)executionMessage;
- (id)userActionName;
- (id)userActionMessage;
- (id)userActionTitle;
- (void)userDidAuthorizeForCertificate:(id)arg1;
- (BOOL)preflightWithError:(id *)arg1;
- (id)initWithCertificates:(id)arg1 type:(id)arg2 context:(id)arg3;

@end

@interface IDEStructureEditingHelper : NSObject
{
}

+ (BOOL)moveOrCopyContainerItems:(id)arg1 andURLs:(id)arg2 intoFolderPath:(id)arg3 workspace:(id)arg4 intentToCopy:(BOOL)arg5 intentToMove:(BOOL)arg6 addedPaths:(id *)arg7;
+ (void)_performHoldingLock:(id)arg1 errors:(id)arg2 operation:(CDUnknownBlockType)arg3;
+ (void)_ensureDestinationFolderPathExists:(id)arg1;
+ (BOOL)_divideUpURLs:(id)arg1 inWorkspace:(id)arg2 toCopy:(id)arg3 orMove:(id)arg4 intentToCopy:(BOOL)arg5 intentToMove:(BOOL)arg6;
+ (id)_distinctFolderRootPathsInWorkspace:(id)arg1;
+ (id)urlsFromContainerItems:(id)arg1;
+ (void)computeLocationsForSourceURLs:(id)arg1 intoDstFolderPath:(id)arg2 srcPaths:(id)arg3 dstPaths:(id)arg4 addPaths:(id)arg5 allURLs:(id)arg6 shouldCheckAncestry:(BOOL)arg7;
+ (id)distinctFilePathForCopyOf:(id)arg1;
+ (id)distinctFilePathForNewFileIn:(id)arg1 withName:(id)arg2 andExtension:(id)arg3;
+ (id)distinctFilePathForNewUntitledFolderIn:(id)arg1;
+ (id)distinctFilePathInParent:(id)arg1 withProposedName:(id)arg2 andExtension:(id)arg3;

@end

@interface IDEDistributionCreateDestRootStep : IDEDistributionProcessingStep
{
}

- (id)requiredInputContextPropertyNames;
- (_Bool)runWithError:(id *)arg1;
- (id)name;

@end

@interface IDEDistributionOptionODR : IDEDistributionOption
{
}

+ (id)propertyListForContext:(id)arg1;
+ (id)availableOptionsForPropertyList;
- (id)providedOutputContextPropertyNames;
- (id)requiredInputContextPropertyNames;
- (BOOL)loadFromPropertyList:(id)arg1 error:(id *)arg2;

@end

@interface IDEIndexCodeCompletionContext : NSObject
{
    unsigned long long _contexts;
    unsigned int _containerKind;
    NSString *_containerUSR;
    BOOL _containerIsIncomplete;
    NSString *_partialSelector;
    NSSet *_includedFiles;
}

@property(copy) NSSet *includedFiles; // @synthesize includedFiles=_includedFiles;
@property(copy) NSString *partialSelector; // @synthesize partialSelector=_partialSelector;
@property BOOL containerIsIncomplete; // @synthesize containerIsIncomplete=_containerIsIncomplete;
@property(copy) NSString *containerResolution; // @synthesize containerResolution=_containerUSR;
@property unsigned int containerKind; // @synthesize containerKind=_containerKind;
@property unsigned long long contexts; // @synthesize contexts=_contexts;
- (void).cxx_destruct;

@end

@interface IDEIndexGenericSymbolFormatter : NSObject <IDEIndexSymbolFormatter>
{
}

- (id)qualifiedDisplayNameForSymbol:(id)arg1;
- (id)displayNameForSymbol:(id)arg1;
- (id)initWithSourceCodeLanguage:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IDEProvisioningManager : NSObject <IDEProvisioningMechanicDelegate, DVTInvalidation, IDEProvisioningStyleDataSourceProvider, IDEProvisioningMechanicContextProvider>
{
    DVTDispatchLock *_onDemandEvaluationFuturesLock;
    NSMutableSet *_onDemandEvaluationFutures;
    BOOL _finishedInitialProvisionableLoading;
    IDEProvisioningManagerContext *_context;
    IDEProvisioningLedger *_ledger;
    NSMapTable *_provisionablesToManagers;
    DVTLogAspect *_logAspect;
    DVTPerformanceMetric *_loadingMetric;
    DVTDispatchLock *_repairLock;
    NSMapTable *_repairablesToObservers;
    NSMapTable *_observersToRepairables;
    NSMapTable *_repairableToRepairState;
    IDEProvisioningUserAction *_delegateApprovedUserAction;
    id <IDEProvisionableProvider> _provisionableProvider;
    id <IDEProvisioningManagerDelegate> _delegate;
    NSObject<OS_dispatch_queue> *_delegateCallbackQueue;
}

+ (id)keyPathsForValuesAffectingProvisionableDevices;
+ (void)setRequiredCodesignableDevices:(id)arg1;
+ (id)requiredCodesignableDevices;
+ (void)setAutomaticallyRegisterDevices:(BOOL)arg1;
+ (BOOL)automaticallyRegisterDevices;
+ (void)setSupportCommandLineRepairs:(BOOL)arg1;
+ (BOOL)supportCommandLineRepairs;
+ (id)keyPathsForValuesAffectingFinishedLoading;
+ (void)initialize;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *delegateCallbackQueue; // @synthesize delegateCallbackQueue=_delegateCallbackQueue;
@property(nonatomic) __weak id <IDEProvisioningManagerDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) id <IDEProvisionableProvider> provisionableProvider; // @synthesize provisionableProvider=_provisionableProvider;
@property(retain, nonatomic) IDEProvisioningUserAction *delegateApprovedUserAction; // @synthesize delegateApprovedUserAction=_delegateApprovedUserAction;
@property(readonly, nonatomic) NSMapTable *repairableToRepairState; // @synthesize repairableToRepairState=_repairableToRepairState;
@property(readonly, nonatomic) NSMapTable *observersToRepairables; // @synthesize observersToRepairables=_observersToRepairables;
@property(readonly, nonatomic) NSMapTable *repairablesToObservers; // @synthesize repairablesToObservers=_repairablesToObservers;
@property(readonly, nonatomic) DVTDispatchLock *repairLock; // @synthesize repairLock=_repairLock;
@property(retain, nonatomic) DVTPerformanceMetric *loadingMetric; // @synthesize loadingMetric=_loadingMetric;
@property(nonatomic) BOOL finishedInitialProvisionableLoading; // @synthesize finishedInitialProvisionableLoading=_finishedInitialProvisionableLoading;
@property(retain, nonatomic) DVTLogAspect *logAspect; // @synthesize logAspect=_logAspect;
@property(retain, nonatomic) NSMapTable *provisionablesToManagers; // @synthesize provisionablesToManagers=_provisionablesToManagers;
@property(readonly, nonatomic) IDEProvisioningLedger *ledger; // @synthesize ledger=_ledger;
@property(retain, nonatomic) IDEProvisioningManagerContext *context; // @synthesize context=_context;
- (void).cxx_destruct;
- (void)setDelegate:(id)arg1 callbackQueue:(id)arg2;
- (void)repairForRepairable:(id)arg1 userAction:(id)arg2 didFailWithError:(id)arg3;
- (void)repairUserAction:(id)arg1 didFinishForRepairable:(id)arg2;
- (void)_userActionFinished:(id)arg1;
- (void)repairUserActionDidBeginForRepairable:(id)arg1;
- (void)repairForRepairable:(id)arg1 requiresUserAction:(id)arg2;
- (BOOL)_doesDelegateAuthorizeOrPendUserAction:(id)arg1 repairable:(id)arg2 observers:(id)arg3;
- (void)repairForRepairable:(id)arg1 didFailWithError:(id)arg2;
- (void)repairDidFinishForRepairable:(id)arg1;
- (void)repairForRepairable:(id)arg1 isExecutingStep:(id)arg2;
- (void)repairDidBeginForRepairable:(id)arg1;
- (void)repairPendingForRepairable:(id)arg1;
- (void)_performStateUpdateOnMainThreadForRepairable:(id)arg1 updateBlock:(CDUnknownBlockType)arg2;
- (id)_observersForRepairable:(id)arg1;
- (id)_repairablesForObserver:(id)arg1;
- (id)_allRepairables;
- (void)_removeObserver:(id)arg1 forRepairable:(id)arg2;
- (void)_addObserver:(id)arg1 forRepairable:(id)arg2;
- (void)setRepairables:(id)arg1 forObserver:(id)arg2 retryExistingRepairs:(BOOL)arg3 repairStateCallback:(CDUnknownBlockType)arg4;
- (void)setRepairables:(id)arg1 forObserver:(id)arg2 repairStateCallback:(CDUnknownBlockType)arg3;
- (void)setRepairables:(id)arg1 forObserver:(id)arg2;
- (id)evaluateProvisioningForProvisionable:(id)arg1 overrides:(id)arg2 deviceSnapshots:(id)arg3 isXBS:(BOOL)arg4;
- (void)waitUntilFinished;
@property(readonly, nonatomic) NSSet *provisionableDevices;
- (id)teamsForScheme:(id)arg1 commands:(id)arg2 buildConfiguration:(id)arg3;
@property(readonly, getter=isFinishedLoading) BOOL finishedLoading;
- (void)_provisionablesChanged;
- (void)_finishedLoading;
- (void)_setUpObservations;
@property(readonly, nonatomic) NSSet *provisionableManagers;
- (id)managerForProvisionable:(id)arg1;
- (id)mechanic;
@property(readonly, nonatomic) DVTSigningCertificateManager *certificateManager;
@property(readonly, nonatomic) DVTProvisioningProfileManager *profileManager;
@property(readonly, nonatomic) IDEProvisioningTeamManager *teamManager;
- (void)primitiveInvalidate;
- (void)_commonInit;
- (id)initWithProvisionableProvider:(id)arg1 context:(id)arg2;
- (id)initWithProvisionableProvider:(id)arg1 provisioningContext:(id)arg2;
- (id)initWithProvisionableProvider:(id)arg1;
- (id)_defaultContext;
- (id)_newMechanic;
- (id)init;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface IDEProvisioningRepairStateInfo : NSObject
{
    id <IDERepairable> _repairable;
    long long _state;
    DVTLogAspect *_logAspect;
    NSString *_stepDescription;
    IDEProvisioningUserAction *_userAction;
    NSError *_error;
}

+ (id)repairStateWithRepairable:(id)arg1 logAspect:(id)arg2;
@property(readonly) NSError *error; // @synthesize error=_error;
@property(readonly) IDEProvisioningUserAction *userAction; // @synthesize userAction=_userAction;
@property(readonly) NSString *stepDescription; // @synthesize stepDescription=_stepDescription;
@property(readonly) DVTLogAspect *logAspect; // @synthesize logAspect=_logAspect;
@property(readonly) long long state; // @synthesize state=_state;
@property(readonly) id <IDERepairable> repairable; // @synthesize repairable=_repairable;
- (void).cxx_destruct;
- (void)setFailedWithError:(id)arg1;
- (void)setSucceeded;
- (void)clearUserAction;
- (void)setExecutingUserAction;
- (void)setWaitingForUserAction:(id)arg1;
- (void)setExecutingWithStepDescription:(id)arg1;
- (void)setPending;
- (id)description;

@end

@interface IDEResultBundleCommandLineVerb : IDECommandLineVerb
{
}

+ (int)performWithEnvironment:(id)arg1;
+ (id)optionDefinitionsWithEnvironment:(id)arg1;
+ (id)issueSummariesForSchemeActionsInvocationRecord:(id)arg1;
+ (id)arrayOfDictionaryRepresentationsForIssueSummaries:(id)arg1;
+ (id)simpleSummaryForSchemeActionsInvocationRecord:(id)arg1;
+ (void)emitJSONForPropertyList:(id)arg1 toFileHandle:(id)arg2;
+ (id)stringForSimpleOperationStatus:(long long)arg1;
+ (id)stringForSchemeActionInvocationRecordStatus:(long long)arg1;

@end

@interface IDEIndexScannerDataSource : IDEIndexDataSource
{
}

- (BOOL)generateDataForJob:(id)arg1;

@end

@interface IDEIndexCallableSymbol : IDEIndexSymbol
{
    IDEIndexContainerSymbol *_containerSymbol;
}

- (void).cxx_destruct;
- (id)callsCancelWhen:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) IDEIndexCollection *calls;
- (id)typeOfArgument:(unsigned long long)arg1;
@property(readonly, nonatomic) unsigned long long numArguments;
@property(readonly, nonatomic) IDEIndexSymbol *returnType;
@property(readonly, nonatomic) IDEIndexPropertySymbol *property;
@property(readonly, nonatomic) IDEIndexCollection *overridingSymbols;
@property(readonly, nonatomic) IDEIndexCollection *overriddenSymbols;
- (void)setContainerSymbol:(id)arg1;
- (id)containerSymbol;
- (id)ide_callHeirarchy_callableSymbols;

@end

@interface IDEPathRunnable : IDERunnable <DVTXMLUnarchiving>
{
    IDESchemeBuildableReference *_buildableReference;
    id <IDEBuildable> _buildableProduct;
    DVTFilePath *_filePath;
}

+ (id)keyPathsForValuesAffectingHasRunnablePath;
+ (id)askOnLaunchPlaceHolderForBuildable:(id)arg1 scheme:(id)arg2;
+ (id)askOnLaunchPlaceHolderFilePath;
@property(readonly, copy) DVTFilePath *filePath; // @synthesize filePath=_filePath;
@property(retain) id <IDEBuildable> buildableProduct; // @synthesize buildableProduct=_buildableProduct;
@property(retain) IDESchemeBuildableReference *buildableReference; // @synthesize buildableReference=_buildableReference;
- (void).cxx_destruct;
- (void)dvt_encodeRelationshipsWithXMLArchiver:(id)arg1 version:(id)arg2;
- (void)dvt_encodeAttributesWithXMLArchiver:(id)arg1 version:(id)arg2;
- (void)setFilePathFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (int)runnableType;
- (id)runnableUTIType:(id *)arg1;
- (BOOL)hasRunnablePath;
- (id)pathToRunnableForBuildParameters:(id)arg1;
- (id)toolTip;
- (id)bundleIdentifier;
- (id)displayName;
@property(readonly, copy) NSString *description;
- (id)initFromXMLUnarchiver:(id)arg1 archiveVersion:(float)arg2;
- (id)initWithFilePath:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IDESchemeOperationParameters : NSObject
{
    long long _schemeTask;
    long long _buildCommand;
    IDEExecutionEnvironment *_executionEnvironment;
    IDERunDestination *_runDestination;
    IDESchemeCommand *_schemeCommand;
    NSString *_commandName;
    IDESchemeActionsInvocationRecord *_invocationRecord;
    DVTFilePath *_filePathForSingleFileAction;
    NSArray *_overridingTestingSpecifiers;
    NSArray *_additionalLaunchCommandLineArguments;
    NSDictionary *_overridingLaunchEnvironmentVariables;
}

+ (id)operationParametersWithSchemeTask:(long long)arg1 buildCommand:(long long)arg2 executionEnvironment:(id)arg3 runDestination:(id)arg4 schemeCommand:(id)arg5 commandName:(id)arg6 invocationRecord:(id)arg7;
@property(copy) NSDictionary *overridingLaunchEnvironmentVariables; // @synthesize overridingLaunchEnvironmentVariables=_overridingLaunchEnvironmentVariables;
@property(copy) NSArray *additionalLaunchCommandLineArguments; // @synthesize additionalLaunchCommandLineArguments=_additionalLaunchCommandLineArguments;
@property(copy) NSArray *overridingTestingSpecifiers; // @synthesize overridingTestingSpecifiers=_overridingTestingSpecifiers;
@property(copy) DVTFilePath *filePathForSingleFileAction; // @synthesize filePathForSingleFileAction=_filePathForSingleFileAction;
@property(retain) IDESchemeActionsInvocationRecord *invocationRecord; // @synthesize invocationRecord=_invocationRecord;
@property(copy) NSString *commandName; // @synthesize commandName=_commandName;
@property(retain) IDESchemeCommand *schemeCommand; // @synthesize schemeCommand=_schemeCommand;
@property(retain) IDERunDestination *runDestination; // @synthesize runDestination=_runDestination;
@property(retain) IDEExecutionEnvironment *executionEnvironment; // @synthesize executionEnvironment=_executionEnvironment;
@property long long buildCommand; // @synthesize buildCommand=_buildCommand;
@property long long schemeTask; // @synthesize schemeTask=_schemeTask;
- (void).cxx_destruct;

@end

@interface IDEExecutionRunnableTracker : IDEExecutionTracker
{
    IDERunOperationWorker *_worker;
    BOOL _finishedRunning;
}

- (void).cxx_destruct;
- (id)notFinishedReasonWithDepth:(unsigned long long)arg1;
- (void)executionWantsHold:(BOOL)arg1 withError:(id)arg2;
- (void)runningDidFinish:(id)arg1 withError:(id)arg2;
- (void)cancel;
- (BOOL)isFinished;
- (id)initWithWorker:(id)arg1;
- (id)init;

@end

@interface IDEDataProvider_procinfo : IDEDataProvider
{
    NSObject<OS_dispatch_queue> *_capture_lock;
    struct unordered_map<int, ProcessInfo, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, ProcessInfo>>> _processInfoByPID;
}

+ (id)sharedDataProvider;
- (id).cxx_construct;
- (void).cxx_destruct;
- (id)captureAttributes:(id)arg1 forPIDs:(id)arg2;
- (BOOL)captureAttributes:(id)arg1 toDictionary:(id)arg2 forPID:(id)arg3;
- (id)supportedAttributes;
- (id)init;

@end

@interface IDEIndex : NSObject <IDEIndexDatabaseDelegate, DVTInvalidation>
{
    IDEWorkspace *_workspace;
    DVTFilePath *_databaseFile;
    IDEIndexingPrebuildController *_prebuildController;
    IDEIndexingEngine *_engine;
    IDEIndexQPManager *_qpManager;
    NSMutableDictionary *_identifiersToIndexables;
    NSMutableDictionary *_indexablesToProductHeaders;
    NSMutableDictionary *_copiedHeadersToSources;
    NSMutableDictionary *_sourceHeadersToIndexables;
    NSSet *_preferredTargets;
    NSSet *_priorityTargets;
    IDEIndexDatabase *_workspaceDatabase;
    long long _purgeCount;
    DVTDispatchLock *_stateLock;
    DVTDispatchLock *_pchCreationLock;
    NSMutableDictionary *_pchFiles;
    NSDate *_lastErrorTime;
    BOOL _isCancelled;
    BOOL _isInErrorRecoveryMode;
    BOOL _isReadOnly;
    BOOL _cleanedUpOldPCHs;
    DVTObservingToken *_indexFolderPathObservingToken;
    DVTObservingToken *_activeRunContextObservingToken;
    DVTObservingToken *_activeRunDestinationObservingToken;
    DVTNotificationToken *_indexableFileWasAddedNotificationObservingToken;
    DVTNotificationToken *_indexableFileWillBeRemovedNotificationObservingToken;
    DVTNotificationToken *_indexableDidRenameFileNotificationObservingToken;
    DVTNotificationToken *_buildablesDidChangeNotificationObservingToken;
    DVTNotificationToken *_buildSettingsDidChangeNotificationObservingToken;
    DVTNotificationToken *_buildOperationDidStopNotificationObservingToken;
}

+ (BOOL)languageSupportsSymbolColoring:(id)arg1;
+ (id)resolutionForName:(id)arg1 kind:(id)arg2 containerName:(id)arg3;
+ (id)pathToClang;
+ (id)_dataSourceExtensionForFile:(id)arg1 withLanguage:(id)arg2;
+ (unsigned long long)assertionBehaviorAfterEndOfEventForSelector:(SEL)arg1;
+ (BOOL)supportsInvalidationPrevention;
+ (void)createIndexForWorkspace:(id)arg1 withState:(id)arg2;
+ (id)_databaseFolderForWorkspace:(id)arg1;
+ (void)syncPerformBlockOnMainThread:(CDUnknownBlockType)arg1;
+ (void)initialize;
+ (BOOL)searchQualifiedNames;
+ (BOOL)includeAutoImportResults;
+ (id)schedulingLogAspect;
+ (id)clangInvocationLogAspect;
+ (id)symbolAdditionLogAspect;
+ (id)deferredMetricLogAspect;
+ (id)metricLogAspect;
+ (id)logAspect;
@property(readonly, nonatomic) DVTFilePath *databaseFile; // @synthesize databaseFile=_databaseFile;
@property(readonly, nonatomic) IDEWorkspace *workspace; // @synthesize workspace=_workspace;
@property(retain) IDEIndexingPrebuildController *prebuildController; // @synthesize prebuildController=_prebuildController;
@property(readonly, nonatomic) IDEIndexDatabase *database; // @synthesize database=_workspaceDatabase;
- (void).cxx_destruct;
- (id)symbolDumpForFile:(id)arg1;
- (id)targetIdentifiersForFile:(id)arg1;
- (void)mainFilesForFile:(id)arg1 queue:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (id)mainFilesForFile:(id)arg1;
- (void)sdkForFile:(id)arg1 queue:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (id)sdkForFile:(id)arg1;
- (id)timestampForFile:(id)arg1;
- (void)_buildOperationDidStop:(id)arg1;
- (void)_buildSettingsDidChange:(id)arg1;
- (void)_activeRunDestinationDidChange:(id)arg1;
- (void)_activeRunContextDidChange:(id)arg1;
- (void)_clearAllCachedBuildSettings;
- (void)_computePreferredTargets;
- (BOOL)isPreferredTarget:(id)arg1 priority:(char *)arg2;
- (BOOL)isPreferredTarget:(id)arg1;
- (id)databaseQueryProvider;
- (id)queryProviderForLocation:(id)arg1 highPriority:(BOOL)arg2;
- (void)dontDeferJobForFile:(id)arg1 indexable:(id)arg2;
- (void)registerHotFile:(id)arg1;
- (id)queryProviderForFile:(id)arg1 highPriority:(BOOL)arg2;
- (id)resolutionForName:(id)arg1 kind:(id)arg2 containerName:(id)arg3;
- (id)indexableForCopiedHeader:(id)arg1;
- (id)originalPathsForPaths:(id)arg1;
- (id)effectivePathForHeader:(id)arg1;
- (void)_initCopiedHeaders;
- (void)indexModuleIfNeeded:(id)arg1 settings:(id)arg2;
- (void)indexModuleIfNeeded:(id)arg1;
- (void)_cleanupOldPCHs;
- (void)didCancelIndexingPCHFile:(id)arg1;
- (BOOL)createPCHFile:(id)arg1 arguments:(id)arg2 hashCriteria:(id)arg3 target:(id)arg4 session:(id)arg5 willIndex:(BOOL)arg6 translationUnit:(id *)arg7;
- (void)database:(id)arg1 reportAutoQueryProgress:(double)arg2;
- (void)clearPCHFailuresForDatabase:(id)arg1;
- (void)databaseDidReportError:(id)arg1;
- (void)databaseDidLoad:(id)arg1;
- (void)databaseDidOpen:(id)arg1;
- (id)databaseProvidersAndVersions:(id)arg1;
- (void)database:(id)arg1 didForgetFiles:(id)arg2;
- (void)database:(id)arg1 didEndImportSession:(id)arg2;
- (void)databaseDidSave:(id)arg1;
- (void)databaseDidIndexHotFile:(id)arg1;
- (void)_respondToFileChangeNotification:(id)arg1;
@property(readonly, nonatomic) DVTFilePath *workspaceFile;
@property(readonly, nonatomic) NSString *workspaceName;
- (id)dataSourceExtensionForFile:(id)arg1 settings:(id)arg2;
- (id)_dataSourceExtensionForFile:(id)arg1 withSettings:(id)arg2;
- (id)settingsForFile:(id)arg1 indexable:(id)arg2;
- (id)_waitForSettingsForFile:(id)arg1 object:(id)arg2;
- (id)_waitForSettingsFromObject:(id)arg1;
- (void)waitForBuildSystem:(id)arg1;
- (id)workspaceHeadersForIndexable:(id)arg1;
- (void)gatherProductHeadersForIndexable:(id)arg1;
- (long long)purgeCount;
- (void)purgeFileCaches;
- (void)primitiveInvalidate;
- (void)editorDidSaveFile:(id)arg1;
- (void)editorWillSaveFile:(id)arg1;
- (void)expediteIndexing;
- (void)_stopIndexing;
- (void)setThrottleFactor:(double)arg1;
- (void)resumeIndexing;
- (void)suspendIndexing;
@property(readonly, nonatomic) BOOL shouldAllowRefactoring;
@property(readonly, nonatomic) BOOL isQuiescent;
- (void)doWhenFilesReady:(CDUnknownBlockType)arg1;
- (void)willRegisterMoreFiles:(BOOL)arg1;
- (void)unregisterFile:(id)arg1;
- (void)registerFile:(id)arg1;
- (id)indexableForIdentifier:(id)arg1;
- (void)unregisterObject:(id)arg1;
- (void)registerObject:(id)arg1;
- (void)postNotificationName:(id)arg1;
- (void)postNotificationName:(id)arg1 userInfo:(id)arg2;
@property(readonly, copy) NSString *description;
- (void)setIndexState:(id)arg1;
- (id)indexState;
@property(readonly) DVTFilePath *workspaceBuildProductsDirPath;
@property(readonly) DVTFilePath *headerMapFilePath;
- (void)setKeyPathObservers:(id)arg1;
- (BOOL)isCurrentForWorkspace:(id)arg1;
- (id)initWithFolder:(id)arg1;
- (id)initWithFolder:(id)arg1 forWorkspace:(id)arg2 withState:(id)arg3;
- (void)_cleanupOldIndexFoldersForWorkspace:(id)arg1 preservingFolders:(id)arg2;
- (void)_cleanupOldIndexFoldersForWorkspace:(id)arg1;
- (double)_atime:(struct stat *)arg1;
- (BOOL)_stat:(struct stat *)arg1 filePath:(id)arg2;
- (id)_databaseFileURLForFolder:(id)arg1;
- (id)_databaseFolderForWorkspace:(id)arg1;
- (BOOL)_reopenDatabaseWithRemoval:(BOOL)arg1;
- (BOOL)_createDatabaseFolder;
- (void)_setupObservers;
- (id)ide_callHeirarchy_callsOfSymbol:(id)arg1;
- (id)collectTestMethodsPerTestTargets;
- (id)allAutoImportItemsMatchingKind:(id)arg1 symbolLanguage:(id)arg2;
- (id)allAutoImportItemsMatchingKind:(id)arg1;
- (id)filesWithSymbolOccurrencesMatchingName:(id)arg1 kind:(id)arg2;
- (id)classesWithReferencesToSymbols:(id)arg1;
- (id)allClassesWithMembers:(id)arg1;
- (id)classesWithMembers:(id)arg1;
- (id)allMethodsMatchingMethod:(id)arg1 forReceiver:(id)arg2;
- (id)membersMatchingName:(id)arg1 kinds:(id)arg2 forInterfaces:(id)arg3;
- (id)membersMatchingKinds:(id)arg1 forInterfaces:(id)arg2;
- (id)symbolsForResolutions:(id)arg1;
- (id)parsedCodeCommentAtLocation:(id)arg1 withCurrentFileContentDictionary:(id)arg2;
- (id)parsedCodeCommentAtLocation:(id)arg1 withCurrentFileContentDictionary:(id)arg2 cursorKindOut:(long long *)arg3;
- (id)parsedCodeCommentAtLocation:(id)arg1 withCurrentFileContentDictionary:(id)arg2 symbolKindOut:(id *)arg3;
- (id)codeDiagnosticsAtLocation:(id)arg1 withCurrentFileContentDictionary:(id)arg2;
- (id)codeCompletionsAtLocation:(id)arg1 withCurrentFileContentDictionary:(id)arg2 completionContext:(id *)arg3;
- (id)allParentsOfSymbols:(id)arg1 cancelWhen:(CDUnknownBlockType)arg2;
- (id)topLevelSymbolsInFile:(id)arg1;
- (unsigned long long)countOfSymbolsMatchingKind:(id)arg1 workspaceOnly:(BOOL)arg2;
- (id)allSymbolsMatchingKind:(id)arg1 workspaceOnly:(BOOL)arg2 cancelWhen:(CDUnknownBlockType)arg3;
- (id)allSymbolsMatchingKind:(id)arg1 workspaceOnly:(BOOL)arg2;
- (void)allSymbolsMatchingKind:(id)arg1 queue:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (id)allSymbolsMatchingKind:(id)arg1;
- (id)testMethodsForClasses:(id)arg1;
- (id)testCaseBaseClasses;
- (id)allSubClassesForClasses:(id)arg1;
- (id)allSymbolsMatchingNames:(id)arg1 kind:(id)arg2;
- (void)allSymbolsMatchingName:(id)arg1 kind:(id)arg2 queue:(id)arg3 completionBlock:(CDUnknownBlockType)arg4;
- (id)allSymbolsMatchingName:(id)arg1 kind:(id)arg2;
- (void)allSymbolsMatchingName:(id)arg1 queue:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (id)allSymbolsMatchingName:(id)arg1;
- (void)allSymbolNamesQueue:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (id)allSymbolNames;
- (id)allProtocolsMatchingName:(id)arg1;
- (id)allClassesMatchingName:(id)arg1;
- (id)impliedHeadersForModuleImportLocation:(id)arg1 withCurrentFileContentDictionary:(id)arg2;
- (id)importedFileAtDocumentLocation:(id)arg1 withCurrentFileContentDictionary:(id)arg2;
- (id)importedFilesAtDocument:(id)arg1 withCurrentFileContentDictionary:(id)arg2;
- (id)collectionElementTypeSymbolForSymbol:(id)arg1 withCurrentFileContentDictionary:(id)arg2;
- (id)typeSymbolForSymbol:(id)arg1 withCurrentFileContentDictionary:(id)arg2;
- (id)messageReceiverInContext:(id)arg1 withCurrentFileContentDictionary:(id)arg2;
- (id)referencesToSymbolMatchingName:(id)arg1 inContext:(id)arg2 withCurrentFileContentDictionary:(id)arg3;
- (id)referencesToSymbol:(id)arg1 inContext:(id)arg2 withCurrentFileContentDictionary:(id)arg3;
- (id)symbolsUsedInContext:(id)arg1 withCurrentFileContentDictionary:(id)arg2;
- (void)symbolsOccurrencesInContext:(id)arg1 withCurrentFileContentDictionary:(id)arg2 queue:(id)arg3 completionBlock:(CDUnknownBlockType)arg4;
- (id)symbolsOccurrencesInContext:(id)arg1 withCurrentFileContentDictionary:(id)arg2;
- (id)symbolsMatchingName:(id)arg1 inContext:(id)arg2 withCurrentFileContentDictionary:(id)arg3;
- (id)symbolsMatchingName:(id)arg1 inContext:(id)arg2;
- (id)symbolsContaining:(id)arg1 anchorStart:(BOOL)arg2 anchorEnd:(BOOL)arg3 subsequence:(BOOL)arg4 ignoreCase:(BOOL)arg5 cancelWhen:(CDUnknownBlockType)arg6;
- (id)symbolsContaining:(id)arg1 anchorStart:(BOOL)arg2 anchorEnd:(BOOL)arg3 subsequence:(BOOL)arg4 ignoreCase:(BOOL)arg5;
- (id)topLevelProtocolsWorkspaceOnly:(BOOL)arg1 cancelWhen:(CDUnknownBlockType)arg2;
- (id)topLevelProtocolsWorkspaceOnly:(BOOL)arg1;
- (id)topLevelProtocols;
- (id)topLevelClassesWorkspaceOnly:(BOOL)arg1 cancelWhen:(CDUnknownBlockType)arg2;
- (id)topLevelClassesWorkspaceOnly:(BOOL)arg1;
- (id)topLevelClasses;
- (id)filesContaining:(id)arg1 anchorStart:(BOOL)arg2 anchorEnd:(BOOL)arg3 subsequence:(BOOL)arg4 ignoreCase:(BOOL)arg5 cancelWhen:(CDUnknownBlockType)arg6;
- (id)filesIncludedByFile:(id)arg1;
- (id)filesIncludingFile:(id)arg1;
- (id)mainFileForSelectionFilePath:(id)arg1 buildSettings:(id *)arg2;
- (id)objCOrCCompilationUnitIndexablesForMainFile:(id)arg1 indexableObjects:(id)arg2;
- (BOOL)isFileObjCCompilationUnitOrHeader:(id)arg1 error:(id *)arg2;
- (id)_localizedPhraseForDependentObjCCompilationUnit:(id)arg1 errorLanguages:(id)arg2 sharedLanguageIdentifier:(id)arg3 sharedIndexableObject:(id)arg4;
- (id)_localizedDescriptionForObjCCompilationUnit:(id)arg1 errorLanguages:(id)arg2;
- (BOOL)_errorLanguages:(id *)arg1 forFilePath:(id)arg2 indexableObjects:(id)arg3;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface IDEPlaygroundToolchainSupport : NSObject
{
}

+ (BOOL)toolchainIsValidForPlaygroundExecutionAgainstPlatform:(id)arg1 error:(id *)arg2;
+ (id)toolchainLLDBPath;
+ (id)toolchainPlaygroundLoggerPathForPlatform:(id)arg1;
+ (id)toolchainSwiftStandardLibraryPathForPlatform:(id)arg1;
+ (id)toolchainSwiftLibrariesPathForPlatform:(id)arg1;
+ (id)toolchainPrivateFrameworksPathForPlatform:(id)arg1;
+ (id)toolchainFrameworksPathForPlatform:(id)arg1;
+ (id)toolchainPlatformPathForPlatform:(id)arg1;
+ (id)toolchainPath;
+ (id)toolchain;

@end

@interface IDEBatchFindScopeAbstractOperatorOperandPredicate : IDEBatchFindScopePredicate
{
    long long _operatorValue;
    NSString *_operand;
}

+ (id)predicateWithPropertyListRepresentation:(id)arg1;
+ (id)operatorToString:(long long)arg1;
+ (long long)operatorFromString:(id)arg1;
@property(readonly) NSString *operand; // @synthesize operand=_operand;
@property(readonly) long long operatorValue; // @synthesize operatorValue=_operatorValue;
- (void).cxx_destruct;
- (id)propertyListRepresentation;
- (BOOL)isWorkspaceSpecific;
- (BOOL)isEqualToScopePredicateWithIdenticalClass:(id)arg1;
- (unsigned long long)hash;
- (id)initWithOperator:(long long)arg1 operand:(id)arg2;

@end

@interface IDETestOperationStateMachine : NSObject
{
    BOOL _testPlanDidStartExecuting;
    BOOL _readyForTestBundleToConnect;
    BOOL _launchSessionInitialIntensiveFileIODone;
    BOOL _hasReported;
    id <IDETestOperationStateMachineDelegate> _delegate;
    double _exitWithCodeTimeout;
    double _connectionLostTimeout;
    double _crashedWithReportTimeout;
    NSMutableDictionary *_userInfo;
    NSObject<OS_dispatch_queue> *_queue;
}

@property(retain) NSObject<OS_dispatch_queue> *queue; // @synthesize queue=_queue;
@property(retain) NSMutableDictionary *userInfo; // @synthesize userInfo=_userInfo;
@property BOOL hasReported; // @synthesize hasReported=_hasReported;
@property double crashedWithReportTimeout; // @synthesize crashedWithReportTimeout=_crashedWithReportTimeout;
@property double connectionLostTimeout; // @synthesize connectionLostTimeout=_connectionLostTimeout;
@property double exitWithCodeTimeout; // @synthesize exitWithCodeTimeout=_exitWithCodeTimeout;
@property __weak id <IDETestOperationStateMachineDelegate> delegate; // @synthesize delegate=_delegate;
@property BOOL launchSessionInitialIntensiveFileIODone; // @synthesize launchSessionInitialIntensiveFileIODone=_launchSessionInitialIntensiveFileIODone;
@property BOOL readyForTestBundleToConnect; // @synthesize readyForTestBundleToConnect=_readyForTestBundleToConnect;
@property BOOL testPlanDidStartExecuting; // @synthesize testPlanDidStartExecuting=_testPlanDidStartExecuting;
- (void).cxx_destruct;
- (void)testmanagerdConnectionLost;
- (void)launchSessionCrashedWithDescription:(id)arg1;
- (void)launchSessionConnectionLost;
- (void)launchSessionExitedWithCode:(int)arg1;
- (void)launchSessionExpired;
- (void)launchSessionInitialIntensiveFileIODoneState;
- (void)_queue_finalizeWithDescription:(id)arg1;
- (id)initWithDelegate:(id)arg1;

@end

@interface IDEARCConversionTarget : IDEMigrationTarget
{
    BOOL _fileOveridesARCSetting;
    NSString *_displayName;
}

@property(readonly, copy) NSString *displayName; // @synthesize displayName=_displayName;
@property(readonly) BOOL fileOveridesARCSetting; // @synthesize fileOveridesARCSetting=_fileOveridesARCSetting;
- (void).cxx_destruct;
- (void)updateBuildSettings;
- (void)disableOverridingBuildSettings;
- (void)enableOverridingBuildSettings;
@property BOOL convertsToARC;
- (BOOL)shouldMigrate;
- (id)warningMessage;
@property(readonly) BOOL buildsWithARC;
@property(readonly) BOOL canConvertToUseARC;
@property(readonly, nonatomic) NSString *blueprintProviderName;
- (id)initWithBlueprint:(id)arg1 migrationContext:(id)arg2;

@end

@interface IDEARCConversionBuildFile : NSObject
{
    id _iconImage;
    IDEFileReference *_fileReference;
    IDEARCConversionTarget *_target;
    NSString *_warningMessage;
    BOOL _enablesARC;
}

@property BOOL enablesARC; // @synthesize enablesARC=_enablesARC;
@property(readonly, copy) NSString *warningMessage; // @synthesize warningMessage=_warningMessage;
@property(readonly) IDEARCConversionTarget *target; // @synthesize target=_target;
@property(readonly, copy) IDEFileReference *fileReference; // @synthesize fileReference=_fileReference;
- (void).cxx_destruct;
- (void)updateBuildSettings;
- (void)disableOverridingBuildSettings;
- (void)enableOverridingBuildSettings;
- (void)_setEnablesARC:(BOOL)arg1 overridingOnly:(BOOL)arg2;
@property(readonly, copy) NSString *displayName;
- (id)initWithFileReference:(id)arg1 target:(id)arg2;

@end

@interface IDEProvisioningRevokeCertificatesUserAction : IDEProvisioningUserAction
{
    BOOL _forPreExistingMachineSpecificCertificate;
    NSArray *_certificates;
}

+ (id)revokeCertificatesUserActionWithCertificates:(id)arg1 context:(id)arg2;
@property(nonatomic, getter=isForPreExistingMachineSpecificCertificate) BOOL forPreExistingMachineSpecificCertificate; // @synthesize forPreExistingMachineSpecificCertificate=_forPreExistingMachineSpecificCertificate;
@property(readonly, nonatomic) NSArray *certificates; // @synthesize certificates=_certificates;
- (void).cxx_destruct;
- (id)executionMessage;
- (id)userActionName;
- (id)userActionMessage;
- (id)userActionTitle;
- (id)initWithCertificates:(id)arg1 context:(id)arg2;

@end

@interface IDEFileReferenceCore : IDEContainerItemCore <IDEFileReferenceCore>
{
    DVTFileDataType *_assignedDataType;
}

@property(copy) DVTFileDataType *assignedDataType; // @synthesize assignedDataType=_assignedDataType;
- (void).cxx_destruct;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) id <IDEContainerCore> parentContainer;
@property(retain) id <IDEGroupCore> parentGroup;
@property(copy) NSString *path;
@property(readonly) Class superclass;

@end

@interface IDEDeviceInstallLogProvider : IDELogProvider
{
}

+ (id)keyPathsForValuesAffectingLogRecords;
- (id)ideModelObjectTypeIdentifier;
- (id)logRecords;

@end

@interface IDEDistributionODRStep : IDEDistributionItemProcessingStep
{
}

+ (_Bool)runsPerThinningVariant;
- (_Bool)runWithError:(id *)arg1;
- (id)providedOutputContextPropertyNames;
- (id)requiredInputContextPropertyNames;
- (_Bool)processAppAtPath:(id)arg1 destinationPath:(id)arg2 isAppStoreBound:(BOOL)arg3 baseURL:(id)arg4 assetPackManifestPath:(id *)arg5 includeODRAssetPackInBundle:(BOOL)arg6 error:(id *)arg7;
- (id)name;

@end

@interface IDEIndexCollection : NSObject <NSFastEnumeration>
{
    IDEIndexDBTempTable *_tempTable;
    NSArray *_instantiatedRows;
    Class _expectedClass;
}

@property(readonly, nonatomic) IDEIndexDBTempTable *tempTable; // @synthesize tempTable=_tempTable;
- (void).cxx_destruct;
- (id)uniqueObjects;
- (id)onlyObject;
- (id)firstObject;
- (id)instantiateRow:(struct sqlite3_stmt *)arg1;
- (id)tempTableSchema;
- (id)allObjects;
- (unsigned long long)countByEnumeratingWithState:(CDStruct_70511ce9 *)arg1 objects:(id *)arg2 count:(unsigned long long)arg3;
- (unsigned long long)instantiateRowsUpto:(unsigned long long)arg1;
- (void)dealloc;
- (void)dropTempTable;
- (id)description;
- (void)setExpectedClass:(Class)arg1;
- (BOOL)_checkExpectedClass:(id)arg1;
- (id)initWithConnection:(id)arg1;
- (id)initWithArrayNoCopy:(id)arg1;
- (id)initWithArray:(id)arg1;
- (id)initWithObject:(id)arg1;
- (id)init;

@end

@interface IDELocalizedResourceAdaptorWorkContext : IDELocalizationWorkContext
{
}

+ (id)contextWithParent:(id)arg1 adaptor:(id)arg2;
+ (id)contextWithParent:(id)arg1 dryRun:(BOOL)arg2 adaptor:(id)arg3;
@property(readonly) IDELocalizedResourceAdaptor *adaptor;

@end

@interface IDELocalizedResourcePopulationContext : IDELocalizationWorkContext <IDELocalizationWorkProvider>
{
    NSMutableDictionary *_adaptorsByGroupIdentifier;
    IDEContainer<IDELocalizedContainer> *_container;
}

+ (id)contextWithParent:(id)arg1 container:(id)arg2;
@property(retain) IDEContainer<IDELocalizedContainer> *container; // @synthesize container=_container;
@property(readonly) NSDictionary *adaptorsByGroupIdentifier; // @synthesize adaptorsByGroupIdentifier=_adaptorsByGroupIdentifier;
- (void).cxx_destruct;
- (id)work;
- (void)primitiveInvalidate;
- (void)setAdaptor:(id)arg1 forGroupIdentifier:(id)arg2;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IDELocalizedResourceAdaptor : NSObject <DVTInvalidation>
{
    IDENotifyingLocalizedGroup *_localizedGroup;
    IDEContainer<IDELocalizedContainer> *_container;
}

+ (id)writeWorkForContext:(id)arg1 langauge:(id)arg2;
+ (id)readWorkForContext:(id)arg1;
+ (id)adaptedResourcesForPopulationContext:(id)arg1 plugInManager:(id)arg2;
+ (id)adaptedResourcesForPopulationContext:(id)arg1;
+ (void)initialize;
@property(readonly) IDEContainer<IDELocalizedContainer> *container; // @synthesize container=_container;
@property(readonly) IDENotifyingLocalizedGroup *localizedGroup; // @synthesize localizedGroup=_localizedGroup;
- (void).cxx_destruct;
- (void)setComments:(id)arg1;
- (id)comments;
- (void)setStrings:(id)arg1 forLanguage:(id)arg2;
- (id)stringsForLanguage:(id)arg1;
- (id)localizedGroupIdentifier;
- (id)initWithContainer:(id)arg1 localizedGroup:(id)arg2;
- (void)primitiveInvalidate;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface IDESourceFileBuildInfo : NSObject
{
    NSString *_outputFile;
    NSString *_languageName;
    NSArray *_toolchainIdents;
    NSArray *_swiftCommandLine;
    NSString *_swiftBuiltProductsDir;
    NSString *_swiftModuleName;
    NSArray *_clangCommandLine;
    NSString *_clangBuiltProductsDir;
    NSString *_clangPrefixFilePath;
    NSString *_clangPCHFilePath;
    NSString *_clangPCHHashCriteria;
    NSArray *_clangPCHCommandLine;
}

+ (id)sourceFileBuildInfoFromLegacyASTBuildInfoDictionaryRepresentation:(id)arg1;
@property(readonly) NSArray *clangPCHCommandLine; // @synthesize clangPCHCommandLine=_clangPCHCommandLine;
@property(readonly) NSString *clangPCHHashCriteria; // @synthesize clangPCHHashCriteria=_clangPCHHashCriteria;
@property(readonly) NSString *clangPCHFilePath; // @synthesize clangPCHFilePath=_clangPCHFilePath;
@property(readonly) NSString *clangPrefixFilePath; // @synthesize clangPrefixFilePath=_clangPrefixFilePath;
@property(readonly) NSString *clangBuiltProductsDir; // @synthesize clangBuiltProductsDir=_clangBuiltProductsDir;
@property(readonly) NSArray *clangCommandLine; // @synthesize clangCommandLine=_clangCommandLine;
@property(readonly) NSString *swiftModuleName; // @synthesize swiftModuleName=_swiftModuleName;
@property(readonly) NSString *swiftBuiltProductsDir; // @synthesize swiftBuiltProductsDir=_swiftBuiltProductsDir;
@property(readonly) NSArray *swiftCommandLine; // @synthesize swiftCommandLine=_swiftCommandLine;
@property(readonly) NSArray *toolchainIdents; // @synthesize toolchainIdents=_toolchainIdents;
@property(readonly) NSString *languageName; // @synthesize languageName=_languageName;
@property(readonly) NSString *outputFile; // @synthesize outputFile=_outputFile;
- (void).cxx_destruct;
- (id)legacyDictionaryASTBuildInfoRepresentation;
- (id)initFromLegacyASTBuildInfoDictionaryRepresentation:(id)arg1;

@end

@interface IDEDistributionSymbolsStep : IDEDistributionItemProcessingStep
{
}

- (_Bool)runWithError:(id *)arg1;
- (_Bool)shouldSkip;
- (id)shouldProcessSymbolsForItem:(id)arg1 archive:(id)arg2 error:(id *)arg3;
- (id)providedOutputContextPropertyNames;
- (id)requiredInputContextPropertyNames;
- (id)name;

@end

@interface IDESourceKitSymbolOccurrence : NSObject
{
    long long _role;
    DVTDocumentLocation *_location;
    long long _lineNumber;
    long long _column;
    DVTFilePath *_file;
    NSURL *_moduleURL;
    IDESourceKitSymbol *_correspondingSymbol;
    IDESourceKitSymbol *_containingSymbol;
    IDESourceKitWorkspace *_index;
}

@property(readonly, nonatomic) long long column; // @synthesize column=_column;
@property(readonly, nonatomic) long long lineNumber; // @synthesize lineNumber=_lineNumber;
@property(readonly, nonatomic) long long role; // @synthesize role=_role;
- (void).cxx_destruct;
- (BOOL)isKindOfClass:(Class)arg1;
- (id)callees;
@property(readonly, nonatomic) DVTDocumentLocation *location;
@property(readonly, nonatomic) NSURL *moduleURL;
@property(readonly, nonatomic) DVTFilePath *file;
- (id)index;
- (id)occurrence;
- (void)setContainingSymbol:(id)arg1;
- (id)containingSymbol;
- (id)description;
- (void)setOccurrence:(id)arg1;
- (id)correspondingSymbol;
- (id)initWithCorrespondingSymbol:(id)arg1 role:(long long)arg2 lineNumber:(long long)arg3 column:(long long)arg4 file:(id)arg5 location:(id)arg6 moduleURL:(id)arg7 forSourceKitWorkspace:(id)arg8;
- (void)describeFields:(CDUnknownBlockType)arg1;

@end

@interface IDECommandLineBuildLogRecorder : IDEActivityLogSectionRecorder
{
    IDEActivityLogSection *_activeTargetSection;
    NSMutableArray *_activeSections;
    NSMapTable *_bufferedTextPerLogSection;
}

+ (void)initialize;
@property(retain) NSMapTable *bufferedTextPerLogSection; // @synthesize bufferedTextPerLogSection=_bufferedTextPerLogSection;
@property(retain) NSMutableArray *activeSections; // @synthesize activeSections=_activeSections;
- (void).cxx_destruct;
- (void)noteDescendantLogSectionDidClose:(id)arg1 inSupersection:(id)arg2;
- (BOOL)_findNewEffectiveSectionFromSubsectionsOfSection:(id)arg1;
- (BOOL)_findNewEffectiveSectionFromSubsectionsOfSection:(id)arg1 startingAtIndex:(unsigned long long)arg2;
- (void)noteDescendantLogSection:(id)arg1 didAppendText:(id)arg2;
- (void)noteDescendantLogSection:(id)arg1 didAddSubsection:(id)arg2;
- (void)_noteLogSection:(id)arg1 didAddSubsection:(id)arg2;
- (void)_emitSection:(id)arg1 inSupersection:(id)arg2;
- (void)_cleanupClosedSection:(id)arg1 inSupersection:(id)arg2;
- (void)_emitString:(id)arg1 withNewlineIfNeeded:(BOOL)arg2 verbosityLevel:(long long)arg3;
@property(readonly) IDEActivityLogSection *effectiveSection;
- (id)section;
- (id)initWithLogSection:(id)arg1;

@end

@interface IDEFrameworkCore : IDEContainerCore <IDEFrameworkCore>
{
}


// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;
@end

@interface IDEDebugQueue : NSObject <IDEDebugNavigableModel, DVTInvalidation>
{
    NSString *_type;
    BOOL _displayNameComputed;
    NSString *_displayName;
    IDEDebugProcess *_parentProcess;
    NSString *_name;
    NSArray *_threads;
    NSArray *_pendingBlocksThreads;
    IDEThread *_recordedThread;
}

+ (id)keyPathsForValuesAffectingDisplayName;
+ (id)keyPathsForValuesAffectingRecorded;
+ (BOOL)_queueNameBelongsToConcurrentQueues:(id)arg1;
+ (void)initialize;
@property(retain, nonatomic) IDEThread *recordedThread; // @synthesize recordedThread=_recordedThread;
@property(copy, nonatomic) NSArray *pendingBlocksThreads; // @synthesize pendingBlocksThreads=_pendingBlocksThreads;
@property(copy, nonatomic) NSArray *threads; // @synthesize threads=_threads;
@property(copy, nonatomic) NSString *name; // @synthesize name=_name;
@property(readonly, nonatomic) IDEDebugProcess *parentProcess; // @synthesize parentProcess=_parentProcess;
- (void).cxx_destruct;
- (void)primitiveInvalidate;
@property(readonly, nonatomic) NSString *displayName; // @synthesize displayName=_displayName;
- (unsigned long long)numberOfPendingBlocks;
- (void)setPrimitiveThreads:(id)arg1;
@property(readonly, nonatomic, getter=isRecorded) BOOL recorded;
@property(readonly) IDELaunchSession *launchSession;
@property(readonly, copy) NSString *associatedProcessUUID;
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
- (BOOL)isEqual:(id)arg1;
- (id)initWithParentProcess:(id)arg1 name:(id)arg2 type:(id)arg3 recordedThread:(id)arg4;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *description;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface IDEDistributionOptionStripSwiftSymbols : IDEDistributionOption
{
}

+ (BOOL)isApplicableForContext:(id)arg1;
+ (id)propertyListForContext:(id)arg1;
+ (id)availableOptionsForPropertyList;
- (BOOL)loadFromPropertyList:(id)arg1 error:(id *)arg2;
- (id)initWithIdentifier:(id)arg1 context:(id)arg2;
- (id)providedOutputContextPropertyNames;
- (id)requiredInputContextPropertyNames;

@end

@interface IDEExtendedPlatformInfo : NSObject
{
    NSDictionary *_productTypeIdentifiersToInterfaceBuilderDocumentUTIs;
    BOOL _supportsDeviceSelection;
    BOOL _wantsIntegrityCheckForApplicationCategory;
    BOOL _wantsHiDPIArtworkTargetUpgrade;
    BOOL _canBeJetsamedDuringGPUTracing;
    BOOL _tryOtherArchWhenDesignatedArchFails;
    BOOL _conditionalizeCodeSignIdentityBySDK;
    BOOL _requiresGameCenterDeviceCompatibilityInfoPlistEntry;
    BOOL _onlySupportsAppStoreDeployment;
    BOOL _wantsMapsRoutingOptions;
    BOOL _supportsAppThinning;
    BOOL _supportsLaunchScreenXibs;
    BOOL _supportsCloudDocuments;
    BOOL _appStoreArchivesRequirePreciseSizeEstimate;
    BOOL _distributionShouldCopySwiftSupport;
    BOOL _distributionShouldCopyWatchKitSupport;
    BOOL _allowsRelaxationOfStrictBitcodeAndPlatformChecks;
    BOOL _supportsUIRecording;
    NSString *_appStoreSubmissionConfigurationBitCodeDefaultSupportLevel;
    NSString *_platformIdentifier;
    NSString *_bundleFormatApplicationPathFormatString;
    NSString *_embeddedProvisioningProfileName;
    NSString *_deploymentTargetSettingName;
    NSString *_deploymentTargetClangFlagName;
    NSString *_deploymentTargetClangEnvName;
    NSString *_swiftTargetPrefix;
    NSString *_appStoreNameTitleCase;
    NSArray *_hiDPIArtworkTargetUpgradeProductTypesToExclude;
    NSString *_debuggingPlatformName;
    NSString *_gaugeCPUMeterScale;
    NSString *_conditionalSDKPostfix;
    NSString *_sdkName;
    NSString *_internalSDKName;
    NSString *_addressSanitizerLibraryName;
    NSString *_threadSanitizerLibraryName;
    NSString *_UBSanitizerLibraryName;
    NSString *_appStoreSubmissionConfigurationResponseIdentifier;
    NSString *_appStoreSubmissionConfigurationCompiledCodeDefaultSupportLevel;
    NSString *_appStoreSubmissionConfigurationOnDemandResourcesDefaultSupportLevel;
    NSString *_minimumOSForUITesting;
    Class _testingUIRecorderClass;
}

+ (void)_initializePlatformInfo:(id)arg1 fromExtension:(id)arg2;
+ (id)extendedPlatformInfoForPlatformIdentifier:(id)arg1;
@property(readonly) Class testingUIRecorderClass; // @synthesize testingUIRecorderClass=_testingUIRecorderClass;
@property(readonly) BOOL supportsUIRecording; // @synthesize supportsUIRecording=_supportsUIRecording;
@property(readonly, copy) NSString *minimumOSForUITesting; // @synthesize minimumOSForUITesting=_minimumOSForUITesting;
@property(readonly) BOOL allowsRelaxationOfStrictBitcodeAndPlatformChecks; // @synthesize allowsRelaxationOfStrictBitcodeAndPlatformChecks=_allowsRelaxationOfStrictBitcodeAndPlatformChecks;
@property(readonly) NSString *appStoreSubmissionConfigurationOnDemandResourcesDefaultSupportLevel; // @synthesize appStoreSubmissionConfigurationOnDemandResourcesDefaultSupportLevel=_appStoreSubmissionConfigurationOnDemandResourcesDefaultSupportLevel;
@property(readonly) NSString *appStoreSubmissionConfigurationCompiledCodeDefaultSupportLevel; // @synthesize appStoreSubmissionConfigurationCompiledCodeDefaultSupportLevel=_appStoreSubmissionConfigurationCompiledCodeDefaultSupportLevel;
@property(readonly) NSString *appStoreSubmissionConfigurationResponseIdentifier; // @synthesize appStoreSubmissionConfigurationResponseIdentifier=_appStoreSubmissionConfigurationResponseIdentifier;
@property(readonly) BOOL distributionShouldCopyWatchKitSupport; // @synthesize distributionShouldCopyWatchKitSupport=_distributionShouldCopyWatchKitSupport;
@property(readonly) BOOL distributionShouldCopySwiftSupport; // @synthesize distributionShouldCopySwiftSupport=_distributionShouldCopySwiftSupport;
@property(readonly) BOOL appStoreArchivesRequirePreciseSizeEstimate; // @synthesize appStoreArchivesRequirePreciseSizeEstimate=_appStoreArchivesRequirePreciseSizeEstimate;
@property(readonly) BOOL supportsCloudDocuments; // @synthesize supportsCloudDocuments=_supportsCloudDocuments;
@property(readonly) BOOL supportsLaunchScreenXibs; // @synthesize supportsLaunchScreenXibs=_supportsLaunchScreenXibs;
@property(readonly) NSString *UBSanitizerLibraryName; // @synthesize UBSanitizerLibraryName=_UBSanitizerLibraryName;
@property(readonly) NSString *threadSanitizerLibraryName; // @synthesize threadSanitizerLibraryName=_threadSanitizerLibraryName;
@property(readonly) NSString *addressSanitizerLibraryName; // @synthesize addressSanitizerLibraryName=_addressSanitizerLibraryName;
@property(readonly) BOOL supportsAppThinning; // @synthesize supportsAppThinning=_supportsAppThinning;
@property(readonly) BOOL wantsMapsRoutingOptions; // @synthesize wantsMapsRoutingOptions=_wantsMapsRoutingOptions;
@property(readonly) BOOL onlySupportsAppStoreDeployment; // @synthesize onlySupportsAppStoreDeployment=_onlySupportsAppStoreDeployment;
@property(readonly, copy) NSString *internalSDKName; // @synthesize internalSDKName=_internalSDKName;
@property(readonly, copy) NSString *sdkName; // @synthesize sdkName=_sdkName;
@property(readonly) BOOL requiresGameCenterDeviceCompatibilityInfoPlistEntry; // @synthesize requiresGameCenterDeviceCompatibilityInfoPlistEntry=_requiresGameCenterDeviceCompatibilityInfoPlistEntry;
@property(readonly) BOOL conditionalizeCodeSignIdentityBySDK; // @synthesize conditionalizeCodeSignIdentityBySDK=_conditionalizeCodeSignIdentityBySDK;
@property(readonly, copy) NSString *conditionalSDKPostfix; // @synthesize conditionalSDKPostfix=_conditionalSDKPostfix;
@property(readonly) BOOL tryOtherArchWhenDesignatedArchFails; // @synthesize tryOtherArchWhenDesignatedArchFails=_tryOtherArchWhenDesignatedArchFails;
@property(readonly) BOOL canBeJetsamedDuringGPUTracing; // @synthesize canBeJetsamedDuringGPUTracing=_canBeJetsamedDuringGPUTracing;
@property(readonly, copy) NSString *gaugeCPUMeterScale; // @synthesize gaugeCPUMeterScale=_gaugeCPUMeterScale;
@property(readonly, copy) NSString *debuggingPlatformName; // @synthesize debuggingPlatformName=_debuggingPlatformName;
@property(readonly, copy) NSArray *hiDPIArtworkTargetUpgradeProductTypesToExclude; // @synthesize hiDPIArtworkTargetUpgradeProductTypesToExclude=_hiDPIArtworkTargetUpgradeProductTypesToExclude;
@property(readonly) BOOL wantsHiDPIArtworkTargetUpgrade; // @synthesize wantsHiDPIArtworkTargetUpgrade=_wantsHiDPIArtworkTargetUpgrade;
@property(readonly, copy) NSString *appStoreNameTitleCase; // @synthesize appStoreNameTitleCase=_appStoreNameTitleCase;
@property(readonly) BOOL wantsIntegrityCheckForApplicationCategory; // @synthesize wantsIntegrityCheckForApplicationCategory=_wantsIntegrityCheckForApplicationCategory;
@property(readonly, copy) NSString *swiftTargetPrefix; // @synthesize swiftTargetPrefix=_swiftTargetPrefix;
@property(readonly, copy) NSString *deploymentTargetClangEnvName; // @synthesize deploymentTargetClangEnvName=_deploymentTargetClangEnvName;
@property(readonly, copy) NSString *deploymentTargetClangFlagName; // @synthesize deploymentTargetClangFlagName=_deploymentTargetClangFlagName;
@property(readonly, copy) NSString *deploymentTargetSettingName; // @synthesize deploymentTargetSettingName=_deploymentTargetSettingName;
@property(readonly) BOOL supportsDeviceSelection; // @synthesize supportsDeviceSelection=_supportsDeviceSelection;
@property(readonly, copy) NSString *embeddedProvisioningProfileName; // @synthesize embeddedProvisioningProfileName=_embeddedProvisioningProfileName;
@property(readonly, copy) NSString *bundleFormatApplicationPathFormatString; // @synthesize bundleFormatApplicationPathFormatString=_bundleFormatApplicationPathFormatString;
@property(readonly, copy) NSString *platformIdentifier; // @synthesize platformIdentifier=_platformIdentifier;
- (void).cxx_destruct;
@property(readonly) NSString *appStoreSubmissionConfigurationBitCodeDefaultSupportLevel; // @synthesize appStoreSubmissionConfigurationBitCodeDefaultSupportLevel=_appStoreSubmissionConfigurationBitCodeDefaultSupportLevel;
@property(readonly, copy) NSString *deploymentTargetSettingHumanReadableNameSentenceCase;
@property(readonly, copy) NSString *deploymentTargetSettingHumanReadableNameTitleCase;
- (id)supportedInterfaceBuilderDocumentUTIsForProductType:(id)arg1;

@end

@interface IDEDistributionProcessingPipeline : NSObject
{
    NSArray *_pipelineSteps;
    IDEDistributionProcessingStep *_currentStep;
    IDEDistributionProcessingPipelineContext *_context;
}

+ (id)pipelineWithInAppPurchaseContext:(id)arg1;
+ (id)pipelineWithAppContext:(id)arg1;
+ (id)pipelineWithContext:(id)arg1;
@property(retain) IDEDistributionProcessingPipelineContext *context; // @synthesize context=_context;
@property(retain) IDEDistributionProcessingStep *currentStep; // @synthesize currentStep=_currentStep;
@property(readonly) NSArray *pipelineSteps; // @synthesize pipelineSteps=_pipelineSteps;
- (void).cxx_destruct;
- (id)resultsForDistributionItem:(id)arg1;
- (_Bool)process:(id *)arg1;
- (id)init;
- (id)initWithPipelineSteps:(id)arg1 context:(id)arg2;

@end

@interface IDEDistributionProcessingPipelineContext : IDEDistributionContext
{
    DVTFilePath *_temporaryDirectory;
    Class _packagingStep;
    NSDictionary *_onDemandResourcesAssetPacksOwningBundleForCopy;
    NSDictionary *_onDemandResourcesAssetPacksZippedPaths;
    DVTFilePath *_symbolsPath;
    NSDictionary *_finalResultsMap;
    NSNumber *_dryRun;
    NSDictionary *_pipelineOutputs;
    IDEDistributionItem *_activeDistributionItem;
    IDEDistributionThinningVariant *_activeThinningVariant;
    DVTFilePath *_destinationRoot;
    DVTFilePath *_appStorePackageOutputPath;
}

+ (id)modifiedName:(id)arg1 forVariant:(id)arg2;
@property(retain, nonatomic) DVTFilePath *appStorePackageOutputPath; // @synthesize appStorePackageOutputPath=_appStorePackageOutputPath;
@property(retain, nonatomic) DVTFilePath *destinationRoot; // @synthesize destinationRoot=_destinationRoot;
- (void).cxx_destruct;
- (id)assetPackManifestFileName:(id)arg1 forVariant:(id)arg2;
- (id)assetPackFileName:(id)arg1 forVariant:(id)arg2;
- (id)packagePathForVariant:(id)arg1;
- (id)destinationPathForItem:(id)arg1 forVariant:(id)arg2;
- (id)destinationPathForItem:(id)arg1;
- (id)destinationRootForVariant:(id)arg1;
- (id)relativeDestinationPathForPipelineOutputAtSourcePath:(id)arg1;
- (void)addPipelineOutputAtRelativePath:(id)arg1 fromSourcePath:(id)arg2;
@property(retain, nonatomic) IDEDistributionThinningVariant *activeThinningVariant; // @synthesize activeThinningVariant=_activeThinningVariant;
- (id)_distributionContext_get_activeThinningVariant;
@property(retain, nonatomic) IDEDistributionItem *activeDistributionItem; // @synthesize activeDistributionItem=_activeDistributionItem;
- (id)_distributionContext_get_activeDistributionItem;
@property(retain, nonatomic) NSDictionary *pipelineOutputs; // @synthesize pipelineOutputs=_pipelineOutputs;
- (id)_distributionContext_get_pipelineOutputs;
@property(retain, nonatomic) NSNumber *dryRun; // @synthesize dryRun=_dryRun;
- (id)_distributionContext_get_dryRun;
@property(retain, nonatomic) NSDictionary *finalResultsMap; // @synthesize finalResultsMap=_finalResultsMap;
- (id)_distributionContext_get_finalResultsMap;
@property(retain, nonatomic) DVTFilePath *symbolsPath; // @synthesize symbolsPath=_symbolsPath;
- (id)_distributionContext_get_symbolsPath;
@property(retain, nonatomic) NSDictionary *onDemandResourcesAssetPacksZippedPaths; // @synthesize onDemandResourcesAssetPacksZippedPaths=_onDemandResourcesAssetPacksZippedPaths;
- (id)_distributionContext_get_onDemandResourcesAssetPacksZippedPaths;
@property(retain, nonatomic) NSDictionary *onDemandResourcesAssetPacksOwningBundleForCopy; // @synthesize onDemandResourcesAssetPacksOwningBundleForCopy=_onDemandResourcesAssetPacksOwningBundleForCopy;
- (id)_distributionContext_get_onDemandResourcesAssetPacksOwningBundleForCopy;
@property(retain, nonatomic) Class packagingStep; // @synthesize packagingStep=_packagingStep;
- (id)_distributionContext_get_packagingStep;
@property(retain, nonatomic) DVTFilePath *temporaryDirectory; // @synthesize temporaryDirectory=_temporaryDirectory;
- (id)_distributionContext_get_temporaryDirectory;

@end

@interface IDEDistributionProvisioningEvaluator : NSObject <DVTInvalidation, IDEProvisionableProvider>
{
    DVTPlatform *_fallbackPlatform;
    IDEProvisioningContext *_context;
    CDUnknownBlockType _callback;
    IDEDistributionMethod *_distributionMethod;
    NSSet *_requiredDevices;
    NSSet *_distributionItemProvisionables;
    IDEProvisioningManager *_provisioningManager;
    IDEDistributionProvisioningEvaluation *_evaluation;
    long long _provisioningStyle;
    IDEDistributionProvisioningManualSigningMap *_signingAssetMap;
    id <IDEProvisioningBasicTeam> _team;
    NSArray *_topLevelDistributionItems;
}

+ (id)evaluationForTopLevelDistributionItems:(id)arg1 withItemParameters:(id)arg2 method:(id)arg3 provisioningStyle:(long long)arg4 logAspect:(id)arg5;
+ (void)initialize;
@property(readonly, nonatomic) NSArray *topLevelDistributionItems; // @synthesize topLevelDistributionItems=_topLevelDistributionItems;
@property(readonly, nonatomic) id <IDEProvisioningBasicTeam> team; // @synthesize team=_team;
@property(readonly, nonatomic) IDEDistributionProvisioningManualSigningMap *signingAssetMap; // @synthesize signingAssetMap=_signingAssetMap;
@property(readonly, nonatomic) long long provisioningStyle; // @synthesize provisioningStyle=_provisioningStyle;
@property(readonly, nonatomic) IDEDistributionProvisioningEvaluation *evaluation; // @synthesize evaluation=_evaluation;
@property(retain, nonatomic) IDEProvisioningManager *provisioningManager; // @synthesize provisioningManager=_provisioningManager;
@property(retain, nonatomic) NSSet *distributionItemProvisionables; // @synthesize distributionItemProvisionables=_distributionItemProvisionables;
@property(readonly, nonatomic) NSSet *requiredDevices; // @synthesize requiredDevices=_requiredDevices;
@property(readonly, nonatomic) IDEDistributionMethod *distributionMethod; // @synthesize distributionMethod=_distributionMethod;
@property(copy, nonatomic) CDUnknownBlockType callback; // @synthesize callback=_callback;
@property(retain, nonatomic) IDEProvisioningContext *context; // @synthesize context=_context;
- (void).cxx_destruct;
@property(readonly, nonatomic) NSSet *provisionableDevices;
@property(readonly, nonatomic) NSSet *provisionables;
@property(readonly, nonatomic) BOOL finishedLoading;
- (void)_evaluateProvisionables;
- (id)_evaluationOverridesForProvisionableManager:(id)arg1;
- (id)_fallbackPlatform;
- (void)_startEvaluating;
- (id)init;
- (id)initForManualSigningWithDistributionContext:(id)arg1 requiredDevices:(id)arg2 signingAssetMap:(id)arg3 evaluationCallback:(CDUnknownBlockType)arg4;
- (id)initForAutomaticSigningWithDistributionContext:(id)arg1 requiredDevices:(id)arg2 evaluationCallback:(CDUnknownBlockType)arg3;
- (id)configuredProvisioningContextWithStyle:(long long)arg1 method:(id)arg2;
- (id)initWithTopLevelDistributionItems:(id)arg1 method:(id)arg2 team:(id)arg3 requiredDevices:(id)arg4 provisioningStyle:(long long)arg5 signingAssetsMap:(id)arg6 context:(id)arg7 evaluationCallback:(CDUnknownBlockType)arg8;
- (void)primitiveInvalidate;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface IDEDistributionProvisioningEvaluation : NSObject
{
    IDEProvisionableStatusEvaluation *_installerPackageEvaluation;
    NSMutableDictionary *_distributionItemToEvaluationMap;
}

@property(readonly, nonatomic) NSMutableDictionary *distributionItemToEvaluationMap; // @synthesize distributionItemToEvaluationMap=_distributionItemToEvaluationMap;
@property(retain, nonatomic) IDEProvisionableStatusEvaluation *installerPackageEvaluation; // @synthesize installerPackageEvaluation=_installerPackageEvaluation;
- (void).cxx_destruct;
- (id)description;
@property(readonly) NSArray *allEvaluationErrors;
@property(readonly) NSArray *allItemEvaluations;
- (void)setEvaluation:(id)arg1 forDistributionItem:(id)arg2;
- (id)evaluationForDistributionItem:(id)arg1;
- (id)init;

@end

@interface IDEDistributionProvisioningManualSigningMap : NSObject <NSCopying>
{
    id <IDEProvisioningBasicSigningIdentity> _certificate;
    id <IDEProvisioningBasicSigningIdentity> _installerCertificate;
    NSDictionary *_distributionItemProfileSpecifierMap;
}

@property(copy) NSDictionary *distributionItemProfileSpecifierMap; // @synthesize distributionItemProfileSpecifierMap=_distributionItemProfileSpecifierMap;
@property(retain) id <IDEProvisioningBasicSigningIdentity> installerCertificate; // @synthesize installerCertificate=_installerCertificate;
@property(retain) id <IDEProvisioningBasicSigningIdentity> certificate; // @synthesize certificate=_certificate;
- (void).cxx_destruct;
- (id)description;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface IDEWorkspaceBasedCommandLineVerb : IDECommandLineVerb
{
}

+ (int)performWithEnvironment:(id)arg1;
+ (id)optionDefinitionsWithEnvironment:(id)arg1;

@end

@interface IDESourceKitContainerSymbol : IDESourceKitSymbol
{
}

- (BOOL)isKindOfClass:(Class)arg1;
- (id)children;

@end

@interface IDEExtensionManager : NSObject
{
}

+ (id)permanentlyEnabledExtensionIdentifiers;
+ (id)sharedExtensionManager;
+ (void)initialize;
- (BOOL)checkWhetherExtension:(id)arg1 matchesCodeSigningRequirements:(struct __SecRequirement *)arg2 error:(id *)arg3;
- (id)startSearchingForExtensionsOfExtensionPoint:(id)arg1 callback:(CDUnknownBlockType)arg2;
- (void)endMatchingExtensions:(id)arg1;
- (id)beginMatchingExtensionsWithAttributes:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (id)_minimumVersionForExtension:(id)arg1;
- (id)_attributesForMatchingWithExtensionPointIdentifier:(id)arg1;

@end

@interface IDEIndexCompletionItem : NSObject
{
    void *_completionResult;
    NSString *_displayText;
    NSString *_displayType;
    NSString *_completionText;
    NSAttributedString *_descriptionText;
    NSString *_parentText;
    DVTSourceCodeSymbolKind *_symbolKind;
    double _priority;
    NSString *_name;
    BOOL _notRecommended;
    double _fuzzyMatchingScore;
}

@property double fuzzyMatchingScore; // @synthesize fuzzyMatchingScore=_fuzzyMatchingScore;
@property double priority; // @synthesize priority=_priority;
@property(readonly) NSString *name; // @synthesize name=_name;
- (void).cxx_destruct;
@property(readonly) BOOL notRecommended;
@property(readonly) DVTSourceCodeSymbolKind *symbolKind;
@property(readonly) NSAttributedString *descriptionText;
@property(readonly, copy) NSString *parentText;
@property(readonly) NSString *completionText;
@property(readonly) NSString *displayType;
@property(readonly) NSString *displayText;
- (void)_fillInTheRest;
- (id)description;
- (id)initWithCompletionResult:(void *)arg1;

@end

@interface IDEBatchFindScopeSCMStatusPredicate : IDEBatchFindScopePredicate
{
    long long _desiredStatus;
}

+ (id)propertyListIdentifier;
+ (id)predicateWithPropertyListRepresentation:(id)arg1;
@property(readonly) long long desiredStatus; // @synthesize desiredStatus=_desiredStatus;
- (BOOL)isWorkspaceSpecific;
- (id)propertyListRepresentation;
- (CDUnknownBlockType)matcherBoundToWorkspace:(id)arg1;
- (BOOL)isEqualToScopePredicateWithIdenticalClass:(id)arg1;
- (unsigned long long)hash;
- (id)initWithDesiredStatus:(long long)arg1;

@end

@interface IDEContainer : DVTModelObject <DVTInvalidation, IDEIssueLogDataSource, IDEReadOnlyItem, DVTDirectoryBasedCustomDataStoreDelegate, IDEUpgradeableItem>
{
    id <IDEContainerCore> _containerCore;
    IDEWorkspace *_workspace;
    DVTFilePath *_filePath;
    IDEGroup *_rootGroup;
    DVTFilePath *_itemBaseFilePath;
    DVTExtension *_extension;
    DVTOperation *_willReadOperation;
    DVTOperation *_readOperation;
    DVTOperation *_didReadOperation;
    DVTTimeSlicedMainThreadWorkQueue *_mainThreadTimeSlicedQueue;
    DVTTimeSlicedMainThreadWorkQueue *_pendingFileReferenceResolvingQueue;
    int _activity;
    int _transitionActivity;
    NSMutableDictionary *_sessionIdentifiersToFilePaths;
    NSMutableDictionary *_containerLoadingTokens;
    NSDictionary *_containerDataFilePaths;
    int _autosaveBehavior;
    int _saveIssue;
    NSTimer *_pendingSaveTimer;
    NSString *_sessionIdentifier;
    NSMutableDictionary *_filePathToReadOnlyItemMap;
    NSMapTable *_readOnlyItemToStatusObserverMap;
    id <IDEContainerDelegate> _containerDelegate;
    NSMapTable *_pendingFilePathChangeDictionary;
    int _readOnlyStatus;
    BOOL _hasTransitionedToIdle;
    BOOL _containerEdited;
    BOOL _isMajorGroup;
    BOOL _isFolderLike;
    BOOL _validForSchemeBuildableReferences;
    BOOL _transitioningToNewFilePath;
    IDEActivityLogSection *_issueLog;
}

+ (BOOL)_shouldTrackReadOnlyStatus;
+ (id)unlockingDelegate;
+ (void)setUnlockingDelegate:(id)arg1;
+ (id)reloadingDelegate;
+ (void)setReloadingDelegate:(id)arg1;
+ (id)errorPresenter;
+ (void)setErrorPresenter:(id)arg1;
+ (BOOL)isOnlyUsedForUserInteraction;
+ (BOOL)supportsMultipleInstancesPerFilePath;
+ (BOOL)automaticallyNotifiesObserversOfFilePath;
+ (BOOL)automaticallyNotifiesObserversOfActivity;
+ (id)containerDataFilePathsForFilePath:(id)arg1;
+ (BOOL)supportsFilePersistence;
+ (id)_errorSavingContainer:(id)arg1 code:(int)arg2;
+ (double)_defaltSlowAutosaveDelay;
+ (double)_defaltAutosaveDelay;
+ (BOOL)automaticallyNotifiesObserversOfContainerEdited;
+ (void)_addContainerWithPendingChanges:(id)arg1;
+ (void)resumeFilePathChangeNotifications;
+ (void)suspendFilePathChangeNotifications;
+ (id)_containersWithPendingFilePathChanges;
+ (BOOL)_observeContainerDataFilePathsForChanges;
+ (unsigned long long)assertionBehaviorAfterEndOfEventForSelector:(SEL)arg1;
+ (id)_containerForSessionIdentifier:(id)arg1;
+ (void)_invalidateContainer:(id)arg1;
+ (void)_releaseContainer:(id)arg1;
+ (void)_retainContainer:(id)arg1;
+ (BOOL)_closeContainerIfNeeded:(id)arg1;
+ (void)_removeOpenContainer:(id)arg1;
+ (void)_decreaseCountForContainer:(id)arg1;
+ (void)_increaseCountForContainer:(id)arg1;
+ (unsigned long long)_countForContainer:(id)arg1;
+ (id)_refcountTableForContainer:(id)arg1;
+ (id)_containersPendingRelease;
+ (id)_openContainers;
+ (BOOL)isContainerOpenForFilePath:(id)arg1;
+ (id)retainedWrappedWorkspaceForContainerAtFilePath:(id)arg1 fileDataType:(id)arg2 error:(id *)arg3;
+ (id)containersForFilePath:(id)arg1;
+ (id)retainedContainerForFilePath:(id)arg1 workspace:(id)arg2;
+ (id)_retainedContainerAtFilePath:(id)arg1 fileDataType:(id)arg2 workspace:(id)arg3 options:(id)arg4 error:(id *)arg5;
+ (id)retainedContainerAtFilePath:(id)arg1 fileDataType:(id)arg2 workspace:(id)arg3 error:(id *)arg4;
+ (id)_containerOpenInAnotherWorkspaceErrorForPath:(id)arg1;
+ (id)_noContainerClassForFileTypeError:(id)arg1;
+ (id)containerTypeDisplayName;
+ (id)containerFileDataType;
+ (id)containerExtensionForFileDataType:(id)arg1;
+ (id)containerLoadingModelObjectGraph;
+ (void)initialize;
@property(getter=isTransitioningToNewFilePath) BOOL transitioningToNewFilePath; // @synthesize transitioningToNewFilePath=_transitioningToNewFilePath;
@property(retain) IDEActivityLogSection *issueLog; // @synthesize issueLog=_issueLog;
@property int readOnlyStatus; // @synthesize readOnlyStatus=_readOnlyStatus;
@property(readonly) IDEGroup *rootGroup; // @synthesize rootGroup=_rootGroup;
@property(copy, nonatomic) DVTFilePath *itemBaseFilePath; // @synthesize itemBaseFilePath=_itemBaseFilePath;
@property(readonly) DVTFilePath *filePath; // @synthesize filePath=_filePath;
@property(readonly) DVTExtension *extension; // @synthesize extension=_extension;
@property(readonly, nonatomic, getter=isValidForSchemeBuildableReferences) BOOL validForSchemeBuildableReferences; // @synthesize validForSchemeBuildableReferences=_validForSchemeBuildableReferences;
@property(readonly) IDEWorkspace *workspace; // @synthesize workspace=_workspace;
@property(readonly) id <IDEContainerCore> containerCore; // @synthesize containerCore=_containerCore;
@property(retain) id <IDEContainerDelegate> containerDelegate; // @synthesize containerDelegate=_containerDelegate;
- (void).cxx_destruct;
- (void)customDataStore:(id)arg1 removeItemAtFilePath:(id)arg2 completionQueue:(id)arg3 completionBlock:(CDUnknownBlockType)arg4;
- (void)customDataStore:(id)arg1 moveItemAtFilePath:(id)arg2 toFilePath:(id)arg3 completionQueue:(id)arg4 completionBlock:(CDUnknownBlockType)arg5;
- (void)customDataStore:(id)arg1 makeFilePathsWritable:(id)arg2 completionQueue:(id)arg3 completionBlock:(CDUnknownBlockType)arg4;
- (void)_unlockReadOnlyItems:(id)arg1 completionQueue:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (id)_readOnlyItemsToUnlock;
- (void)_addReadOnlyItemPath:(id)arg1;
- (void)_removeAllReadOnlyItemPaths;
- (void)_removeReadOnlyItemPath:(id)arg1;
- (void)_updateSharedReadOnlyItemStatus;
- (BOOL)makeWritableWithError:(id *)arg1;
@property(readonly) NSURL *readOnlyItemURL;
- (void)debugPrintStructure;
- (void)debugPrintInnerStructure;
@property(readonly, copy) NSString *description;
- (void)_enqueueWorkItem:(CDUnknownBlockType)arg1;
- (void)collectMessageTracerStatisticsIntoDictionary:(id)arg1;
- (void)holdOnDiskFilesForICloudDriveIfNecessary;
- (void)analyzeModelForIssues;
- (void)enumerateUpgradeTasksWithBlock:(CDUnknownBlockType)arg1;
@property(readonly) BOOL supportsOnDemandResources;
@property(readonly, getter=isFolderLike) BOOL folderLike;
@property(readonly, getter=isMajorGroup) BOOL majorGroup;
@property(readonly, getter=isEditable) BOOL editable;
- (void)_initRootGroup;
- (id)createRootGroup;
- (id)_itemBaseFilePathForFilePath:(id)arg1;
- (void)_makeRelativeFileReferencesInGroup:(id)arg1 relativeToNewBasePath:(id)arg2 oldBaseFilePath:(id)arg3;
- (void)_changeContainerFilePath:(id)arg1 inContext:(id)arg2;
- (BOOL)setContainerFilePath:(id)arg1 error:(id *)arg2;
- (BOOL)_setContainerFilePath:(id)arg1 strict:(BOOL)arg2 error:(id *)arg3;
- (void)_setFilePath:(id)arg1;
- (void)_setFilePath:(id)arg1 strict:(BOOL)arg2 createContainerDataFilePathsToModDateMap:(BOOL)arg3;
- (BOOL)_shouldRespondToFileChangeOnDisk;
- (void)_respondToFileChangeOnDiskWithFilePath:(id)arg1;
- (void)_makeAbsoluteFileReferencesInGroup:(id)arg1 relativeToFolderFilePath:(id)arg2 withPathString:(id)arg3;
@property(readonly) NSString *displayName;
@property(readonly, copy) NSString *workspaceParentRelativePath;
- (void)_setTransitioningToNewFilePath:(BOOL)arg1;
- (void)_setExtension:(id)arg1;
- (void)_didUpdateActivity;
- (void)_willUpdateActivity;
- (void)_didTransitionToActivity:(int)arg1;
- (void)_containerDidLoad;
@property int activity;
- (BOOL)writeToFilePath:(id)arg1 forceWrite:(BOOL)arg2 error:(id *)arg3;
- (BOOL)didReadFromFilePath:(id)arg1 error:(id *)arg2;
- (BOOL)willReadFromFilePath:(id)arg1 error:(id *)arg2;
- (BOOL)readFromFilePath:(id)arg1 error:(id *)arg2;
- (BOOL)_readAsyncIfPossibleFromFilePath:(id)arg1 error:(id *)arg2;
- (id)_didReadOperationWithFilePath:(id)arg1;
- (id)_willReadOperationWithFilePath:(id)arg1;
- (id)_readOperationWithFilePath:(id)arg1;
- (BOOL)_canClosePreflightWithCheckedContainers:(id)arg1 error:(id *)arg2;
- (BOOL)_canClosePreflightOrError:(id *)arg1;
- (BOOL)ignoreLocalChanges;
- (void)_setContainerEdited;
- (void)_containerEditedDidChange;
- (BOOL)_saveContainerForAction:(int)arg1 error:(id *)arg2;
- (void)_scheduleAutosaveTimer;
- (void)_saveContainerPeriodically;
@property BOOL containerEdited;
- (id)_containerDataFilePaths;
- (id)_lastKnownModDateForContainerDataFile:(id)arg1;
- (void)_updateContainerDataFilePathsToModDateMap;
- (void)_createContainerDataFilePathsToModDateMap;
- (id)_modificationDateForFilePath:(id)arg1;
- (void)_clearContainerDataFilePathsToModDateMap;
- (void)_unregisterForChangesToContainerDataFilePath:(id)arg1;
- (void)_registerForChangesToContainerDataFilePath:(id)arg1;
- (void)_filePathDidChangeWithPendingChangeDictionary;
- (void)primitiveInvalidate;
- (void)invalidate;
- (id)_sessionIdentifier;
- (void)_invalidateContainerToDiscardInMemoryRepresentation:(BOOL)arg1;
- (void)_willInvalidateContainerToDiscardInMemoryRepresentation;
- (void)releaseContainer;
- (void)retainContainer;
- (void)_saveContainerIfNeeded;
- (BOOL)canSaveContainer;
- (id)init;
- (id)initWithFilePath:(id)arg1 extension:(id)arg2 workspace:(id)arg3 options:(id)arg4 error:(id *)arg5;
- (void)_removeSubcontainer:(id)arg1;
- (void)_addSubcontainer:(id)arg1;
- (void)_setContainerLoadingTokenForContainer:(id)arg1;
- (void)_removeContainerLoadingTokenForContainer:(id)arg1;
- (void)_locateFileReferencesRecursively;
- (void)_clearPendingFileReferencesAndContainerLoadingTokens;
- (void)_resolveFileReference:(id)arg1;
- (void)_handleContainerResolutionFailureForFileReference:(id)arg1;
- (void)_locateFileReferencesRecursivelyInGroup:(id)arg1;
- (void)_removePendingFileReference:(id)arg1;
- (void)_addPendingFileReference:(id)arg1;
- (id)_containerInstanceDescription;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface IDEUnitTestContainerUnlockingDelegate : NSObject <IDEContainerUnlockingDelegate>
{
}

- (void)container:(id)arg1 attemptToUnlockItems:(id)arg2 workspace:(id)arg3 completionQueue:(id)arg4 completionBlock:(CDUnknownBlockType)arg5;

@end

@interface IDEContainerContentGenerator : NSObject
{
}

@end

@interface IDECodeGenerator : NSObject <DVTInvalidation>
{
    NSDictionary *_userInfo;
}

+ (id)codeGeneratorWithIdentifier:(id)arg1;
+ (void)initialize;
@property(copy) NSDictionary *userInfo; // @synthesize userInfo=_userInfo;
- (void).cxx_destruct;
- (void)generateCodeForInputFile:(id)arg1 outputFilePath:(id)arg2 completionQueue:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (id)generatedFilePathsForInputFilePath:(id)arg1 outputFilePath:(id)arg2 error:(id *)arg3;
- (void)primitiveInvalidate;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface IDEDistributionCreateIPAStep : IDEDistributionProcessingPackagingStep
{
    NSString *name;
}

+ (id)packagePathExtension;
+ (_Bool)runsPerThinningVariant;
+ (_Bool)supportsDryRun;
+ (BOOL)wantsPayloadDir;
@property(copy) NSString *name; // @synthesize name;
- (void).cxx_destruct;
- (_Bool)runWithError:(id *)arg1;
- (id)providedOutputContextPropertyNames;
- (id)requiredInputContextPropertyNames;

@end

@interface IDESourceKitPropertySymbol : IDESourceKitSymbol
{
}

- (BOOL)isKindOfClass:(Class)arg1;
- (id)getter;
- (id)setter;

@end

@interface IDEHelpCommandLineVerb : IDECommandLineVerb
{
}

+ (int)performWithEnvironment:(id)arg1;
+ (void)printDetailedUsageInformationForCommandVerbExtension:(id)arg1 withEnvironment:(id)arg2;
+ (void)printBasicUsageInformationWithEnvironment:(id)arg1;

@end

@interface IDEDistributionLogging : NSObject
{
    NSMutableDictionary *_nameToAspect;
    NSString *_path;
}

@property(readonly, copy) NSString *path; // @synthesize path=_path;
- (void).cxx_destruct;
- (id)logAspectWithName:(id)arg1 wantsDistinctFilesPerLogLevel:(BOOL)arg2;
- (BOOL)_createLoggingBundleAtPath:(id)arg1;
- (id)_loggingBundlePathForArchiveNamed:(id)arg1;
- (id)initWithArchiveName:(id)arg1;
- (id)init;

@end

@interface IDETemplateCategory : NSObject
{
    NSMutableArray *_templates;
    NSString *_name;
}

+ (void)initialize;
@property(copy) NSString *name; // @synthesize name=_name;
- (void).cxx_destruct;
- (long long)categoryCompare:(id)arg1;
- (id)standardCategoryNames;
- (id)init;

// Remaining properties
@property(readonly) NSMutableArray *mutableTemplates; // @dynamic mutableTemplates;
@property(readonly) NSArray *templates; // @dynamic templates;

@end

@interface IDEProvisioningMechanicContext : NSObject <DVTInvalidation>
{
    BOOL _runningInIDE;
    IDEProvisioningMechanic *_mechanic;
    id <IDEProvisioningMechanicContextProvider> _provisioningManager;
    id <IDEProvisioningTeamAccountPairProvider> _teamAccountPairProvider;
}

+ (void)initialize;
@property(nonatomic) BOOL runningInIDE; // @synthesize runningInIDE=_runningInIDE;
@property(retain, nonatomic) id <IDEProvisioningTeamAccountPairProvider> teamAccountPairProvider; // @synthesize teamAccountPairProvider=_teamAccountPairProvider;
@property(retain, nonatomic) id <IDEProvisioningMechanicContextProvider> provisioningManager; // @synthesize provisioningManager=_provisioningManager;
@property(retain, nonatomic) IDEProvisioningMechanic *mechanic; // @synthesize mechanic=_mechanic;
- (void).cxx_destruct;
- (id)makeRepairForRepairable:(id)arg1;
- (void)primitiveInvalidate;
- (id)init;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface IDETest : NSObject <IDETestContainer, DVTInvalidation>
{
    NSMutableSet *_subtests;
    NSMutableArray *_cachedArrangedSubtests;
    BOOL _canHaveSubtests;
    BOOL _indexLocationWasSet;
    id <IDETestable> _testable;
    NSString *_name;
    IDETest *_supertest;
    IDETestIdentifier *_testIdentifier;
    DVTDocumentLocation *_indexLocation;
    NSArray *_recentErrorLocations;
}

+ (BOOL)automaticallyNotifiesObserversForIndexLocationWasSet;
+ (BOOL)automaticallyNotifiesObserversForIndexLocation;
+ (id)keyPathsForValuesAffectingLocation;
+ (id)keyPathsForValuesAffectingIsAdHocRunnable;
+ (unsigned long long)assertionBehaviorForKeyValueObservationsAtEndOfEvent;
+ (unsigned long long)assertionBehaviorAfterEndOfEventForSelector:(SEL)arg1;
+ (void)initialize;
@property BOOL indexLocationWasSet; // @synthesize indexLocationWasSet=_indexLocationWasSet;
@property(copy) NSArray *recentErrorLocations; // @synthesize recentErrorLocations=_recentErrorLocations;
@property(copy, nonatomic) DVTDocumentLocation *indexLocation; // @synthesize indexLocation=_indexLocation;
@property BOOL canHaveSubtests; // @synthesize canHaveSubtests=_canHaveSubtests;
@property(copy) IDETestIdentifier *testIdentifier; // @synthesize testIdentifier=_testIdentifier;
@property(readonly) IDETest *supertest; // @synthesize supertest=_supertest;
@property(readonly, copy) NSString *name; // @synthesize name=_name;
@property(readonly) id <IDETestable> testable; // @synthesize testable=_testable;
- (void).cxx_destruct;
@property(readonly, copy) NSArray *arrangedSubtests; // @dynamic arrangedSubtests;
- (void)_primitiveRemoveSubtest:(id)arg1;
- (void)_primitiveAddSubtest:(id)arg1;
- (void)_setErrorLocations:(id)arg1;
- (void)_setIndexLocation:(id)arg1;
- (void)_primitiveSetIndexLocation:(id)arg1;
- (void)_setIndexLocation:(id)arg1 forSubtest:(id)arg2;
@property(readonly, copy, nonatomic) DVTDocumentLocation *location; // @dynamic location;
@property(readonly) BOOL isAdHocRunnable;
@property(readonly, copy) NSString *displayName;
@property(readonly, copy) NSString *identifierString;
- (long long)localizedStandardCompare:(id)arg1;
@property(readonly) unsigned long long hash;
- (BOOL)isEqual:(id)arg1;
@property(readonly, copy) NSString *description;
- (id)initWithTestable:(id)arg1 identifier:(id)arg2 location:(id)arg3;
- (void)primitiveInvalidate;
- (BOOL)_isInFile:(id)arg1;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly, copy) NSMutableSet *mutableSubtests; // @dynamic mutableSubtests;
@property(readonly, copy) NSSet *subtests; // @dynamic subtests;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface IDEExecutionAction : NSObject <DVTXMLUnarchiving>
{
    NSString *_title;
    IDEScheme *_runContext;
}

+ (id)actionType;
@property(retain) IDEScheme *runContext; // @synthesize runContext=_runContext;
@property(copy, nonatomic) NSString *title; // @synthesize title=_title;
- (void).cxx_destruct;
- (void)schemeObjectGraphSetupComplete;
@property(readonly) BOOL needsCurrentArchiveVersion;
- (void)setTitleFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)dvt_encodeAttributesWithXMLArchiver:(id)arg1 version:(id)arg2;
- (id)initFromXMLUnarchiver:(id)arg1 archiveVersion:(float)arg2;
- (id)operationForExecutionWithBuildParameters:(id)arg1 error:(id *)arg2;
@property(readonly) NSDictionary *actionEnvironmentVariables;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IDEDistributionMethodExportArchive : IDEDistributionMethodExport
{
}

- (id)exportStepName;
- (long long)wantsProvisioningProfiles;
- (id)installerCertificateKind;
- (id)certificateKind;
- (id)orderedDistributionStepClassNames;
- (id)subtitle;
- (id)shortTitle;
- (id)title;
- (_Bool)supportsDistributionOfArchive:(id)arg1;
- (double)sortOrder;

@end

@interface IDECommandLineVerb : NSObject
{
}

+ (int)performWithEnvironment:(id)arg1;
+ (CDUnknownBlockType)fallbackOptionHandlerBlockWithEnvironment:(id)arg1 options:(id)arg2;
+ (id)optionDefinitionsWithEnvironment:(id)arg1;

@end

@interface IDESchemeActionIssueSummary : NSObject
{
    NSString *_issueType;
    NSString *_message;
    NSString *_producingTarget;
    DVTDocumentLocation *_documentLocationInCreatingWorkspace;
    DVTFilePath *_creatingWorkspaceFilePath;
}

@property(retain) DVTFilePath *creatingWorkspaceFilePath; // @synthesize creatingWorkspaceFilePath=_creatingWorkspaceFilePath;
@property(copy) DVTDocumentLocation *documentLocationInCreatingWorkspace; // @synthesize documentLocationInCreatingWorkspace=_documentLocationInCreatingWorkspace;
@property(copy) NSString *producingTarget; // @synthesize producingTarget=_producingTarget;
@property(copy) NSString *message; // @synthesize message=_message;
@property(copy) NSString *issueType; // @synthesize issueType=_issueType;
- (void).cxx_destruct;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
- (id)documentLocationInLocalWorkspace:(id)arg1;
- (BOOL)updateWithDictionaryRepresentation:(id)arg1;
- (id)dictionaryRepresentation;
- (id)initWithDictionaryRepresentation:(id)arg1 creatingWorkspaceFilePath:(id)arg2;
- (id)initWithIssueType:(id)arg1 message:(id)arg2 producingTarget:(id)arg3 documentLocation:(id)arg4 creatingWorkspaceFilePath:(id)arg5;

@end

@interface IDESchemeActionTestFailureIssueSummary : IDESchemeActionIssueSummary
{
    NSString *_testCaseName;
}

@property(copy) NSString *testCaseName; // @synthesize testCaseName=_testCaseName;
- (void).cxx_destruct;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
- (BOOL)updateWithDictionaryRepresentation:(id)arg1;
- (id)dictionaryRepresentation;
- (id)initWithDictionaryRepresentation:(id)arg1 creatingWorkspaceFilePath:(id)arg2;
- (id)initWithIssueType:(id)arg1 message:(id)arg2 producingTarget:(id)arg3 documentLocation:(id)arg4 creatingWorkspaceFilePath:(id)arg5 testCaseName:(id)arg6;
- (id)initWithIssueType:(id)arg1 message:(id)arg2 producingTarget:(id)arg3 documentLocation:(id)arg4 creatingWorkspaceFilePath:(id)arg5;

@end

@interface IDEIndexModulesIndexable : NSObject <IDEIndexable>
{
}

+ (id)sharedInstance;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)settingsForFile:(id)arg1;
- (id)buildSettingsForMainFile:(id)arg1 workspace:(id)arg2;
@property(readonly, copy) NSString *localizedIndexableDescription;
- (void)languageOfMainFile:(id)arg1 workspace:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
@property(readonly) BOOL requiresMainThread;
- (BOOL)writeProductHeaders:(id)arg1 toFile:(id)arg2 error:(id *)arg3;
- (void)productHeadersInWorkspace:(id)arg1 withCompletionBlock:(CDUnknownBlockType)arg2;
- (id)containerForIndexables:(id)arg1 rootPaths:(id)arg2;
@property(readonly, copy) NSArray *indexableFiles;
@property(readonly, copy) NSString *indexName;
@property(readonly, copy) NSString *identifier;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly, copy) NSString *productType;
@property(nonatomic) __weak id <IDEIndexable> proxy;
@property(readonly) Class superclass;
@property(readonly, getter=isUnitTest) BOOL unitTest;

@end

@interface IDESourceControlRevision : NSObject
{
    NSString *_revision;
    NSString *_author;
    NSDate *_date;
    NSString *_message;
    BOOL _isHEAD;
    BOOL _isBASE;
    BOOL _isCurrent;
    NSString *_displayRevision;
    NSString *_filePath;
    NSString *_currentFilePath;
    unsigned long long _status;
    NSString *_subtext;
}

+ (id)inMemoryRevision;
+ (id)localRevision;
+ (id)keyPathsForValuesAffectingLongRevisionString;
@property(retain) NSString *subtext; // @synthesize subtext=_subtext;
@property(readonly) unsigned long long status; // @synthesize status=_status;
@property(readonly) NSString *currentFilePath; // @synthesize currentFilePath=_currentFilePath;
@property(readonly) NSString *filePath; // @synthesize filePath=_filePath;
@property BOOL isCurrent; // @synthesize isCurrent=_isCurrent;
@property BOOL isBASE; // @synthesize isBASE=_isBASE;
@property BOOL isHEAD; // @synthesize isHEAD=_isHEAD;
@property(readonly) NSString *message; // @synthesize message=_message;
@property(readonly) NSDate *date; // @synthesize date=_date;
@property(readonly) NSString *author; // @synthesize author=_author;
@property(readonly) NSString *displayRevision; // @synthesize displayRevision=_displayRevision;
@property(readonly) NSString *revision; // @synthesize revision=_revision;
- (void).cxx_destruct;
- (BOOL)isEqual:(id)arg1;
- (unsigned long long)hash;
@property(readonly) NSString *shortRevisionString;
- (id)ideModelObjectTypeIdentifier;
- (id)description;
- (id)initWithRevision:(id)arg1 displayRevision:(id)arg2 author:(id)arg3 date:(id)arg4 message:(id)arg5 filePath:(id)arg6 currentFilePath:(id)arg7 isBASE:(BOOL)arg8 isHEAD:(BOOL)arg9 isCurrent:(BOOL)arg10;
- (id)initWithRevision:(id)arg1 displayRevision:(id)arg2 author:(id)arg3 date:(id)arg4 message:(id)arg5 filePath:(id)arg6 currentFilePath:(id)arg7 status:(unsigned long long)arg8;
- (id)initWithRevision:(id)arg1 displayRevision:(id)arg2 author:(id)arg3 date:(id)arg4 message:(id)arg5;

@end

@interface IDEBatchFindScopeAbstractPathComponentPredicate : IDEBatchFindScopeAbstractOperatorOperandPredicate
{
}

+ (id)operatorToString:(long long)arg1;
+ (long long)operatorFromString:(id)arg1;
- (CDUnknownBlockType)matcherBoundToWorkspace:(id)arg1;
- (id)extractComponent:(id)arg1;
@property(readonly) long long stringOperator;
- (id)initWithOperator:(long long)arg1 operand:(id)arg2;

@end

@interface IDEBatchFindScopePathPredicate : IDEBatchFindScopeAbstractPathComponentPredicate
{
}

+ (id)propertyListIdentifier;
- (id)extractComponent:(id)arg1;

@end

@interface IDEBatchFindScopeFileNamePredicate : IDEBatchFindScopeAbstractPathComponentPredicate
{
}

+ (id)propertyListIdentifier;
- (id)extractComponent:(id)arg1;

@end

@interface IDEBatchFindScopeFileExtensionPredicate : IDEBatchFindScopeAbstractPathComponentPredicate
{
}

+ (id)propertyListIdentifier;
- (id)extractComponent:(id)arg1;

@end

@interface IDEIssue : NSObject <IDEDiagnosticItemDelegate>
{
    IDEIssue *_parentIssue;
    BOOL _frozen;
    BOOL _valid;
    BOOL _wasFetchedFromCache;
    BOOL __coalesced;
    BOOL __vended;
    NSArray *_filteredSubissues;
    NSNumber *_lineNumber;
    IDEIssueProvider *_issueProvider;
    unsigned long long _sequenceNumber;
    NSArray *_documentLocations;
    DVTDocumentLocation *_primaryDocumentLocation;
    NSObject *_issueTypeIdentifier;
    NSString *_fullMessage;
    unsigned long long _severity;
    NSArray *_subissues;
    IDEActivityLogMessage *_representedMessage;
    IDEActivityLogRecord *_originatingLogRecord;
    unsigned long long _issueType;
    NSArray *_threads;
    id <NSCopying> _coalescingGroupIdentifier;
    id _helpIDOrURL;
}

+ (BOOL)isIssueTypeRuntime:(unsigned long long)arg1;
@property(getter=_isVended) BOOL _vended; // @synthesize _vended=__vended;
@property(getter=_isCoalesced) BOOL _coalesced; // @synthesize _coalesced=__coalesced;
@property(copy) id helpIDOrURL; // @synthesize helpIDOrURL=_helpIDOrURL;
@property(retain, nonatomic) id <NSCopying> coalescingGroupIdentifier; // @synthesize coalescingGroupIdentifier=_coalescingGroupIdentifier;
@property(copy, nonatomic) NSArray *threads; // @synthesize threads=_threads;
@property(readonly) unsigned long long issueType; // @synthesize issueType=_issueType;
@property BOOL wasFetchedFromCache; // @synthesize wasFetchedFromCache=_wasFetchedFromCache;
@property(readonly) IDEActivityLogRecord *originatingLogRecord; // @synthesize originatingLogRecord=_originatingLogRecord;
@property(retain, nonatomic) IDEActivityLogMessage *representedMessage; // @synthesize representedMessage=_representedMessage;
@property(copy, nonatomic) NSArray *subissues; // @synthesize subissues=_subissues;
@property(readonly) unsigned long long severity; // @synthesize severity=_severity;
@property(readonly) NSString *fullMessage; // @synthesize fullMessage=_fullMessage;
@property(retain) NSObject *issueTypeIdentifier; // @synthesize issueTypeIdentifier=_issueTypeIdentifier;
@property(readonly) DVTDocumentLocation *primaryDocumentLocation; // @synthesize primaryDocumentLocation=_primaryDocumentLocation;
@property(readonly) NSArray *documentLocations; // @synthesize documentLocations=_documentLocations;
@property(readonly) unsigned long long sequenceNumber; // @synthesize sequenceNumber=_sequenceNumber;
@property(retain, nonatomic) IDEIssueProvider *issueProvider; // @synthesize issueProvider=_issueProvider;
@property(getter=isValid) BOOL valid; // @synthesize valid=_valid;
@property(readonly) NSNumber *_lineNumber; // @synthesize _lineNumber;
@property(readonly) __weak IDEIssue *parentIssue; // @synthesize parentIssue=_parentIssue;
- (void).cxx_destruct;
@property(readonly, nonatomic) IDEIssue *representativeSubIssue;
- (BOOL)isEqualDisregardingLocationTimestamps:(id)arg1;
- (id)_firstCommonLocationFromArray:(id)arg1 andArray:(id)arg2;
- (void)diagnosticItemWasFixed:(id)arg1;
- (long long)compareByLineNumber:(id)arg1;
- (long long)compare:(id)arg1;
@property(readonly) BOOL isLiveIssue;
@property(retain) IDEIssue *_parentIssue;
@property(readonly) NSString *formattedStringRepresentation;
@property(readonly, copy) NSString *description;
- (id)_severityString;
- (void)_freeze;
@property(readonly) NSArray *fixableDiagnosticItems;
- (void)_setRepresentedMessage:(id)arg1 force:(BOOL)arg2;
@property(readonly) NSArray *filteredSubissues; // @synthesize filteredSubissues=_filteredSubissues;
- (void)_setSubissues:(id)arg1 force:(BOOL)arg2;
- (void)_setSequenceNumber:(unsigned long long)arg1;
- (id)initWithIssueProvider:(id)arg1 message:(id)arg2 wasFetchedFromCache:(BOOL)arg3;
- (id)initWithIssueProvider:(id)arg1 message:(id)arg2 originatingLogRecord:(id)arg3 wasFetchedFromCache:(BOOL)arg4;
- (id)initWithIssueProvider:(id)arg1 documentLocations:(id)arg2 issueTypeIdentifier:(id)arg3 fullMessage:(id)arg4 severity:(unsigned long long)arg5 representedMessage:(id)arg6;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IDELocalizationManagerContext : NSObject
{
}

- (id)createController;

@end

@interface IDELocalizationManager : NSObject <DVTInvalidation>
{
    IDELocalizationManagerContext *_context;
    NSObject<IDELocalizationController><DVTInvalidation> *_controller;
    id <IDEClientTrackingToken> _token;
    DVTObservingToken *_controllerCompleteObserver;
    IDEWorkspace *_workspace;
}

+ (id)keyPathsForValuesAffectingCurrentLocalizationProgress;
+ (void)initialize;
@property(retain) IDEWorkspace *workspace; // @synthesize workspace=_workspace;
@property(retain) DVTObservingToken *controllerCompleteObserver; // @synthesize controllerCompleteObserver=_controllerCompleteObserver;
@property(retain) id <IDEClientTrackingToken> token; // @synthesize token=_token;
@property(retain) NSObject<IDELocalizationController><DVTInvalidation> *controller; // @synthesize controller=_controller;
@property(retain) IDELocalizationManagerContext *context; // @synthesize context=_context;
- (void).cxx_destruct;
- (void)_complete;
@property(readonly) NSObject<IDELocalizationWorkProgress> *currentLocalizationProgress;
- (BOOL)startLocalizationOperation:(id)arg1 error:(id *)arg2;
- (void)primitiveInvalidate;
- (id)initWithWorkspace:(id)arg1;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface IDEExecutionOperationTracker : IDEExecutionTracker
{
    DVTOperation *_operation;
    DVTObservingToken *_isFinishedObservingToken;
    BOOL _operationFinished;
}

@property(nonatomic) BOOL operationFinished; // @synthesize operationFinished=_operationFinished;
@property(retain) DVTOperation *operation; // @synthesize operation=_operation;
- (void).cxx_destruct;
- (id)notFinishedReasonWithDepth:(unsigned long long)arg1;
- (BOOL)isFinished;
- (void)cancelWithReason:(int)arg1;
- (id)initWithOperation:(id)arg1;
- (id)initWithOperation:(id)arg1 serviceTier:(int)arg2;

@end

@interface IDETestingDiagnosticLogArbiter : NSObject
{
    BOOL _preserveAllMessages;
    NSObject<OS_dispatch_queue> *_queue;
    id <IDETestingDiagnosticLogWriter> _writer;
    unsigned long long _state;
    NSMutableArray *_buffers;
    NSMutableData *_currentBuffer;
    unsigned long long _maxLoggedBytes;
    unsigned long long _maxBufferedBytes;
    double _contextInterval;
    unsigned long long _totalBytesLogged;
    unsigned long long _totalBytesBuffered;
    NSObject<OS_dispatch_source> *_rotationTimer;
    unsigned long long _bufferedMessages;
    unsigned long long _bufferedMessagesInCurrentBuffer;
}

@property BOOL preserveAllMessages; // @synthesize preserveAllMessages=_preserveAllMessages;
@property unsigned long long bufferedMessagesInCurrentBuffer; // @synthesize bufferedMessagesInCurrentBuffer=_bufferedMessagesInCurrentBuffer;
@property unsigned long long bufferedMessages; // @synthesize bufferedMessages=_bufferedMessages;
@property(retain) NSObject<OS_dispatch_source> *rotationTimer; // @synthesize rotationTimer=_rotationTimer;
@property unsigned long long totalBytesBuffered; // @synthesize totalBytesBuffered=_totalBytesBuffered;
@property unsigned long long totalBytesLogged; // @synthesize totalBytesLogged=_totalBytesLogged;
@property double contextInterval; // @synthesize contextInterval=_contextInterval;
@property unsigned long long maxBufferedBytes; // @synthesize maxBufferedBytes=_maxBufferedBytes;
@property unsigned long long maxLoggedBytes; // @synthesize maxLoggedBytes=_maxLoggedBytes;
@property(retain) NSMutableData *currentBuffer; // @synthesize currentBuffer=_currentBuffer;
@property(retain) NSMutableArray *buffers; // @synthesize buffers=_buffers;
@property unsigned long long state; // @synthesize state=_state;
@property __weak id <IDETestingDiagnosticLogWriter> writer; // @synthesize writer=_writer;
@property(retain) NSObject<OS_dispatch_queue> *queue; // @synthesize queue=_queue;
- (void).cxx_destruct;
- (void)dispatchQueueBarrier:(CDUnknownBlockType)arg1;
- (void)_on_queue_finishLogging:(CDUnknownBlockType)arg1;
- (void)finishLogging:(CDUnknownBlockType)arg1;
- (void)_on_queue_flushBufferedMessages;
- (void)flushBufferedMessages;
- (void)_on_queue_dumpBuffersPreservingContextInterval;
- (void)dumpBuffersPreservingContextInterval;
- (void)_on_queue_startBuffering;
- (void)startBuffering;
- (void)_on_queue_startLogging;
- (void)startLogging;
- (void)_on_queue_flushBuffers;
- (void)_on_queue_rotateBuffers;
- (void)_on_queue_writeData:(id)arg1;
- (id)_on_queue_dataForTruncatedMessage:(id)arg1 withLength:(unsigned long long)arg2;
- (void)_on_queue_logMessage:(id)arg1;
- (void)logMessage:(id)arg1;
- (id)initWithWriter:(id)arg1 maxLoggedBytes:(unsigned long long)arg2 maxBufferedBytes:(unsigned long long)arg3 contextInterval:(double)arg4;
- (void)dealloc;

@end

@interface IDEProvisioningContainer : NSObject <IDEProvisioningContainer>
{
    NSString *_name;
    NSString *_identifier;
    NSString *_portalID;
}

@property(readonly) NSString *portalID; // @synthesize portalID=_portalID;
@property(readonly) NSString *identifier; // @synthesize identifier=_identifier;
@property(readonly) NSString *name; // @synthesize name=_name;
- (void).cxx_destruct;
- (id)initWithName:(id)arg1 identifier:(id)arg2 portalID:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IDEPlaygroundPageContextSerializer : IDEPlaygroundContextSerializerCommon
{
}

+ (id)rootXMLElementFromContext:(id)arg1 error:(id *)arg2;

@end

@interface IDEPlaygroundPageContextDeserializer : IDEPlaygroundContextDeserializerCommon
{
}

+ (id)contextFromFilePath:(id)arg1 parentContext:(id)arg2 error:(id *)arg3;
+ (id)rootElementName;

@end

@interface IDEActivityLogContextInfoMessage : IDEActivityLogMessage
{
}

@end

@interface IDEActivityLogHeaderInclusionMessage : IDEActivityLogMessage
{
}

@end

@interface IDEDistributionMethodManager : NSObject
{
}

+ (id)defaultDistributionMethodManager;
- (id)orderedDistributionMethodsForTask:(int)arg1 archive:(id)arg2;
- (id)_orderedDistributionMethodsForTask:(int)arg1 archive:(id)arg2 ignorePreflightChecks:(BOOL)arg3 error:(id *)arg4;
- (BOOL)_passesPreflightChecksForArchive:(id)arg1 method:(id)arg2 error:(id *)arg3;
- (id)_orderedDistributionMethods;

@end

@interface IDEProvisioningBasicSigningIdentity : NSObject <IDEProvisioningBasicSigningIdentity>
{
    NSString *_identifier;
    NSString *_userDescription;
}

@property(readonly) NSString *userDescription; // @synthesize userDescription=_userDescription;
@property(readonly) NSString *identifier; // @synthesize identifier=_identifier;
- (void).cxx_destruct;
- (id)description;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
- (id)initWithIdentifier:(id)arg1 userDescription:(id)arg2;

@end

@interface IDEDistributionMethod : NSObject
{
    NSSet *_requiredTeamTypes;
}

@property(readonly) NSSet *requiredTeamTypes; // @synthesize requiredTeamTypes=_requiredTeamTypes;
- (void).cxx_destruct;
@property(readonly) NSArray *distributionOptionIdentifiers;
@property(readonly) BOOL supportsCustomToolchains;
@property(readonly) BOOL supportsFreeProvisioning;
@property(readonly) NSString *packagingStepIdentifier;
@property(readonly) NSString *exportStepName;
@property(readonly) DVTPortalProfilePurpose *provisioningProfilePurpose;
@property(readonly) DVTPortalPlatform *provisioningProfilePlatform;
@property(readonly) long long wantsProvisioningProfiles;
@property(readonly) NSString *installerCertificateKind;
@property(readonly) NSString *certificateKind;
@property(readonly) NSArray *orderedDistributionStepViewControllerClassNames;
@property(readonly) NSArray *orderedDistributionStepModelClassNames;
@property(readonly) NSArray *orderedDistributionStepClassNames;
@property(readonly) NSString *subtitle;
@property(readonly) NSString *shortTitle;
@property(readonly) NSString *title;
@property(readonly) NSString *commandLineName;
- (id)commandLineNameForTask:(int)arg1;
@property(readonly) BOOL supportsManifestDistribution;
@property(readonly, getter=isAppStoreBound) BOOL appStoreBound;
@property(readonly) int supportedTask;
- (_Bool)supportsDistributionOfArchive:(id)arg1;
@property(readonly) double sortOrder;
@property(readonly) NSString *taskNoun;
@property(readonly) NSString *taskVerb;

@end

@interface _IDETestableState : NSObject <DVTInvalidation>
{
    NSMutableSet *_testableObservers;
    NSMutableDictionary *_testResults;
    NSMutableDictionary *_performanceMetricsByTestIdentifier;
    id <IDETestable> _testable;
    IDETestableIssueProvider *_issueProvider;
}

+ (void)initialize;
@property(readonly) IDETestableIssueProvider *issueProvider; // @synthesize issueProvider=_issueProvider;
@property(readonly) __weak id <IDETestable> testable; // @synthesize testable=_testable;
- (void).cxx_destruct;
- (id)_performanceMetricsForTest:(id)arg1;
- (unsigned long long)_stateOfTest:(id)arg1;
- (unsigned long long)_testableStateForTestable:(id)arg1;
- (unsigned long long)_compositeStateOfSubTests:(id)arg1;
- (void)_clearAllResults;
- (void)_addAllTestsForTestable:(id)arg1 intoSet:(id)arg2;
- (void)_processNewTestResult:(id)arg1 forTest:(id)arg2;
- (void)_notifyObserversTestsChanged:(id)arg1;
- (void)_clearCachedResultsForTest:(id)arg1 andNoteParentIn:(id)arg2;
- (void)_notifyAllTestablesChanged;
- (void)_notifyTestableChanged;
- (BOOL)_hasObservers;
- (void)_removeObserver:(id)arg1;
- (void)_addObserver:(id)arg1;
@property(readonly, copy) NSString *description;
- (void)primitiveInvalidate;
- (id)_initWithTestable:(id)arg1 andWorkspace:(id)arg2;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface IDETestManager : NSObject <DVTInvalidation>
{
    IDEWorkspace *_workspace;
    NSSet *_testableProviders;
    NSSet *_testables;
    NSMutableDictionary *_testablesByFileURL;
    NSMapTable *_testableProvidersToObservingTokens;
    NSMapTable *_testablesToObservingTokens;
    NSMutableSet *_searchedTestables;
    NSMutableSet *_testableObservingTokens;
    NSMapTable *_subtestObservingTokenMapTable;
    DVTNotificationToken *_blueprintsChangedObserver;
    DVTNotificationToken *_buildOperationObserver;
    DVTNotificationToken *_cleanBuildFolderObserver;
    DVTNotificationToken *_testableChangedHackNotification;
    DVTObservingToken *_activeSchemeObserver;
    id <DVTCancellable> _delayedNotifyObserversOfChangedTestablesToken;
    DVTTimeSlicedMainThreadWorkQueue *_changedTestableNotificationQueue;
    BOOL _forcingReloadAll;
    NSMutableDictionary *_dataSources;
    NSMutableDictionary *_testRunGenerationCountsByID;
    DVTDelayedInvocation *_forceReloadAllTestablesInvocation;
    BOOL _didRunTests;
    BOOL _loadingComplete;
    IDETestRunSession *_testRunSession;
    NSSet *_generateCoverageReportSessions;
    IDELogStore *_logStore;
    NSSet *_testsLastRun;
    NSSet *_testsLastProfiled;
    NSMutableDictionary *_testableStateByTestableName;
    NSMutableDictionary *_fileChangeBrokersByFileURL;
    unsigned long long _testSessionGenerationCounter;
    NSMutableArray *_concurrentTestRunSessions;
    DVTFilePath *_actionResultsBundleWithBaselineOverridesFilePath;
    id <IDETestManagerUITestingPermissionSheetDelegate> _UITestingPermissionSheetDelegate;
}

+ (void)initialize;
+ (id)testingTypeIdentifier;
@property(nonatomic) __weak id <IDETestManagerUITestingPermissionSheetDelegate> UITestingPermissionSheetDelegate; // @synthesize UITestingPermissionSheetDelegate=_UITestingPermissionSheetDelegate;
@property(retain) DVTFilePath *actionResultsBundleWithBaselineOverridesFilePath; // @synthesize actionResultsBundleWithBaselineOverridesFilePath=_actionResultsBundleWithBaselineOverridesFilePath;
@property(retain) NSMutableArray *concurrentTestRunSessions; // @synthesize concurrentTestRunSessions=_concurrentTestRunSessions;
@property unsigned long long testSessionGenerationCounter; // @synthesize testSessionGenerationCounter=_testSessionGenerationCounter;
@property(readonly) NSMutableDictionary *fileChangeBrokersByFileURL; // @synthesize fileChangeBrokersByFileURL=_fileChangeBrokersByFileURL;
@property(readonly) NSMutableDictionary *testableStateByTestableName; // @synthesize testableStateByTestableName=_testableStateByTestableName;
@property BOOL loadingComplete; // @synthesize loadingComplete=_loadingComplete;
@property(retain) NSSet *testsLastProfiled; // @synthesize testsLastProfiled=_testsLastProfiled;
@property(retain) NSSet *testsLastRun; // @synthesize testsLastRun=_testsLastRun;
@property BOOL didRunTests; // @synthesize didRunTests=_didRunTests;
@property(retain) IDELogStore *logStore; // @synthesize logStore=_logStore;
@property(copy) NSSet *generateCoverageReportSessions; // @synthesize generateCoverageReportSessions=_generateCoverageReportSessions;
@property(retain) IDETestRunSession *testRunSession; // @synthesize testRunSession=_testRunSession;
@property(readonly) IDEWorkspace *workspace; // @synthesize workspace=_workspace;
- (void).cxx_destruct;
- (void)asyncApplyBaselineRecord:(id)arg1 forTestBundleRunDestinationRecord:(id)arg2 behavior:(unsigned long long)arg3 completionBlock:(CDUnknownBlockType)arg4;
- (void)displayWorkspaceSheetForUITestingPermissionWithReply:(CDUnknownBlockType)arg1;
- (void)asyncApplyBaselineRecord:(id)arg1 forBlueprintProviderRelativePath:(id)arg2 blueprintName:(id)arg3 testBundleRunDestinationRecord:(id)arg4 behavior:(unsigned long long)arg5 completionBlock:(CDUnknownBlockType)arg6;
- (id)testablesForFileURL:(id)arg1;
- (id)testForIdentifier:(id)arg1;
- (id)fileURLForTestIdentifier:(id)arg1;
- (id)testsForFileURL:(id)arg1;
- (id)_bestTestableForFileURL:(id)arg1;
- (id)testableDataSourceForTestingSystemWithIdentifier:(id)arg1;
- (void)setTestableDataSource:(id)arg1 forTestingSystemWithIdentifier:(id)arg2;
- (void)didCompleteFor:(id)arg1;
- (id)testOperationForTestRunSpecifications:(id)arg1 executionEnvironment:(id)arg2 withBuildOperation:(id)arg3 runDestination:(id)arg4 actionRecord:(id)arg5 schemeIdentifier:(id)arg6 outSchemeActionResultOperation:(id *)arg7 launchParametersBlock:(CDUnknownBlockType)arg8 actionCallbackBlock:(CDUnknownBlockType)arg9 error:(id *)arg10;
- (void)finishTestingFor:(id)arg1 withSkippedTests:(id)arg2;
- (void)_purgeInvalidRuntimeDiscoveredTestsForTest:(id)arg1 withSkippedTests:(id)arg2;
- (BOOL)_shouldPurgeRuntimeDiscoveredTestTestResultForTest:(id)arg1;
- (unsigned long long)_latestGenerationForAncestorsOfTest:(id)arg1;
- (void)startTestingFor:(id)arg1;
- (void)resetTestsLastRun;
- (unsigned long long)stateOfTestable:(id)arg1;
- (id)performanceMetricsForTest:(id)arg1;
- (unsigned long long)stateOfTest:(id)arg1;
- (BOOL)isTestablePendingRun:(id)arg1;
- (BOOL)isTestPendingRun:(id)arg1;
- (void)_cancelAndRemoveAllTestObservingTokens;
- (void)_unregisterSubtestsObservanceForTest:(id)arg1 inTestable:(id)arg2;
- (void)_registerSubtestsObservance:(id)arg1 forTest:(id)arg2 inTestable:(id)arg3;
- (void)_loadTestsForTestable:(id)arg1;
- (void)_checkLoadingComplete;
- (void)_updateTestsLastRunOrProfiledForRemovedTests:(id)arg1;
- (void)_diffPrevious:(id)arg1 current:(id)arg2 onlyNew:(id *)arg3 onlyOld:(id *)arg4;
- (void)_forceReloadAllTestables;
- (void)_delayedForceReloadAllTestables;
- (void)_notifyObserversOfChangedTestable:(id)arg1;
- (void)_notifyUpdatedTestFilesForTestable:(id)arg1 addedFiles:(id)arg2 removedFiles:(id)arg3;
- (void)removeObserver:(id)arg1 ofFile:(id)arg2;
- (void)addObserver:(id)arg1 ofFile:(id)arg2;
- (void)setTestablesObserved:(id)arg1 byObserver:(id)arg2;
- (id)_stateForTestable:(id)arg1;
- (void)_notifyAllTestablesObservers;
- (void)_buildOperationDidStop:(id)arg1;
- (void)_cleanBuildFolder:(id)arg1;
- (void)_blueprintsDidChange:(id)arg1;
- (void)_updateAllFileChangeBrokerObservers;
- (void)addCoverageReportOperation:(id)arg1;
- (void)_removeCoverageReportOperation:(id)arg1;
- (unsigned long long)_lastRunSessionGenerationCountForTestable:(id)arg1;
- (unsigned long long)_lastRunSessionGenerationCountForTest:(id)arg1;
- (void)processNewTestResult:(id)arg1 forTest:(id)arg2;
- (void)setLastRunSessionGenerationCount:(unsigned long long)arg1 forTest:(id)arg2;
- (void)removeRunningTest:(id)arg1;
- (void)addRunningTest:(id)arg1;
- (void)_updateForCurrentTestableProviders:(id)arg1;
- (void)_updateWithTestableProvidersToRemove:(id)arg1 toAdd:(id)arg2;
- (void)_updateWithTestablesToRemove:(id)arg1 toAdd:(id)arg2;
@property(readonly) NSSet *testables;
@property(readonly) NSSet *testableProviders;
- (void)_removeInvalidTestableStateForInvalidTestables:(id)arg1;
- (void)primitiveInvalidate;
@property(readonly, copy) NSString *description;
- (id)initWithWorkspace:(id)arg1;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface IDECommandLineBuildTask : IDEBuildTask
{
    NSTask *_task;
}

+ (id)buildTaskWithIdentifier:(id)arg1 restorePersistedBuildResults:(BOOL)arg2 command:(id)arg3;
+ (id)buildTaskWithIdentifier:(id)arg1 restorePersistedBuildResults:(BOOL)arg2 commandLine:(id)arg3;
+ (id)buildTaskWithIdentifier:(id)arg1 restorePersistedBuildResults:(BOOL)arg2 commandLine:(id)arg3 workingDirectory:(id)arg4 environmentEntries:(id)arg5;
- (void).cxx_destruct;
- (id)description;
- (void)main;
@property(readonly) NSString *workingDirectory;
@property(readonly) NSDictionary *environmentEntries;
@property(readonly) NSArray *commandLine;
- (void)dealloc;
- (id)initWithIdentifier:(id)arg1 restorePersistedBuildResults:(BOOL)arg2 properties:(id)arg3;

@end

@interface IDESymbolicBreakpoint : IDEBreakpoint
{
    NSString *_symbolName;
    NSString *_moduleName;
}

+ (id)keyPathsForValuesAffectingLocationsProvideAdditionalInformation;
+ (id)keyPathsForValuesAffectingDisplayName;
+ (id)propertiesAffectingPersistenceState;
@property(copy) NSString *moduleName; // @synthesize moduleName=_moduleName;
@property(copy) NSString *symbolName; // @synthesize symbolName=_symbolName;
- (void).cxx_destruct;
- (void)dvt_encodeRelationshipsWithXMLArchiver:(id)arg1 version:(id)arg2;
- (void)dvt_encodeAttributesWithXMLArchiver:(id)arg1 version:(id)arg2;
- (id)initFromXMLUnarchiver:(id)arg1 archiveVersion:(float)arg2;
- (id)accessibilityDescription;
- (BOOL)locationsProvideAdditionalInformation;
- (id)description;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)displayName;
- (id)initWithSymbolName:(id)arg1 moduleName:(id)arg2;
- (id)init;

@end

@interface IDEBreakpointAction : NSObject <DVTXMLUnarchiving>
{
    NSArray *_expressions;
    BOOL _displayable;
    NSString *_displayName;
    NSString *_filterableText;
}

+ (id)_expressionsInString:(id)arg1;
+ (id)propertiesAffectingPersistenceState;
+ (id)_replace:(id)arg1 with:(id)arg2 inString:(id)arg3;
+ (id)_expandMacrosInString:(id)arg1 usingBreakpoint:(id)arg2;
+ (void)initialize;
@property(copy) NSString *filterableText; // @synthesize filterableText=_filterableText;
@property(getter=isDisplayable) BOOL displayable; // @synthesize displayable=_displayable;
@property(copy) NSString *displayName; // @synthesize displayName=_displayName;
- (void).cxx_destruct;
- (id)initFromXMLUnarchiver:(id)arg1 archiveVersion:(float)arg2;
- (id)_expandExpressionsInString:(id)arg1;
- (void)extractAndSetExpressionsFromString:(id)arg1;
- (void)extractAndAddExpressionsFromString:(id)arg1;
- (void)clearExpressions;
- (id)expandExpressionsAndMacrosInString:(id)arg1 usingBreakpoint:(id)arg2;
- (BOOL)haveExpressionsBeenEvaluated;
- (void)resetExpressionResults;
- (void)performActionUsingContext:(id)arg1 andBreakpoint:(id)arg2;
- (void)_breakpointActionCommonInit;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(copy) NSArray *expressions; // @dynamic expressions;
@property(readonly) unsigned long long hash;
@property(readonly) NSMutableArray *mutableExpressions; // @dynamic mutableExpressions;
@property(readonly) Class superclass;

@end

@interface IDEBreakpointActionEvaluationContext : NSObject
{
    IDEDebugSession *_debugSession;
    IDEConsoleAdaptor *_consoleAdaptor;
    unsigned long long _selectedThreadIndex;
    unsigned long long _selectedFrameIndex;
}

@property(readonly) unsigned long long selectedFrameIndex; // @synthesize selectedFrameIndex=_selectedFrameIndex;
@property(readonly) unsigned long long selectedThreadIndex; // @synthesize selectedThreadIndex=_selectedThreadIndex;
@property(readonly) IDEConsoleAdaptor *consoleAdaptor; // @synthesize consoleAdaptor=_consoleAdaptor;
@property(readonly) IDEDebugSession *debugSession; // @synthesize debugSession=_debugSession;
- (void).cxx_destruct;
- (id)initWithDebugSession:(id)arg1 consoleAdaptor:(id)arg2 selectedThreadIndex:(unsigned long long)arg3 selectedFrameIndex:(unsigned long long)arg4;

@end

@interface IDENoNetworkConfigurationResponse : NSObject <ITunesSoftwareServiceConfigurationResponse>
{
    BOOL _isSuccessful;
    BOOL _isCancelled;
    NSDictionary *_configuration;
    NSString *_alertMessage;
    NSArray *_errors;
    NSArray *_warnings;
    NSArray *_infoMessages;
}

@property(readonly) NSArray *infoMessages; // @synthesize infoMessages=_infoMessages;
@property(readonly) NSArray *warnings; // @synthesize warnings=_warnings;
@property(readonly) NSArray *errors; // @synthesize errors=_errors;
@property(readonly) NSString *alertMessage; // @synthesize alertMessage=_alertMessage;
@property(readonly) NSDictionary *configuration; // @synthesize configuration=_configuration;
@property(readonly) BOOL isCancelled; // @synthesize isCancelled=_isCancelled;
@property(readonly) BOOL isSuccessful; // @synthesize isSuccessful=_isSuccessful;
- (void).cxx_destruct;
- (id)initWithConfiguration:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IDEDistributionAppStoreConfigurationStep : IDEDistributionStep
{
}

+ (id)propertyListForContext:(id)arg1;
+ (id)availableOptionsForPropertyList;
- (BOOL)loadFromPropertyList:(id)arg1 error:(id *)arg2;
- (BOOL)fetchAndSetAppStoreConfigurationUsingDefaultConfiguration:(BOOL)arg1 error:(id *)arg2;
- (id)platformsDictionaryForConfigurationResponse:(id)arg1 topLevelKey:(id)arg2 logAspect:(id)arg3 error:(id *)arg4;
- (id)defaultConfigurationPlatformsDictionaryWithError:(id *)arg1;
- (id)providedOutputContextPropertyNames;
- (id)requiredInputContextPropertyNames;

@end

@interface IDEPlaygroundCore : IDEContainerCore
{
}

@end

@interface IDERunOperationWorkerGroup : IDERunOperationWorker
{
    NSArray *_subworkers;
    NSMutableSet *_completedWorkers;
    NSMutableSet *_finishedWorkers;
    BOOL _shouldStartNextWorker;
    unsigned long long _currentWorkerIndex;
    BOOL _lastSubworkerFinished;
    DVTDispatchLock *_subworkersLock;
}

- (void).cxx_destruct;
- (void)primitiveInvalidate;
- (id)description;
- (void)allSubworkersDidFinishWithError:(id)arg1;
- (void)finishedWithError:(id)arg1;
- (void)finishFromFinishedWorker:(id)arg1 error:(id)arg2;
- (void)startNextWorkerFromCompletedWorker:(id)arg1 error:(id)arg2;
- (void)terminate;
- (void)performWorkerAction;
- (void)_startNextWorker;
- (id)initWithWorkers:(id)arg1 launchSession:(id)arg2;
- (id)initWithExtensionIdentifier:(id)arg1 launchSession:(id)arg2;

@end

@interface IDEActivityLogMessage : NSObject <NSCopying>
{
    NSString *_title;
    NSString *_shortTitle;
    double _timeEmitted;
    IDEActivityLogSection *_supersection;
    struct _NSRange _rangeInSectionText;
    IDEActivityLogMessage *_supermessage;
    NSMutableArray *_submessages;
    unsigned long long _severity;
    IDETypeIdentifier *_type;
    DVTDocumentLocation *_location;
    NSString *_categoryIdent;
    NSArray *_secondaryLocations;
    NSString *_additionalDescription;
    struct os_unfair_lock_s _lock;
}

+ (id)messageWithType:(id)arg1 severity:(unsigned long long)arg2 title:(id)arg3 filePath:(id)arg4 lineNumber:(unsigned long long)arg5;
+ (id)messageWithType:(id)arg1 severity:(unsigned long long)arg2 title:(id)arg3 location:(id)arg4;
@property(readonly) IDETypeIdentifier *type; // @synthesize type=_type;
@property(readonly) unsigned long long severity; // @synthesize severity=_severity;
- (void).cxx_destruct;
- (void)dvt_writeToSerializer:(id)arg1;
- (id)dvt_initFromDeserializer:(id)arg1;
@property(readonly) unsigned long long totalNumberOfAnalyzerResults;
@property(readonly) unsigned long long totalNumberOfAnalyzerWarnings;
@property(readonly) unsigned long long totalNumberOfWarnings;
@property(readonly) unsigned long long totalNumberOfErrors;
@property(readonly) unsigned long long totalNumberOfTestFailures;
- (void)setSecondaryLocations:(id)arg1;
@property(readonly) NSArray *secondaryLocations;
@property(readonly) NSString *additionalDescription;
- (void)setCategoryIdentifier:(id)arg1;
@property(readonly) NSString *categoryIdentifier;
@property(readonly) DVTDocumentLocation *location;
- (void)setShortTitle:(id)arg1;
@property(readonly) NSString *shortTitle;
- (void)logRecorder:(id)arg1 addSectionTextRange:(struct _NSRange)arg2;
- (void)logRecorder:(id)arg1 setSectionTextRange:(struct _NSRange)arg2;
@property(readonly) NSString *logMessageString;
- (void)logRecorder:(id)arg1 addSubmessage:(id)arg2;
- (void)addSubmessage:(id)arg1;
@property(readonly) NSArray *submessages;
- (void)_setSupermessage:(id)arg1;
@property(readonly) __weak IDEActivityLogMessage *supermessage;
- (void)setSectionTextRange:(struct _NSRange)arg1;
@property(readonly) struct _NSRange rangeInSectionText;
- (void)_setSupersection:(id)arg1;
@property(readonly) __weak IDEActivityLogSection *supersection;
- (id)description;
@property(readonly) double timeEmitted;
@property(readonly) NSString *title;
- (BOOL)_hasEqualTitleLocationsSubmessages:(id)arg1 disregardingTimestamp:(BOOL)arg2;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithType:(id)arg1 severity:(unsigned long long)arg2 title:(id)arg3 filePath:(id)arg4;
- (id)initWithType:(id)arg1 severity:(unsigned long long)arg2 title:(id)arg3 filePath:(id)arg4 lineNumber:(unsigned long long)arg5;
- (id)initWithType:(id)arg1 severity:(unsigned long long)arg2 title:(id)arg3 location:(id)arg4;
- (id)initWithTitle:(id)arg1;
- (id)init;
- (id)initWithType:(id)arg1 severity:(unsigned long long)arg2 title:(id)arg3;

@end

@interface IDEPlaygroundSharedContext : IDEPlaygroundCommonSharedContext <IDESwiftMigrator>
{
    NSMutableDictionary *_pagesByFilename;
    NSMutableArray *_pageFilenames;
    NSArray *_workspaceFrameworkSearchPaths;
    BOOL _allowsReset;
    BOOL _executeOnSourceChanges;
    BOOL _timelineScrubberEnabled;
    NSError *_deviceError;
    IDEPlaygroundVersion *_playgroundVersion;
    NSString *_targetPlatformIdentifier;
    long long _displayMode;
    NSString *_organizationName;
    NSArray *_discreteFileSections;
    NSNumber *_autoTerminationDelay;
    NSString *_lastSwiftMigration;
    DVTFilePath *_documentationSectionPath;
}

+ (id)keyPathsForValuesAffectingWorkspaceFrameworkSearchPaths;
+ (id)targetTripleFromSDK:(id)arg1;
+ (id)keyPathsForValuesAffectingFrameworkSearchPaths;
+ (id)keyPathsForValuesAffectingTargetTriple;
+ (id)keyPathsForValuesAffectingTargetPlatformIdentifier;
+ (id)keyPathsForValuesAffectingAutoTerminationDelay;
+ (id)keyPathsForValuesAffectingPagesDirectoryPath;
+ (id)keyPathsForValuesAffectingFirstPageContext;
+ (id)keyPathsForValuesAffectingPageContexts;
+ (void)changeFilePath:(id)arg1 forSharedContext:(id)arg2;
+ (id)sharedPlaygroundContextForFilePath:(id)arg1 error:(id *)arg2;
+ (id)knownPageTypeUTIs;
+ (id)contextsForFilePaths;
+ (Class)contextDeserializerClass;
+ (Class)contextSerializerClass;
+ (id)filePathExtension;
+ (id)UTI;
+ (void)initialize;
@property(nonatomic) __weak DVTFilePath *documentationSectionPath; // @synthesize documentationSectionPath=_documentationSectionPath;
@property(copy, nonatomic) NSString *lastSwiftMigration; // @synthesize lastSwiftMigration=_lastSwiftMigration;
@property(retain, nonatomic) NSNumber *autoTerminationDelay; // @synthesize autoTerminationDelay=_autoTerminationDelay;
@property(retain, nonatomic) NSArray *discreteFileSections; // @synthesize discreteFileSections=_discreteFileSections;
@property(copy, nonatomic) NSString *organizationName; // @synthesize organizationName=_organizationName;
@property(nonatomic) BOOL timelineScrubberEnabled; // @synthesize timelineScrubberEnabled=_timelineScrubberEnabled;
@property(nonatomic) BOOL executeOnSourceChanges; // @synthesize executeOnSourceChanges=_executeOnSourceChanges;
@property(nonatomic) long long displayMode; // @synthesize displayMode=_displayMode;
@property(nonatomic) BOOL allowsReset; // @synthesize allowsReset=_allowsReset;
@property(copy, nonatomic) NSString *targetPlatformIdentifier; // @synthesize targetPlatformIdentifier=_targetPlatformIdentifier;
@property(retain, nonatomic) IDEPlaygroundVersion *playgroundVersion; // @synthesize playgroundVersion=_playgroundVersion;
@property(retain, nonatomic) NSError *deviceError; // @synthesize deviceError=_deviceError;
- (void).cxx_destruct;
- (void)migrateWithMigrationDir:(id)arg1 buildQueueSet:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (void)migratePageContext:(id)arg1 withMigrationDir:(id)arg2 buildQueueSet:(id)arg3 completionBlock:(CDUnknownBlockType)arg4;
- (id)commandArgumentsWithMigrationDir:(id)arg1 pageContext:(id)arg2;
- (void)fillArguments:(id)arg1 outputFileMap:(id)arg2 inMigrationDir:(id)arg3 forContext:(id)arg4;
- (void)updateLastSwiftMigrationToCurrent;
@property(readonly, nonatomic) BOOL lastSwiftMigrationIsCurrent;
- (id)workspaceFrameworkSearchPathsForWorkspace:(id)arg1;
- (id)workspaceFrameworkSearchPaths;
- (void)invalidateWorkspaceFrameworkSearchPaths;
- (void)_workspaceRunContextsChanged;
- (BOOL)unregisterReferencingContainer:(id)arg1;
- (BOOL)registerReferencingContainer:(id)arg1;
- (BOOL)representsLegacyInteractiveLearningDocument;
- (id)_targetTripleForAuxiliarySource;
- (id)_sdkForAuxiliarySource;
- (id)frameworkSearchPaths;
- (id)defaultToolchainRegistry;
@property(readonly, nonatomic) NSString *targetTriple;
@property(readonly, nonatomic) DVTDevice *device;
@property(readonly, nonatomic) NSArray *targetableSDKs;
@property(retain, nonatomic) DVTSDK *sdk;
@property(readonly, nonatomic) DVTFilePath *pagesDirectoryPath;
- (void)_notifyPagesDirectoryChangedOnBackgroundQueue;
- (void)_updatePagesFromDirectoryContents;
- (id)knownPlaygroundPageExtensions;
- (void)_prepareForPageCreationWithHandler:(id)arg1;
- (BOOL)_renamePage:(id)arg1 toName:(id)arg2 withStructureEditingBlock:(CDUnknownBlockType)arg3;
- (void)_movePage:(id)arg1 toIndex:(unsigned long long)arg2;
- (void)_invalidatePlaygroundPageContextForFilename:(id)arg1;
- (id)_createPlaygroundPageContextForFilePath:(id)arg1;
- (id)_addPageContextForFilePath:(id)arg1 atIndex:(unsigned long long)arg2;
- (id)pageContextForPath:(id)arg1;
@property(readonly, nonatomic) IDEPlaygroundCommonSharedContext *firstPageContext;
@property(readonly, nonatomic) NSArray *pageContexts;
- (id)description;
- (id)initWithFilePath:(id)arg1 parentContext:(id)arg2;
- (void)_invalidatePageContexts;
- (void)setFilePath:(id)arg1;

// Remaining properties
@property(readonly, nonatomic) NSMutableArray *mutablePageFilenames; // @dynamic mutablePageFilenames;
@property(readonly, nonatomic) NSArray *pageFilenames; // @dynamic pageFilenames;

@end

@interface IDEStackFramesDefaultCompressionStrategy : NSObject
{
}

+ (id)sharedInstance;
- (id)compressStackFrames:(id)arg1 level:(unsigned long long)arg2;
- (unsigned long long)defaultCompressionLevel;
- (unsigned long long)maxCompressionLevel;
- (id)_initInternal;
- (id)init;

@end

@interface IDELocalizationStringsFileParser : NSObject
{
    NSMutableArray *_parsedStringListElements;
    unsigned long long _length;
    NSData *_parseData;
    const unsigned short *_parseRaw;
    NSArray *_lineStarts;
    NSString *_stringToParse;
    unsigned long long _currentPosition;
}

@property(readonly, nonatomic) unsigned long long currentPosition; // @synthesize currentPosition=_currentPosition;
@property(readonly, copy, nonatomic) NSArray *parsedStringListElements; // @synthesize parsedStringListElements=_parsedStringListElements;
@property(readonly, copy, nonatomic) NSString *stringToParse; // @synthesize stringToParse=_stringToParse;
- (void).cxx_destruct;
- (void)getParseResultStrings:(id *)arg1 comments:(id *)arg2;
- (BOOL)parseAndReturnError:(id *)arg1;
- (void)_configureInitialState;
- (BOOL)_parseDictionaryEnd:(char *)arg1 error:(id *)arg2;
- (BOOL)_parseDictionaryStart:(char *)arg1 error:(id *)arg2;
- (BOOL)_parseSemicolonAndReturnError:(id *)arg1;
- (BOOL)_parseEqualsOrSemicolonCharacter:(unsigned short *)arg1 error:(id *)arg2;
- (BOOL)_parseWhitespaceAndComments:(id *)arg1 error:(id *)arg2;
- (id)_parseStringAndReturnError:(id *)arg1;
- (id)_parseNonQuotedStringAndReturnError:(id *)arg1;
- (id)_parseQuotedStringWithQuoteCharacter:(unsigned short)arg1 error:(id *)arg2;
- (id)_parseUpToBackslashOrQuoteCharacter:(unsigned short)arg1 stopCharacter:(unsigned short *)arg2 error:(id *)arg3;
- (id)_parseEscapeSequenceAndReturnError:(id *)arg1;
- (id)_parseHexDigitsAndReturnError:(id *)arg1;
- (id)_parseOctalDigitsAndReturnError:(id *)arg1;
- (void)_unreadCharacter:(unsigned short)arg1;
- (BOOL)_readCharacter:(unsigned short *)arg1 error:(id *)arg2;
- (id)_composeParseError:(long long)arg1 parameters:(id)arg2;
- (id)_composeParseError:(long long)arg1;
- (void)_translateOffset:(unsigned long long)arg1 line:(unsigned long long *)arg2 column:(unsigned long long *)arg3;
- (void)_computeLineStarts;
@property(readonly, nonatomic, getter=isAtEnd) BOOL atEnd;
- (id)init;
- (id)initWithStringToParse:(id)arg1;

@end

@interface IDESourceKitIndexableProxy : NSObject <IDEIndexable>
{
    BOOL _respondsToSettingsForFiles;
    NSString *_cachedIdentifier;
    NSString *_cachedIndexName;
    id <IDEIndexable><DVTInvalidation> _indexableObject;
}

@property(retain) id <IDEIndexable><DVTInvalidation> indexableObject; // @synthesize indexableObject=_indexableObject;
- (void).cxx_destruct;
@property(readonly, getter=isUnitTest) BOOL unitTest;
@property(readonly, copy) NSString *productType;
- (id)productNameWithBuildSetting:(id)arg1 workspace:(id)arg2;
- (id)buildSettingsForMainFile:(id)arg1 workspace:(id)arg2;
@property(readonly, copy) NSString *localizedIndexableDescription;
- (void)languageOfMainFile:(id)arg1 workspace:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (void)clearCachedBuildSettings;
- (void)settingsForFilesInWorkspace:(id)arg1 shouldWriteAuxiliaryFiles:(BOOL)arg2 withCompletionBlock:(CDUnknownBlockType)arg3;
- (BOOL)writeProductHeaders:(id)arg1 toFile:(id)arg2 error:(id *)arg3;
- (void)productHeadersInWorkspace:(id)arg1 withCompletionBlock:(CDUnknownBlockType)arg2;
- (id)containerForIndexables:(id)arg1 rootPaths:(id)arg2;
@property(readonly, copy) NSArray *indexableFiles;
@property(readonly, copy) NSString *indexName;
@property(readonly, copy) NSString *identifier;
@property(readonly) BOOL requiresMainThread;
@property(readonly, copy) NSString *description;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithIndexable:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(nonatomic) __weak id <IDEIndexable> proxy;
@property(readonly) Class superclass;

@end

@interface IDEArchive : NSObject
{
    NSMutableDictionary *_infoDictionary;
    BOOL _savePending;
    NSArray *_topLevelDistributionItems;
    BOOL _symbolDownloadInProgress;
    BOOL _estimateInProgress;
    DVTFilePath *_path;
    IDEArchivedContent *_archivedContent;
    NSString *_archiveSize;
    NSNumber *_isFromFreeProvisioningTeamN;
}

+ (long long)_computedApproximateAppStoreFileSizeForArchiveContentPath:(id)arg1 forPlatform:(id)arg2;
+ (long long)_fileSizeForPathString:(id)arg1;
+ (BOOL)_zipDirectoryAtPath:(id)arg1 destination:(id)arg2 excluding:(id)arg3;
+ (id)_availableArchivePathInDirectory:(id)arg1 withName:(id)arg2 creationDate:(id)arg3 usingFileManager:(id)arg4;
+ (id)_archivePathOverride;
+ (id)_archivePlistPathForArchivePath:(id)arg1;
+ (void)_copySCMBlueprintFromWorkspace:(id)arg1 toArchiveWithPath:(id)arg2 usingFileManager:(id)arg3 completionBlock:(CDUnknownBlockType)arg4;
+ (BOOL)_copyAppleProvidedContentFromDirectory:(id)arg1 toArchiveWithPath:(id)arg2 usingFileManager:(id)arg3 error:(id *)arg4;
+ (BOOL)_copyProductDefinitionPlistFromDirectory:(id)arg1 toArchiveWithPath:(id)arg2 usingFileManager:(id)arg3 error:(id *)arg4;
+ (BOOL)_copyBCSymbolMapsFromDirectory:(id)arg1 toArchiveWithPath:(id)arg2 usingFileManager:(id)arg3 error:(id *)arg4;
+ (BOOL)_copydSYMsFromDirectory:(id)arg1 toArchiveWithPath:(id)arg2 usingFileManager:(id)arg3 error:(id *)arg4;
+ (id)_createArchiveWithName:(id)arg1 usingFileManager:(id)arg2 error:(id *)arg3;
+ (id)_folderPathForArchiveWithDate:(id)arg1;
+ (void)createArchiveWithName:(id)arg1 schemeName:(id)arg2 platform:(id)arg3 toolchain:(id)arg4 products:(id)arg5 auxiliaryFiles:(id)arg6 workspace:(id)arg7 usingFileManager:(id)arg8 completionBlock:(CDUnknownBlockType)arg9;
+ (id)_infoForToolchain:(id)arg1;
+ (id)installArchiveWithArchivePath:(id)arg1 usingFileManager:(id)arg2;
+ (id)archiveWithArchivePath:(id)arg1;
+ (id)keyPathsForValuesAffectingProductDefinitionPlistPath;
+ (id)_productDefinitionPlistPathForArchivePath:(id)arg1;
+ (id)keyPathsForValuesAffectingSourceControlBlueprint;
+ (id)_sourceControlBlueprintDirectoryPathForArchivePath:(id)arg1;
+ (id)keyPathsForValuesAffectingDSYMDirectoryPath;
+ (id)_dSYMDirectoryPathForArchivePath:(id)arg1;
+ (id)keyPathsForValuesAffectingProductsDirectoryPath;
+ (id)_productsDirectoryPathForArchivePath:(id)arg1;
+ (id)keyPathsForValuesAffectingCanDownloadSymbols;
@property NSNumber *isFromFreeProvisioningTeamN; // @synthesize isFromFreeProvisioningTeamN=_isFromFreeProvisioningTeamN;
@property BOOL estimateInProgress; // @synthesize estimateInProgress=_estimateInProgress;
@property(readonly) IDEArchivedContent *archivedContent; // @synthesize archivedContent=_archivedContent;
@property(retain) DVTFilePath *path; // @synthesize path=_path;
- (void).cxx_destruct;
@property(readonly) NSString *toolchainDisplayName;
@property(readonly) NSString *toolchainIdentifier;
- (id)_toolchainInfo;
@property(readonly) BOOL containsCustomToolchain;
- (void)estimateSizeInBackgroundForPlatform:(id)arg1;
- (void)_saveArchive:(id)arg1;
- (void)markDirty;
- (id)objectForEnterpriseDistributionKey:(id)arg1;
- (void)setObject:(id)arg1 forEnterpriseDistributionKey:(id)arg2;
@property(copy) NSDictionary *enterpriseDistributionManifest;
@property(readonly) NSString *archiveSize; // @synthesize archiveSize=_archiveSize;
- (void)addDownloadedSymbolUUID:(id)arg1;
@property(readonly, copy) NSArray *downloadedSymbolUUIDs;
@property(copy) NSString *statusString;
@property(copy) NSString *comment;
@property long long estimatedAppStoreFileSize;
@property BOOL estimatedAppStoreFileSizeIsValid;
@property(readonly) NSDate *creationDate;
@property(readonly) unsigned long long version;
@property(readonly) NSString *schemeName;
@property(copy) NSString *name;
@property(readonly) DVTFilePath *productDefinitionPlistPath;
@property(readonly) DVTFilePath *sourceControlBlueprintDirectoryPath;
@property(readonly) DVTFilePath *dSYMDirectoryPath;
@property(readonly) DVTFilePath *productsDirectoryPath;
@property(readonly) NSMutableDictionary *infoDictionary;
@property BOOL symbolDownloadInProgress; // @synthesize symbolDownloadInProgress=_symbolDownloadInProgress;
@property(readonly) BOOL canDownloadSymbols;
- (BOOL)canSubmitIgnoringPreflightChecks;
- (BOOL)_canPerformAllTasksWithError:(id *)arg1;
@property(readonly) BOOL canSubmit;
@property(readonly) BOOL canExport;
@property(readonly) BOOL canValidate;
- (BOOL)_canPerformTask:(int)arg1 ignorePreflightChecks:(BOOL)arg2 error:(id *)arg3;
@property(readonly) IDEArchivedApplication *application;
- (id)_initWithPath:(id)arg1 infoDictionary:(id)arg2;

@end

@interface IDESourceKitVariantWrapper : NSObject
{
    CDStruct_4c46f3f5 _obj;
    IDESourceKitResponse *_response;
}

- (void).cxx_destruct;
- (id)description;
- (id)response;
- (id)initWithSourceKitObject:(CDStruct_4c46f3f5)arg1 response:(id)arg2;

@end

@interface IDESourceKitResponse : NSObject
{
    struct _sourcekit_response_s *_obj;
}

- (id)description;
- (id)error;
- (BOOL)isError;
- (id)value;
- (void)dealloc;
- (struct _sourcekit_response_s *)sourceKitObject;
- (id)initWithSourceKitObject:(struct _sourcekit_response_s *)arg1;

@end

@interface IDESourceKitVariantDictionary : IDESourceKitVariantWrapper
{
}

- (id)arrayForKey:(struct _sourcekit_uid_s *)arg1;
- (id)dictionaryForKey:(struct _sourcekit_uid_s *)arg1;
- (struct _sourcekit_uid_s *)UIDForKey:(struct _sourcekit_uid_s *)arg1;
- (id)optionalBoolForKey:(struct _sourcekit_uid_s *)arg1;
- (id)optionalDoubleForKey:(struct _sourcekit_uid_s *)arg1;
- (id)optionalIntForKey:(struct _sourcekit_uid_s *)arg1;
- (BOOL)boolForKey:(struct _sourcekit_uid_s *)arg1;
- (double)doubleForKey:(struct _sourcekit_uid_s *)arg1;
- (long long)intForKey:(struct _sourcekit_uid_s *)arg1;
- (id)stringForKey:(struct _sourcekit_uid_s *)arg1;
- (id)filePathForKey:(struct _sourcekit_uid_s *)arg1;
- (id)NSDictionaryForKey:(struct _sourcekit_uid_s *)arg1;

@end

@interface IDESourceKitVariantArray : IDESourceKitVariantWrapper
{
}

- (id)arrayForIndex:(unsigned long long)arg1;
- (id)dictionaryForIndex:(unsigned long long)arg1;
- (struct _sourcekit_uid_s *)UIDForIndex:(unsigned long long)arg1;
- (BOOL)boolForIndex:(unsigned long long)arg1;
- (double)doubleForIndex:(unsigned long long)arg1;
- (long long)intForIndex:(unsigned long long)arg1;
- (const char *)cStringForIndex:(unsigned long long)arg1;
- (id)stringForIndex:(unsigned long long)arg1;
- (unsigned long long)count;

@end

@interface IDESourceKitVariantDictionaryWrapper : NSObject
{
    IDESourceKitUIDSet *_UID;
    IDESourceKitVariantDictionary *_dict;
}

- (void).cxx_destruct;
- (id)description;
- (id)response;
- (id)initWithUIDSet:(id)arg1 dictionary:(id)arg2;

@end

@interface IDESourceKitResponseArray : NSObject
{
    IDESourceKitUIDSet *_UID;
    IDESourceKitVariantArray *_obj;
    Class _objectClass;
}

- (void).cxx_destruct;
- (id)description;
- (id)allObjects;
- (id)objectAtIndexedSubscript:(unsigned long long)arg1;
- (id)objectAtIndex:(unsigned long long)arg1;
- (unsigned long long)count;
- (id)initWithUIDSet:(id)arg1 array:(id)arg2 objectClass:(Class)arg3;
- (id)ide_collectionArray:(id)arg1;
- (id)ide_collection:(id)arg1;

@end

@interface IDESourceKitResponseStringArray : NSObject
{
    IDESourceKitVariantArray *_obj;
}

- (void).cxx_destruct;
- (id)description;
- (id)allObjects;
- (void)enumerateCStringsUsingBlock:(CDUnknownBlockType)arg1;
- (const char *)cStringAtIndex:(unsigned long long)arg1;
- (id)objectAtIndexedSubscript:(unsigned long long)arg1;
- (id)objectAtIndex:(unsigned long long)arg1;
- (unsigned long long)count;
- (id)initWithArray:(id)arg1;

@end

@interface IDESourceKitResponseFilePathArray : NSObject
{
    IDESourceKitVariantArray *_obj;
}

- (void).cxx_destruct;
- (id)description;
- (id)allObjects;
- (id)objectAtIndexedSubscript:(unsigned long long)arg1;
- (id)objectAtIndex:(unsigned long long)arg1;
- (unsigned long long)count;
- (id)initWithArray:(id)arg1;
- (id)ide_collection;

@end

@interface IDESwiftMigrationPlaygroundTarget : IDESwiftMigrationTarget
{
    IDEPlayground *_playground;
}

@property(readonly, copy) IDEPlayground *playground; // @synthesize playground=_playground;
- (void).cxx_destruct;
- (id)warningMessage;
- (BOOL)shouldMigrate;
- (BOOL)canMigrate;
- (id)blueprint;
- (id)subTitle;
- (id)title;
- (id)description;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
- (id)initWithPlayground:(id)arg1;

@end

@interface IDEActivityLogChangeEvent : NSObject
{
    IDEActivityLogSection *_section;
}

+ (id)stopRecordingEventWithSection:(id)arg1 supersections:(id)arg2;
+ (id)setValueEventWithSection:(id)arg1 key:(id)arg2 value:(id)arg3;
+ (id)appendTextEventWithSection:(id)arg1 textString:(id)arg2;
+ (id)addSubmessageEventWithSection:(id)arg1 supermessage:(id)arg2 submessage:(id)arg3;
+ (id)addSubsectionEventWithSection:(id)arg1 subsection:(id)arg2;
@property(readonly) IDEActivityLogSection *section; // @synthesize section=_section;
- (void).cxx_destruct;
- (id)description;
- (id)addedChild;
- (id)changedParent;
- (id)initWithSection:(id)arg1;

@end

@interface IDEActivityLogAddSubsectionChangeEvent : IDEActivityLogChangeEvent
{
    IDEActivityLogSection *_subsection;
}

@property(readonly) IDEActivityLogSection *subsection; // @synthesize subsection=_subsection;
- (void).cxx_destruct;
- (id)description;
- (id)addedChild;
- (id)initWithSection:(id)arg1 subsection:(id)arg2;

@end

@interface IDEActivityLogAddSubmessageChangeEvent : IDEActivityLogChangeEvent
{
    IDEActivityLogMessage *_supermessage;
    IDEActivityLogMessage *_submessage;
}

@property(readonly) IDEActivityLogMessage *submessage; // @synthesize submessage=_submessage;
@property(readonly) IDEActivityLogMessage *supermessage; // @synthesize supermessage=_supermessage;
- (void).cxx_destruct;
- (id)description;
- (id)addedChild;
- (id)changedParent;
- (id)initWithSection:(id)arg1 supermessage:(id)arg2 submessage:(id)arg3;
- (id)initWithSection:(id)arg1 submessage:(id)arg2;

@end

@interface IDEActivityLogAppendTextChangeEvent : IDEActivityLogChangeEvent
{
    NSString *_textString;
}

@property(readonly) NSString *textString; // @synthesize textString=_textString;
- (void).cxx_destruct;
- (id)description;
- (id)initWithSection:(id)arg1 textString:(id)arg2;

@end

@interface IDEActivityLogSetKeyValueChangeEvent : IDEActivityLogChangeEvent
{
    NSString *_key;
    NSValue *_value;
}

@property(readonly) NSValue *value; // @synthesize value=_value;
@property(readonly) NSString *key; // @synthesize key=_key;
- (void).cxx_destruct;
- (id)description;
- (id)initWithSection:(id)arg1 key:(id)arg2 value:(id)arg3;

@end

@interface IDEActivityLogStopRecordingChangeEvent : IDEActivityLogChangeEvent
{
    NSSet *_supersections;
}

@property(readonly) NSSet *supersections; // @synthesize supersections=_supersections;
- (void).cxx_destruct;
- (id)description;
- (id)initWithSection:(id)arg1 supersections:(id)arg2;

@end

@interface IDEAnalyzeSchemeAction : IDESchemeAction <DVTXMLUnarchiving>
{
}

+ (void)insertsynthesizedMacrosIntoOverridingProperties:(id)arg1;
+ (id)keyPathsForValuesAffectingSubtitle;
+ (BOOL)shouldAllowCustomPhaseActions;
- (void)dvt_encodeAttributesWithXMLArchiver:(id)arg1 version:(id)arg2;
- (void)dvt_awakeFromXMLUnarchiver:(id)arg1;
- (BOOL)doesNonActionWork;
- (id)subtitle;
- (id)name;
- (id)mutablePostPhaseExecutionActions;
- (id)postPhaseExecutionActions;
- (id)mutablePrePhaseExecutionActions;
- (id)prePhaseExecutionActions;
- (void)_commonInit;
- (id)initFromXMLUnarchiver:(id)arg1 archiveVersion:(float)arg2;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IDETestIssue : IDEIssue
{
    IDETest *_test;
    NSArray *_performanceMetrics;
    unsigned long long _issueGeneration;
}

@property(readonly) unsigned long long issueGeneration; // @synthesize issueGeneration=_issueGeneration;
@property(readonly) NSArray *performanceMetrics; // @synthesize performanceMetrics=_performanceMetrics;
@property(readonly) IDETest *test; // @synthesize test=_test;
- (void).cxx_destruct;
- (id)_documentLocationForFilePath:(id)arg1 lineNumber:(id)arg2 timestamp:(id)arg3;
- (id)initWithIssueProvider:(id)arg1 test:(id)arg2 performanceMetrics:(id)arg3 testResultMessage:(id)arg4 timestamp:(id)arg5 issueTypeIdentifier:(id)arg6 issueGeneration:(unsigned long long)arg7;

@end

@interface IDETestableIssueProvider : IDEIssueProvider <IDETestsInTestableObserver>
{
    IDEWorkspace *_workspace;
    NSMutableDictionary *_issuesByTestID;
    NSMutableArray *_genericIssues;
    unsigned long long _currentIssueGeneration;
    NSMutableSet *_observedTestables;
}

+ (unsigned long long)assertionBehaviorAfterEndOfEventForSelector:(SEL)arg1;
- (void).cxx_destruct;
- (void)_processResult:(id)arg1 forTest:(id)arg2;
- (void)_addIssuesForTest:(id)arg1 issues:(id)arg2 isGeneric:(BOOL)arg3;
- (void)_clearIssuesForTest:(id)arg1;
- (void)_postTestIssue:(id)arg1 forTestable:(id)arg2;
- (id)_documentLocationForFilePath:(id)arg1 lineNumber:(id)arg2 timestamp:(id)arg3;
- (id)_headingNameForTest:(id)arg1;
- (void)_beginNewIssueGeneration;
- (BOOL)_filterIssuesByActiveScheme;
- (id)displayNameForIssueTypeIdentifier:(id)arg1;
- (void)testsChanged:(id)arg1;
- (void)testablesChanged:(id)arg1;
- (void)allTestablesChanged;
- (void)_updateObservedTestablesForTest:(id)arg1;
- (void)primitiveInvalidate;
- (id)_initWithWorkspace:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IDEBatchFindRegularExpressionQuery : IDEBatchFindAbstractWorkspacePerFileTextualQuery
{
}

+ (id)queryTermPlaceholderText;
+ (id)displayName;
+ (BOOL)supportsCaseMatching;
+ (BOOL)supportsAnchorning;
- (BOOL)treatsTextAsRegularExpression;

@end

@interface IDEOnDiskTestAssetPrunerLocalFileSystem : NSObject <IDEOnDiskTestAssetPrunerFileSystem>
{
    NSFileManager *_fileManager;
}

- (void).cxx_destruct;
- (id)readTestSummariesAtPath:(id)arg1 error:(id *)arg2;
- (BOOL)fileExists:(id)arg1;
- (BOOL)deleteFile:(id)arg1 error:(id *)arg2;
- (id)exploreDirectory:(id)arg1 error:(id *)arg2;
@property(readonly) NSFileManager *fileManager;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IDEOnDiskTestAssetPruner : NSObject
{
    id <IDEOnDiskTestAssetPrunerFileSystem> _fileSystem;
}

+ (id)_attachmentsDirectoryInTestDirectory:(id)arg1;
@property(readonly) id <IDEOnDiskTestAssetPrunerFileSystem> fileSystem; // @synthesize fileSystem=_fileSystem;
- (void).cxx_destruct;
- (BOOL)_pruneOrphanedAttachmentsInTestDirectory:(id)arg1 withError:(id *)arg2;
- (BOOL)_pruneOldSummariesInTestDirectory:(id)arg1 withError:(id *)arg2;
- (BOOL)_pruneSummaryAtPath:(id)arg1 testDirectory:(id)arg2 withError:(id *)arg3;
- (BOOL)_visitAllAttachmentsInSummaryAtPath:(id)arg1 testDirectory:(id)arg2 withError:(id *)arg3 visitor:(CDUnknownBlockType)arg4;
- (void)_deleteAttachmentWithFileName:(id)arg1 testDirectory:(id)arg2;
- (id)_summariesToPruneInTestDirectory:(id)arg1 withError:(id *)arg2;
- (id)_allSummariesInTestDirectory:(id)arg1 withError:(id *)arg2;
- (id)_exploreDirectory:(id)arg1 withError:(id *)arg2;
- (BOOL)pruneTestDirectory:(id)arg1 error:(id *)arg2;
- (id)initWithFileSystem:(id)arg1;

@end

@interface IDEWorkspaceInfoCommandLineVerb : IDEWorkspaceBasedCommandLineVerb
{
}

+ (void)_printBlueprintProviderInfo:(id)arg1 withEnvironment:(id)arg2 showAllProjects:(BOOL)arg3 showTargets:(BOOL)arg4 showSchemes:(BOOL)arg5 showConfigurations:(BOOL)arg6 indentationLevel:(unsigned long long)arg7;
+ (void)_printSchemesForContainer:(id)arg1 withEnvironment:(id)arg2 indentationLevel:(unsigned long long)arg3;
+ (void)_indentToLevel:(unsigned long long)arg1 withEnvironment:(id)arg2;
+ (int)performWithEnvironment:(id)arg1;
+ (id)optionDefinitionsWithEnvironment:(id)arg1;

@end

@interface IDEDistributionStripXattrsStep : IDEDistributionItemProcessingStep
{
}

+ (_Bool)runsPerThinningVariant;
+ (_Bool)supportsDryRun;
- (_Bool)runWithError:(id *)arg1;
- (id)providedOutputContextPropertyNames;
- (id)requiredInputContextPropertyNames;
- (id)name;

@end

@interface IDEDistributionProvisioningEntitlementsExpansion : IDEProvisioningEntitlementsExpansion
{
}

- (id)expandEntitlements:(id)arg1 withOverrides:(id)arg2;

@end

@interface IDEDistributionProvisionable : NSObject <IDEProvisionable>
{
    IDEDistributionProvisioningEntitlementsExpansion *_entitlementsExpansion;
    NSDictionary *_baseEntitlements;
    DVTPlatform *_platform;
    IDEDistributionItem *_distributionItem;
    NSString *_certificateSpecifier;
    IDEProfileSpecifier *_profileSpecifier;
    id <IDEProvisioningBasicTeam> _team;
    IDEDistributionMethod *_method;
    long long _provisioningStyle;
}

@property(readonly, nonatomic) long long provisioningStyle; // @synthesize provisioningStyle=_provisioningStyle;
@property(readonly, nonatomic) IDEDistributionMethod *method; // @synthesize method=_method;
@property(readonly, nonatomic) id <IDEProvisioningBasicTeam> team; // @synthesize team=_team;
@property(retain, nonatomic) IDEProfileSpecifier *profileSpecifier; // @synthesize profileSpecifier=_profileSpecifier;
@property(copy, nonatomic) NSString *certificateSpecifier; // @synthesize certificateSpecifier=_certificateSpecifier;
@property(readonly, nonatomic) IDEDistributionItem *distributionItem; // @synthesize distributionItem=_distributionItem;
- (void).cxx_destruct;
- (id)provisioningPurposeForConfigurationNamed:(id)arg1;
@property(readonly, nonatomic, getter=isInstallerPackage) BOOL installerPackage;
- (BOOL)allowSigningWithoutTeamSelectionForConfigurationNamed:(id)arg1;
- (BOOL)signingRequiresTeamForConfigurationNamed:(id)arg1;
- (void)noteProvisioningInputsChanged;
- (id)appIDFeaturesForConfigurationNamed:(id)arg1;
- (id)entitlementsExpansionForConfigurationNamed:(id)arg1;
- (id)entitlementsFilePathForConfigurationNamed:(id)arg1;
- (id)baseEntitlementsForConfigurationNamed:(id)arg1;
- (id)provisioningProfileSpecifierForConfigurationNamed:(id)arg1;
- (id)signingCertificateIdentifierForConfigurationNamed:(id)arg1;
- (id)bundleIdentifierForConfigurationNamed:(id)arg1;
- (id)platformForConfigurationNamed:(id)arg1;
- (long long)profileSupportForConfigurationNamed:(id)arg1;
- (id)teamForConfigurationNamed:(id)arg1;
- (long long)provisioningStyleForConfigurationNamed:(id)arg1;
@property(readonly, nonatomic) NSString *name;
@property(readonly, nonatomic) NSOrderedSet *configurations;
- (id)initWithDistributionItem:(id)arg1 team:(id)arg2 method:(id)arg3 provisioningStyle:(long long)arg4;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IDEDistributionItemProvisionable : IDEDistributionProvisionable
{
    DVTAppIDFeatures *_appIDFeatures;
    NSDictionary *_baseEntitlements;
}

- (void).cxx_destruct;
- (id)appIDFeaturesForConfigurationNamed:(id)arg1;
- (id)baseEntitlementsForConfigurationNamed:(id)arg1;
- (id)signingCertificateIdentifierForConfigurationNamed:(id)arg1;
- (id)bundleIdentifierForConfigurationNamed:(id)arg1;
- (long long)profileSupportForConfigurationNamed:(id)arg1;

@end

@interface IDEDistributionItemInstallerProvisionable : IDEDistributionProvisionable
{
}

- (BOOL)isInstallerPackage;
- (id)signingCertificateIdentifierForConfigurationNamed:(id)arg1;

@end

@interface IDERefactoring : NSObject <DVTInvalidation>
{
    IDEWorkspace *_workspace;
    DVTNotificationToken *_willIndexNotificationObservingToken;
    DVTNotificationToken *_didIndexNotificationObservingToken;
    BOOL _refactoringAllowed;
    id _domainObject;
}

+ (void)initialize;
@property(retain) id domainObject; // @synthesize domainObject=_domainObject;
@property(readonly) IDEWorkspace *workspace; // @synthesize workspace=_workspace;
- (void).cxx_destruct;
- (id)objCOrCCompilationUnitIndexablesForMainFile:(id)arg1 indexableObjects:(id)arg2;
- (BOOL)isFileObjCCompilationUnitOrHeader:(id)arg1 error:(id *)arg2;
@property(readonly, copy) NSString *description;
- (void)primitiveInvalidate;
- (id)initWithWorkspace:(id)arg1;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface IDEAppSubmissionPreference : NSObject
{
    BOOL _developerWantsBitCodeSubmitted;
    long long _appStoreStrippingSupportLevelMachineCode;
    long long _appStoreStrippingSupportLevelBitCode;
    long long _appStoreOnDemandResourcesSupportLevel;
}

@property(readonly) BOOL developerWantsBitCodeSubmitted; // @synthesize developerWantsBitCodeSubmitted=_developerWantsBitCodeSubmitted;
@property(readonly) long long appStoreOnDemandResourcesSupportLevel; // @synthesize appStoreOnDemandResourcesSupportLevel=_appStoreOnDemandResourcesSupportLevel;
@property(readonly) long long appStoreStrippingSupportLevelBitCode; // @synthesize appStoreStrippingSupportLevelBitCode=_appStoreStrippingSupportLevelBitCode;
@property(readonly) long long appStoreStrippingSupportLevelMachineCode; // @synthesize appStoreStrippingSupportLevelMachineCode=_appStoreStrippingSupportLevelMachineCode;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
- (id)description;
@property(readonly) unsigned long long strippingOptions;
- (id)initWithAppStoreStrippingSupportLevelMachineCode:(long long)arg1 appStoreStrippingSupportLevelBitCode:(long long)arg2 developerWantsBitCodeSubmitted:(BOOL)arg3 appStoreOnDemandResourcesSupportLevel:(long long)arg4;

@end

@interface IDEAppStoreSubmissionConfiguration : NSObject
{
    NSDictionary *_platformToSubmissionPreferences;
    NSDictionary *_bitcodeSupportLevelToPlatformPreferences;
    DVTLogAspect *_logAspect;
    NSArray *_platformsDictionaries;
}

+ (id)platformToSubmissionPreferencesFromPlatformsDictionaries:(id)arg1 logAspect:(id)arg2 error:(id *)arg3;
+ (id)submissionPreferenceFromConfigurationResponsePlatformDictionariesToMerge:(id)arg1 error:(id *)arg2;
@property(retain, nonatomic) NSArray *platformsDictionaries; // @synthesize platformsDictionaries=_platformsDictionaries;
@property(retain, nonatomic) DVTLogAspect *logAspect; // @synthesize logAspect=_logAspect;
@property(retain, nonatomic) NSDictionary *bitcodeSupportLevelToPlatformPreferences; // @synthesize bitcodeSupportLevelToPlatformPreferences=_bitcodeSupportLevelToPlatformPreferences;
@property(retain, nonatomic) NSDictionary *platformToSubmissionPreferences; // @synthesize platformToSubmissionPreferences=_platformToSubmissionPreferences;
- (void).cxx_destruct;
- (id)platformsForBitcodeSupportLevel:(long long)arg1;
- (id)submissionPreferenceForPlatform:(id)arg1;
- (id)configurationByReplacingSubmissionPreference:(id)arg1 forPlatform:(id)arg2;
- (id)initWithConfigurationPlatformsDictionaries:(id)arg1 logAspect:(id)arg2 error:(id *)arg3;

@end

@interface IDEProvisioningEntitlementsExpansion : NSObject
{
}

- (id)expandMacro:(id)arg1;
- (id)expandEntitlements:(id)arg1 withOverrides:(id)arg2;

@end

@interface IDEProvisioningEntitlementsOverrides : NSObject
{
    NSString *_appIdentifierPrefix;
    NSString *_teamIdentifierPrefix;
    NSString *_bundleIdentifier;
}

@property(retain, nonatomic) NSString *bundleIdentifier; // @synthesize bundleIdentifier=_bundleIdentifier;
@property(retain, nonatomic) NSString *teamIdentifierPrefix; // @synthesize teamIdentifierPrefix=_teamIdentifierPrefix;
@property(retain, nonatomic) NSString *appIdentifierPrefix; // @synthesize appIdentifierPrefix=_appIdentifierPrefix;
- (void).cxx_destruct;
- (id)description;

@end

@interface IDEActivityLogAnalyzerWarningMessage : IDEActivityLogMessage
{
}

+ (id)analyzerWarningType;
- (void)dvt_writeToSerializer:(id)arg1;
- (id)dvt_initFromDeserializer:(id)arg1;
- (unsigned long long)totalNumberOfAnalyzerWarnings;
- (unsigned long long)totalNumberOfWarnings;
- (BOOL)isAnalyzerWarningMessage;

@end

@interface IDEActivityLogAnalyzerResultMessage : IDEActivityLogMessage
{
    NSString *_resultType;
    long long _keyEventIndex;
}

+ (id)analyzerMessageType;
@property long long keyEventIndex; // @synthesize keyEventIndex=_keyEventIndex;
- (void).cxx_destruct;
- (void)dvt_writeToSerializer:(id)arg1;
- (id)dvt_initFromDeserializer:(id)arg1;
- (id)resultCategory;
- (id)resultType;
- (void)setResultType:(id)arg1;
- (unsigned long long)totalNumberOfAnalyzerResults;
- (unsigned long long)totalNumberOfWarnings;

@end

@interface IDEActivityLogAnalyzerStepMessage : IDEActivityLogMessage
{
    long long _parentIndex;
}

@property long long parentIndex; // @synthesize parentIndex=_parentIndex;
- (void)dvt_writeToSerializer:(id)arg1;
- (id)dvt_initFromDeserializer:(id)arg1;
- (unsigned long long)totalNumberOfWarnings;
- (BOOL)isAnalyzerStepMessage;

@end

@interface IDEActivityLogAnalyzerControlFlowStepMessage : IDEActivityLogAnalyzerStepMessage
{
    DVTTextDocumentLocation *_endLocation;
    NSArray *_edges;
}

- (void).cxx_destruct;
- (void)dvt_writeToSerializer:(id)arg1;
- (id)dvt_initFromDeserializer:(id)arg1;
- (void)setEdges:(id)arg1;
- (id)edges;
- (id)endLocation;
- (id)startLocation;
- (unsigned long long)totalNumberOfWarnings;
- (BOOL)isAnalyzerControlFlowStepMessage;
- (id)initWithTitle:(id)arg1 startLocation:(id)arg2 endLocation:(id)arg3;

@end

@interface IDEActivityLogAnalyzerControlFlowStepEdge : NSObject
{
    DVTTextDocumentLocation *_startLocation;
    DVTTextDocumentLocation *_endLocation;
}

- (void).cxx_destruct;
- (void)dvt_writeToSerializer:(id)arg1;
- (id)dvt_initFromDeserializer:(id)arg1;
- (id)description;
- (id)endLocation;
- (id)startLocation;
- (id)initWithStartLocation:(id)arg1 endLocation:(id)arg2;

@end

@interface IDEActivityLogAnalyzerEventStepMessage : IDEActivityLogAnalyzerStepMessage
{
    NSString *_description;
    unsigned long long _callDepth;
}

- (void).cxx_destruct;
- (void)dvt_writeToSerializer:(id)arg1;
- (id)dvt_initFromDeserializer:(id)arg1;
- (id)locations;
- (void)setCallDepth:(unsigned long long)arg1;
- (unsigned long long)callDepth;
- (void)setDescription:(id)arg1;
- (id)description;
- (unsigned long long)totalNumberOfWarnings;

@end

@interface IDEProvisioningMechanic : NSObject <IDEProvisioningRepairDelegate, DVTInvalidation>
{
    DVTDispatchLock *_lock;
    IDEProvisioningRepair *_activeRepair;
    NSMutableArray *_repairs;
    NSMutableArray *_pendingRepairs;
    NSMutableArray *_failedRepairs;
    NSMutableArray *_waitingForUserActionRepairs;
    NSCountedSet *_repairablesCountedSet;
    id <IDEProvisioningMechanicDelegate> _delegate;
    IDEProvisioningMechanicContext *_context;
}

+ (void)initialize;
@property(readonly, nonatomic) IDEProvisioningMechanicContext *context; // @synthesize context=_context;
@property(readonly, nonatomic) id <IDEProvisioningMechanicDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)_removeRepair:(id)arg1;
- (void)_pendAllWaitingForUserActionRepairs;
- (BOOL)_pendRepair:(id)arg1 skip:(BOOL)arg2;
- (BOOL)_executeNextRepairIfNeeded;
- (id)_repairForRepairable:(id)arg1;
- (void)repair:(id)arg1 userAction:(id)arg2 didFailWithError:(id)arg3;
- (void)repair:(id)arg1 didFinishUserAction:(id)arg2;
- (void)repairUserActionDidBegin:(id)arg1;
- (void)repair:(id)arg1 userActionWasAuthorized:(id)arg2;
- (void)repair:(id)arg1 didFailWithError:(id)arg2;
- (void)repair:(id)arg1 requiresUserAction:(id)arg2;
- (void)repairDidFinish:(id)arg1;
- (void)repair:(id)arg1 isExecutingStep:(id)arg2;
- (void)repairDidBegin:(id)arg1;
- (id)activeRepair;
- (id)failedRepairs;
- (id)waitingForUserActionRepairs;
- (id)pendingRepairs;
- (id)repairs;
- (id)repairForRepairable:(id)arg1 isExecuting:(char *)arg2 userAction:(id *)arg3 repairError:(id *)arg4;
- (BOOL)removeRepairForRepairable:(id)arg1 includingFailedRepair:(BOOL)arg2;
- (BOOL)removeRepairForRepairable:(id)arg1;
- (BOOL)addRepairForRepairable:(id)arg1;
- (void)primitiveInvalidate;
- (id)initWithDelegate:(id)arg1 context:(id)arg2;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface IDEOverridingPropertiesDeviceCache : NSObject
{
    DVTDispatchLock *_cacheLock;
    NSMutableDictionary *_cache;
    NSMutableDictionary *_deviceIdentifierCacheKeys;
    NSMutableDictionary *_buildableCacheKeys;
    DVTObservingToken *_deviceObservingToken;
    DVTNotificationToken *_buildablesNotificationToken;
    unsigned long long _hitCount;
    unsigned long long _missCount;
}

+ (id)sharedCache;
- (void).cxx_destruct;
- (void)_observeBuildables;
- (void)_observeDevices;
- (void)_evictCachesForBuildable:(id)arg1;
- (void)_evictCachesForDevice:(id)arg1;
- (void)_installOverrdingBuildProperties:(id)arg1 device:(id)arg2 buildable:(id)arg3 buildParameters:(id)arg4;
- (id)_cachedOverridingPropertiesForDevice:(id)arg1 buildable:(id)arg2 buildParameters:(id)arg3;
- (id)_cacheKeyForDevice:(id)arg1 buildable:(id)arg2 buildParameters:(id)arg3;
- (id)overridingPropertiesForDevice:(id)arg1 buildable:(id)arg2 buildParameters:(id)arg3 createBlock:(CDUnknownBlockType)arg4;
- (void)dealloc;
- (id)init;

@end

@interface IDEBreakpointLocation : IDEBreakpoint
{
    IDEBreakpoint *_parentBreakpoint;
    NSString *_urlString;
    NSString *_timestampString;
    long long _startingColumnNumber;
    long long _endingColumnNumber;
    long long _startingLineNumber;
    long long _endingLineNumber;
    NSString *_characterRangeString;
    BOOL _usesParentBreakpointCondition;
    DVTTextDocumentLocation *_documentLocation;
    NSString *_symbolName;
    NSString *_moduleName;
    unsigned long long _address;
    unsigned long long _offsetFromSymbolStart;
}

+ (id)propertiesAffectingPersistenceState;
+ (BOOL)supportsInvalidationPrevention;
@property unsigned long long offsetFromSymbolStart; // @synthesize offsetFromSymbolStart=_offsetFromSymbolStart;
@property(readonly) unsigned long long address; // @synthesize address=_address;
@property(readonly) NSString *moduleName; // @synthesize moduleName=_moduleName;
@property(readonly) NSString *symbolName; // @synthesize symbolName=_symbolName;
@property(readonly) DVTTextDocumentLocation *documentLocation; // @synthesize documentLocation=_documentLocation;
@property BOOL usesParentBreakpointCondition; // @synthesize usesParentBreakpointCondition=_usesParentBreakpointCondition;
- (void).cxx_destruct;
- (void)primitiveInvalidate;
- (void)setUsesParentBreakpointConditionFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)dvt_awakeFromXMLUnarchiver:(id)arg1;
- (void)dvt_encodeAttributesWithXMLArchiver:(id)arg1 version:(id)arg2;
- (id)initFromXMLUnarchiver:(id)arg1 archiveVersion:(float)arg2;
@property(retain) IDEBreakpoint *parentBreakpoint;
- (BOOL)_isTextDocumentLocationEqual:(id)arg1;
- (BOOL)isBreakpointLocationTheSameDisregardingAddress:(id)arg1;
- (id)bucket;
- (id)mutableLocations;
- (id)locations;
@property(readonly) DVTTextDocumentLocation *zeroBasedDocumentLocation;
- (id)displayName;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)_dvt_IDEBreakpointLocationCommonInit;
- (id)initWithDocumentTextLocation:(id)arg1 symbolName:(id)arg2 moduleName:(id)arg3 address:(unsigned long long)arg4;

@end

@interface IDEInstallSchemeAction : IDESchemeAction <DVTXMLUnarchiving>
{
    BOOL _includeDebugSupportFiles;
    NSString *_customInstallName;
    NSArray *_killProcessList;
}

+ (id)keyPathsForValuesAffectingKillProcessListString;
+ (id)keyPathsForValuesAffectingDefaultInstallName;
+ (id)keyPathsForValuesAffectingSubtitle;
+ (BOOL)allowInstallSchemeAction;
@property BOOL includeDebugSupportFiles; // @synthesize includeDebugSupportFiles=_includeDebugSupportFiles;
@property(copy) NSArray *killProcessList; // @synthesize killProcessList=_killProcessList;
@property(copy) NSString *customInstallName; // @synthesize customInstallName=_customInstallName;
- (void).cxx_destruct;
- (void)setIncludeDebugSupportFilesFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setKillProcessesFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setCustomInstallNameFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setBuildConfigurationFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)dvt_encodeAttributesWithXMLArchiver:(id)arg1 version:(id)arg2;
- (void)dvt_awakeFromXMLUnarchiver:(id)arg1;
- (BOOL)hasDefaultValues;
- (id)installProductDirectoriesForRunDestination:(id)arg1;
- (id)overridingMacrosForInstallBuildForWorkspaceArena:(id)arg1 destination:(id)arg2;
- (id)installOperationWithSchemeOperationParameters:(id)arg1 withBuildOperation:(id)arg2 buildParameters:(id)arg3 schemeActionRecord:(id)arg4 outError:(id *)arg5 actionCallbackBlock:(CDUnknownBlockType)arg6;
@property(copy) NSString *killProcessListString;
@property(readonly) NSString *defaultInstallName;
- (BOOL)doesNonActionWork;
- (id)subtitle;
- (id)name;
- (void)_commonInit;
- (id)initFromXMLUnarchiver:(id)arg1 archiveVersion:(float)arg2;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IDEInstallOperation : DVTOperation <IDEExecutingOperationTrackable>
{
    IDEExecutionOperationTracker *_tracker;
}

@property(readonly) IDEExecutionOperationTracker *tracker; // @synthesize tracker=_tracker;
- (void).cxx_destruct;
- (void)registerTracker:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IDEAdditionalLaunchSchemeActionOptionsHandler : NSObject
{
}

+ (void)populateAdditionalOptions:(id)arg1 forLaunchSchemeAction:(id)arg2;

@end

@interface IDETemplateSection : NSObject
{
    NSMutableDictionary *_templateCategoriesByName;
    NSString *_explicitName;
    BOOL _showsCategoriesAsChildren;
    NSArray *_categories;
    DVTPlatform *_platform;
}

+ (id)crossPlatformSectionName;
+ (id)keyPathsForValuesAffectingWillChangeDeviceSoftwareVersion;
@property BOOL showsCategoriesAsChildren; // @synthesize showsCategoriesAsChildren=_showsCategoriesAsChildren;
@property(retain) DVTPlatform *platform; // @synthesize platform=_platform;
- (void).cxx_destruct;
@property(readonly) NSArray *templates;
@property(readonly) NSArray *categories; // @synthesize categories=_categories;
- (void)sortAllCategories;
- (void)addTemplate:(id)arg1;
- (id)categoryWithName:(id)arg1;
@property(readonly) NSString *sectionIdentifier;
@property(readonly) NSString *name;
- (id)init;
- (id)initWithName:(id)arg1;
- (id)initWithPlatform:(id)arg1;

@end

@interface IDEArchivingOperation : DVTOperationGroup
{
    NSString *_archiveName;
    NSString *_schemeName;
    DVTPlatform *_platform;
    DVTFilePath *_archiveBuildFolder;
    DVTFilePath *_dstrootPath;
    DVTFilePath *_symrootPath;
    DVTFilePath *_objrootPath;
    DVTFilePath *_sharedPrecompsPath;
    IDEArchivePathsSnapshot *_archiveSnapshot;
    DVTToolchain *_toolchain;
    BOOL _revealCreatedArchive;
    IDEWorkspaceArena *_workspaceArena;
}

+ (id)overridingMacrosForArchiveBuildWithSchemeName:(id)arg1 workspaceArena:(id)arg2;
+ (void)_calculateArchiveBuildFolder:(id *)arg1 dstrootPath:(id *)arg2 symrootPath:(id *)arg3 objrootPath:(id *)arg4 sharedPrecompsPath:(id *)arg5 givenSchemeName:(id)arg6 workspaceArena:(id)arg7;
@property(retain) IDEWorkspaceArena *workspaceArena; // @synthesize workspaceArena=_workspaceArena;
@property(readonly) IDEArchivePathsSnapshot *archiveSnapshot; // @synthesize archiveSnapshot=_archiveSnapshot;
- (void).cxx_destruct;
- (void)main;
- (id)preparatoryOperationForArchiveBuild;
- (id)initWithArchiveName:(id)arg1 schemeName:(id)arg2 workspaceArena:(id)arg3 platform:(id)arg4 toolchain:(id)arg5 revealCreatedArchive:(BOOL)arg6;

@end

@interface IDEArchivingOperationGroup : DVTOperationGroup
{
    IDEArchivingOperation *_archivingOperation;
    IDEBuildOperationGroup *_buildForArchiveOperation;
}

+ (id)operationGroupWithSuboperations:(id)arg1;
+ (id)operationGroupWithArchivingOperation:(id)arg1 otherOperations:(id)arg2;
@property(retain) IDEBuildOperationGroup *buildForArchiveOperation; // @synthesize buildForArchiveOperation=_buildForArchiveOperation;
@property(readonly) IDEArchivingOperation *archivingOperation; // @synthesize archivingOperation=_archivingOperation;
- (void).cxx_destruct;

@end

@interface IDESimulateLocationService : DVTDeviceService
{
}

+ (id)capability;
- (BOOL)simulateLocationWithLatitude:(id)arg1 longitude:(id)arg2 error:(id *)arg3;
- (BOOL)stopLocationSimulationWithError:(id *)arg1;

@end

@interface IDEFileBreakpoint : IDEBreakpoint
{
    DVTFilePath *_dvtFilePath;
    NSString *_filePath;
    NSString *_timestampString;
    long long _startingColumnNumber;
    long long _endingColumnNumber;
    long long _startingLineNumber;
    long long _endingLineNumber;
    NSString *_characterRangeString;
    NSString *_landmarkName;
    unsigned long long _landmarkType;
    DVTTextDocumentLocation *_location;
}

+ (id)keyPathsForValuesAffectingDisplayName;
+ (unsigned long long)assertionBehaviorForKeyValueObservationsAtEndOfEvent;
+ (id)propertiesAffectingPersistenceState;
@property unsigned long long landmarkType; // @synthesize landmarkType=_landmarkType;
@property(copy) NSString *landmarkName; // @synthesize landmarkName=_landmarkName;
@property(copy, nonatomic) DVTTextDocumentLocation *location; // @synthesize location=_location;
- (void).cxx_destruct;
- (id)ideModelObjectTypeIdentifier;
- (id)zeroBasedLocation;
- (void)dvt_encodeRelationshipsWithXMLArchiver:(id)arg1 version:(id)arg2;
- (void)dvt_encodeAttributesWithXMLArchiver:(id)arg1 version:(id)arg2;
@property(readonly) NSString *filePathStringForArchiving;
- (id)initFromXMLUnarchiver:(id)arg1 archiveVersion:(float)arg2;
- (void)dvt_awakeFromXMLUnarchiver:(id)arg1;
- (id)accessibilityDescription;
- (id)description;
- (void)setLocationFromZeroBasedLocation:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)displayName;
@property(readonly) BOOL associatedFileExists;
- (void)_createDVTFilePathFromLocationAndWatchIt;
- (void)primitiveInvalidate;
- (id)initWithDocumentTextLocation:(id)arg1;

@end

@interface IDEProvisioningProfileBulkDownloader : NSObject
{
    BOOL _busy;
    double _progress;
    NSOperationQueue *_serialQueue;
    NSOperationQueue *_workQueue;
    IDEProvisioningSessionManager *_sessionManager;
    DVTProvisioningProfileManager *_profileManager;
    id <IDEProvisioningProfileDownloaderPortal> _portal;
    DVTLogAspect *_logAspect;
}

+ (id)defaultDownloader;
@property(retain, nonatomic) DVTLogAspect *logAspect; // @synthesize logAspect=_logAspect;
@property(retain, nonatomic) id <IDEProvisioningProfileDownloaderPortal> portal; // @synthesize portal=_portal;
@property(retain, nonatomic) DVTProvisioningProfileManager *profileManager; // @synthesize profileManager=_profileManager;
@property(retain, nonatomic) IDEProvisioningSessionManager *sessionManager; // @synthesize sessionManager=_sessionManager;
@property(retain, nonatomic) NSOperationQueue *workQueue; // @synthesize workQueue=_workQueue;
@property(retain, nonatomic) NSOperationQueue *serialQueue; // @synthesize serialQueue=_serialQueue;
@property double progress; // @synthesize progress=_progress;
@property(nonatomic, getter=isBusy) BOOL busy; // @synthesize busy=_busy;
- (void).cxx_destruct;
- (void)downloadProfilesForTeam:(id)arg1 account:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)serialBackgroundDownloadProfilesForTeam:(id)arg1 account:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (id)eligiblePlatformsForTeam:(id)arg1;
- (id)downloadPortalProfiles:(id)arg1 localProfileUUIDs:(id)arg2 session:(id)arg3 errors:(id *)arg4;
- (void)installDownloadedPortalProfiles:(id)arg1 errors:(id *)arg2;
- (id)fetchProvisioningProfiles;
- (void)waitForAreProfilesLoaded;
- (id)portalProfilesForTeam:(id)arg1 session:(id)arg2 platform:(id)arg3 error:(id *)arg4;
- (id)manualProfiles:(id)arg1;
- (id)initWithSessionManager:(id)arg1 profileManager:(id)arg2 portal:(id)arg3;

@end

@interface IDEFindCommandLineVerb : IDECommandLineVerb
{
}

+ (id)_filePathHierarchyForFilePath:(id)arg1;
+ (int)performWithEnvironment:(id)arg1;
+ (id)optionDefinitionsWithEnvironment:(id)arg1;
+ (id)filePathForLibraryWithName:(id)arg1 commandLineToolchainNames:(id)arg2 environmentVariables:(id)arg3 sdk:(id)arg4 diagnostics:(id *)arg5;
+ (id)filePathForExecutableWithName:(id)arg1 commandLineToolchainNames:(id)arg2 environmentVariables:(id)arg3 sdk:(id)arg4 diagnostics:(id *)arg5;

@end

@interface _TtC13IDEFoundation34IDEDocumentationIndexSymbolRequest : SwiftObject
{
    // Error parsing type: , name: responseIsAuthoritative
    // Error parsing type: , name: responseIsMandatory
    // Error parsing type: , name: symbol
}

@end

@interface _TtC13IDEFoundation31IDEDocumentationIndexUSRRequest : SwiftObject
{
    // Error parsing type: , name: responseIsAuthoritative
    // Error parsing type: , name: responseIsMandatory
    // Error parsing type: , name: usrs
}

@end

@interface _TtC13IDEFoundation29IDEDocumentationSymbolRequest : SwiftObject
{
    // Error parsing type: , name: responseIsAuthoritative
    // Error parsing type: , name: responseIsMandatory
    // Error parsing type: , name: symbols
}

@end

@interface _TtC13IDEFoundation39IDEDocumentationIndexedXMLSymbolRequest : SwiftObject
{
    // Error parsing type: , name: responseIsAuthoritative
    // Error parsing type: , name: responseIsMandatory
    // Error parsing type: , name: indexSymbol
    // Error parsing type: , name: selectedExpressionLocation
}

@end

__attribute__((visibility("hidden")))
@interface _TtC13IDEFoundation31IDEDocumentationSearchOperation : NSObject
{
    // Error parsing type: , name: _manager
    // Error parsing type: , name: _future
    // Error parsing type: , name: _qos
    // Error parsing type: , name: _completionBlock
}

- (CDUnknownBlockType).cxx_destruct;
- (id)init;
- (BOOL)isCancelled;
- (void)cancel;
- (id)initWithQuery:(id)arg1 sourceLanguage:(long long)arg2 limit:(long long)arg3 manager:(id)arg4 qualityOfService:(long long)arg5 completionBlock:(CDUnknownBlockType)arg6;

// Remaining properties
@property(nonatomic, readonly) BOOL cancelled;

@end

__attribute__((visibility("hidden")))
@interface _TtC13IDEFoundation41IDEStructureEditingGroupCreationOperation : _TtC13IDEFoundation35IDEStructureEditingPlannedOperation
{
}

- (id)performWithProcedure:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface _TtC13IDEFoundation41IDEStructureEditingGroupMoveCopyOperation : _TtC13IDEFoundation35IDEStructureEditingPlannedOperation
{
}

- (id)performWithProcedure:(id)arg1;

@end

@interface _TtC13IDEFoundation31IDEDocumentationManagerProducer : NSObject
{
}

+ (id)documentationManagerWith:(id)arg1;
- (id)init;

@end

@interface _TtC13IDEFoundation23IDEDocumentationManager : __T016DVTDocumentation0A7ManagerCN
{
}

+ (id)normalizeSearchQuery:(id)arg1 preservingCase:(BOOL)arg2;
- (id)performSearch:(id)arg1 inSourceCodeLanguage:(id)arg2 limit:(long long)arg3 qualityOfService:(long long)arg4 completionBlock:(CDUnknownBlockType)arg5;
- (id)performSearch:(id)arg1 in:(long long)arg2 limit:(long long)arg3 qualityOfService:(long long)arg4 completionBlock:(CDUnknownBlockType)arg5;
- (id)sampleCodeDownloadRequestForRequest:(id)arg1 language:(long long)arg2;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface _TtC13IDEFoundation34_IDEDocumentationManagerStandalone : _TtC13IDEFoundation23IDEDocumentationManager
{
}

- (id)init;

@end

__attribute__((visibility("hidden")))
@interface _TtC13IDEFoundation36_IDEDocumentationManagerForWorkspace : _TtC13IDEFoundation23IDEDocumentationManager
{
    // Error parsing type: , name: _index
}

- (CDUnknownBlockType).cxx_destruct;
- (id)init;
- (void)primitiveInvalidate;
- (id)initWithWorkspace:(id)arg1;
@property(nonatomic, retain) IDEIndex *_index; // @synthesize _index;

@end

@interface _TtC13IDEFoundation30IDEStructureEditingCoordinator : DVTInvalidation_NSObject
{
    // Error parsing type: , name: _backgroundQueue
    // Error parsing type: , name: activeProcedures
}

+ (BOOL)useNewStructureEditingMoveCoordinator;
- (CDUnknownBlockType).cxx_destruct;
- (id)init;
- (void)beginProcedure:(id)arg1;
- (id)createMoveCopyProcedureWithTopLevelItems:(id)arg1 destinationGroup:(id)arg2 insertingAtIndex:(long long)arg3 commandKeyDown:(BOOL)arg4 optionKeyDown:(BOOL)arg5;
- (void)primitiveInvalidate;
@property(nonatomic, copy) NSSet *activeProcedures; // @synthesize activeProcedures;

@end

@interface _TtC13IDEFoundation27SourceControlAccountManager : NSObject <DVTSourceControlAccountManager>
{
    // Error parsing type: , name: accountsRepositoriesQueue
    // Error parsing type: , name: _shouldLoadAccounts
    // Error parsing type: , name: credentialsManager
    // Error parsing type: , name: userDefaults
    // Error parsing type: , name: _knownRepositories
    // Error parsing type: , name: _accounts
    // Error parsing type: , name: queue
    // Error parsing type: , name: _legacyRepositories
    // Error parsing type: , name: _sourceControlManager
}

- (CDUnknownBlockType).cxx_destruct;
- (id)knownRepositoryForURL:(id)arg1 sourceControlSystem:(id)arg2;
- (void)addLegacyRepository:(id)arg1;
- (id)repositoryWithRoot:(id)arg1 sourceControlExtension:(id)arg2;
- (id)repositoryForUrl:(id)arg1 sourceControlExtension:(id)arg2;
- (id)authenticationStrategyForURL:(id)arg1 usingAccount:(id)arg2;
- (void)loadAccountsFrom:(id)arg1;
- (void)loadHostedAccountsFrom:(id)arg1;
- (id)accountWithUsername:(id)arg1 url:(id)arg2;
- (void)loadHostedAccounts;
- (void)loadAccounts;
- (void)updateAvatarProvider;
@property(nonatomic, readonly) NSArray *hostedAccounts;
- (void)updateUserDefaults;
- (void)remove:(id)arg1 deleteFromKeychain:(BOOL)arg2;
- (void)removeAccount:(id)arg1;
- (void)addAccount:(id)arg1;
- (id)existingAccountLikeAccount:(id)arg1 addingIfNew:(BOOL)arg2;
- (id)existingAccountForRepository:(id)arg1 authenticationStrategy:(id)arg2 createIfNeeded:(BOOL)arg3;
- (void)reloadTrustedServerFingerprints;
- (void)accountChanged:(id)arg1 previousUsername:(id)arg2;
- (id)initWithSavedAccounts:(BOOL)arg1 sourceControlManager:(id)arg2 credentialsManager:(id)arg3 userDefaults:(id)arg4;
- (id)initWithSavedAccounts:(BOOL)arg1 sourceControlManager:(id)arg2;
- (id)init;
@property(nonatomic, readonly) NSArray *legacyRepositories;
@property(nonatomic, readonly) NSArray *accounts;
@property(nonatomic, readonly) NSArray *knownRepositories;

@end

__attribute__((visibility("hidden")))
@interface _TtC13IDEFoundation47IDEStructureEditingAutoTargetInferenceOperation : _TtC13IDEFoundation40IDEStructureEditingMultiPlannedOperation
{
    // Error parsing type: , name: _shouldPromptForCopyMoveLeaveChoice
    // Error parsing type: , name: _needTargetSelection
    // Error parsing type: , name: _homogenousTargetSelection
    // Error parsing type: , name: _existingFileReference
    // Error parsing type: , name: _newReferencesCreated
    // Error parsing type: , name: referenceCreationCompletionBlock
}

- (CDUnknownBlockType).cxx_destruct;
- (id)performWithProcedure:(id)arg1;
- (void)newReferencesCreatedWithReferences:(id)arg1;
@property(nonatomic, readonly) BOOL requiresUserInteraction;
@property(nonatomic, copy) CDUnknownBlockType referenceCreationCompletionBlock; // @synthesize referenceCreationCompletionBlock;

@end

__attribute__((visibility("hidden")))
@interface _TtC13IDEFoundation43IDEStructureEditingSingleReferenceOperation : _TtC13IDEFoundation35IDEStructureEditingPlannedOperation
{
}

- (id)performWithProcedure:(id)arg1;

@end

@interface _TtC13IDEFoundation28IDEDocumentationSearchResult : NSObject
{
    // Error parsing type: , name: searchResult
}

- (CDUnknownBlockType).cxx_destruct;
- (id)init;
@property(nonatomic, readonly) NSString *sourceLanguageName;
@property(nonatomic, readonly) BOOL isDeprecatedInAtLeastOneSDK;
@property(nonatomic, readonly) NSURL *url;
@property(nonatomic, readonly) DVTSourceCodeSymbolKind *sourceCodeSymbolKind;
@property(nonatomic, readonly) NSString *abstractText;
@property(nonatomic, readonly) NSString *collectionNames;
@property(nonatomic, readonly) NSString *ownerName;
@property(nonatomic, readonly) NSString *name;

@end

@interface _TtC13IDEFoundation28IDEStructureEditingProcedure : DVTInvalidation_NSObject
{
    // Error parsing type: , name: _mainThreadTimeSlicingQueue
}

- (CDUnknownBlockType).cxx_destruct;
- (void)startOperationOnQueue:(id)arg1 finalOperation:(id)arg2;
@property(nonatomic, readonly) double progress;
@property(nonatomic, readonly) NSString *title;
- (void)primitiveInvalidate;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface _TtC13IDEFoundation49IDEStructureEditingGroupContentsMoveCopyOperation : _TtC13IDEFoundation40IDEStructureEditingMultiPlannedOperation
{
}

- (id)performWithProcedure:(id)arg1;

@end

@interface _TtC13IDEFoundation23IDEStructureEditingPlan : SwiftObject
{
    // Error parsing type: , name: creationBacktrace
    // Error parsing type: , name: errors
}

@end

@interface _TtC13IDEFoundation31IDEStructureEditingMoveCopyPlan : _TtC13IDEFoundation23IDEStructureEditingPlan
{
    // Error parsing type: , name: item
    // Error parsing type: , name: specification
    // Error parsing type: , name: pathToMoveOrCopy
    // Error parsing type: , name: insertionPlan
    // Error parsing type: , name: parentGroupsPlan
    // Error parsing type: , name: destinationGroup
    // Error parsing type: , name: newPath
    // Error parsing type: , name: newReference
    // Error parsing type: , name: newReferenceFilePath
    // Error parsing type: , name: newDirectoryCreationMode
}

@end

__attribute__((visibility("hidden")))
@interface _TtC13IDEFoundation28IDEStructureEditingOperation : DVTOperation
{
    // Error parsing type: , name: _procedure
}

- (CDUnknownBlockType).cxx_destruct;
- (id)init;
- (id)performWithProcedure:(id)arg1;
- (void)main;
- (void)reportWithError:(id)arg1;
- (id)initWithProcedure:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface _TtC13IDEFoundation35IDEStructureEditingPlannedOperation : _TtC13IDEFoundation28IDEStructureEditingOperation
{
    // Error parsing type: , name: plan
}

- (CDUnknownBlockType).cxx_destruct;
- (id)initWithProcedure:(id)arg1;
- (void)reportWithError:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface _TtC13IDEFoundation40IDEStructureEditingMultiPlannedOperation : _TtC13IDEFoundation28IDEStructureEditingOperation
{
    // Error parsing type: , name: plans
}

- (CDUnknownBlockType).cxx_destruct;
- (id)initWithProcedure:(id)arg1;

@end

@interface _TtC13IDEFoundation36_IDEObjectiveCSymbolContainingSymbol : __T013DVTFoundation9DVTSymbolCN
{
}

- (id)initWithCoder:(id)arg1;
- (id)initWithResolution:(id)arg1 kind:(id)arg2;
- (id)childSymbolWithObjCName:(id)arg1 kind:(id)arg2 error:(id *)arg3;
- (id)propertySymbolWithObjCName:(id)arg1;
- (id)instanceMethodSymbolWithObjCSignature:(id)arg1;
- (id)classMethodSymbolWithObjCSignature:(id)arg1;

@end

@interface _TtC13IDEFoundation28_IDEObjectiveCCategorySymbol : _TtC13IDEFoundation36_IDEObjectiveCSymbolContainingSymbol
{
}

- (id)initWithCoder:(id)arg1;
- (id)initWithResolution:(id)arg1 kind:(id)arg2;

@end

@interface _TtC13IDEFoundation28_IDEObjectiveCProtocolSymbol : _TtC13IDEFoundation36_IDEObjectiveCSymbolContainingSymbol
{
}

- (id)initWithCoder:(id)arg1;
- (id)initWithResolution:(id)arg1 kind:(id)arg2;

@end

@interface _TtC13IDEFoundation25_IDEObjectiveCClassSymbol : _TtC13IDEFoundation36_IDEObjectiveCSymbolContainingSymbol
{
}

- (id)initWithCoder:(id)arg1;
- (id)initWithResolution:(id)arg1 kind:(id)arg2;
- (id)instanceVariableSymbolWithObjCName:(id)arg1;
- (id)categorySymbolWithObjCName:(id)arg1;

@end

@interface _TtC13IDEFoundation22IDETemplateMacroEngine : NSObject
{
    // Error parsing type: , name: instanceOverrides
    // Error parsing type: , name: dataStoreMacros
    // Error parsing type: , name: compatibilityMacros
    // Error parsing type: , name: standardMacros
    // Error parsing type: , name: customDataStores
    // Error parsing type: , name: modifierMap
    // Error parsing type: , name: uuidTable
    // Error parsing type: , name: specialMacrosMap
}

+ (id)defaultCompatibilityMacros;
+ (id)standardMacrosWithWorkspaceName:(id)arg1 projectName:(id)arg2 packageName:(id)arg3 targetName:(id)arg4 productName:(id)arg5 fileName:(id)arg6 organizationName:(id)arg7;
+ (id)defaultToolchainSwiftVersionMacro;
+ (id)runningMacOSVersionMacro;
+ (id)fileBaseNameAsIdentifierMacro;
+ (id)fileBaseNameMacro;
+ (id)fileNameMacro;
+ (id)productNameMacro;
+ (id)targetNameMacro;
+ (id)packageNameAsIdentifierMacro;
+ (id)packageNameMacro;
+ (id)projectNameMacro;
+ (id)workspaceNameMacro;
+ (id)uuidMacro;
+ (id)yearMacro;
+ (id)timeMacro;
+ (id)dateMacro;
+ (id)fileHeaderMacro;
+ (id)humanReadableCopyrightPlistMacro;
+ (id)copyrightCommentMacro;
+ (id)copyrightMacro;
+ (id)organizationNameMacro;
+ (id)fullUserNameMacro;
+ (id)userNameMacro;
+ (id)macrosFromCustomDataStores:(id)arg1;
+ (id)macrosFromCustomDataStore:(id)arg1;
+ (id)macrosFromCustomDataStore:(id)arg1 with:(id)arg2;
+ (id)templateMacroDefinitionsFilename;
- (CDUnknownBlockType).cxx_destruct;
- (void)resetStandardMacrosWithWorkspaceName:(id)arg1 projectName:(id)arg2 packageName:(id)arg3 targetName:(id)arg4 productName:(id)arg5 fileName:(id)arg6 organizationName:(id)arg7;
-     // Error parsing type: (null), name: objectForKeyedSubscript:
- (BOOL)createFileAt:(id)arg1 substitutingMacrosInFileAt:(id)arg2 leavingUnknownMacros:(BOOL)arg3 error:(id *)arg4;
- (id)substituteMacrosIn:(id)arg1 leavingUnknownMacros:(BOOL)arg2 error:(id *)arg3;
- (id)lookupMacro:(id)arg1;
- (void)addExpansionsFrom:(id)arg1;
- (void)setExpansion:(id)arg1 forMacro:(id)arg2;
- (id)initWithWorkspaceName:(id)arg1 projectName:(id)arg2 packageName:(id)arg3 targetName:(id)arg4 productName:(id)arg5 fileName:(id)arg6 organizationName:(id)arg7 customDataStores:(id)arg8;
- (id)init;

@end

@interface _TtC13IDEFoundation36IDEStructureEditingMoveCopyProcedure : _TtC13IDEFoundation28IDEStructureEditingProcedure
{
    // Error parsing type: , name: didShowSheet
    // Error parsing type: , name: shouldCreateBlueFoldersForDirectories
    // Error parsing type: , name: _topLevelOperation
    // Error parsing type: , name: _targetApplierOperation
    // Error parsing type: , name: _topLevelItems
    // Error parsing type: , name: _masterPlans
    // Error parsing type: , name: _unplannedItemCount
    // Error parsing type: , name: _completed
}

- (CDUnknownBlockType).cxx_destruct;
- (id)init;
- (void)newReferencesCreatedWithReferences:(id)arg1;
@property(nonatomic, readonly) BOOL requiresUserInteraction;
@property(nonatomic, copy) CDUnknownBlockType referenceCreationCompletionBlock;
- (void)enqueue:(id)arg1;
- (void)startOperationOnQueue:(id)arg1 finalOperation:(id)arg2;
@property(nonatomic, readonly) double progress;
@property(nonatomic, readonly) NSString *title;
- (void)primitiveInvalidate;
@property(nonatomic) BOOL shouldCreateBlueFoldersForDirectories; // @synthesize shouldCreateBlueFoldersForDirectories;
@property(nonatomic) BOOL didShowSheet; // @synthesize didShowSheet;

@end

@interface _TtC13IDEFoundation31SourceControlCredentialsManager : NSObject
{
    // Error parsing type: , name: keychain
}

+ (id)defaultManager;
- (CDUnknownBlockType).cxx_destruct;
- (id)init;
- (BOOL)saveBasicCredentialsWithHostURL:(id)arg1 oldUsername:(id)arg2 authenticationStrategy:(id)arg3 error:(id *)arg4;
- (BOOL)deletePasswordFor:(id)arg1 authenticationStrategy:(id)arg2;
- (BOOL)deleteWithAccount:(id)arg1;
- (id)passwordFor:(id)arg1 username:(id)arg2 error:(id *)arg3;
- (id)authenticationStrategyFor:(id)arg1 username:(id)arg2 error:(id *)arg3;
- (id)sshKeyAuthenticationStrategyForSSHKeyURL:(id)arg1 username:(id)arg2 error:(id *)arg3;
- (void)authenticationStrategiesFor:(id)arg1 sshKeyPath:(id)arg2 sshUsername:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (id)sshKeyPasswordForURL:(id)arg1 error:(id *)arg2;
- (BOOL)savePasswordFor:(id)arg1 oldUsername:(id)arg2 authenticationStrategy:(id)arg3 error:(id *)arg4;
- (BOOL)saveAuthenticationFor:(id)arg1 error:(id *)arg2;
- (id)initWith:(struct OpaqueSecKeychainRef *)arg1;

@end

@interface _TtC13IDEFoundation31SourceControlFingerprintManager : NSObject <DVTSourceControlFingerprintManager>
{
    // Error parsing type: , name: _shouldLoadKnownHosts
    // Error parsing type: , name: _sourceControlManager
    // Error parsing type: , name: knownHosts
}

- (CDUnknownBlockType).cxx_destruct;
- (id)init;
- (void)updateUserDefaults;
- (id)existingFingerprintForRepository:(id)arg1;
- (void)loadKnownHostsFromDictionary:(id)arg1;
- (id)existingFingerprintForHost:(id)arg1;
- (void)addKnownHost:(id)arg1 fingerprint:(id)arg2;
- (id)initWithShouldLoadKnownHosts:(BOOL)arg1 sourceControlManager:(id)arg2;
@property(nonatomic, copy) NSDictionary *knownHosts; // @synthesize knownHosts;

@end

@interface _TtC13IDEFoundation21IDEDocumentationStore : SwiftObject
{
}

@end

__attribute__((visibility("hidden")))
@interface _TtC13IDEFoundation38IDEStructureEditingFileSystemOperation : _TtC13IDEFoundation35IDEStructureEditingPlannedOperation
{
}

@end

__attribute__((visibility("hidden")))
@interface _TtC13IDEFoundation46IDEStructureEditingFileSystemMoveCopyOperation : _TtC13IDEFoundation38IDEStructureEditingFileSystemOperation
{
}

- (id)performWithProcedure:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface _TtC13IDEFoundation45IDEStructureEditingDirectoryCreationOperation : _TtC13IDEFoundation38IDEStructureEditingFileSystemOperation
{
}

- (id)performWithProcedure:(id)arg1;

@end

@interface DVTPortalCertificate (ManageCertificatesItem)
- (id)dvt_nameForManageCertificates;
@end

@interface DVTSigningCertificate (ManageCertificatesItem)
- (id)dvt_nameForManageCertificates;
@end

@interface DVTDocumentLocation (IDEFoundationAdditions)
- (id)ide_copyInWorkspace:(id)arg1 fromWorkspaceAtRepresentingPath:(id)arg2;
@end

@interface NSError (DVTDeviceIneligibility)
+ (id)_dvt_textForError:(id)arg1;
+ (long long)_dvt_developerPrepErrorCodeForError:(id)arg1;
+ (id)_dvt_developerPrepErrorDetailsForDevice:(id)arg1 errorCode:(long long)arg2;
+ (id)dvt_errorWithDeviceIneligibilityErrorCode:(long long)arg1 device:(id)arg2 buildable:(id)arg3 buildParameters:(id)arg4;
@property(readonly, nonatomic) NSString *dvt_deviceIneligibilityTokenDescription;
@end

@interface DVTDevice (IDEFoundationAdditions) <IDEBuildableTargetDevice>
- (id)analysisOperationWithAnalysisToolService:(id)arg1 location:(id)arg2 workingDirectory:(id)arg3 workspaceFilePath:(id)arg4 projectFilePath:(id)arg5 outError:(id *)arg6;
- (BOOL)performInstallWithName:(id)arg1 path:(id)arg2 buildables:(id)arg3 buildParameters:(id)arg4 includeDebugSupportFiles:(BOOL)arg5 killProcesses:(id)arg6 workspace:(id)arg7 outError:(id *)arg8;
- (BOOL)canInstallBuildablesError:(id *)arg1;
- (id)scriptingEnvironment;
- (id)closestRelativeOfTargetArchitecture:(id)arg1 forBuildArchitectures:(id)arg2;
- (BOOL)supportsRunningExecutableAtPath:(id)arg1 usingArchitecture:(id)arg2 error:(id *)arg3;
- (BOOL)supportsExecutionForArchitecture:(id)arg1 launchSession:(id)arg2 error:(id *)arg3;
- (id)uncachedOverridingPropertiesForBuildable:(id)arg1 buildParameters:(id)arg2;
- (id)deviceSpecificOverridingPropertiesForBuildable:(id)arg1 withBaselineParameters:(id)arg2;
- (void)didBecomeActiveDeviceForRunContext:(id)arg1;
- (id)supportedSDKsForBuildable:(id)arg1 buildParameters:(id)arg2 error:(id *)arg3;
- (id)supportedArchitecturesForBuildable:(id)arg1 buildParameters:(id)arg2 error:(id *)arg3;
- (BOOL)shouldPresentDeviceForBuildable:(id)arg1 buildParameters:(id)arg2 error:(id *)arg3;
- (BOOL)shouldPresentDeviceForPathRunnableWithArchitecture:(id)arg1;
- (BOOL)deviceSupportsBuildable:(id)arg1 buildParameters:(id)arg2 error:(id *)arg3;
- (BOOL)canBeDefaultDeviceForBuildable:(id)arg1 buildParameters:(id)arg2;
- (id)displayNameAdditionsWhenUsingArchitecture:(id)arg1 withSDK:(id)arg2;
- (id)displayNameWhenUsingArchitecture:(id)arg1 withSDK:(id)arg2;

// Remaining properties
@property(readonly, getter=isAvailable) BOOL available;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) _Bool deviceIsBusy;
@property(readonly) unsigned long long hash;
@property(readonly, copy, nonatomic) NSString *identifier;
@property(readonly) BOOL isProxiedDevice;
@property(readonly, copy, nonatomic) NSString *modelCode;
@property(readonly, copy, nonatomic) NSString *modelName;
@property(readonly, copy, nonatomic) NSString *modelUTI;
@property(readonly, copy, nonatomic) NSString *name;
@property(readonly, copy) NSString *nameForDeveloperPortal;
@property(readonly, copy) NSString *nativeArchitecture;
@property(readonly, copy) NSString *operatingSystemBuild;
@property(readonly, copy) NSString *operatingSystemVersion;
@property(readonly, copy, nonatomic) NSString *operatingSystemVersionWithBuildNumber;
@property(readonly) DVTPlatform *platform;
@property(readonly, copy) NSString *platformIdentifier;
@property(readonly, copy) NSString *processorDescription;
@property(readonly, copy) NSSet *proxiedDevices;
@property(readonly) Class superclass;
@property(readonly) BOOL supportsProvisioning;
@property(readonly) NSError *unavailabilityError;
@end

@interface DVTDevice (IDETestingAdditions)
@property(readonly) NSString *mockObjectsFrameworkDir;
@property(readonly) NSString *testingFrameworkPath;
@property(readonly) NSArray *crashReportsDirectoryPaths;
@property(readonly) NSString *connectionServicesFrameworkPath;
- (id)deviceForRunningTestsWithHost:(id)arg1 error:(id *)arg2;
- (id)testArchitectureForBuildableProduct:(id)arg1 buildParameters:(id)arg2;
- (id)testHostPathForBuildableProduct:(id)arg1 buildParameters:(id)arg2 error:(id *)arg3;
- (id)_internalTestingToolPath;
- (id)_testingToolPath;
- (id)_overriddenTestingToolPathWithBuildableProduct:(id)arg1 buildParameters:(id)arg2;
- (id)testRunnerSessionForConfiguration:(id)arg1;
- (id)testDaemonRecordingSession;
- (id)testDaemonControlSession;
- (id)testDaemonTransportProvider;
- (id)makeTransportForTestDaemonWithError:(id *)arg1;
@property(readonly) BOOL requiresLocalTCCPermissionForUITesting;
@property(readonly) BOOL usesTestDaemonForUIRecording;
@property(readonly) BOOL usesLocalDomainSocketForTestRunnerConnection;
@property(readonly) NSString *automationFrameworkPath;
@property(readonly) NSString *targetBootstrapInjectionPath;
@property(readonly) BOOL supportsTargetBootstrapInjection;
- (Class)testingUIRecorderClass;
@property(readonly) BOOL supportsOverridingTestingToolPath;
@property(readonly) BOOL runningSupportedBuildForUITesting;
@property(readonly) BOOL supportsUIRecording;
@property(readonly) BOOL supportsUITesting;
@end

@interface DVTPlatform (IDEProvisioningPlatformAndSDKAdditions)
- (id)entitlementsFilePath;
@end

@interface DVTSDK (IDEProvisioningPlatformAndSDKAdditions)
- (id)entitlementsFilePath;
@end

@interface NSString (AttachmentSanitization)
- (id)_ide_attachment_fileNameSanitizedString;
@end

@interface DVTFilePath (IDESourceControlDVTFilePathAdditions)
@property unsigned long long conflictStateForUpdateOrMerge;
- (void)setSourceControlStatus:(unsigned long long)arg1 forKey:(id)arg2;
- (unsigned long long)sourceControlStatusForKey:(id)arg1;
- (unsigned long long)cachedAggregateSourceControlRemoteStatus;
- (unsigned long long)cachedSourceControlRemoteStatus;
- (unsigned long long)cachedAggregateSourceControlLocalStatus;
- (unsigned long long)cachedSourceControlLocalStatus;
- (void)workingCopyAndRelativePath:(CDUnknownBlockType)arg1;
- (void)_workingCopy:(id *)arg1 relativePath:(id *)arg2;
- (id)workingCopy;
@end

@interface DVTSourceControlWorkspace (IDEFoundationClassAdditions)
- (id)workingCopyForWorkingTree:(id)arg1;
- (id)workingCopyForFilePath:(id)arg1;
@end

@interface DVTLocalComputer (IDEFoundationAdditions)
- (void)showTodayViewForExtensions:(id)arg1 pid:(int)arg2;
- (BOOL)canBeDefaultDeviceForBuildable:(id)arg1 buildParameters:(id)arg2;
@end

@interface NSArray (DVTNSArrayAdditionsFilterNull)
- (id)dvt_arrayByRemovingNSNull;
@end

@interface DVTBuildTargetDevice (IDEFoundationAdditions)
- (id)uncachedOverridingPropertiesForBuildable:(id)arg1 buildParameters:(id)arg2;
- (id)supportedSDKsForBuildable:(id)arg1 buildParameters:(id)arg2 error:(id *)arg3;
- (id)supportedArchitecturesForBuildable:(id)arg1 buildParameters:(id)arg2 error:(id *)arg3;
- (BOOL)canBeDefaultDeviceForBuildable:(id)arg1 buildParameters:(id)arg2;
- (id)_generalRunErrorWithLaunchSession:(id)arg1;
- (id)displayNameAdditionsWhenUsingArchitecture:(id)arg1 withSDK:(id)arg2;
- (BOOL)supportsPGOReturningError:(id *)arg1;
- (BOOL)supportsRunningExecutableAtPath:(id)arg1 usingArchitecture:(id)arg2 error:(id *)arg3;
- (BOOL)supportsExecutionForArchitecture:(id)arg1 launchSession:(id)arg2 error:(id *)arg3;
- (BOOL)canInstallBuildablesError:(id *)arg1;
- (id)analysisOperationWithAnalysisToolService:(id)arg1 location:(id)arg2 workingDirectory:(id)arg3 workspaceFilePath:(id)arg4 projectFilePath:(id)arg5 outError:(id *)arg6;
@end

@interface DVTLocalComputer (IDETestingAdditions)
- (id)connectionServicesFrameworkPath;
- (id)testRunnerSessionForConfiguration:(id)arg1;
- (id)testDaemonControlSession;
- (BOOL)requiresLocalTCCPermissionForUITesting;
- (BOOL)usesTestDaemonForUIRecording;
- (BOOL)usesLocalDomainSocketForTestRunnerConnection;
- (BOOL)hasTestDaemon;
- (id)automationFrameworkPath;
- (id)targetBootstrapInjectionPath;
- (BOOL)supportsOverridingTestingToolPath;
@end

@interface NSPredicate (LegacyScopeTransformation)
- (id)ide_translateToScopePredicate;
@end

@interface NSCompoundPredicate (LegacyScopeTransformation)
- (id)ide_translateToScopePredicate;
- (Class)ide_counterpartScopeClass;
@end

@interface NSComparisonPredicate (LegacyScopeTransformation)
- (id)ide_translateToScopePredicate;
- (id)ide_parseAsUTIPredicate;
- (id)ide_parseAsGroupPathPredicate;
- (id)pathComponentsForLegacyGroupPath:(id)arg1;
- (id)ide_parseAsPathPredicate;
- (Class)ide_pathPredicateClass;
- (id)ide_parseAsSCMPredicate;
- (id)ide_rhsConstantString;
- (id)ide_lhsKeyPath;
- (id)ide_scopePredicateFileDataTypeOperator;
- (id)ide_scopePredicateStringOperator;
@end

@interface DVTProvisioningProfileProvider (IDEAdditions)
- (id)basicTeamFromProfile:(id)arg1;
- (BOOL)isAutomaticProvisioningDevelopmentProfile:(id)arg1;
@end

@interface DVTPortalTeam (IDEProvisioningBasicTeamConformance) <IDEProvisioningBasicTeam>
@property(readonly, nonatomic) NSString *teamName;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly, nonatomic, getter=isFreeProvisioningTeam) BOOL freeProvisioningTeam;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@property(readonly, nonatomic) NSString *teamID;
@end

@interface DVTAppIDFeatures (ProfileQualificationAdditions)
- (id)enabledFeatureNames;
@end

@interface NSLocale (IDELocDisplayName)
- (id)ideloc_displayNameForKey:(id)arg1 value:(id)arg2 options:(unsigned long long)arg3;
@end

@interface NSLocale (IDELoc_IPPrivateMethods)
+ (id)_ideloc_containingRegionOfType:(int)arg1 forRegion:(id)arg2;
+ (id)ideloc_containingSubcontinentOfRegion:(id)arg1;
+ (id)ideloc_containingContinentOfRegion:(id)arg1;
+ (id)_ideloc_availableRegionsOfType:(int)arg1;
+ (id)ideloc_availableSubcontinents;
+ (id)ideloc_availableContinents;
+ (id)ideloc_localeIdentifierFromLanguageIdentifier:(id)arg1 countryCode:(id)arg2;
+ (id)ideloc_addLikelySubtagsToLocaleIdentifier:(id)arg1;
+ (id)ideloc_languageAndScriptFromLocaleIdentifier:(id)arg1;
+ (id)ideloc_languageIdentifierFromLocaleIdentifier:(id)arg1;
@end

@interface DVTCrashLog (IDEAdditions)
- (id)_recomputedRawDataUsingDemangledNames:(id)arg1 error:(id *)arg2;
- (void)demangleUsingToolchains:(id)arg1 callback:(CDUnknownBlockType)arg2;
@end

@interface DVTPortalProfile (IDEQualifiableProfile)
- (BOOL)isXcodeManaged;
- (id)provisioningProfilePlatformIdentifier;
- (BOOL)matchesBundleIdentifier:(id)arg1;
- (BOOL)expired;
- (id)appIdentifierUserDescription;
- (id)teamName;
- (id)teamID;
@end

@interface DVTAppIDFeatures (PortalAdditions)
+ (id)featuresWithPortalFeatures:(id)arg1 cloudContainers:(id)arg2 applicationGroups:(id)arg3 omcIdentifiers:(id)arg4;
@end

@interface NSString (IDETestingAdditions)
@property(readonly) NSString *ide_realPath;
@end

@interface NSObject (IDEBatchFindScopeChooserAdditions)
- (id)ideFindScope_groupForGroupPath:(id)arg1;
- (id)ideFindScope_componentForGroupPath;
- (void)ideFindScope_accumulateFilePaths:(id)arg1 andVisitedContainers:(id)arg2;
@end

@interface NSArray (IDEStreamArrayUtilities)
- (id)stream;
- (id)ide_stream;
@end

@interface NSSet (IDEStreamSetUtilities)
- (id)stream;
- (id)ide_stream;
@end

@interface NSOrderedSet (IDEStreamOrderedSetUtilities)
- (id)stream;
- (id)ide_stream;
@end

@interface DVTSourceControlWorkingCopy (IDEFoundationClassAdditions)
@property(readonly) DVTFilePath *filePath;
@end

@interface DVTFilePath (IDESourceControlStatus_Private)
- (id)IDESourceControl_importantFileReferences;
@end

@interface DVTFilePath (IDESourceControlStatus)
+ (id)containerTypeIdentifiersKeyedByImportantSubpaths;
+ (id)importantSubpathsKeyedByContainerTypeIdentifier;
@property(readonly) NSArray *IDESourceControl_importantSubpaths;
- (id)IDESourceControl_importantSubpathsWithFileType:(id)arg1;
- (id)IDESourceControl_containerFilePathIncludingAssetCatalogs:(BOOL)arg1;
@property(readonly) DVTFilePath *IDESourceControl_containerFilePath;
- (void)removeAssociatedWorkingTree:(id)arg1;
- (void)associateWorkingTree:(id)arg1;
- (id)workingTree;
- (void)removeAssociatedWorkingTreeItem:(id)arg1;
- (void)associateWorkingTreeItem:(id)arg1;
- (id)workingTreeItem_createIfNecessary:(BOOL)arg1;
- (id)workingTreeItem;
- (void)workingTreeItemWithCompletionBlock:(CDUnknownBlockType)arg1;
@end

@interface DVTExtension (DVTExtensionTypeIdentificationUtilities)
+ (id)typeIdentifierExtensionForString:(id)arg1;
- (BOOL)isKindOfExtension:(id)arg1;
- (id)closestRelatedExtensionAmongExtensions:(id)arg1;
@end

@interface NSObject (IDEModelObjectTypeIdentification)
- (id)ideModelObjectTypeIdentifier;
@end

@interface NSObject (IDEFindNavigatorContainerItemAdditions)
- (BOOL)textIndex_shouldSkipDescendantsForBatchFind;
@end

@interface DVTSourceControlSystem (IDESourceControlSystem)
+ (id)systemWithExtension:(id)arg1;
@end

@interface DVTToolsInfo (IDEDVTToolsInfoAdditions)
- (id)ide_buildInfoRevisionString;
@end

@interface DVTFilePath (IDESourceControlUtilities)
- (BOOL)idescm_isSameFileAsFilePathCaseSensitive:(id)arg1;
@end

@interface DVTSourceControlWorkspaceBlueprint (IDEFoundationClassAdditions)
+ (void)blueprintWithWorkspace:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (id)workingCopyConfigurationForRemoteRepository:(id)arg1 sourceControlManager:(id)arg2;
- (id)workingCopyConfigurationForWorkingCopy:(id)arg1 origin:(id)arg2 sourceControlManager:(id)arg3;
- (unsigned long long)workingCopyStateForWorkingCopy:(id)arg1 origin:(id)arg2;
- (void)saveToWorkspace:(id)arg1 hasChanged:(BOOL)arg2;
- (BOOL)representsBlueprint:(id)arg1;
@end

@interface NSString (IDEIndexAdditions)
@property(readonly, copy) DVTFilePath *ideIndex_resolvedFilePath;
@property(readonly, copy) NSString *ideIndex_stringByResolvingSymlinksInPath;
@property(readonly, copy) NSString *ideIndex_normalizedFoldedString;
@end

@interface NSArray (SourceKitExtensions)
- (id)sourcekit_asStringArray;
@end

@interface DVTDocumentLocation (SourceKitExtensions)
- (id)sourcekit_asRequest:(id)arg1;
@end

@interface DVTSigningCertificate (CodesignResolverAdditions)
- (id)dvt_basicTeam;
@end

@interface DVTSourceControlManager (IDESourceControlManager)
@end

@interface DVTSigningCertificate (IDEAdditions)
- (id)basicTeam;
- (id)portalCertificateType;
- (BOOL)isAutomaticProvisioningDevelopmentCertificateForPlatform:(id)arg1;
@end

@interface DVTExtension (DVTExtensionSortAdditions)
- (long long)nameCompare:(id)arg1;
@end

@interface NSString (IDEBatchFindTextMatching)
- (id)ide_rangesMatchingQuery:(id)arg1 matchAnchoring:(long long)arg2 locale:(id)arg3 matchCase:(BOOL)arg4;
- (void)ide_enumerateRangesMatchingQuery:(id)arg1 matchAnchoring:(long long)arg2 matchCase:(BOOL)arg3 locale:(id)arg4 enumerator:(CDUnknownBlockType)arg5;
@end

@interface DVTSourceControlRevision (IDEFoundationClassAdditions)
+ (id)revisionWithIdentifier:(id)arg1;
@end

@interface DVTPlatform (IDEExtendedPlatformInfo)
@property(readonly) IDEExtendedPlatformInfo *ide_extendedInfo;
@end

@interface DVTDocumentLocation (IDEActivityLogMessageAdditions)
- (id)activityLogMessage_locationString;
@end

@interface DVTTextDocumentLocation (IDEActivityLogMessageAdditions)
- (id)activityLogMessage_locationString;
@end

@interface NSError (SourceKitExtensions)
+ (id)sourcekit_connectionInterruptedError;
- (BOOL)sourcekit_isRequestCancelledError;
- (BOOL)sourcekit_isRequestFailedError;
- (BOOL)sourcekit_isInvalidRequestError;
- (BOOL)sourcekit_isConnectionInterruptedError;
@end

@interface NSError (IDEOnDiskTestAssetPrunerExtensions)
+ (id)_ide_testPruner_errorWithFormat:(id)arg1;
@end

@interface DVTAbstractMacDevice (IDEFoundationAdditions)
- (id)uncachedOverridingPropertiesForBuildable:(id)arg1 buildParameters:(id)arg2;
- (id)supportedSDKsForBuildable:(id)arg1 buildParameters:(id)arg2 error:(id *)arg3;
- (id)supportedArchitecturesForBuildable:(id)arg1 buildParameters:(id)arg2 error:(id *)arg3;
- (BOOL)canBeDefaultDeviceForBuildable:(id)arg1 buildParameters:(id)arg2;
@end

@interface NSNumber (IDESourceControlAdditions)
- (int)ideSourceControlStatusValue;
@end

@interface __T016DVTDocumentation0A14FetchOperationCN (IDEFoundation)
- (void)withIndex:(CDUnknownBlockType)arg1;
@end

@interface __T013DVTFoundation9DVTSymbolCN (IDEFoundation)
+ (id)protocolSymbolWithObjCName:(id)arg1;
+ (id)classSymbolWithObjCName:(id)arg1;
@end

@interface DVTSourceControlSSHKeysAuthenticationStrategy (IDEFoundation)
@property(nonatomic, readonly) NSString *serviceName;
@end

